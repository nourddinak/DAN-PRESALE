{
	"id": "b4cddb1741e74147068fa985588aa6b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"airdrop.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\n\r\n/**\r\n * @title Airdrop\r\n * @dev A smart contract for managing a token airdrop on the Polygon network.\r\n * The owner can configure airdrop and referral amounts, and control the airdrop's lifecycle.\r\n */\r\ncontract Airdrop is Ownable, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The ERC20 token to be airdropped.\r\n    IERC20 public token;\r\n\r\n    // The amount of tokens each participant receives.\r\n    uint256 public mainAirdropAmount;\r\n\r\n    // The bonus amount for a successful referral.\r\n    uint256 public referralBonusAmount;\r\n\r\n    // The percentage fee for each claim, with 1000 representing 100%.\r\n    // For example, a value of 20 would represent a 2% fee.\r\n    uint256 public claimFeePercent;\r\n\r\n    // A mapping to track which addresses have already claimed their airdrop.\r\n    mapping(address => bool) public claimed;\r\n\r\n    // The total amount of tokens allocated for this airdrop (excluding fees).\r\n    uint256 public totalAirdropSupply;\r\n\r\n    // The total amount of tokens that have been distributed to claimants and referrers.\r\n    uint256 public tokensDistributed;\r\n\r\n    // The maximum number of referrals allowed for a single user.\r\n    uint256 public maxReferrals;\r\n\r\n    // A mapping to track the number of successful referrals for each user.\r\n    mapping(address => uint256) public referralCounts;\r\n\r\n    // The timestamps for when the airdrop can start and stop.\r\n    uint256 public startAirdropAt;\r\n    uint256 public stopAirdropAt;\r\n\r\n    // Events to log important actions.\r\n    event AirdropClaimed(address indexed claimant, address indexed referrer);\r\n    event AirdropStarted();\r\n    event AirdropStopped();\r\n    event TokensWithdrawn(address indexed owner, uint256 amount);\r\n    event MainAirdropAmountUpdated(uint256 newAmount);\r\n    event ReferralBonusAmountUpdated(uint256 newAmount);\r\n    event AirdropFeeUpdated(uint256 newFee);\r\n    event AirdropFeePaid(address indexed claimant, address indexed recipient, uint256 feeAmount);\r\n    event TotalAirdropSupplyUpdated(uint256 newSupply);\r\n    event MaxReferralsUpdated(uint256 newMax);\r\n    event AirdropScheduleUpdated(uint256 startTimestamp, uint256 stopTimestamp);\r\n\r\n    /**\r\n     * @dev The constructor initializes the contract with the token address, airdrop amounts, and total supply.\r\n     * @param _tokenAddress The address of the ERC20 token to be airdropped.\r\n     * @param _initialMainAirdropAmount The initial amount of tokens for each participant.\r\n     * @param _initialReferralBonusAmount The initial amount of tokens for each referral.\r\n     * @param _initialClaimFeePercent The initial fee percentage (e.g., 20 for 2%).\r\n     * @param _initialTotalAirdropSupply The initial total supply of tokens for the airdrop.\r\n     */\r\n    constructor(\r\n        address _tokenAddress,\r\n        uint256 _initialMainAirdropAmount,\r\n        uint256 _initialReferralBonusAmount,\r\n        uint256 _initialClaimFeePercent,\r\n        uint256 _initialTotalAirdropSupply\r\n    ) Ownable(msg.sender) {\r\n        require(_tokenAddress != address(0), \"Token address cannot be zero\");\r\n        token = IERC20(_tokenAddress);\r\n        mainAirdropAmount = _initialMainAirdropAmount;\r\n        referralBonusAmount = _initialReferralBonusAmount;\r\n        claimFeePercent = _initialClaimFeePercent;\r\n        totalAirdropSupply = _initialTotalAirdropSupply;\r\n        maxReferrals = 500; // Default max referrals, can be changed by owner\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function to handle any accidental Ether sent to the contract.\r\n     * It simply reverts the transaction, preventing the ETH from being locked.\r\n     */\r\n    receive() external payable {\r\n        revert(\"ETH not accepted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to schedule the start and end of the airdrop.\r\n     * @param _startTimestamp The timestamp for when the airdrop should start.\r\n     * @param _stopTimestamp The timestamp for when the airdrop should stop.\r\n     */\r\n    function scheduleAirdrop(uint256 _startTimestamp, uint256 _stopTimestamp) public onlyOwner {\r\n        require(_stopTimestamp > _startTimestamp, \"Stop timestamp must be after start timestamp\");\r\n        startAirdropAt = _startTimestamp;\r\n        stopAirdropAt = _stopTimestamp;\r\n        emit AirdropScheduleUpdated(startAirdropAt, stopAirdropAt);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to change the main airdrop amount per participant.\r\n     * @param _newAmount The new amount for the main airdrop.\r\n     */\r\n    function setMainAirdropAmount(uint256 _newAmount) public onlyOwner {\r\n        mainAirdropAmount = _newAmount;\r\n        emit MainAirdropAmountUpdated(_newAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to change the referral bonus amount.\r\n     * @param _newAmount The new amount for the referral bonus.\r\n     */\r\n    function setReferralBonusAmount(uint256 _newAmount) public onlyOwner {\r\n        referralBonusAmount = _newAmount;\r\n        emit ReferralBonusAmountUpdated(_newAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to set the airdrop fee percentage.\r\n     * @param _newFeePercent The new fee percentage (e.g., 20 for 2%).\r\n     */\r\n    function setClaimFeePercent(uint256 _newFeePercent) public onlyOwner {\r\n        require(_newFeePercent <= 100, \"Fee percentage cannot exceed 100%\");\r\n        claimFeePercent = _newFeePercent;\r\n        emit AirdropFeeUpdated(_newFeePercent);\r\n    }\r\n    \r\n    /**\r\n     * @dev Allows the owner to set the total supply for the airdrop.\r\n     * @param _newSupply The new total airdrop supply.\r\n     */\r\n    function setTotalAirdropSupply(uint256 _newSupply) public onlyOwner {\r\n        // Prevent setting a supply less than what has already been distributed.\r\n        require(_newSupply >= tokensDistributed, \"New supply cannot be less than distributed tokens\");\r\n        totalAirdropSupply = _newSupply;\r\n        emit TotalAirdropSupplyUpdated(_newSupply);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to set the maximum number of referrals per user.\r\n     * @param _newMax The new maximum number of referrals.\r\n     */\r\n    function setMaxReferrals(uint256 _newMax) public onlyOwner {\r\n        maxReferrals = _newMax;\r\n        emit MaxReferralsUpdated(_newMax);\r\n    }\r\n\r\n    /**\r\n     * @dev A function for a user to claim their airdrop without a referral.\r\n     * It calls the main claim function with a zero address.\r\n     */\r\n    function claimAirdrop() public {\r\n        claimAirdrop(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev A function for a user to claim their airdrop.\r\n     * This function also handles the referral bonus and a configurable fee.\r\n     * @param _referrer The address of the referrer. Use address(0) if there is no referrer.\r\n     */\r\n    function claimAirdrop(address _referrer) public nonReentrant {\r\n        // Checks\r\n        require(!claimed[msg.sender], \"You have already claimed your airdrop\");\r\n        require(block.timestamp >= startAirdropAt, \"Airdrop has not started yet\");\r\n        require(block.timestamp < stopAirdropAt, \"Airdrop has already ended\");\r\n        \r\n        // Effects\r\n        claimed[msg.sender] = true;\r\n\r\n        // Interactions\r\n        uint256 feeAmount = Math.mulDiv(mainAirdropAmount, claimFeePercent, 100);\r\n        require(feeAmount <= mainAirdropAmount, \"Invalid fee amount or airdrop amount\");\r\n        uint256 finalAirdropAmount = mainAirdropAmount - feeAmount;\r\n        \r\n        uint256 tokensToDistribute = finalAirdropAmount;\r\n\r\n        // Handle referral bonus if a valid referrer is provided.\r\n        if (_referrer != address(0)) {\r\n            require(_referrer != msg.sender, \"Cannot self-refer\");\r\n            require(_referrer != address(this), \"Invalid referrer\");\r\n            \r\n            // Requires the referrer to have already claimed their own airdrop to be eligible for a bonus.\r\n            require(claimed[_referrer], \"Referrer has not yet claimed\");\r\n            \r\n            // Requires the referrer to be within their referral limit.\r\n            require(referralCounts[_referrer] < maxReferrals, \"Referrer has reached their referral limit\");\r\n\r\n            tokensToDistribute += referralBonusAmount;\r\n            \r\n            // Increment the referrer's count.\r\n            referralCounts[_referrer]++;\r\n        }\r\n\r\n        require(tokensDistributed + tokensToDistribute <= totalAirdropSupply, \"Total airdrop supply exhausted\");\r\n        \r\n        // WARNING: For fee-on-transfer tokens, the contract's `balanceOf` may not reflect the actual amount received.\r\n        // It's recommended to fund the contract with a buffer to account for these fees.\r\n        require(token.balanceOf(address(this)) >= tokensToDistribute + feeAmount, \"Insufficient token balance in contract\");\r\n        \r\n        token.safeTransfer(owner(), feeAmount);\r\n        emit AirdropFeePaid(msg.sender, owner(), feeAmount);\r\n\r\n        tokensDistributed += tokensToDistribute;\r\n\r\n        if (_referrer != address(0)) {\r\n            token.safeTransfer(_referrer, referralBonusAmount);\r\n        }\r\n        \r\n        token.safeTransfer(msg.sender, finalAirdropAmount);\r\n\r\n        emit AirdropClaimed(msg.sender, _referrer);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to withdraw any remaining tokens from the contract.\r\n     * This is useful after the airdrop has concluded or in an emergency.\r\n     * @param _tokenAddress The address of the token to withdraw.\r\n     */\r\n    function withdrawTokens(address _tokenAddress) public onlyOwner {\r\n        IERC20 _token = IERC20(_tokenAddress);\r\n        uint256 balance = _token.balanceOf(address(this));\r\n        require(balance > 0, \"No tokens to withdraw\");\r\n        _token.safeTransfer(owner(), balance);\r\n        emit TokensWithdrawn(owner(), balance);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"airdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xB6 TLOAD PUSH17 0x971BD0CBCC68BB1545F7E4C2F66355DE88 0x22 CALLVALUE 0xC 0x4C ADD SELFBALANCE 0xCB DUP11 EQ ISZERO 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xB6 TLOAD PUSH17 0x971BD0CBCC68BB1545F7E4C2F66355DE88 0x22 CALLVALUE 0xC 0x4C ADD SELFBALANCE 0xCB DUP11 EQ ISZERO 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fb65c70971bd0cbcc68bb1545f7e4c2f66355de8822340c4c0147cb8a1415e264736f6c634300081e0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"airdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 872,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SELFBALANCE 0x2E 0xCE SWAP11 0xA8 RJUMPI 0x2ECB 0xA8 CALLDATACOPY 0xD6 0xD MSTORE8 BLOBBASEFEE 0x2B 0xCF MUL DUP10 0xEB 0x4E MULMOD 0x1E 0x2E CREATE PUSH9 0x42816B8A5F8164736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "281:31863:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SELFBALANCE 0x2E 0xCE SWAP11 0xA8 RJUMPI 0x2ECB 0xA8 CALLDATACOPY 0xD6 0xD MSTORE8 BLOBBASEFEE 0x2B 0xCF MUL DUP10 0xEB 0x4E MULMOD 0x1E 0x2E CREATE PUSH9 0x42816B8A5F8164736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "281:31863:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"add512(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mul512(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"mulShr(uint256,uint256,uint8)": "infinite",
								"mulShr(uint256,uint256,uint8,enum Math.Rounding)": "infinite",
								"saturatingAdd(uint256,uint256)": "infinite",
								"saturatingMul(uint256,uint256)": "infinite",
								"saturatingSub(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f472ece9aa8e12ecba837d60d534a2bcf0289eb4e091e2ef06842816b8a5f8164736f6c634300081e0033",
									".code": [
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"airdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xCB CALLF 0x72C7 0x22 0xD8 DUP10 0xB8 MSTORE ISZERO BLOCKHASH PUSH26 0x36C8DF9EB75343EBAAA674F5562CC7C6A7DDA964736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "769:34173:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xCB CALLF 0x72C7 0x22 0xD8 DUP10 0xB8 MSTORE ISZERO BLOCKHASH PUSH26 0x36C8DF9EB75343EBAAA674F5562CC7C6A7DDA964736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "769:34173:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9cbe372c722d889b85215407936c8df9eb75343ebaaa674f5562cc7c6a7dda964736f6c634300081e0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"airdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"airdrop.sol": {
				"Airdrop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_initialMainAirdropAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialReferralBonusAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialClaimFeePercent",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialTotalAirdropSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "AirdropClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feeAmount",
									"type": "uint256"
								}
							],
							"name": "AirdropFeePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "AirdropFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTimestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stopTimestamp",
									"type": "uint256"
								}
							],
							"name": "AirdropScheduleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "AirdropStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "AirdropStopped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "MainAirdropAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMax",
									"type": "uint256"
								}
							],
							"name": "MaxReferralsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "ReferralBonusAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSupply",
									"type": "uint256"
								}
							],
							"name": "TotalAirdropSupplyUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_referrer",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimFeePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mainAirdropAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxReferrals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "referralBonusAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralCounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stopTimestamp",
									"type": "uint256"
								}
							],
							"name": "scheduleAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFeePercent",
									"type": "uint256"
								}
							],
							"name": "setClaimFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newAmount",
									"type": "uint256"
								}
							],
							"name": "setMainAirdropAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newMax",
									"type": "uint256"
								}
							],
							"name": "setMaxReferrals",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newAmount",
									"type": "uint256"
								}
							],
							"name": "setReferralBonusAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newSupply",
									"type": "uint256"
								}
							],
							"name": "setTotalAirdropSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdropAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopAirdropAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensDistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAirdropSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "A smart contract for managing a token airdrop on the Polygon network. The owner can configure airdrop and referral amounts, and control the airdrop's lifecycle.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"claimAirdrop()": {
								"details": "A function for a user to claim their airdrop without a referral. It calls the main claim function with a zero address."
							},
							"claimAirdrop(address)": {
								"details": "A function for a user to claim their airdrop. This function also handles the referral bonus and a configurable fee.",
								"params": {
									"_referrer": "The address of the referrer. Use address(0) if there is no referrer."
								}
							},
							"constructor": {
								"details": "The constructor initializes the contract with the token address, airdrop amounts, and total supply.",
								"params": {
									"_initialClaimFeePercent": "The initial fee percentage (e.g., 20 for 2%).",
									"_initialMainAirdropAmount": "The initial amount of tokens for each participant.",
									"_initialReferralBonusAmount": "The initial amount of tokens for each referral.",
									"_initialTotalAirdropSupply": "The initial total supply of tokens for the airdrop.",
									"_tokenAddress": "The address of the ERC20 token to be airdropped."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"scheduleAirdrop(uint256,uint256)": {
								"details": "Allows the owner to schedule the start and end of the airdrop.",
								"params": {
									"_startTimestamp": "The timestamp for when the airdrop should start.",
									"_stopTimestamp": "The timestamp for when the airdrop should stop."
								}
							},
							"setClaimFeePercent(uint256)": {
								"details": "Allows the owner to set the airdrop fee percentage.",
								"params": {
									"_newFeePercent": "The new fee percentage (e.g., 20 for 2%)."
								}
							},
							"setMainAirdropAmount(uint256)": {
								"details": "Allows the owner to change the main airdrop amount per participant.",
								"params": {
									"_newAmount": "The new amount for the main airdrop."
								}
							},
							"setMaxReferrals(uint256)": {
								"details": "Allows the owner to set the maximum number of referrals per user.",
								"params": {
									"_newMax": "The new maximum number of referrals."
								}
							},
							"setReferralBonusAmount(uint256)": {
								"details": "Allows the owner to change the referral bonus amount.",
								"params": {
									"_newAmount": "The new amount for the referral bonus."
								}
							},
							"setTotalAirdropSupply(uint256)": {
								"details": "Allows the owner to set the total supply for the airdrop.",
								"params": {
									"_newSupply": "The new total airdrop supply."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawTokens(address)": {
								"details": "Allows the owner to withdraw any remaining tokens from the contract. This is useful after the airdrop has concluded or in an emergency.",
								"params": {
									"_tokenAddress": "The address of the token to withdraw."
								}
							}
						},
						"title": "Airdrop",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"airdrop.sol\":561:10071  contract Airdrop is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"airdrop.sol\":3101:3781  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"airdrop.sol\":3337:3347  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"airdrop.sol\":3393:3394  0 */\n  0x00\n    /* \"airdrop.sol\":3368:3395  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"airdrop.sol\":3368:3381  _tokenAddress */\n  dup6\n    /* \"airdrop.sol\":3368:3395  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"airdrop.sol\":3360:3428  require(_tokenAddress != address(0), \"Token address cannot be zero\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"airdrop.sol\":3454:3467  _tokenAddress */\n  dup5\n    /* \"airdrop.sol\":3439:3444  token */\n  0x02\n  0x00\n    /* \"airdrop.sol\":3439:3468  token = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"airdrop.sol\":3499:3524  _initialMainAirdropAmount */\n  dup4\n    /* \"airdrop.sol\":3479:3496  mainAirdropAmount */\n  0x03\n    /* \"airdrop.sol\":3479:3524  mainAirdropAmount = _initialMainAirdropAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"airdrop.sol\":3557:3584  _initialReferralBonusAmount */\n  dup3\n    /* \"airdrop.sol\":3535:3554  referralBonusAmount */\n  0x04\n    /* \"airdrop.sol\":3535:3584  referralBonusAmount = _initialReferralBonusAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"airdrop.sol\":3613:3636  _initialClaimFeePercent */\n  dup2\n    /* \"airdrop.sol\":3595:3610  claimFeePercent */\n  0x05\n    /* \"airdrop.sol\":3595:3636  claimFeePercent = _initialClaimFeePercent */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"airdrop.sol\":3668:3694  _initialTotalAirdropSupply */\n  dup1\n    /* \"airdrop.sol\":3647:3665  totalAirdropSupply */\n  0x07\n    /* \"airdrop.sol\":3647:3694  totalAirdropSupply = _initialTotalAirdropSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"airdrop.sol\":3720:3723  500 */\n  0x01f4\n    /* \"airdrop.sol\":3705:3717  maxReferrals */\n  0x09\n    /* \"airdrop.sol\":3705:3723  maxReferrals = 500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"airdrop.sol\":3101:3781  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"airdrop.sol\":561:10071  contract Airdrop is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_40\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_42\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_43:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_45\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_27:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_28:\n    /* \"#utility.yul\":1001:1025   */\n  tag_48\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_27\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_49:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_29:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_51\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_28\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2182   */\ntag_3:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  0x00\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1335:1341   */\n  0x00\n    /* \"#utility.yul\":1343:1349   */\n  0x00\n    /* \"#utility.yul\":1392:1395   */\n  0xa0\n    /* \"#utility.yul\":1380:1389   */\n  dup7\n    /* \"#utility.yul\":1371:1378   */\n  dup9\n    /* \"#utility.yul\":1367:1390   */\n  sub\n    /* \"#utility.yul\":1363:1396   */\n  slt\n    /* \"#utility.yul\":1360:1480   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1399:1478   */\n  tag_54\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1360:1480   */\ntag_53:\n    /* \"#utility.yul\":1519:1520   */\n  0x00\n    /* \"#utility.yul\":1544:1608   */\n  tag_55\n    /* \"#utility.yul\":1600:1607   */\n  dup9\n    /* \"#utility.yul\":1591:1597   */\n  dup3\n    /* \"#utility.yul\":1580:1589   */\n  dup10\n    /* \"#utility.yul\":1576:1598   */\n  add\n    /* \"#utility.yul\":1544:1608   */\n  tag_26\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1534:1608   */\n  swap6\n  pop\n    /* \"#utility.yul\":1490:1618   */\n  pop\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1683:1747   */\n  tag_56\n    /* \"#utility.yul\":1739:1746   */\n  dup9\n    /* \"#utility.yul\":1730:1736   */\n  dup3\n    /* \"#utility.yul\":1719:1728   */\n  dup10\n    /* \"#utility.yul\":1715:1737   */\n  add\n    /* \"#utility.yul\":1683:1747   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1673:1747   */\n  swap5\n  pop\n    /* \"#utility.yul\":1628:1757   */\n  pop\n    /* \"#utility.yul\":1796:1798   */\n  0x40\n    /* \"#utility.yul\":1822:1886   */\n  tag_57\n    /* \"#utility.yul\":1878:1885   */\n  dup9\n    /* \"#utility.yul\":1869:1875   */\n  dup3\n    /* \"#utility.yul\":1858:1867   */\n  dup10\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1822:1886   */\n  tag_29\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1812:1886   */\n  swap4\n  pop\n    /* \"#utility.yul\":1767:1896   */\n  pop\n    /* \"#utility.yul\":1935:1937   */\n  0x60\n    /* \"#utility.yul\":1961:2025   */\n  tag_58\n    /* \"#utility.yul\":2017:2024   */\n  dup9\n    /* \"#utility.yul\":2008:2014   */\n  dup3\n    /* \"#utility.yul\":1997:2006   */\n  dup10\n    /* \"#utility.yul\":1993:2015   */\n  add\n    /* \"#utility.yul\":1961:2025   */\n  tag_29\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1951:2025   */\n  swap3\n  pop\n    /* \"#utility.yul\":1906:2035   */\n  pop\n    /* \"#utility.yul\":2074:2077   */\n  0x80\n    /* \"#utility.yul\":2101:2165   */\n  tag_59\n    /* \"#utility.yul\":2157:2164   */\n  dup9\n    /* \"#utility.yul\":2148:2154   */\n  dup3\n    /* \"#utility.yul\":2137:2146   */\n  dup10\n    /* \"#utility.yul\":2133:2155   */\n  add\n    /* \"#utility.yul\":2101:2165   */\n  tag_29\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2091:2165   */\n  swap2\n  pop\n    /* \"#utility.yul\":2045:2175   */\n  pop\n    /* \"#utility.yul\":1205:2182   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2188:2306   */\ntag_30:\n    /* \"#utility.yul\":2275:2299   */\n  tag_61\n    /* \"#utility.yul\":2293:2298   */\n  dup2\n    /* \"#utility.yul\":2275:2299   */\n  tag_24\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2270:2273   */\n  dup3\n    /* \"#utility.yul\":2263:2300   */\n  mstore\n    /* \"#utility.yul\":2188:2306   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2312:2534   */\ntag_10:\n    /* \"#utility.yul\":2405:2409   */\n  0x00\n    /* \"#utility.yul\":2443:2445   */\n  0x20\n    /* \"#utility.yul\":2432:2441   */\n  dup3\n    /* \"#utility.yul\":2428:2446   */\n  add\n    /* \"#utility.yul\":2420:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2456:2527   */\n  tag_63\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2513:2522   */\n  dup4\n    /* \"#utility.yul\":2509:2526   */\n  add\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2456:2527   */\n  tag_30\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2312:2534   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2540:2709   */\ntag_31:\n    /* \"#utility.yul\":2624:2635   */\n  0x00\n    /* \"#utility.yul\":2658:2664   */\n  dup3\n    /* \"#utility.yul\":2653:2656   */\n  dup3\n    /* \"#utility.yul\":2646:2665   */\n  mstore\n    /* \"#utility.yul\":2698:2702   */\n  0x20\n    /* \"#utility.yul\":2693:2696   */\n  dup3\n    /* \"#utility.yul\":2689:2703   */\n  add\n    /* \"#utility.yul\":2674:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2540:2709   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2715:2893   */\ntag_32:\n    /* \"#utility.yul\":2855:2885   */\n  0x546f6b656e20616464726573732063616e6e6f74206265207a65726f00000000\n    /* \"#utility.yul\":2851:2852   */\n  0x00\n    /* \"#utility.yul\":2843:2849   */\n  dup3\n    /* \"#utility.yul\":2839:2853   */\n  add\n    /* \"#utility.yul\":2832:2886   */\n  mstore\n    /* \"#utility.yul\":2715:2893   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2899:3265   */\ntag_33:\n    /* \"#utility.yul\":3041:3044   */\n  0x00\n    /* \"#utility.yul\":3062:3129   */\n  tag_67\n    /* \"#utility.yul\":3126:3128   */\n  0x1c\n    /* \"#utility.yul\":3121:3124   */\n  dup4\n    /* \"#utility.yul\":3062:3129   */\n  tag_31\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3055:3129   */\n  swap2\n  pop\n    /* \"#utility.yul\":3138:3231   */\n  tag_68\n    /* \"#utility.yul\":3227:3230   */\n  dup3\n    /* \"#utility.yul\":3138:3231   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3256:3258   */\n  0x20\n    /* \"#utility.yul\":3251:3254   */\n  dup3\n    /* \"#utility.yul\":3247:3259   */\n  add\n    /* \"#utility.yul\":3240:3259   */\n  swap1\n  pop\n    /* \"#utility.yul\":2899:3265   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3271:3690   */\ntag_17:\n    /* \"#utility.yul\":3437:3441   */\n  0x00\n    /* \"#utility.yul\":3475:3477   */\n  0x20\n    /* \"#utility.yul\":3464:3473   */\n  dup3\n    /* \"#utility.yul\":3460:3478   */\n  add\n    /* \"#utility.yul\":3452:3478   */\n  swap1\n  pop\n    /* \"#utility.yul\":3524:3533   */\n  dup2\n    /* \"#utility.yul\":3518:3522   */\n  dup2\n    /* \"#utility.yul\":3514:3534   */\n  sub\n    /* \"#utility.yul\":3510:3511   */\n  0x00\n    /* \"#utility.yul\":3499:3508   */\n  dup4\n    /* \"#utility.yul\":3495:3512   */\n  add\n    /* \"#utility.yul\":3488:3535   */\n  mstore\n    /* \"#utility.yul\":3552:3683   */\n  tag_70\n    /* \"#utility.yul\":3678:3682   */\n  dup2\n    /* \"#utility.yul\":3552:3683   */\n  tag_33\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3544:3683   */\n  swap1\n  pop\n    /* \"#utility.yul\":3271:3690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"airdrop.sol\":561:10071  contract Airdrop is Ownable, ReentrancyGuard {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"airdrop.sol\":561:10071  contract Airdrop is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc884ef83\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc884ef83\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcec297a0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdb24f2a3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xff7345e5\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9a707d2f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa49a176e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xaeab26be\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88bfd29\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbf31b33e\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x6305b715\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x6305b715\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x65f8c6c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6a1d8713\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x747fc0d2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7e699a8c\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01c0e51d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x152e84a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1bcea05e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x49df728c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5b88349d\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"airdrop.sol\":4010:4036  revert(\"ETH not accepted\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"airdrop.sol\":561:10071  contract Airdrop is Ownable, ReentrancyGuard {... */\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"airdrop.sol\":1800:1828  uint256 public stopAirdropAt */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":1421:1453  uint256 public tokensDistributed */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":4304:4656  function scheduleAirdrop(uint256 _startTimestamp, uint256 _stopTimestamp) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"airdrop.sol\":9735:10068  function withdrawTokens(address _tokenAddress) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"airdrop.sol\":6725:6799  function claimAirdrop() public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"airdrop.sol\":867:901  uint256 public referralBonusAmount */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":7056:9485  function claimAirdrop(address _referrer) public nonReentrant {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"airdrop.sol\":6415:6559  function setMaxReferrals(uint256 _newMax) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"airdrop.sol\":1529:1556  uint256 public maxReferrals */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":5893:6250  function setTotalAirdropSupply(uint256 _newSupply) public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      revert(0x00, 0x00)\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":4826:4994  function setMainAirdropAmount(uint256 _newAmount) public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"airdrop.sol\":5489:5736  function setClaimFeePercent(uint256 _newFeePercent) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"airdrop.sol\":1289:1322  uint256 public totalAirdropSupply */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":1043:1073  uint256 public claimFeePercent */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":774:806  uint256 public mainAirdropAmount */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      revert(0x00, 0x00)\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":1161:1200  mapping(address => bool) public claimed */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      revert(0x00, 0x00)\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":1642:1691  mapping(address => uint256) public referralCounts */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      revert(0x00, 0x00)\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":1764:1793  uint256 public startAirdropAt */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      revert(0x00, 0x00)\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      revert(0x00, 0x00)\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"airdrop.sol\":690:709  IERC20 public token */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      revert(0x00, 0x00)\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"airdrop.sol\":5152:5326  function setReferralBonusAmount(uint256 _newAmount) public onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      revert(0x00, 0x00)\n    tag_128:\n      pop\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      stop\n        /* \"airdrop.sol\":1800:1828  uint256 public stopAirdropAt */\n    tag_35:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":1421:1453  uint256 public tokensDistributed */\n    tag_40:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":4304:4656  function scheduleAirdrop(uint256 _startTimestamp, uint256 _stopTimestamp) public onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"airdrop.sol\":4431:4446  _startTimestamp */\n      dup2\n        /* \"airdrop.sol\":4414:4428  _stopTimestamp */\n      dup2\n        /* \"airdrop.sol\":4414:4446  _stopTimestamp > _startTimestamp */\n      gt\n        /* \"airdrop.sol\":4406:4495  require(_stopTimestamp > _startTimestamp, \"Stop timestamp must be after start timestamp\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"airdrop.sol\":4523:4538  _startTimestamp */\n      dup2\n        /* \"airdrop.sol\":4506:4520  startAirdropAt */\n      0x0b\n        /* \"airdrop.sol\":4506:4538  startAirdropAt = _startTimestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":4565:4579  _stopTimestamp */\n      dup1\n        /* \"airdrop.sol\":4549:4562  stopAirdropAt */\n      0x0c\n        /* \"airdrop.sol\":4549:4579  stopAirdropAt = _stopTimestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":4595:4648  AirdropScheduleUpdated(startAirdropAt, stopAirdropAt) */\n      0x72c7f30f1add5c8b5e197b8cb57516b3abbd8e31bccb1845d4e716717944e80a\n        /* \"airdrop.sol\":4618:4632  startAirdropAt */\n      sload(0x0b)\n        /* \"airdrop.sol\":4634:4647  stopAirdropAt */\n      sload(0x0c)\n        /* \"airdrop.sol\":4595:4648  AirdropScheduleUpdated(startAirdropAt, stopAirdropAt) */\n      mload(0x40)\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"airdrop.sol\":4304:4656  function scheduleAirdrop(uint256 _startTimestamp, uint256 _stopTimestamp) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"airdrop.sol\":9735:10068  function withdrawTokens(address _tokenAddress) public onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"airdrop.sol\":9810:9823  IERC20 _token */\n      0x00\n        /* \"airdrop.sol\":9833:9846  _tokenAddress */\n      dup2\n        /* \"airdrop.sol\":9810:9847  IERC20 _token = IERC20(_tokenAddress) */\n      swap1\n      pop\n        /* \"airdrop.sol\":9858:9873  uint256 balance */\n      0x00\n        /* \"airdrop.sol\":9876:9882  _token */\n      dup2\n        /* \"airdrop.sol\":9876:9892  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"airdrop.sol\":9901:9905  this */\n      address\n        /* \"airdrop.sol\":9876:9907  _token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_144:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"airdrop.sol\":9858:9907  uint256 balance = _token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"airdrop.sol\":9936:9937  0 */\n      0x00\n        /* \"airdrop.sol\":9926:9933  balance */\n      dup2\n        /* \"airdrop.sol\":9926:9937  balance > 0 */\n      gt\n        /* \"airdrop.sol\":9918:9963  require(balance > 0, \"No tokens to withdraw\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"airdrop.sol\":9974:10011  _token.safeTransfer(owner(), balance) */\n      tag_152\n        /* \"airdrop.sol\":9994:10001  owner() */\n      tag_153\n        /* \"airdrop.sol\":9994:9999  owner */\n      tag_81\n        /* \"airdrop.sol\":9994:10001  owner() */\n      jump\t// in\n    tag_153:\n        /* \"airdrop.sol\":10003:10010  balance */\n      dup3\n        /* \"airdrop.sol\":9974:9980  _token */\n      dup5\n        /* \"airdrop.sol\":9974:9993  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_154\n      swap1\n        /* \"airdrop.sol\":9974:10011  _token.safeTransfer(owner(), balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"airdrop.sol\":10043:10050  owner() */\n      tag_155\n        /* \"airdrop.sol\":10043:10048  owner */\n      tag_81\n        /* \"airdrop.sol\":10043:10050  owner() */\n      jump\t// in\n    tag_155:\n        /* \"airdrop.sol\":10027:10060  TokensWithdrawn(owner(), balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b\n        /* \"airdrop.sol\":10052:10059  balance */\n      dup3\n        /* \"airdrop.sol\":10027:10060  TokensWithdrawn(owner(), balance) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"airdrop.sol\":9799:10068  {... */\n      pop\n      pop\n        /* \"airdrop.sol\":9735:10068  function withdrawTokens(address _tokenAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"airdrop.sol\":6725:6799  function claimAirdrop() public {... */\n    tag_54:\n        /* \"airdrop.sol\":6767:6791  claimAirdrop(address(0)) */\n      tag_158\n        /* \"airdrop.sol\":6788:6789  0 */\n      0x00\n        /* \"airdrop.sol\":6767:6779  claimAirdrop */\n      tag_62\n        /* \"airdrop.sol\":6767:6791  claimAirdrop(address(0)) */\n      jump\t// in\n    tag_158:\n        /* \"airdrop.sol\":6725:6799  function claimAirdrop() public {... */\n      jump\t// out\n        /* \"airdrop.sol\":867:901  uint256 public referralBonusAmount */\n    tag_57:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":7056:9485  function claimAirdrop(address _referrer) public nonReentrant {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_160:\n        /* \"airdrop.sol\":7156:7163  claimed */\n      0x06\n        /* \"airdrop.sol\":7156:7175  claimed[msg.sender] */\n      0x00\n        /* \"airdrop.sol\":7164:7174  msg.sender */\n      caller\n        /* \"airdrop.sol\":7156:7175  claimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"airdrop.sol\":7155:7175  !claimed[msg.sender] */\n      iszero\n        /* \"airdrop.sol\":7147:7217  require(!claimed[msg.sender], \"You have already claimed your airdrop\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"airdrop.sol\":7255:7269  startAirdropAt */\n      sload(0x0b)\n        /* \"airdrop.sol\":7236:7251  block.timestamp */\n      timestamp\n        /* \"airdrop.sol\":7236:7269  block.timestamp >= startAirdropAt */\n      lt\n      iszero\n        /* \"airdrop.sol\":7228:7301  require(block.timestamp >= startAirdropAt, \"Airdrop has not started yet\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"airdrop.sol\":7338:7351  stopAirdropAt */\n      sload(0x0c)\n        /* \"airdrop.sol\":7320:7335  block.timestamp */\n      timestamp\n        /* \"airdrop.sol\":7320:7351  block.timestamp < stopAirdropAt */\n      lt\n        /* \"airdrop.sol\":7312:7381  require(block.timestamp < stopAirdropAt, \"Airdrop has already ended\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"airdrop.sol\":7444:7448  true */\n      0x01\n        /* \"airdrop.sol\":7422:7429  claimed */\n      0x06\n        /* \"airdrop.sol\":7422:7441  claimed[msg.sender] */\n      0x00\n        /* \"airdrop.sol\":7430:7440  msg.sender */\n      caller\n        /* \"airdrop.sol\":7422:7441  claimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"airdrop.sol\":7422:7448  claimed[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":7486:7503  uint256 feeAmount */\n      0x00\n        /* \"airdrop.sol\":7506:7558  Math.mulDiv(mainAirdropAmount, claimFeePercent, 100) */\n      tag_172\n        /* \"airdrop.sol\":7518:7535  mainAirdropAmount */\n      sload(0x03)\n        /* \"airdrop.sol\":7537:7552  claimFeePercent */\n      sload(0x05)\n        /* \"airdrop.sol\":7554:7557  100 */\n      0x64\n        /* \"airdrop.sol\":7506:7517  Math.mulDiv */\n      tag_173\n        /* \"airdrop.sol\":7506:7558  Math.mulDiv(mainAirdropAmount, claimFeePercent, 100) */\n      jump\t// in\n    tag_172:\n        /* \"airdrop.sol\":7486:7558  uint256 feeAmount = Math.mulDiv(mainAirdropAmount, claimFeePercent, 100) */\n      swap1\n      pop\n        /* \"airdrop.sol\":7590:7607  mainAirdropAmount */\n      sload(0x03)\n        /* \"airdrop.sol\":7577:7586  feeAmount */\n      dup2\n        /* \"airdrop.sol\":7577:7607  feeAmount <= mainAirdropAmount */\n      gt\n      iszero\n        /* \"airdrop.sol\":7569:7648  require(feeAmount <= mainAirdropAmount, \"Invalid fee amount or airdrop amount\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"airdrop.sol\":7659:7685  uint256 finalAirdropAmount */\n      0x00\n        /* \"airdrop.sol\":7708:7717  feeAmount */\n      dup2\n        /* \"airdrop.sol\":7688:7705  mainAirdropAmount */\n      sload(0x03)\n        /* \"airdrop.sol\":7688:7717  mainAirdropAmount - feeAmount */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"airdrop.sol\":7659:7717  uint256 finalAirdropAmount = mainAirdropAmount - feeAmount */\n      swap1\n      pop\n        /* \"airdrop.sol\":7738:7764  uint256 tokensToDistribute */\n      0x00\n        /* \"airdrop.sol\":7767:7785  finalAirdropAmount */\n      dup2\n        /* \"airdrop.sol\":7738:7785  uint256 tokensToDistribute = finalAirdropAmount */\n      swap1\n      pop\n        /* \"airdrop.sol\":7890:7891  0 */\n      0x00\n        /* \"airdrop.sol\":7869:7892  _referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":7869:7878  _referrer */\n      dup5\n        /* \"airdrop.sol\":7869:7892  _referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"airdrop.sol\":7865:8598  if (_referrer != address(0)) {... */\n      tag_179\n      jumpi\n        /* \"airdrop.sol\":7930:7940  msg.sender */\n      caller\n        /* \"airdrop.sol\":7917:7940  _referrer != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":7917:7926  _referrer */\n      dup5\n        /* \"airdrop.sol\":7917:7940  _referrer != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"airdrop.sol\":7909:7962  require(_referrer != msg.sender, \"Cannot self-refer\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"airdrop.sol\":8006:8010  this */\n      address\n        /* \"airdrop.sol\":7985:8011  _referrer != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":7985:7994  _referrer */\n      dup5\n        /* \"airdrop.sol\":7985:8011  _referrer != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"airdrop.sol\":7977:8032  require(_referrer != address(this), \"Invalid referrer\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"airdrop.sol\":8177:8184  claimed */\n      0x06\n        /* \"airdrop.sol\":8177:8195  claimed[_referrer] */\n      0x00\n        /* \"airdrop.sol\":8185:8194  _referrer */\n      dup6\n        /* \"airdrop.sol\":8177:8195  claimed[_referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"airdrop.sol\":8169:8228  require(claimed[_referrer], \"Referrer has not yet claimed\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"airdrop.sol\":8366:8378  maxReferrals */\n      sload(0x09)\n        /* \"airdrop.sol\":8338:8352  referralCounts */\n      0x0a\n        /* \"airdrop.sol\":8338:8363  referralCounts[_referrer] */\n      0x00\n        /* \"airdrop.sol\":8353:8362  _referrer */\n      dup7\n        /* \"airdrop.sol\":8338:8363  referralCounts[_referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"airdrop.sol\":8338:8378  referralCounts[_referrer] < maxReferrals */\n      lt\n        /* \"airdrop.sol\":8330:8424  require(referralCounts[_referrer] < maxReferrals, \"Referrer has reached their referral limit\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"airdrop.sol\":8463:8482  referralBonusAmount */\n      sload(0x04)\n        /* \"airdrop.sol\":8441:8482  tokensToDistribute += referralBonusAmount */\n      dup2\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      swap1\n      pop\n        /* \"airdrop.sol\":8559:8573  referralCounts */\n      0x0a\n        /* \"airdrop.sol\":8559:8584  referralCounts[_referrer] */\n      0x00\n        /* \"airdrop.sol\":8574:8583  _referrer */\n      dup6\n        /* \"airdrop.sol\":8559:8584  referralCounts[_referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"airdrop.sol\":8559:8586  referralCounts[_referrer]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"airdrop.sol\":7865:8598  if (_referrer != address(0)) {... */\n    tag_179:\n        /* \"airdrop.sol\":8660:8678  totalAirdropSupply */\n      sload(0x07)\n        /* \"airdrop.sol\":8638:8656  tokensToDistribute */\n      dup2\n        /* \"airdrop.sol\":8618:8635  tokensDistributed */\n      sload(0x08)\n        /* \"airdrop.sol\":8618:8656  tokensDistributed + tokensToDistribute */\n      tag_196\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_196:\n        /* \"airdrop.sol\":8618:8678  tokensDistributed + tokensToDistribute <= totalAirdropSupply */\n      gt\n      iszero\n        /* \"airdrop.sol\":8610:8713  require(tokensDistributed + tokensToDistribute <= totalAirdropSupply, \"Total airdrop supply exhausted\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"airdrop.sol\":9008:9017  feeAmount */\n      dup3\n        /* \"airdrop.sol\":8987:9005  tokensToDistribute */\n      dup2\n        /* \"airdrop.sol\":8987:9017  tokensToDistribute + feeAmount */\n      tag_200\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_200:\n        /* \"airdrop.sol\":8953:8958  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":8953:8968  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"airdrop.sol\":8977:8981  this */\n      address\n        /* \"airdrop.sol\":8953:8983  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_201:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_204:\n        /* \"airdrop.sol\":8953:9017  token.balanceOf(address(this)) >= tokensToDistribute + feeAmount */\n      lt\n      iszero\n        /* \"airdrop.sol\":8945:9060  require(token.balanceOf(address(this)) >= tokensToDistribute + feeAmount, \"Insufficient token balance in contract\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"airdrop.sol\":9081:9119  token.safeTransfer(owner(), feeAmount) */\n      tag_208\n        /* \"airdrop.sol\":9100:9107  owner() */\n      tag_209\n        /* \"airdrop.sol\":9100:9105  owner */\n      tag_81\n        /* \"airdrop.sol\":9100:9107  owner() */\n      jump\t// in\n    tag_209:\n        /* \"airdrop.sol\":9109:9118  feeAmount */\n      dup5\n        /* \"airdrop.sol\":9081:9086  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":9081:9099  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_154\n      swap1\n        /* \"airdrop.sol\":9081:9119  token.safeTransfer(owner(), feeAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"airdrop.sol\":9162:9169  owner() */\n      tag_210\n        /* \"airdrop.sol\":9162:9167  owner */\n      tag_81\n        /* \"airdrop.sol\":9162:9169  owner() */\n      jump\t// in\n    tag_210:\n        /* \"airdrop.sol\":9135:9181  AirdropFeePaid(msg.sender, owner(), feeAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":9150:9160  msg.sender */\n      caller\n        /* \"airdrop.sol\":9135:9181  AirdropFeePaid(msg.sender, owner(), feeAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x02e039d7ce7a1bacd02cebc742cfba63668424d700fe6ff9b5be6f9f5801be15\n        /* \"airdrop.sol\":9171:9180  feeAmount */\n      dup6\n        /* \"airdrop.sol\":9135:9181  AirdropFeePaid(msg.sender, owner(), feeAmount) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"airdrop.sol\":9215:9233  tokensToDistribute */\n      dup1\n        /* \"airdrop.sol\":9194:9211  tokensDistributed */\n      0x08\n      0x00\n        /* \"airdrop.sol\":9194:9233  tokensDistributed += tokensToDistribute */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_212:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":9271:9272  0 */\n      0x00\n        /* \"airdrop.sol\":9250:9273  _referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":9250:9259  _referrer */\n      dup5\n        /* \"airdrop.sol\":9250:9273  _referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"airdrop.sol\":9246:9352  if (_referrer != address(0)) {... */\n      tag_213\n      jumpi\n        /* \"airdrop.sol\":9290:9340  token.safeTransfer(_referrer, referralBonusAmount) */\n      tag_214\n        /* \"airdrop.sol\":9309:9318  _referrer */\n      dup5\n        /* \"airdrop.sol\":9320:9339  referralBonusAmount */\n      sload(0x04)\n        /* \"airdrop.sol\":9290:9295  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":9290:9308  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_154\n      swap1\n        /* \"airdrop.sol\":9290:9340  token.safeTransfer(_referrer, referralBonusAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"airdrop.sol\":9246:9352  if (_referrer != address(0)) {... */\n    tag_213:\n        /* \"airdrop.sol\":9372:9422  token.safeTransfer(msg.sender, finalAirdropAmount) */\n      tag_215\n        /* \"airdrop.sol\":9391:9401  msg.sender */\n      caller\n        /* \"airdrop.sol\":9403:9421  finalAirdropAmount */\n      dup4\n        /* \"airdrop.sol\":9372:9377  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":9372:9390  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_154\n      swap1\n        /* \"airdrop.sol\":9372:9422  token.safeTransfer(msg.sender, finalAirdropAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"airdrop.sol\":9467:9476  _referrer */\n      dup4\n        /* \"airdrop.sol\":9440:9477  AirdropClaimed(msg.sender, _referrer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"airdrop.sol\":9455:9465  msg.sender */\n      caller\n        /* \"airdrop.sol\":9440:9477  AirdropClaimed(msg.sender, _referrer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe36722f357b07c721b246e0a5cb2fa0015c07ad3df67bca291504054a7998394\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"airdrop.sol\":7117:9485  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_216:\n        /* \"airdrop.sol\":7056:9485  function claimAirdrop(address _referrer) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"airdrop.sol\":6415:6559  function setMaxReferrals(uint256 _newMax) public onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"airdrop.sol\":6500:6507  _newMax */\n      dup1\n        /* \"airdrop.sol\":6485:6497  maxReferrals */\n      0x09\n        /* \"airdrop.sol\":6485:6507  maxReferrals = _newMax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":6523:6551  MaxReferralsUpdated(_newMax) */\n      0xcc368607de2345e055465e8d50d99a7d1e1e3ce7516a4175a2c513aad17b1460\n        /* \"airdrop.sol\":6543:6550  _newMax */\n      dup2\n        /* \"airdrop.sol\":6523:6551  MaxReferralsUpdated(_newMax) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"airdrop.sol\":6415:6559  function setMaxReferrals(uint256 _newMax) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"airdrop.sol\":1529:1556  uint256 public maxReferrals */\n    tag_73:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":5893:6250  function setTotalAirdropSupply(uint256 _newSupply) public onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_228:\n        /* \"airdrop.sol\":6076:6093  tokensDistributed */\n      sload(0x08)\n        /* \"airdrop.sol\":6062:6072  _newSupply */\n      dup2\n        /* \"airdrop.sol\":6062:6093  _newSupply >= tokensDistributed */\n      lt\n      iszero\n        /* \"airdrop.sol\":6054:6147  require(_newSupply >= tokensDistributed, \"New supply cannot be less than distributed tokens\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"airdrop.sol\":6179:6189  _newSupply */\n      dup1\n        /* \"airdrop.sol\":6158:6176  totalAirdropSupply */\n      0x07\n        /* \"airdrop.sol\":6158:6189  totalAirdropSupply = _newSupply */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":6205:6242  TotalAirdropSupplyUpdated(_newSupply) */\n      0x45c69c62555cb8d911ac4f0a16fa83a65e4a2ff5c5a884c39969e8c8b97cb510\n        /* \"airdrop.sol\":6231:6241  _newSupply */\n      dup2\n        /* \"airdrop.sol\":6205:6242  TotalAirdropSupplyUpdated(_newSupply) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"airdrop.sol\":5893:6250  function setTotalAirdropSupply(uint256 _newSupply) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"airdrop.sol\":4826:4994  function setMainAirdropAmount(uint256 _newAmount) public onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"airdrop.sol\":4924:4934  _newAmount */\n      dup1\n        /* \"airdrop.sol\":4904:4921  mainAirdropAmount */\n      0x03\n        /* \"airdrop.sol\":4904:4934  mainAirdropAmount = _newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":4950:4986  MainAirdropAmountUpdated(_newAmount) */\n      0x91a9538a48b80f8854e68761beacb4468cb2ac0a50d634dec96417cddc019a14\n        /* \"airdrop.sol\":4975:4985  _newAmount */\n      dup2\n        /* \"airdrop.sol\":4950:4986  MainAirdropAmountUpdated(_newAmount) */\n      mload(0x40)\n      tag_238\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"airdrop.sol\":4826:4994  function setMainAirdropAmount(uint256 _newAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"airdrop.sol\":5489:5736  function setClaimFeePercent(uint256 _newFeePercent) public onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"airdrop.sol\":5595:5598  100 */\n      0x64\n        /* \"airdrop.sol\":5577:5591  _newFeePercent */\n      dup2\n        /* \"airdrop.sol\":5577:5598  _newFeePercent <= 100 */\n      gt\n      iszero\n        /* \"airdrop.sol\":5569:5636  require(_newFeePercent <= 100, \"Fee percentage cannot exceed 100%\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"airdrop.sol\":5665:5679  _newFeePercent */\n      dup1\n        /* \"airdrop.sol\":5647:5662  claimFeePercent */\n      0x05\n        /* \"airdrop.sol\":5647:5679  claimFeePercent = _newFeePercent */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":5695:5728  AirdropFeeUpdated(_newFeePercent) */\n      0x6852fdb2f20cad76e9f34cb63f2f0f19b8d69a0673886404fc871917cd81198a\n        /* \"airdrop.sol\":5713:5727  _newFeePercent */\n      dup2\n        /* \"airdrop.sol\":5695:5728  AirdropFeeUpdated(_newFeePercent) */\n      mload(0x40)\n      tag_245\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"airdrop.sol\":5489:5736  function setClaimFeePercent(uint256 _newFeePercent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"airdrop.sol\":1289:1322  uint256 public totalAirdropSupply */\n    tag_94:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":1043:1073  uint256 public claimFeePercent */\n    tag_98:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":774:806  uint256 public mainAirdropAmount */\n    tag_102:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":1161:1200  mapping(address => bool) public claimed */\n    tag_107:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":1642:1691  mapping(address => uint256) public referralCounts */\n    tag_113:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":1764:1793  uint256 public startAirdropAt */\n    tag_117:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"airdrop.sol\":690:709  IERC20 public token */\n    tag_125:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"airdrop.sol\":5152:5326  function setReferralBonusAmount(uint256 _newAmount) public onlyOwner {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"airdrop.sol\":5254:5264  _newAmount */\n      dup1\n        /* \"airdrop.sol\":5232:5251  referralBonusAmount */\n      0x04\n        /* \"airdrop.sol\":5232:5264  referralBonusAmount = _newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"airdrop.sol\":5280:5318  ReferralBonusAmountUpdated(_newAmount) */\n      0xa8868231bcabae5003167c1566dce9258f36e5babecdd040da1ef6e04377e0e2\n        /* \"airdrop.sol\":5307:5317  _newAmount */\n      dup2\n        /* \"airdrop.sol\":5280:5318  ReferralBonusAmountUpdated(_newAmount) */\n      mload(0x40)\n      tag_255\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"airdrop.sol\":5152:5326  function setReferralBonusAmount(uint256 _newAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_265\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7242:10925  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7324:7338  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7375:7387  uint256 high */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7389:7400  uint256 low */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7404:7416  mul512(x, y) */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7411:7412  x */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7414:7415  y */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7404:7410  mul512 */\n      tag_272\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7404:7416  mul512(x, y) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7374:7416  (uint256 high, uint256 low) = mul512(x, y) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7506:7507  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7498:7502  high */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7498:7507  high == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7494:7859  if (high == 0) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7833:7844  denominator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7827:7830  low */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7827:7844  low / denominator */\n      dup2\n      tag_274\n      jumpi\n      tag_275\n      tag_276\n      jump\t// in\n    tag_275:\n    tag_274:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7820:7844  return low / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_270)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7494:7859  if (high == 0) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7984:7988  high */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7969:7980  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7969:7988  denominator <= high */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7965:8107  if (denominator <= high) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8008:8092  Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW)) */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8020:8091  ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW) */\n      tag_279\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8043:8044  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8028:8039  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8028:8044  denominator == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1035:1039  0x12 */\n      0x12\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":940:944  0x11 */\n      0x11\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8020:8027  ternary */\n      tag_280\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8020:8091  ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8008:8019  Panic.panic */\n      tag_281\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8008:8092  Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW)) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7965:8107  if (denominator <= high) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8359:8376  uint256 remainder */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8510:8521  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8507:8508  y */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8504:8505  x */\n      dup9\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8497:8522  mulmod(x, y, denominator) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8484:8522  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8636:8639  low */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8625:8634  remainder */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8622:8640  gt(remainder, low) */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8616:8620  high */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8612:8641  sub(high, gt(remainder, low)) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8604:8641  high := sub(high, gt(remainder, low)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8674:8683  remainder */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8669:8672  low */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8665:8684  sub(low, remainder) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8658:8684  low := sub(low, remainder) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8902:8914  uint256 twos */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8936:8947  denominator */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8932:8933  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8932:8947  0 - denominator */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8917:8928  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8917:8948  denominator & (0 - denominator) */\n      and\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8902:8948  uint256 twos = denominator & (0 - denominator) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9084:9088  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9071:9082  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9067:9089  div(denominator, twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9052:9089  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9169:9173  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9164:9167  low */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9160:9174  div(low, twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9153:9174  low := div(low, twos) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9330:9331  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9323:9327  twos */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9316:9320  twos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9313:9314  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9309:9321  sub(0, twos) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9305:9328  div(sub(0, twos), twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9301:9332  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9293:9332  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9423:9427  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9416:9420  high */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9416:9427  high * twos */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9409:9427  low |= high * twos */\n      dup4\n      or\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9762:9777  uint256 inverse */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9800:9801  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9785:9796  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9781:9782  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9781:9796  3 * denominator */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9780:9801  (3 * denominator) ^ 2 */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9762:9801  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10047:10054  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10033:10044  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10033:10054  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10029:10030  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10029:10054  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10018:10054  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10117:10124  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10103:10114  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10103:10124  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10099:10100  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10099:10124  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10088:10124  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10189:10196  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10175:10186  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10175:10196  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10171:10172  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10171:10196  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10160:10196  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10260:10267  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10246:10257  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10246:10267  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10242:10243  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10242:10267  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10231:10267  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10333:10340  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10330  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10340  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10315:10316  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10315:10340  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10340  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10407:10414  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10393:10404  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10393:10414  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10389:10390  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10389:10414  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10378:10414  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10874:10881  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10868:10871  low */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10868:10881  low * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10859:10881  result = low * inverse */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10895:10908  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7242:10925  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_270:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_288)\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1027:1577  function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1088:1100  uint256 high */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1102:1113  uint256 low */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1474:1480  not(0) */\n      not\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1471:1472  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1468:1469  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1461:1481  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1508:1509  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1505:1506  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1501:1510  mul(a, b) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1494:1510  low := mul(a, b) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1556:1559  low */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1552:1554  mm */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1549:1560  lt(mm, low) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1543:1546  low */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1539:1541  mm */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1535:1547  sub(mm, low) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1531:1561  sub(sub(mm, low), lt(mm, low)) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1523:1561  high := sub(sub(mm, low), lt(mm, low)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1437:1571  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1027:1577  function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5071:5365  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5149:5156  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5347  SafeCast.toUint(condition) */\n      tag_293\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5337:5346  condition */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5336  SafeCast.toUint */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5347  SafeCast.toUint(condition) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5316:5317  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5313  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5317  a ^ b */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5311:5347  (a ^ b) * SafeCast.toUint(condition) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5307  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5348  b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5299:5348  return b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5071:5365  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1776:1970  function panic(uint256 code) internal pure {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1881:1891  0x4e487b71 */\n      0x4e487b71\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1875:1879  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1868:1892  mstore(0x00, 0x4e487b71) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1918:1922  code */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1912:1916  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1905:1923  mstore(0x20, code) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1949:1953  0x24 */\n      0x24\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1943:1947  0x1c */\n      0x1c\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":1936:1954  revert(0x1c, 0x24) */\n      revert\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34842:34851  uint256 u */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34921:34922  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34914:34923  iszero(b) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34907:34924  iszero(iszero(b)) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34902:34924  u := iszero(iszero(b)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_297:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:348   */\n    tag_298:\n        /* \"#utility.yul\":322:340   */\n      0x455448206e6f7420616363657074656400000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:341   */\n      mstore\n        /* \"#utility.yul\":182:348   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":354:720   */\n    tag_299:\n        /* \"#utility.yul\":496:499   */\n      0x00\n        /* \"#utility.yul\":517:584   */\n      tag_353\n        /* \"#utility.yul\":581:583   */\n      0x10\n        /* \"#utility.yul\":576:579   */\n      dup4\n        /* \"#utility.yul\":517:584   */\n      tag_297\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":510:584   */\n      swap2\n      pop\n        /* \"#utility.yul\":593:686   */\n      tag_354\n        /* \"#utility.yul\":682:685   */\n      dup3\n        /* \"#utility.yul\":593:686   */\n      tag_298\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":711:713   */\n      0x20\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":702:714   */\n      add\n        /* \"#utility.yul\":695:714   */\n      swap1\n      pop\n        /* \"#utility.yul\":354:720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:1145   */\n    tag_32:\n        /* \"#utility.yul\":892:896   */\n      0x00\n        /* \"#utility.yul\":930:932   */\n      0x20\n        /* \"#utility.yul\":919:928   */\n      dup3\n        /* \"#utility.yul\":915:933   */\n      add\n        /* \"#utility.yul\":907:933   */\n      swap1\n      pop\n        /* \"#utility.yul\":979:988   */\n      dup2\n        /* \"#utility.yul\":973:977   */\n      dup2\n        /* \"#utility.yul\":969:989   */\n      sub\n        /* \"#utility.yul\":965:966   */\n      0x00\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":950:967   */\n      add\n        /* \"#utility.yul\":943:990   */\n      mstore\n        /* \"#utility.yul\":1007:1138   */\n      tag_356\n        /* \"#utility.yul\":1133:1137   */\n      dup2\n        /* \"#utility.yul\":1007:1138   */\n      tag_299\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":999:1138   */\n      swap1\n      pop\n        /* \"#utility.yul\":726:1145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1151:1228   */\n    tag_300:\n        /* \"#utility.yul\":1188:1195   */\n      0x00\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1206:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1151:1228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1234:1352   */\n    tag_301:\n        /* \"#utility.yul\":1321:1345   */\n      tag_359\n        /* \"#utility.yul\":1339:1344   */\n      dup2\n        /* \"#utility.yul\":1321:1345   */\n      tag_300\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1316:1319   */\n      dup3\n        /* \"#utility.yul\":1309:1346   */\n      mstore\n        /* \"#utility.yul\":1234:1352   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1580   */\n    tag_37:\n        /* \"#utility.yul\":1451:1455   */\n      0x00\n        /* \"#utility.yul\":1489:1491   */\n      0x20\n        /* \"#utility.yul\":1478:1487   */\n      dup3\n        /* \"#utility.yul\":1474:1492   */\n      add\n        /* \"#utility.yul\":1466:1492   */\n      swap1\n      pop\n        /* \"#utility.yul\":1502:1573   */\n      tag_361\n        /* \"#utility.yul\":1570:1571   */\n      0x00\n        /* \"#utility.yul\":1559:1568   */\n      dup4\n        /* \"#utility.yul\":1555:1572   */\n      add\n        /* \"#utility.yul\":1546:1552   */\n      dup5\n        /* \"#utility.yul\":1502:1573   */\n      tag_301\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1358:1580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1784   */\n    tag_303:\n        /* \"#utility.yul\":1776:1777   */\n      0x00\n        /* \"#utility.yul\":1773:1774   */\n      0x00\n        /* \"#utility.yul\":1766:1778   */\n      revert\n        /* \"#utility.yul\":1913:2035   */\n    tag_305:\n        /* \"#utility.yul\":1986:2010   */\n      tag_366\n        /* \"#utility.yul\":2004:2009   */\n      dup2\n        /* \"#utility.yul\":1986:2010   */\n      tag_300\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1979:1984   */\n      dup2\n        /* \"#utility.yul\":1976:2011   */\n      eq\n        /* \"#utility.yul\":1966:2029   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2015:2027   */\n      revert\n        /* \"#utility.yul\":1966:2029   */\n    tag_367:\n        /* \"#utility.yul\":1913:2035   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2041:2180   */\n    tag_306:\n        /* \"#utility.yul\":2087:2092   */\n      0x00\n        /* \"#utility.yul\":2125:2131   */\n      dup2\n        /* \"#utility.yul\":2112:2132   */\n      calldataload\n        /* \"#utility.yul\":2103:2132   */\n      swap1\n      pop\n        /* \"#utility.yul\":2141:2174   */\n      tag_369\n        /* \"#utility.yul\":2168:2173   */\n      dup2\n        /* \"#utility.yul\":2141:2174   */\n      tag_305\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2041:2180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2186:2660   */\n    tag_45:\n        /* \"#utility.yul\":2254:2260   */\n      0x00\n        /* \"#utility.yul\":2262:2268   */\n      0x00\n        /* \"#utility.yul\":2311:2313   */\n      0x40\n        /* \"#utility.yul\":2299:2308   */\n      dup4\n        /* \"#utility.yul\":2290:2297   */\n      dup6\n        /* \"#utility.yul\":2286:2309   */\n      sub\n        /* \"#utility.yul\":2282:2314   */\n      slt\n        /* \"#utility.yul\":2279:2398   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2317:2396   */\n      tag_372\n      tag_303\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2279:2398   */\n    tag_371:\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2462:2515   */\n      tag_373\n        /* \"#utility.yul\":2507:2514   */\n      dup6\n        /* \"#utility.yul\":2498:2504   */\n      dup3\n        /* \"#utility.yul\":2487:2496   */\n      dup7\n        /* \"#utility.yul\":2483:2505   */\n      add\n        /* \"#utility.yul\":2462:2515   */\n      tag_306\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2452:2515   */\n      swap3\n      pop\n        /* \"#utility.yul\":2408:2525   */\n      pop\n        /* \"#utility.yul\":2564:2566   */\n      0x20\n        /* \"#utility.yul\":2590:2643   */\n      tag_374\n        /* \"#utility.yul\":2635:2642   */\n      dup6\n        /* \"#utility.yul\":2626:2632   */\n      dup3\n        /* \"#utility.yul\":2615:2624   */\n      dup7\n        /* \"#utility.yul\":2611:2633   */\n      add\n        /* \"#utility.yul\":2590:2643   */\n      tag_306\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2580:2643   */\n      swap2\n      pop\n        /* \"#utility.yul\":2535:2653   */\n      pop\n        /* \"#utility.yul\":2186:2660   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2666:2792   */\n    tag_307:\n        /* \"#utility.yul\":2703:2710   */\n      0x00\n        /* \"#utility.yul\":2743:2785   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2736:2741   */\n      dup3\n        /* \"#utility.yul\":2732:2786   */\n      and\n        /* \"#utility.yul\":2721:2786   */\n      swap1\n      pop\n        /* \"#utility.yul\":2666:2792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2798:2894   */\n    tag_308:\n        /* \"#utility.yul\":2835:2842   */\n      0x00\n        /* \"#utility.yul\":2864:2888   */\n      tag_377\n        /* \"#utility.yul\":2882:2887   */\n      dup3\n        /* \"#utility.yul\":2864:2888   */\n      tag_307\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2853:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2798:2894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2900:3022   */\n    tag_309:\n        /* \"#utility.yul\":2973:2997   */\n      tag_379\n        /* \"#utility.yul\":2991:2996   */\n      dup2\n        /* \"#utility.yul\":2973:2997   */\n      tag_308\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2966:2971   */\n      dup2\n        /* \"#utility.yul\":2963:2998   */\n      eq\n        /* \"#utility.yul\":2953:3016   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3012:3013   */\n      0x00\n        /* \"#utility.yul\":3009:3010   */\n      0x00\n        /* \"#utility.yul\":3002:3014   */\n      revert\n        /* \"#utility.yul\":2953:3016   */\n    tag_380:\n        /* \"#utility.yul\":2900:3022   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3028:3167   */\n    tag_310:\n        /* \"#utility.yul\":3074:3079   */\n      0x00\n        /* \"#utility.yul\":3112:3118   */\n      dup2\n        /* \"#utility.yul\":3099:3119   */\n      calldataload\n        /* \"#utility.yul\":3090:3119   */\n      swap1\n      pop\n        /* \"#utility.yul\":3128:3161   */\n      tag_382\n        /* \"#utility.yul\":3155:3160   */\n      dup2\n        /* \"#utility.yul\":3128:3161   */\n      tag_309\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3028:3167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3173:3502   */\n    tag_50:\n        /* \"#utility.yul\":3232:3238   */\n      0x00\n        /* \"#utility.yul\":3281:3283   */\n      0x20\n        /* \"#utility.yul\":3269:3278   */\n      dup3\n        /* \"#utility.yul\":3260:3267   */\n      dup5\n        /* \"#utility.yul\":3256:3279   */\n      sub\n        /* \"#utility.yul\":3252:3284   */\n      slt\n        /* \"#utility.yul\":3249:3368   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":3287:3366   */\n      tag_385\n      tag_303\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3249:3368   */\n    tag_384:\n        /* \"#utility.yul\":3407:3408   */\n      0x00\n        /* \"#utility.yul\":3432:3485   */\n      tag_386\n        /* \"#utility.yul\":3477:3484   */\n      dup5\n        /* \"#utility.yul\":3468:3474   */\n      dup3\n        /* \"#utility.yul\":3457:3466   */\n      dup6\n        /* \"#utility.yul\":3453:3475   */\n      add\n        /* \"#utility.yul\":3432:3485   */\n      tag_310\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3422:3485   */\n      swap2\n      pop\n        /* \"#utility.yul\":3378:3495   */\n      pop\n        /* \"#utility.yul\":3173:3502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3508:3837   */\n    tag_66:\n        /* \"#utility.yul\":3567:3573   */\n      0x00\n        /* \"#utility.yul\":3616:3618   */\n      0x20\n        /* \"#utility.yul\":3604:3613   */\n      dup3\n        /* \"#utility.yul\":3595:3602   */\n      dup5\n        /* \"#utility.yul\":3591:3614   */\n      sub\n        /* \"#utility.yul\":3587:3619   */\n      slt\n        /* \"#utility.yul\":3584:3703   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3622:3701   */\n      tag_389\n      tag_303\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3584:3703   */\n    tag_388:\n        /* \"#utility.yul\":3742:3743   */\n      0x00\n        /* \"#utility.yul\":3767:3820   */\n      tag_390\n        /* \"#utility.yul\":3812:3819   */\n      dup5\n        /* \"#utility.yul\":3803:3809   */\n      dup3\n        /* \"#utility.yul\":3792:3801   */\n      dup6\n        /* \"#utility.yul\":3788:3810   */\n      add\n        /* \"#utility.yul\":3767:3820   */\n      tag_306\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3757:3820   */\n      swap2\n      pop\n        /* \"#utility.yul\":3713:3830   */\n      pop\n        /* \"#utility.yul\":3508:3837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3843:3961   */\n    tag_311:\n        /* \"#utility.yul\":3930:3954   */\n      tag_392\n        /* \"#utility.yul\":3948:3953   */\n      dup2\n        /* \"#utility.yul\":3930:3954   */\n      tag_308\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3925:3928   */\n      dup3\n        /* \"#utility.yul\":3918:3955   */\n      mstore\n        /* \"#utility.yul\":3843:3961   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3967:4189   */\n    tag_83:\n        /* \"#utility.yul\":4060:4064   */\n      0x00\n        /* \"#utility.yul\":4098:4100   */\n      0x20\n        /* \"#utility.yul\":4087:4096   */\n      dup3\n        /* \"#utility.yul\":4083:4101   */\n      add\n        /* \"#utility.yul\":4075:4101   */\n      swap1\n      pop\n        /* \"#utility.yul\":4111:4182   */\n      tag_394\n        /* \"#utility.yul\":4179:4180   */\n      0x00\n        /* \"#utility.yul\":4168:4177   */\n      dup4\n        /* \"#utility.yul\":4164:4181   */\n      add\n        /* \"#utility.yul\":4155:4161   */\n      dup5\n        /* \"#utility.yul\":4111:4182   */\n      tag_311\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3967:4189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4195:4285   */\n    tag_312:\n        /* \"#utility.yul\":4229:4236   */\n      0x00\n        /* \"#utility.yul\":4272:4277   */\n      dup2\n        /* \"#utility.yul\":4265:4278   */\n      iszero\n        /* \"#utility.yul\":4258:4279   */\n      iszero\n        /* \"#utility.yul\":4247:4279   */\n      swap1\n      pop\n        /* \"#utility.yul\":4195:4285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4291:4400   */\n    tag_313:\n        /* \"#utility.yul\":4372:4393   */\n      tag_397\n        /* \"#utility.yul\":4387:4392   */\n      dup2\n        /* \"#utility.yul\":4372:4393   */\n      tag_312\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4367:4370   */\n      dup3\n        /* \"#utility.yul\":4360:4394   */\n      mstore\n        /* \"#utility.yul\":4291:4400   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4406:4616   */\n    tag_109:\n        /* \"#utility.yul\":4493:4497   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4520:4529   */\n      dup3\n        /* \"#utility.yul\":4516:4534   */\n      add\n        /* \"#utility.yul\":4508:4534   */\n      swap1\n      pop\n        /* \"#utility.yul\":4544:4609   */\n      tag_399\n        /* \"#utility.yul\":4606:4607   */\n      0x00\n        /* \"#utility.yul\":4595:4604   */\n      dup4\n        /* \"#utility.yul\":4591:4608   */\n      add\n        /* \"#utility.yul\":4582:4588   */\n      dup5\n        /* \"#utility.yul\":4544:4609   */\n      tag_313\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4406:4616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4622:4682   */\n    tag_314:\n        /* \"#utility.yul\":4650:4653   */\n      0x00\n        /* \"#utility.yul\":4671:4676   */\n      dup2\n        /* \"#utility.yul\":4664:4676   */\n      swap1\n      pop\n        /* \"#utility.yul\":4622:4682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4688:4830   */\n    tag_315:\n        /* \"#utility.yul\":4738:4747   */\n      0x00\n        /* \"#utility.yul\":4771:4824   */\n      tag_402\n        /* \"#utility.yul\":4789:4823   */\n      tag_403\n        /* \"#utility.yul\":4798:4822   */\n      tag_404\n        /* \"#utility.yul\":4816:4821   */\n      dup5\n        /* \"#utility.yul\":4798:4822   */\n      tag_307\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4789:4823   */\n      tag_314\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4771:4824   */\n      tag_307\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4758:4824   */\n      swap1\n      pop\n        /* \"#utility.yul\":4688:4830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4836:4962   */\n    tag_316:\n        /* \"#utility.yul\":4886:4895   */\n      0x00\n        /* \"#utility.yul\":4919:4956   */\n      tag_406\n        /* \"#utility.yul\":4950:4955   */\n      dup3\n        /* \"#utility.yul\":4919:4956   */\n      tag_315\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4906:4956   */\n      swap1\n      pop\n        /* \"#utility.yul\":4836:4962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5108   */\n    tag_317:\n        /* \"#utility.yul\":5032:5041   */\n      0x00\n        /* \"#utility.yul\":5065:5102   */\n      tag_408\n        /* \"#utility.yul\":5096:5101   */\n      dup3\n        /* \"#utility.yul\":5065:5102   */\n      tag_316\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5052:5102   */\n      swap1\n      pop\n        /* \"#utility.yul\":4968:5108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5114:5273   */\n    tag_318:\n        /* \"#utility.yul\":5215:5266   */\n      tag_410\n        /* \"#utility.yul\":5260:5265   */\n      dup2\n        /* \"#utility.yul\":5215:5266   */\n      tag_317\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5210:5213   */\n      dup3\n        /* \"#utility.yul\":5203:5267   */\n      mstore\n        /* \"#utility.yul\":5114:5273   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5279:5529   */\n    tag_127:\n        /* \"#utility.yul\":5386:5390   */\n      0x00\n        /* \"#utility.yul\":5424:5426   */\n      0x20\n        /* \"#utility.yul\":5413:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5427   */\n      add\n        /* \"#utility.yul\":5401:5427   */\n      swap1\n      pop\n        /* \"#utility.yul\":5437:5522   */\n      tag_412\n        /* \"#utility.yul\":5519:5520   */\n      0x00\n        /* \"#utility.yul\":5508:5517   */\n      dup4\n        /* \"#utility.yul\":5504:5521   */\n      add\n        /* \"#utility.yul\":5495:5501   */\n      dup5\n        /* \"#utility.yul\":5437:5522   */\n      tag_318\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5279:5529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5535:5766   */\n    tag_319:\n        /* \"#utility.yul\":5675:5709   */\n      0x53746f702074696d657374616d70206d75737420626520616674657220737461\n        /* \"#utility.yul\":5671:5672   */\n      0x00\n        /* \"#utility.yul\":5663:5669   */\n      dup3\n        /* \"#utility.yul\":5659:5673   */\n      add\n        /* \"#utility.yul\":5652:5710   */\n      mstore\n        /* \"#utility.yul\":5744:5758   */\n      0x72742074696d657374616d700000000000000000000000000000000000000000\n        /* \"#utility.yul\":5739:5741   */\n      0x20\n        /* \"#utility.yul\":5731:5737   */\n      dup3\n        /* \"#utility.yul\":5727:5742   */\n      add\n        /* \"#utility.yul\":5720:5759   */\n      mstore\n        /* \"#utility.yul\":5535:5766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5772:6138   */\n    tag_320:\n        /* \"#utility.yul\":5914:5917   */\n      0x00\n        /* \"#utility.yul\":5935:6002   */\n      tag_415\n        /* \"#utility.yul\":5999:6001   */\n      0x2c\n        /* \"#utility.yul\":5994:5997   */\n      dup4\n        /* \"#utility.yul\":5935:6002   */\n      tag_297\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5928:6002   */\n      swap2\n      pop\n        /* \"#utility.yul\":6011:6104   */\n      tag_416\n        /* \"#utility.yul\":6100:6103   */\n      dup3\n        /* \"#utility.yul\":6011:6104   */\n      tag_319\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6129:6131   */\n      0x40\n        /* \"#utility.yul\":6124:6127   */\n      dup3\n        /* \"#utility.yul\":6120:6132   */\n      add\n        /* \"#utility.yul\":6113:6132   */\n      swap1\n      pop\n        /* \"#utility.yul\":5772:6138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6144:6563   */\n    tag_138:\n        /* \"#utility.yul\":6310:6314   */\n      0x00\n        /* \"#utility.yul\":6348:6350   */\n      0x20\n        /* \"#utility.yul\":6337:6346   */\n      dup3\n        /* \"#utility.yul\":6333:6351   */\n      add\n        /* \"#utility.yul\":6325:6351   */\n      swap1\n      pop\n        /* \"#utility.yul\":6397:6406   */\n      dup2\n        /* \"#utility.yul\":6391:6395   */\n      dup2\n        /* \"#utility.yul\":6387:6407   */\n      sub\n        /* \"#utility.yul\":6383:6384   */\n      0x00\n        /* \"#utility.yul\":6372:6381   */\n      dup4\n        /* \"#utility.yul\":6368:6385   */\n      add\n        /* \"#utility.yul\":6361:6408   */\n      mstore\n        /* \"#utility.yul\":6425:6556   */\n      tag_418\n        /* \"#utility.yul\":6551:6555   */\n      dup2\n        /* \"#utility.yul\":6425:6556   */\n      tag_320\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6417:6556   */\n      swap1\n      pop\n        /* \"#utility.yul\":6144:6563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6569:6901   */\n    tag_140:\n        /* \"#utility.yul\":6690:6694   */\n      0x00\n        /* \"#utility.yul\":6728:6730   */\n      0x40\n        /* \"#utility.yul\":6717:6726   */\n      dup3\n        /* \"#utility.yul\":6713:6731   */\n      add\n        /* \"#utility.yul\":6705:6731   */\n      swap1\n      pop\n        /* \"#utility.yul\":6741:6812   */\n      tag_420\n        /* \"#utility.yul\":6809:6810   */\n      0x00\n        /* \"#utility.yul\":6798:6807   */\n      dup4\n        /* \"#utility.yul\":6794:6811   */\n      add\n        /* \"#utility.yul\":6785:6791   */\n      dup6\n        /* \"#utility.yul\":6741:6812   */\n      tag_301\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6822:6894   */\n      tag_421\n        /* \"#utility.yul\":6890:6892   */\n      0x20\n        /* \"#utility.yul\":6879:6888   */\n      dup4\n        /* \"#utility.yul\":6875:6893   */\n      add\n        /* \"#utility.yul\":6866:6872   */\n      dup5\n        /* \"#utility.yul\":6822:6894   */\n      tag_301\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6569:6901   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6907:7050   */\n    tag_321:\n        /* \"#utility.yul\":6964:6969   */\n      0x00\n        /* \"#utility.yul\":6995:7001   */\n      dup2\n        /* \"#utility.yul\":6989:7002   */\n      mload\n        /* \"#utility.yul\":6980:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":7011:7044   */\n      tag_423\n        /* \"#utility.yul\":7038:7043   */\n      dup2\n        /* \"#utility.yul\":7011:7044   */\n      tag_305\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6907:7050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7056:7407   */\n    tag_148:\n        /* \"#utility.yul\":7126:7132   */\n      0x00\n        /* \"#utility.yul\":7175:7177   */\n      0x20\n        /* \"#utility.yul\":7163:7172   */\n      dup3\n        /* \"#utility.yul\":7154:7161   */\n      dup5\n        /* \"#utility.yul\":7150:7173   */\n      sub\n        /* \"#utility.yul\":7146:7178   */\n      slt\n        /* \"#utility.yul\":7143:7262   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":7181:7260   */\n      tag_426\n      tag_303\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7143:7262   */\n    tag_425:\n        /* \"#utility.yul\":7301:7302   */\n      0x00\n        /* \"#utility.yul\":7326:7390   */\n      tag_427\n        /* \"#utility.yul\":7382:7389   */\n      dup5\n        /* \"#utility.yul\":7373:7379   */\n      dup3\n        /* \"#utility.yul\":7362:7371   */\n      dup6\n        /* \"#utility.yul\":7358:7380   */\n      add\n        /* \"#utility.yul\":7326:7390   */\n      tag_321\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7316:7390   */\n      swap2\n      pop\n        /* \"#utility.yul\":7272:7400   */\n      pop\n        /* \"#utility.yul\":7056:7407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7413:7584   */\n    tag_322:\n        /* \"#utility.yul\":7553:7576   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":7549:7550   */\n      0x00\n        /* \"#utility.yul\":7541:7547   */\n      dup3\n        /* \"#utility.yul\":7537:7551   */\n      add\n        /* \"#utility.yul\":7530:7577   */\n      mstore\n        /* \"#utility.yul\":7413:7584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7956   */\n    tag_323:\n        /* \"#utility.yul\":7732:7735   */\n      0x00\n        /* \"#utility.yul\":7753:7820   */\n      tag_430\n        /* \"#utility.yul\":7817:7819   */\n      0x15\n        /* \"#utility.yul\":7812:7815   */\n      dup4\n        /* \"#utility.yul\":7753:7820   */\n      tag_297\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7746:7820   */\n      swap2\n      pop\n        /* \"#utility.yul\":7829:7922   */\n      tag_431\n        /* \"#utility.yul\":7918:7921   */\n      dup3\n        /* \"#utility.yul\":7829:7922   */\n      tag_322\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7947:7949   */\n      0x20\n        /* \"#utility.yul\":7942:7945   */\n      dup3\n        /* \"#utility.yul\":7938:7950   */\n      add\n        /* \"#utility.yul\":7931:7950   */\n      swap1\n      pop\n        /* \"#utility.yul\":7590:7956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7962:8381   */\n    tag_151:\n        /* \"#utility.yul\":8128:8132   */\n      0x00\n        /* \"#utility.yul\":8166:8168   */\n      0x20\n        /* \"#utility.yul\":8155:8164   */\n      dup3\n        /* \"#utility.yul\":8151:8169   */\n      add\n        /* \"#utility.yul\":8143:8169   */\n      swap1\n      pop\n        /* \"#utility.yul\":8215:8224   */\n      dup2\n        /* \"#utility.yul\":8209:8213   */\n      dup2\n        /* \"#utility.yul\":8205:8225   */\n      sub\n        /* \"#utility.yul\":8201:8202   */\n      0x00\n        /* \"#utility.yul\":8190:8199   */\n      dup4\n        /* \"#utility.yul\":8186:8203   */\n      add\n        /* \"#utility.yul\":8179:8226   */\n      mstore\n        /* \"#utility.yul\":8243:8374   */\n      tag_433\n        /* \"#utility.yul\":8369:8373   */\n      dup2\n        /* \"#utility.yul\":8243:8374   */\n      tag_323\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8235:8374   */\n      swap1\n      pop\n        /* \"#utility.yul\":7962:8381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8387:8611   */\n    tag_324:\n        /* \"#utility.yul\":8527:8561   */\n      0x596f75206861766520616c726561647920636c61696d656420796f7572206169\n        /* \"#utility.yul\":8523:8524   */\n      0x00\n        /* \"#utility.yul\":8515:8521   */\n      dup3\n        /* \"#utility.yul\":8511:8525   */\n      add\n        /* \"#utility.yul\":8504:8562   */\n      mstore\n        /* \"#utility.yul\":8596:8603   */\n      0x7264726f70000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8591:8593   */\n      0x20\n        /* \"#utility.yul\":8583:8589   */\n      dup3\n        /* \"#utility.yul\":8579:8594   */\n      add\n        /* \"#utility.yul\":8572:8604   */\n      mstore\n        /* \"#utility.yul\":8387:8611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8617:8983   */\n    tag_325:\n        /* \"#utility.yul\":8759:8762   */\n      0x00\n        /* \"#utility.yul\":8780:8847   */\n      tag_436\n        /* \"#utility.yul\":8844:8846   */\n      0x25\n        /* \"#utility.yul\":8839:8842   */\n      dup4\n        /* \"#utility.yul\":8780:8847   */\n      tag_297\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8773:8847   */\n      swap2\n      pop\n        /* \"#utility.yul\":8856:8949   */\n      tag_437\n        /* \"#utility.yul\":8945:8948   */\n      dup3\n        /* \"#utility.yul\":8856:8949   */\n      tag_324\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8974:8976   */\n      0x40\n        /* \"#utility.yul\":8969:8972   */\n      dup3\n        /* \"#utility.yul\":8965:8977   */\n      add\n        /* \"#utility.yul\":8958:8977   */\n      swap1\n      pop\n        /* \"#utility.yul\":8617:8983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8989:9408   */\n    tag_165:\n        /* \"#utility.yul\":9155:9159   */\n      0x00\n        /* \"#utility.yul\":9193:9195   */\n      0x20\n        /* \"#utility.yul\":9182:9191   */\n      dup3\n        /* \"#utility.yul\":9178:9196   */\n      add\n        /* \"#utility.yul\":9170:9196   */\n      swap1\n      pop\n        /* \"#utility.yul\":9242:9251   */\n      dup2\n        /* \"#utility.yul\":9236:9240   */\n      dup2\n        /* \"#utility.yul\":9232:9252   */\n      sub\n        /* \"#utility.yul\":9228:9229   */\n      0x00\n        /* \"#utility.yul\":9217:9226   */\n      dup4\n        /* \"#utility.yul\":9213:9230   */\n      add\n        /* \"#utility.yul\":9206:9253   */\n      mstore\n        /* \"#utility.yul\":9270:9401   */\n      tag_439\n        /* \"#utility.yul\":9396:9400   */\n      dup2\n        /* \"#utility.yul\":9270:9401   */\n      tag_325\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9262:9401   */\n      swap1\n      pop\n        /* \"#utility.yul\":8989:9408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9414:9591   */\n    tag_326:\n        /* \"#utility.yul\":9554:9583   */\n      0x41697264726f7020686173206e6f742073746172746564207965740000000000\n        /* \"#utility.yul\":9550:9551   */\n      0x00\n        /* \"#utility.yul\":9542:9548   */\n      dup3\n        /* \"#utility.yul\":9538:9552   */\n      add\n        /* \"#utility.yul\":9531:9584   */\n      mstore\n        /* \"#utility.yul\":9414:9591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9597:9963   */\n    tag_327:\n        /* \"#utility.yul\":9739:9742   */\n      0x00\n        /* \"#utility.yul\":9760:9827   */\n      tag_442\n        /* \"#utility.yul\":9824:9826   */\n      0x1b\n        /* \"#utility.yul\":9819:9822   */\n      dup4\n        /* \"#utility.yul\":9760:9827   */\n      tag_297\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9753:9827   */\n      swap2\n      pop\n        /* \"#utility.yul\":9836:9929   */\n      tag_443\n        /* \"#utility.yul\":9925:9928   */\n      dup3\n        /* \"#utility.yul\":9836:9929   */\n      tag_326\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":9954:9956   */\n      0x20\n        /* \"#utility.yul\":9949:9952   */\n      dup3\n        /* \"#utility.yul\":9945:9957   */\n      add\n        /* \"#utility.yul\":9938:9957   */\n      swap1\n      pop\n        /* \"#utility.yul\":9597:9963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9969:10388   */\n    tag_168:\n        /* \"#utility.yul\":10135:10139   */\n      0x00\n        /* \"#utility.yul\":10173:10175   */\n      0x20\n        /* \"#utility.yul\":10162:10171   */\n      dup3\n        /* \"#utility.yul\":10158:10176   */\n      add\n        /* \"#utility.yul\":10150:10176   */\n      swap1\n      pop\n        /* \"#utility.yul\":10222:10231   */\n      dup2\n        /* \"#utility.yul\":10216:10220   */\n      dup2\n        /* \"#utility.yul\":10212:10232   */\n      sub\n        /* \"#utility.yul\":10208:10209   */\n      0x00\n        /* \"#utility.yul\":10197:10206   */\n      dup4\n        /* \"#utility.yul\":10193:10210   */\n      add\n        /* \"#utility.yul\":10186:10233   */\n      mstore\n        /* \"#utility.yul\":10250:10381   */\n      tag_445\n        /* \"#utility.yul\":10376:10380   */\n      dup2\n        /* \"#utility.yul\":10250:10381   */\n      tag_327\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10242:10381   */\n      swap1\n      pop\n        /* \"#utility.yul\":9969:10388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10394:10569   */\n    tag_328:\n        /* \"#utility.yul\":10534:10561   */\n      0x41697264726f702068617320616c726561647920656e64656400000000000000\n        /* \"#utility.yul\":10530:10531   */\n      0x00\n        /* \"#utility.yul\":10522:10528   */\n      dup3\n        /* \"#utility.yul\":10518:10532   */\n      add\n        /* \"#utility.yul\":10511:10562   */\n      mstore\n        /* \"#utility.yul\":10394:10569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10575:10941   */\n    tag_329:\n        /* \"#utility.yul\":10717:10720   */\n      0x00\n        /* \"#utility.yul\":10738:10805   */\n      tag_448\n        /* \"#utility.yul\":10802:10804   */\n      0x19\n        /* \"#utility.yul\":10797:10800   */\n      dup4\n        /* \"#utility.yul\":10738:10805   */\n      tag_297\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10731:10805   */\n      swap2\n      pop\n        /* \"#utility.yul\":10814:10907   */\n      tag_449\n        /* \"#utility.yul\":10903:10906   */\n      dup3\n        /* \"#utility.yul\":10814:10907   */\n      tag_328\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10932:10934   */\n      0x20\n        /* \"#utility.yul\":10927:10930   */\n      dup3\n        /* \"#utility.yul\":10923:10935   */\n      add\n        /* \"#utility.yul\":10916:10935   */\n      swap1\n      pop\n        /* \"#utility.yul\":10575:10941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10947:11366   */\n    tag_171:\n        /* \"#utility.yul\":11113:11117   */\n      0x00\n        /* \"#utility.yul\":11151:11153   */\n      0x20\n        /* \"#utility.yul\":11140:11149   */\n      dup3\n        /* \"#utility.yul\":11136:11154   */\n      add\n        /* \"#utility.yul\":11128:11154   */\n      swap1\n      pop\n        /* \"#utility.yul\":11200:11209   */\n      dup2\n        /* \"#utility.yul\":11194:11198   */\n      dup2\n        /* \"#utility.yul\":11190:11210   */\n      sub\n        /* \"#utility.yul\":11186:11187   */\n      0x00\n        /* \"#utility.yul\":11175:11184   */\n      dup4\n        /* \"#utility.yul\":11171:11188   */\n      add\n        /* \"#utility.yul\":11164:11211   */\n      mstore\n        /* \"#utility.yul\":11228:11359   */\n      tag_451\n        /* \"#utility.yul\":11354:11358   */\n      dup2\n        /* \"#utility.yul\":11228:11359   */\n      tag_329\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11220:11359   */\n      swap1\n      pop\n        /* \"#utility.yul\":10947:11366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11372:11595   */\n    tag_330:\n        /* \"#utility.yul\":11512:11546   */\n      0x496e76616c69642066656520616d6f756e74206f722061697264726f7020616d\n        /* \"#utility.yul\":11508:11509   */\n      0x00\n        /* \"#utility.yul\":11500:11506   */\n      dup3\n        /* \"#utility.yul\":11496:11510   */\n      add\n        /* \"#utility.yul\":11489:11547   */\n      mstore\n        /* \"#utility.yul\":11581:11587   */\n      0x6f756e7400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11576:11578   */\n      0x20\n        /* \"#utility.yul\":11568:11574   */\n      dup3\n        /* \"#utility.yul\":11564:11579   */\n      add\n        /* \"#utility.yul\":11557:11588   */\n      mstore\n        /* \"#utility.yul\":11372:11595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11601:11967   */\n    tag_331:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11764:11831   */\n      tag_454\n        /* \"#utility.yul\":11828:11830   */\n      0x24\n        /* \"#utility.yul\":11823:11826   */\n      dup4\n        /* \"#utility.yul\":11764:11831   */\n      tag_297\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11757:11831   */\n      swap2\n      pop\n        /* \"#utility.yul\":11840:11933   */\n      tag_455\n        /* \"#utility.yul\":11929:11932   */\n      dup3\n        /* \"#utility.yul\":11840:11933   */\n      tag_330\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11958:11960   */\n      0x40\n        /* \"#utility.yul\":11953:11956   */\n      dup3\n        /* \"#utility.yul\":11949:11961   */\n      add\n        /* \"#utility.yul\":11942:11961   */\n      swap1\n      pop\n        /* \"#utility.yul\":11601:11967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11973:12392   */\n    tag_176:\n        /* \"#utility.yul\":12139:12143   */\n      0x00\n        /* \"#utility.yul\":12177:12179   */\n      0x20\n        /* \"#utility.yul\":12166:12175   */\n      dup3\n        /* \"#utility.yul\":12162:12180   */\n      add\n        /* \"#utility.yul\":12154:12180   */\n      swap1\n      pop\n        /* \"#utility.yul\":12226:12235   */\n      dup2\n        /* \"#utility.yul\":12220:12224   */\n      dup2\n        /* \"#utility.yul\":12216:12236   */\n      sub\n        /* \"#utility.yul\":12212:12213   */\n      0x00\n        /* \"#utility.yul\":12201:12210   */\n      dup4\n        /* \"#utility.yul\":12197:12214   */\n      add\n        /* \"#utility.yul\":12190:12237   */\n      mstore\n        /* \"#utility.yul\":12254:12385   */\n      tag_457\n        /* \"#utility.yul\":12380:12384   */\n      dup2\n        /* \"#utility.yul\":12254:12385   */\n      tag_331\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12246:12385   */\n      swap1\n      pop\n        /* \"#utility.yul\":11973:12392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12398:12578   */\n    tag_332:\n        /* \"#utility.yul\":12446:12523   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12443:12444   */\n      0x00\n        /* \"#utility.yul\":12436:12524   */\n      mstore\n        /* \"#utility.yul\":12543:12547   */\n      0x11\n        /* \"#utility.yul\":12540:12541   */\n      0x04\n        /* \"#utility.yul\":12533:12548   */\n      mstore\n        /* \"#utility.yul\":12567:12571   */\n      0x24\n        /* \"#utility.yul\":12564:12565   */\n      0x00\n        /* \"#utility.yul\":12557:12572   */\n      revert\n        /* \"#utility.yul\":12584:12778   */\n    tag_178:\n        /* \"#utility.yul\":12624:12628   */\n      0x00\n        /* \"#utility.yul\":12644:12664   */\n      tag_460\n        /* \"#utility.yul\":12662:12663   */\n      dup3\n        /* \"#utility.yul\":12644:12664   */\n      tag_300\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12639:12664   */\n      swap2\n      pop\n        /* \"#utility.yul\":12678:12698   */\n      tag_461\n        /* \"#utility.yul\":12696:12697   */\n      dup4\n        /* \"#utility.yul\":12678:12698   */\n      tag_300\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12673:12698   */\n      swap3\n      pop\n        /* \"#utility.yul\":12722:12723   */\n      dup3\n        /* \"#utility.yul\":12719:12720   */\n      dup3\n        /* \"#utility.yul\":12715:12724   */\n      sub\n        /* \"#utility.yul\":12707:12724   */\n      swap1\n      pop\n        /* \"#utility.yul\":12746:12747   */\n      dup2\n        /* \"#utility.yul\":12740:12744   */\n      dup2\n        /* \"#utility.yul\":12737:12748   */\n      gt\n        /* \"#utility.yul\":12734:12771   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":12751:12769   */\n      tag_463\n      tag_332\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12734:12771   */\n    tag_462:\n        /* \"#utility.yul\":12584:12778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12784:12951   */\n    tag_333:\n        /* \"#utility.yul\":12924:12943   */\n      0x43616e6e6f742073656c662d7265666572000000000000000000000000000000\n        /* \"#utility.yul\":12920:12921   */\n      0x00\n        /* \"#utility.yul\":12912:12918   */\n      dup3\n        /* \"#utility.yul\":12908:12922   */\n      add\n        /* \"#utility.yul\":12901:12944   */\n      mstore\n        /* \"#utility.yul\":12784:12951   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12957:13323   */\n    tag_334:\n        /* \"#utility.yul\":13099:13102   */\n      0x00\n        /* \"#utility.yul\":13120:13187   */\n      tag_466\n        /* \"#utility.yul\":13184:13186   */\n      0x11\n        /* \"#utility.yul\":13179:13182   */\n      dup4\n        /* \"#utility.yul\":13120:13187   */\n      tag_297\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13113:13187   */\n      swap2\n      pop\n        /* \"#utility.yul\":13196:13289   */\n      tag_467\n        /* \"#utility.yul\":13285:13288   */\n      dup3\n        /* \"#utility.yul\":13196:13289   */\n      tag_333\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13314:13316   */\n      0x20\n        /* \"#utility.yul\":13309:13312   */\n      dup3\n        /* \"#utility.yul\":13305:13317   */\n      add\n        /* \"#utility.yul\":13298:13317   */\n      swap1\n      pop\n        /* \"#utility.yul\":12957:13323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13329:13748   */\n    tag_182:\n        /* \"#utility.yul\":13495:13499   */\n      0x00\n        /* \"#utility.yul\":13533:13535   */\n      0x20\n        /* \"#utility.yul\":13522:13531   */\n      dup3\n        /* \"#utility.yul\":13518:13536   */\n      add\n        /* \"#utility.yul\":13510:13536   */\n      swap1\n      pop\n        /* \"#utility.yul\":13582:13591   */\n      dup2\n        /* \"#utility.yul\":13576:13580   */\n      dup2\n        /* \"#utility.yul\":13572:13592   */\n      sub\n        /* \"#utility.yul\":13568:13569   */\n      0x00\n        /* \"#utility.yul\":13557:13566   */\n      dup4\n        /* \"#utility.yul\":13553:13570   */\n      add\n        /* \"#utility.yul\":13546:13593   */\n      mstore\n        /* \"#utility.yul\":13610:13741   */\n      tag_469\n        /* \"#utility.yul\":13736:13740   */\n      dup2\n        /* \"#utility.yul\":13610:13741   */\n      tag_334\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13602:13741   */\n      swap1\n      pop\n        /* \"#utility.yul\":13329:13748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13754:13920   */\n    tag_335:\n        /* \"#utility.yul\":13894:13912   */\n      0x496e76616c696420726566657272657200000000000000000000000000000000\n        /* \"#utility.yul\":13890:13891   */\n      0x00\n        /* \"#utility.yul\":13882:13888   */\n      dup3\n        /* \"#utility.yul\":13878:13892   */\n      add\n        /* \"#utility.yul\":13871:13913   */\n      mstore\n        /* \"#utility.yul\":13754:13920   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13926:14292   */\n    tag_336:\n        /* \"#utility.yul\":14068:14071   */\n      0x00\n        /* \"#utility.yul\":14089:14156   */\n      tag_472\n        /* \"#utility.yul\":14153:14155   */\n      0x10\n        /* \"#utility.yul\":14148:14151   */\n      dup4\n        /* \"#utility.yul\":14089:14156   */\n      tag_297\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14082:14156   */\n      swap2\n      pop\n        /* \"#utility.yul\":14165:14258   */\n      tag_473\n        /* \"#utility.yul\":14254:14257   */\n      dup3\n        /* \"#utility.yul\":14165:14258   */\n      tag_335\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14283:14285   */\n      0x20\n        /* \"#utility.yul\":14278:14281   */\n      dup3\n        /* \"#utility.yul\":14274:14286   */\n      add\n        /* \"#utility.yul\":14267:14286   */\n      swap1\n      pop\n        /* \"#utility.yul\":13926:14292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14298:14717   */\n    tag_185:\n        /* \"#utility.yul\":14464:14468   */\n      0x00\n        /* \"#utility.yul\":14502:14504   */\n      0x20\n        /* \"#utility.yul\":14491:14500   */\n      dup3\n        /* \"#utility.yul\":14487:14505   */\n      add\n        /* \"#utility.yul\":14479:14505   */\n      swap1\n      pop\n        /* \"#utility.yul\":14551:14560   */\n      dup2\n        /* \"#utility.yul\":14545:14549   */\n      dup2\n        /* \"#utility.yul\":14541:14561   */\n      sub\n        /* \"#utility.yul\":14537:14538   */\n      0x00\n        /* \"#utility.yul\":14526:14535   */\n      dup4\n        /* \"#utility.yul\":14522:14539   */\n      add\n        /* \"#utility.yul\":14515:14562   */\n      mstore\n        /* \"#utility.yul\":14579:14710   */\n      tag_475\n        /* \"#utility.yul\":14705:14709   */\n      dup2\n        /* \"#utility.yul\":14579:14710   */\n      tag_336\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14571:14710   */\n      swap1\n      pop\n        /* \"#utility.yul\":14298:14717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14723:14901   */\n    tag_337:\n        /* \"#utility.yul\":14863:14893   */\n      0x526566657272657220686173206e6f742079657420636c61696d656400000000\n        /* \"#utility.yul\":14859:14860   */\n      0x00\n        /* \"#utility.yul\":14851:14857   */\n      dup3\n        /* \"#utility.yul\":14847:14861   */\n      add\n        /* \"#utility.yul\":14840:14894   */\n      mstore\n        /* \"#utility.yul\":14723:14901   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14907:15273   */\n    tag_338:\n        /* \"#utility.yul\":15049:15052   */\n      0x00\n        /* \"#utility.yul\":15070:15137   */\n      tag_478\n        /* \"#utility.yul\":15134:15136   */\n      0x1c\n        /* \"#utility.yul\":15129:15132   */\n      dup4\n        /* \"#utility.yul\":15070:15137   */\n      tag_297\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":15063:15137   */\n      swap2\n      pop\n        /* \"#utility.yul\":15146:15239   */\n      tag_479\n        /* \"#utility.yul\":15235:15238   */\n      dup3\n        /* \"#utility.yul\":15146:15239   */\n      tag_337\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15264:15266   */\n      0x20\n        /* \"#utility.yul\":15259:15262   */\n      dup3\n        /* \"#utility.yul\":15255:15267   */\n      add\n        /* \"#utility.yul\":15248:15267   */\n      swap1\n      pop\n        /* \"#utility.yul\":14907:15273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15279:15698   */\n    tag_188:\n        /* \"#utility.yul\":15445:15449   */\n      0x00\n        /* \"#utility.yul\":15483:15485   */\n      0x20\n        /* \"#utility.yul\":15472:15481   */\n      dup3\n        /* \"#utility.yul\":15468:15486   */\n      add\n        /* \"#utility.yul\":15460:15486   */\n      swap1\n      pop\n        /* \"#utility.yul\":15532:15541   */\n      dup2\n        /* \"#utility.yul\":15526:15530   */\n      dup2\n        /* \"#utility.yul\":15522:15542   */\n      sub\n        /* \"#utility.yul\":15518:15519   */\n      0x00\n        /* \"#utility.yul\":15507:15516   */\n      dup4\n        /* \"#utility.yul\":15503:15520   */\n      add\n        /* \"#utility.yul\":15496:15543   */\n      mstore\n        /* \"#utility.yul\":15560:15691   */\n      tag_481\n        /* \"#utility.yul\":15686:15690   */\n      dup2\n        /* \"#utility.yul\":15560:15691   */\n      tag_338\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":15552:15691   */\n      swap1\n      pop\n        /* \"#utility.yul\":15279:15698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15704:15932   */\n    tag_339:\n        /* \"#utility.yul\":15844:15878   */\n      0x5265666572726572206861732072656163686564207468656972207265666572\n        /* \"#utility.yul\":15840:15841   */\n      0x00\n        /* \"#utility.yul\":15832:15838   */\n      dup3\n        /* \"#utility.yul\":15828:15842   */\n      add\n        /* \"#utility.yul\":15821:15879   */\n      mstore\n        /* \"#utility.yul\":15913:15924   */\n      0x72616c206c696d69740000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15908:15910   */\n      0x20\n        /* \"#utility.yul\":15900:15906   */\n      dup3\n        /* \"#utility.yul\":15896:15911   */\n      add\n        /* \"#utility.yul\":15889:15925   */\n      mstore\n        /* \"#utility.yul\":15704:15932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15938:16304   */\n    tag_340:\n        /* \"#utility.yul\":16080:16083   */\n      0x00\n        /* \"#utility.yul\":16101:16168   */\n      tag_484\n        /* \"#utility.yul\":16165:16167   */\n      0x29\n        /* \"#utility.yul\":16160:16163   */\n      dup4\n        /* \"#utility.yul\":16101:16168   */\n      tag_297\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":16094:16168   */\n      swap2\n      pop\n        /* \"#utility.yul\":16177:16270   */\n      tag_485\n        /* \"#utility.yul\":16266:16269   */\n      dup3\n        /* \"#utility.yul\":16177:16270   */\n      tag_339\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16295:16297   */\n      0x40\n        /* \"#utility.yul\":16290:16293   */\n      dup3\n        /* \"#utility.yul\":16286:16298   */\n      add\n        /* \"#utility.yul\":16279:16298   */\n      swap1\n      pop\n        /* \"#utility.yul\":15938:16304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16310:16729   */\n    tag_191:\n        /* \"#utility.yul\":16476:16480   */\n      0x00\n        /* \"#utility.yul\":16514:16516   */\n      0x20\n        /* \"#utility.yul\":16503:16512   */\n      dup3\n        /* \"#utility.yul\":16499:16517   */\n      add\n        /* \"#utility.yul\":16491:16517   */\n      swap1\n      pop\n        /* \"#utility.yul\":16563:16572   */\n      dup2\n        /* \"#utility.yul\":16557:16561   */\n      dup2\n        /* \"#utility.yul\":16553:16573   */\n      sub\n        /* \"#utility.yul\":16549:16550   */\n      0x00\n        /* \"#utility.yul\":16538:16547   */\n      dup4\n        /* \"#utility.yul\":16534:16551   */\n      add\n        /* \"#utility.yul\":16527:16574   */\n      mstore\n        /* \"#utility.yul\":16591:16722   */\n      tag_487\n        /* \"#utility.yul\":16717:16721   */\n      dup2\n        /* \"#utility.yul\":16591:16722   */\n      tag_340\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16583:16722   */\n      swap1\n      pop\n        /* \"#utility.yul\":16310:16729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16735:16926   */\n    tag_193:\n        /* \"#utility.yul\":16775:16778   */\n      0x00\n        /* \"#utility.yul\":16794:16814   */\n      tag_489\n        /* \"#utility.yul\":16812:16813   */\n      dup3\n        /* \"#utility.yul\":16794:16814   */\n      tag_300\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16789:16814   */\n      swap2\n      pop\n        /* \"#utility.yul\":16828:16848   */\n      tag_490\n        /* \"#utility.yul\":16846:16847   */\n      dup4\n        /* \"#utility.yul\":16828:16848   */\n      tag_300\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":16823:16848   */\n      swap3\n      pop\n        /* \"#utility.yul\":16871:16872   */\n      dup3\n        /* \"#utility.yul\":16868:16869   */\n      dup3\n        /* \"#utility.yul\":16864:16873   */\n      add\n        /* \"#utility.yul\":16857:16873   */\n      swap1\n      pop\n        /* \"#utility.yul\":16892:16895   */\n      dup1\n        /* \"#utility.yul\":16889:16890   */\n      dup3\n        /* \"#utility.yul\":16886:16896   */\n      gt\n        /* \"#utility.yul\":16883:16919   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":16899:16917   */\n      tag_492\n      tag_332\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16883:16919   */\n    tag_491:\n        /* \"#utility.yul\":16735:16926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16932:17165   */\n    tag_195:\n        /* \"#utility.yul\":16971:16974   */\n      0x00\n        /* \"#utility.yul\":16994:17018   */\n      tag_494\n        /* \"#utility.yul\":17012:17017   */\n      dup3\n        /* \"#utility.yul\":16994:17018   */\n      tag_300\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":16985:17018   */\n      swap2\n      pop\n        /* \"#utility.yul\":17040:17106   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17033:17038   */\n      dup3\n        /* \"#utility.yul\":17030:17107   */\n      sub\n        /* \"#utility.yul\":17027:17130   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":17110:17128   */\n      tag_496\n      tag_332\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":17027:17130   */\n    tag_495:\n        /* \"#utility.yul\":17157:17158   */\n      0x01\n        /* \"#utility.yul\":17150:17155   */\n      dup3\n        /* \"#utility.yul\":17146:17159   */\n      add\n        /* \"#utility.yul\":17139:17159   */\n      swap1\n      pop\n        /* \"#utility.yul\":16932:17165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17171:17351   */\n    tag_341:\n        /* \"#utility.yul\":17311:17343   */\n      0x546f74616c2061697264726f7020737570706c79206578686175737465640000\n        /* \"#utility.yul\":17307:17308   */\n      0x00\n        /* \"#utility.yul\":17299:17305   */\n      dup3\n        /* \"#utility.yul\":17295:17309   */\n      add\n        /* \"#utility.yul\":17288:17344   */\n      mstore\n        /* \"#utility.yul\":17171:17351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17357:17723   */\n    tag_342:\n        /* \"#utility.yul\":17499:17502   */\n      0x00\n        /* \"#utility.yul\":17520:17587   */\n      tag_499\n        /* \"#utility.yul\":17584:17586   */\n      0x1e\n        /* \"#utility.yul\":17579:17582   */\n      dup4\n        /* \"#utility.yul\":17520:17587   */\n      tag_297\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":17513:17587   */\n      swap2\n      pop\n        /* \"#utility.yul\":17596:17689   */\n      tag_500\n        /* \"#utility.yul\":17685:17688   */\n      dup3\n        /* \"#utility.yul\":17596:17689   */\n      tag_341\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":17714:17716   */\n      0x20\n        /* \"#utility.yul\":17709:17712   */\n      dup3\n        /* \"#utility.yul\":17705:17717   */\n      add\n        /* \"#utility.yul\":17698:17717   */\n      swap1\n      pop\n        /* \"#utility.yul\":17357:17723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17729:18148   */\n    tag_199:\n        /* \"#utility.yul\":17895:17899   */\n      0x00\n        /* \"#utility.yul\":17933:17935   */\n      0x20\n        /* \"#utility.yul\":17922:17931   */\n      dup3\n        /* \"#utility.yul\":17918:17936   */\n      add\n        /* \"#utility.yul\":17910:17936   */\n      swap1\n      pop\n        /* \"#utility.yul\":17982:17991   */\n      dup2\n        /* \"#utility.yul\":17976:17980   */\n      dup2\n        /* \"#utility.yul\":17972:17992   */\n      sub\n        /* \"#utility.yul\":17968:17969   */\n      0x00\n        /* \"#utility.yul\":17957:17966   */\n      dup4\n        /* \"#utility.yul\":17953:17970   */\n      add\n        /* \"#utility.yul\":17946:17993   */\n      mstore\n        /* \"#utility.yul\":18010:18141   */\n      tag_502\n        /* \"#utility.yul\":18136:18140   */\n      dup2\n        /* \"#utility.yul\":18010:18141   */\n      tag_342\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":18002:18141   */\n      swap1\n      pop\n        /* \"#utility.yul\":17729:18148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18154:18379   */\n    tag_343:\n        /* \"#utility.yul\":18294:18328   */\n      0x496e73756666696369656e7420746f6b656e2062616c616e636520696e20636f\n        /* \"#utility.yul\":18290:18291   */\n      0x00\n        /* \"#utility.yul\":18282:18288   */\n      dup3\n        /* \"#utility.yul\":18278:18292   */\n      add\n        /* \"#utility.yul\":18271:18329   */\n      mstore\n        /* \"#utility.yul\":18363:18371   */\n      0x6e74726163740000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18358:18360   */\n      0x20\n        /* \"#utility.yul\":18350:18356   */\n      dup3\n        /* \"#utility.yul\":18346:18361   */\n      add\n        /* \"#utility.yul\":18339:18372   */\n      mstore\n        /* \"#utility.yul\":18154:18379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18385:18751   */\n    tag_344:\n        /* \"#utility.yul\":18527:18530   */\n      0x00\n        /* \"#utility.yul\":18548:18615   */\n      tag_505\n        /* \"#utility.yul\":18612:18614   */\n      0x26\n        /* \"#utility.yul\":18607:18610   */\n      dup4\n        /* \"#utility.yul\":18548:18615   */\n      tag_297\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":18541:18615   */\n      swap2\n      pop\n        /* \"#utility.yul\":18624:18717   */\n      tag_506\n        /* \"#utility.yul\":18713:18716   */\n      dup3\n        /* \"#utility.yul\":18624:18717   */\n      tag_343\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":18742:18744   */\n      0x40\n        /* \"#utility.yul\":18737:18740   */\n      dup3\n        /* \"#utility.yul\":18733:18745   */\n      add\n        /* \"#utility.yul\":18726:18745   */\n      swap1\n      pop\n        /* \"#utility.yul\":18385:18751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18757:19176   */\n    tag_207:\n        /* \"#utility.yul\":18923:18927   */\n      0x00\n        /* \"#utility.yul\":18961:18963   */\n      0x20\n        /* \"#utility.yul\":18950:18959   */\n      dup3\n        /* \"#utility.yul\":18946:18964   */\n      add\n        /* \"#utility.yul\":18938:18964   */\n      swap1\n      pop\n        /* \"#utility.yul\":19010:19019   */\n      dup2\n        /* \"#utility.yul\":19004:19008   */\n      dup2\n        /* \"#utility.yul\":19000:19020   */\n      sub\n        /* \"#utility.yul\":18996:18997   */\n      0x00\n        /* \"#utility.yul\":18985:18994   */\n      dup4\n        /* \"#utility.yul\":18981:18998   */\n      add\n        /* \"#utility.yul\":18974:19021   */\n      mstore\n        /* \"#utility.yul\":19038:19169   */\n      tag_508\n        /* \"#utility.yul\":19164:19168   */\n      dup2\n        /* \"#utility.yul\":19038:19169   */\n      tag_344\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":19030:19169   */\n      swap1\n      pop\n        /* \"#utility.yul\":18757:19176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19182:19418   */\n    tag_345:\n        /* \"#utility.yul\":19322:19356   */\n      0x4e657720737570706c792063616e6e6f74206265206c657373207468616e2064\n        /* \"#utility.yul\":19318:19319   */\n      0x00\n        /* \"#utility.yul\":19310:19316   */\n      dup3\n        /* \"#utility.yul\":19306:19320   */\n      add\n        /* \"#utility.yul\":19299:19357   */\n      mstore\n        /* \"#utility.yul\":19391:19410   */\n      0x6973747269627574656420746f6b656e73000000000000000000000000000000\n        /* \"#utility.yul\":19386:19388   */\n      0x20\n        /* \"#utility.yul\":19378:19384   */\n      dup3\n        /* \"#utility.yul\":19374:19389   */\n      add\n        /* \"#utility.yul\":19367:19411   */\n      mstore\n        /* \"#utility.yul\":19182:19418   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19424:19790   */\n    tag_346:\n        /* \"#utility.yul\":19566:19569   */\n      0x00\n        /* \"#utility.yul\":19587:19654   */\n      tag_511\n        /* \"#utility.yul\":19651:19653   */\n      0x31\n        /* \"#utility.yul\":19646:19649   */\n      dup4\n        /* \"#utility.yul\":19587:19654   */\n      tag_297\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":19580:19654   */\n      swap2\n      pop\n        /* \"#utility.yul\":19663:19756   */\n      tag_512\n        /* \"#utility.yul\":19752:19755   */\n      dup3\n        /* \"#utility.yul\":19663:19756   */\n      tag_345\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":19781:19783   */\n      0x40\n        /* \"#utility.yul\":19776:19779   */\n      dup3\n        /* \"#utility.yul\":19772:19784   */\n      add\n        /* \"#utility.yul\":19765:19784   */\n      swap1\n      pop\n        /* \"#utility.yul\":19424:19790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19796:20215   */\n    tag_232:\n        /* \"#utility.yul\":19962:19966   */\n      0x00\n        /* \"#utility.yul\":20000:20002   */\n      0x20\n        /* \"#utility.yul\":19989:19998   */\n      dup3\n        /* \"#utility.yul\":19985:20003   */\n      add\n        /* \"#utility.yul\":19977:20003   */\n      swap1\n      pop\n        /* \"#utility.yul\":20049:20058   */\n      dup2\n        /* \"#utility.yul\":20043:20047   */\n      dup2\n        /* \"#utility.yul\":20039:20059   */\n      sub\n        /* \"#utility.yul\":20035:20036   */\n      0x00\n        /* \"#utility.yul\":20024:20033   */\n      dup4\n        /* \"#utility.yul\":20020:20037   */\n      add\n        /* \"#utility.yul\":20013:20060   */\n      mstore\n        /* \"#utility.yul\":20077:20208   */\n      tag_514\n        /* \"#utility.yul\":20203:20207   */\n      dup2\n        /* \"#utility.yul\":20077:20208   */\n      tag_346\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20069:20208   */\n      swap1\n      pop\n        /* \"#utility.yul\":19796:20215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20221:20441   */\n    tag_347:\n        /* \"#utility.yul\":20361:20395   */\n      0x4665652070657263656e746167652063616e6e6f742065786365656420313030\n        /* \"#utility.yul\":20357:20358   */\n      0x00\n        /* \"#utility.yul\":20349:20355   */\n      dup3\n        /* \"#utility.yul\":20345:20359   */\n      add\n        /* \"#utility.yul\":20338:20396   */\n      mstore\n        /* \"#utility.yul\":20430:20433   */\n      0x2500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20425:20427   */\n      0x20\n        /* \"#utility.yul\":20417:20423   */\n      dup3\n        /* \"#utility.yul\":20413:20428   */\n      add\n        /* \"#utility.yul\":20406:20434   */\n      mstore\n        /* \"#utility.yul\":20221:20441   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20447:20813   */\n    tag_348:\n        /* \"#utility.yul\":20589:20592   */\n      0x00\n        /* \"#utility.yul\":20610:20677   */\n      tag_517\n        /* \"#utility.yul\":20674:20676   */\n      0x21\n        /* \"#utility.yul\":20669:20672   */\n      dup4\n        /* \"#utility.yul\":20610:20677   */\n      tag_297\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":20603:20677   */\n      swap2\n      pop\n        /* \"#utility.yul\":20686:20779   */\n      tag_518\n        /* \"#utility.yul\":20775:20778   */\n      dup3\n        /* \"#utility.yul\":20686:20779   */\n      tag_347\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":20804:20806   */\n      0x40\n        /* \"#utility.yul\":20799:20802   */\n      dup3\n        /* \"#utility.yul\":20795:20807   */\n      add\n        /* \"#utility.yul\":20788:20807   */\n      swap1\n      pop\n        /* \"#utility.yul\":20447:20813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20819:21238   */\n    tag_244:\n        /* \"#utility.yul\":20985:20989   */\n      0x00\n        /* \"#utility.yul\":21023:21025   */\n      0x20\n        /* \"#utility.yul\":21012:21021   */\n      dup3\n        /* \"#utility.yul\":21008:21026   */\n      add\n        /* \"#utility.yul\":21000:21026   */\n      swap1\n      pop\n        /* \"#utility.yul\":21072:21081   */\n      dup2\n        /* \"#utility.yul\":21066:21070   */\n      dup2\n        /* \"#utility.yul\":21062:21082   */\n      sub\n        /* \"#utility.yul\":21058:21059   */\n      0x00\n        /* \"#utility.yul\":21047:21056   */\n      dup4\n        /* \"#utility.yul\":21043:21060   */\n      add\n        /* \"#utility.yul\":21036:21083   */\n      mstore\n        /* \"#utility.yul\":21100:21231   */\n      tag_520\n        /* \"#utility.yul\":21226:21230   */\n      dup2\n        /* \"#utility.yul\":21100:21231   */\n      tag_348\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":21092:21231   */\n      swap1\n      pop\n        /* \"#utility.yul\":20819:21238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21244:21576   */\n    tag_266:\n        /* \"#utility.yul\":21365:21369   */\n      0x00\n        /* \"#utility.yul\":21403:21405   */\n      0x40\n        /* \"#utility.yul\":21392:21401   */\n      dup3\n        /* \"#utility.yul\":21388:21406   */\n      add\n        /* \"#utility.yul\":21380:21406   */\n      swap1\n      pop\n        /* \"#utility.yul\":21416:21487   */\n      tag_522\n        /* \"#utility.yul\":21484:21485   */\n      0x00\n        /* \"#utility.yul\":21473:21482   */\n      dup4\n        /* \"#utility.yul\":21469:21486   */\n      add\n        /* \"#utility.yul\":21460:21466   */\n      dup6\n        /* \"#utility.yul\":21416:21487   */\n      tag_311\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":21497:21569   */\n      tag_523\n        /* \"#utility.yul\":21565:21567   */\n      0x20\n        /* \"#utility.yul\":21554:21563   */\n      dup4\n        /* \"#utility.yul\":21550:21568   */\n      add\n        /* \"#utility.yul\":21541:21547   */\n      dup5\n        /* \"#utility.yul\":21497:21569   */\n      tag_301\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":21244:21576   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21582:21762   */\n    tag_276:\n        /* \"#utility.yul\":21630:21707   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21627:21628   */\n      0x00\n        /* \"#utility.yul\":21620:21708   */\n      mstore\n        /* \"#utility.yul\":21727:21731   */\n      0x12\n        /* \"#utility.yul\":21724:21725   */\n      0x04\n        /* \"#utility.yul\":21717:21732   */\n      mstore\n        /* \"#utility.yul\":21751:21755   */\n      0x24\n        /* \"#utility.yul\":21748:21749   */\n      0x00\n        /* \"#utility.yul\":21741:21756   */\n      revert\n\n    auxdata: 0xa26469706673582212202610b8c100f67d8896ed1b31f2e7844db3b7d1441463f37a83380bcc8ed0df6464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_4476": {
									"entryPoint": null,
									"id": 4476,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 406,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3693:13",
										"nodeType": "YulBlock",
										"src": "0:3693:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "890:32:13",
													"nodeType": "YulBlock",
													"src": "890:32:13",
													"statements": [
														{
															"nativeSrc": "900:16:13",
															"nodeType": "YulAssignment",
															"src": "900:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:13",
																"nodeType": "YulIdentifier",
																"src": "911:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:13",
														"nodeType": "YulTypedName",
														"src": "872:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:13",
														"nodeType": "YulTypedName",
														"src": "882:7:13",
														"type": ""
													}
												],
												"src": "845:77:13"
											},
											{
												"body": {
													"nativeSrc": "971:79:13",
													"nodeType": "YulBlock",
													"src": "971:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:13",
																"nodeType": "YulBlock",
																"src": "1028:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:13"
																			},
																			"nativeSrc": "1030:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:13"
																		},
																		"nativeSrc": "1030:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:13"
																				},
																				"nativeSrc": "1001:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:13"
																		},
																		"nativeSrc": "991:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:13"
																},
																"nativeSrc": "984:43:13",
																"nodeType": "YulFunctionCall",
																"src": "984:43:13"
															},
															"nativeSrc": "981:63:13",
															"nodeType": "YulIf",
															"src": "981:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:13",
														"nodeType": "YulTypedName",
														"src": "964:5:13",
														"type": ""
													}
												],
												"src": "928:122:13"
											},
											{
												"body": {
													"nativeSrc": "1119:80:13",
													"nodeType": "YulBlock",
													"src": "1119:80:13",
													"statements": [
														{
															"nativeSrc": "1129:22:13",
															"nodeType": "YulAssignment",
															"src": "1129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:13"
																},
																"nativeSrc": "1138:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:13"
																},
																"nativeSrc": "1160:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:13"
															},
															"nativeSrc": "1160:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:13",
														"nodeType": "YulTypedName",
														"src": "1097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:13",
														"nodeType": "YulTypedName",
														"src": "1105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													}
												],
												"src": "1056:143:13"
											},
											{
												"body": {
													"nativeSrc": "1350:832:13",
													"nodeType": "YulBlock",
													"src": "1350:832:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1397:83:13",
																"nodeType": "YulBlock",
																"src": "1397:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1399:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1399:77:13"
																			},
																			"nativeSrc": "1399:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1399:79:13"
																		},
																		"nativeSrc": "1399:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1380:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1367:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:13"
																		},
																		"nativeSrc": "1367:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1392:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1363:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:13"
																},
																"nativeSrc": "1363:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1363:33:13"
															},
															"nativeSrc": "1360:120:13",
															"nodeType": "YulIf",
															"src": "1360:120:13"
														},
														{
															"nativeSrc": "1490:128:13",
															"nodeType": "YulBlock",
															"src": "1490:128:13",
															"statements": [
																{
																	"nativeSrc": "1505:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1505:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1519:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1509:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1509:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1534:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1534:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1580:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1591:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1576:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:13"
																				},
																				"nativeSrc": "1576:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1600:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1544:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1544:31:13"
																		},
																		"nativeSrc": "1544:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1534:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1534:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1628:129:13",
															"nodeType": "YulBlock",
															"src": "1628:129:13",
															"statements": [
																{
																	"nativeSrc": "1643:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1643:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1657:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1647:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1647:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1673:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1673:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1719:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1719:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1730:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1715:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1715:3:13"
																				},
																				"nativeSrc": "1715:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1715:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1739:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1739:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1683:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1683:31:13"
																		},
																		"nativeSrc": "1683:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1673:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1673:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1767:129:13",
															"nodeType": "YulBlock",
															"src": "1767:129:13",
															"statements": [
																{
																	"nativeSrc": "1782:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1796:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1786:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1812:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1812:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1858:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1869:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1854:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:13"
																				},
																				"nativeSrc": "1854:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1878:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1822:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1822:31:13"
																		},
																		"nativeSrc": "1822:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1812:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1906:129:13",
															"nodeType": "YulBlock",
															"src": "1906:129:13",
															"statements": [
																{
																	"nativeSrc": "1921:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1921:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1935:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1925:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1925:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1951:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1951:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1997:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1997:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2008:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2008:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1993:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1993:3:13"
																				},
																				"nativeSrc": "1993:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1993:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2017:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1961:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1961:31:13"
																		},
																		"nativeSrc": "1961:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1951:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1951:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2045:130:13",
															"nodeType": "YulBlock",
															"src": "2045:130:13",
															"statements": [
																{
																	"nativeSrc": "2060:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2060:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2074:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2064:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2064:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2091:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2091:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2137:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2137:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2148:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2133:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:13"
																				},
																				"nativeSrc": "2133:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2157:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2101:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2101:31:13"
																		},
																		"nativeSrc": "2101:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2091:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2091:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:977:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1288:9:13",
														"nodeType": "YulTypedName",
														"src": "1288:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1299:7:13",
														"nodeType": "YulTypedName",
														"src": "1299:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1311:6:13",
														"nodeType": "YulTypedName",
														"src": "1311:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1319:6:13",
														"nodeType": "YulTypedName",
														"src": "1319:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1327:6:13",
														"nodeType": "YulTypedName",
														"src": "1327:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1335:6:13",
														"nodeType": "YulTypedName",
														"src": "1335:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1343:6:13",
														"nodeType": "YulTypedName",
														"src": "1343:6:13",
														"type": ""
													}
												],
												"src": "1205:977:13"
											},
											{
												"body": {
													"nativeSrc": "2253:53:13",
													"nodeType": "YulBlock",
													"src": "2253:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2270:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2293:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2293:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2275:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2275:17:13"
																		},
																		"nativeSrc": "2275:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2275:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2263:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:13"
																},
																"nativeSrc": "2263:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2263:37:13"
															},
															"nativeSrc": "2263:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2263:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2188:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2241:5:13",
														"nodeType": "YulTypedName",
														"src": "2241:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2248:3:13",
														"nodeType": "YulTypedName",
														"src": "2248:3:13",
														"type": ""
													}
												],
												"src": "2188:118:13"
											},
											{
												"body": {
													"nativeSrc": "2410:124:13",
													"nodeType": "YulBlock",
													"src": "2410:124:13",
													"statements": [
														{
															"nativeSrc": "2420:26:13",
															"nodeType": "YulAssignment",
															"src": "2420:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2432:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2432:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2443:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2443:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2428:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:13"
																},
																"nativeSrc": "2428:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2428:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2420:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2420:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2500:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2500:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2513:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2524:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2509:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:13"
																		},
																		"nativeSrc": "2509:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2456:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2456:43:13"
																},
																"nativeSrc": "2456:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2456:71:13"
															},
															"nativeSrc": "2456:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2456:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2312:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2382:9:13",
														"nodeType": "YulTypedName",
														"src": "2382:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2394:6:13",
														"nodeType": "YulTypedName",
														"src": "2394:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2405:4:13",
														"nodeType": "YulTypedName",
														"src": "2405:4:13",
														"type": ""
													}
												],
												"src": "2312:222:13"
											},
											{
												"body": {
													"nativeSrc": "2636:73:13",
													"nodeType": "YulBlock",
													"src": "2636:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2653:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2653:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2658:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2646:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2646:6:13"
																},
																"nativeSrc": "2646:19:13",
																"nodeType": "YulFunctionCall",
																"src": "2646:19:13"
															},
															"nativeSrc": "2646:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "2646:19:13"
														},
														{
															"nativeSrc": "2674:29:13",
															"nodeType": "YulAssignment",
															"src": "2674:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2693:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2693:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2698:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2689:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:13"
																},
																"nativeSrc": "2689:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2689:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2674:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "2674:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2540:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2608:3:13",
														"nodeType": "YulTypedName",
														"src": "2608:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2613:6:13",
														"nodeType": "YulTypedName",
														"src": "2613:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2624:11:13",
														"nodeType": "YulTypedName",
														"src": "2624:11:13",
														"type": ""
													}
												],
												"src": "2540:169:13"
											},
											{
												"body": {
													"nativeSrc": "2821:72:13",
													"nodeType": "YulBlock",
													"src": "2821:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2843:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2851:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2851:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2839:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:13"
																		},
																		"nativeSrc": "2839:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2839:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "2855:30:13",
																		"nodeType": "YulLiteral",
																		"src": "2855:30:13",
																		"type": "",
																		"value": "Token address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2832:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:13"
																},
																"nativeSrc": "2832:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2832:54:13"
															},
															"nativeSrc": "2832:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "2832:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
												"nativeSrc": "2715:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2813:6:13",
														"nodeType": "YulTypedName",
														"src": "2813:6:13",
														"type": ""
													}
												],
												"src": "2715:178:13"
											},
											{
												"body": {
													"nativeSrc": "3045:220:13",
													"nodeType": "YulBlock",
													"src": "3045:220:13",
													"statements": [
														{
															"nativeSrc": "3055:74:13",
															"nodeType": "YulAssignment",
															"src": "3055:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3121:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3121:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3126:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3062:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3062:58:13"
																},
																"nativeSrc": "3062:67:13",
																"nodeType": "YulFunctionCall",
																"src": "3062:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3227:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3227:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																	"nativeSrc": "3138:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "3138:88:13"
																},
																"nativeSrc": "3138:93:13",
																"nodeType": "YulFunctionCall",
																"src": "3138:93:13"
															},
															"nativeSrc": "3138:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "3138:93:13"
														},
														{
															"nativeSrc": "3240:19:13",
															"nodeType": "YulAssignment",
															"src": "3240:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3251:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3251:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3256:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3247:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3247:3:13"
																},
																"nativeSrc": "3247:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3247:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3240:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2899:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3033:3:13",
														"nodeType": "YulTypedName",
														"src": "3033:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3041:3:13",
														"nodeType": "YulTypedName",
														"src": "3041:3:13",
														"type": ""
													}
												],
												"src": "2899:366:13"
											},
											{
												"body": {
													"nativeSrc": "3442:248:13",
													"nodeType": "YulBlock",
													"src": "3442:248:13",
													"statements": [
														{
															"nativeSrc": "3452:26:13",
															"nodeType": "YulAssignment",
															"src": "3452:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3464:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3464:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3475:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3475:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3460:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3460:3:13"
																},
																"nativeSrc": "3460:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3460:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3452:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3452:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3499:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3499:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3510:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3510:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:13"
																		},
																		"nativeSrc": "3495:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3518:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3518:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3524:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3514:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3514:3:13"
																		},
																		"nativeSrc": "3514:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3514:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:13"
																},
																"nativeSrc": "3488:47:13",
																"nodeType": "YulFunctionCall",
																"src": "3488:47:13"
															},
															"nativeSrc": "3488:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "3488:47:13"
														},
														{
															"nativeSrc": "3544:139:13",
															"nodeType": "YulAssignment",
															"src": "3544:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3678:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3678:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3552:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "3552:124:13"
																},
																"nativeSrc": "3552:131:13",
																"nodeType": "YulFunctionCall",
																"src": "3552:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3544:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3544:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3271:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3422:9:13",
														"nodeType": "YulTypedName",
														"src": "3422:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3437:4:13",
														"nodeType": "YulTypedName",
														"src": "3437:4:13",
														"type": ""
													}
												],
												"src": "3271:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612516380380612516833981810160405281019061003191906102e8565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061036e565b60405180910390fd5b6100b18161019660201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906103e1565b60405180910390fd5b8460025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003819055508260048190555081600581905550806007819055506101f460098190555050505050506103ff565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102848261025b565b9050919050565b6102948161027a565b811461029e575f5ffd5b50565b5f815190506102af8161028b565b92915050565b5f819050919050565b6102c7816102b5565b81146102d1575f5ffd5b50565b5f815190506102e2816102be565b92915050565b5f5f5f5f5f60a0868803121561030157610300610257565b5b5f61030e888289016102a1565b955050602061031f888289016102d4565b9450506040610330888289016102d4565b9350506060610341888289016102d4565b9250506080610352888289016102d4565b9150509295509295909350565b6103688161027a565b82525050565b5f6020820190506103815f83018461035f565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f000000005f82015250565b5f6103cb601c83610387565b91506103d682610397565b602082019050919050565b5f6020820190508181035f8301526103f8816103bf565b9050919050565b61210a8061040c5f395ff3fe608060405260043610610143575f3560e01c80638da5cb5b116100b5578063c884ef831161006e578063c884ef831461041b578063cec297a014610457578063db24f2a314610493578063f2fde38b146104bd578063fc0c546a146104e5578063ff7345e51461050f57610183565b80638da5cb5b146103235780639a707d2f1461034d578063a49a176e14610375578063aeab26be1461039d578063b88bfd29146103c7578063bf31b33e146103f157610183565b80636305b715116101075780636305b7151461024157806365f8c6c51461026b5780636a1d871314610293578063715018a6146102bb578063747fc0d2146102d15780637e699a8c146102fb57610183565b806301c0e51d14610187578063152e84a7146101b15780631bcea05e146101db57806349df728c146102035780635b88349d1461022b57610183565b36610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a9061164c565b60405180910390fd5b5f5ffd5b348015610192575f5ffd5b5061019b610537565b6040516101a89190611682565b60405180910390f35b3480156101bc575f5ffd5b506101c561053d565b6040516101d29190611682565b60405180910390f35b3480156101e6575f5ffd5b5061020160048036038101906101fc91906116c9565b610543565b005b34801561020e575f5ffd5b5061022960048036038101906102249190611761565b6105dc565b005b348015610236575f5ffd5b5061023f610731565b005b34801561024c575f5ffd5b5061025561073c565b6040516102629190611682565b60405180910390f35b348015610276575f5ffd5b50610291600480360381019061028c9190611761565b610742565b005b34801561029e575f5ffd5b506102b960048036038101906102b4919061178c565b610ee0565b005b3480156102c6575f5ffd5b506102cf610f29565b005b3480156102dc575f5ffd5b506102e5610f3c565b6040516102f29190611682565b60405180910390f35b348015610306575f5ffd5b50610321600480360381019061031c919061178c565b610f42565b005b34801561032e575f5ffd5b50610337610fd0565b60405161034491906117c6565b60405180910390f35b348015610358575f5ffd5b50610373600480360381019061036e919061178c565b610ff7565b005b348015610380575f5ffd5b5061039b6004803603810190610396919061178c565b611040565b005b3480156103a8575f5ffd5b506103b16110cd565b6040516103be9190611682565b60405180910390f35b3480156103d2575f5ffd5b506103db6110d3565b6040516103e89190611682565b60405180910390f35b3480156103fc575f5ffd5b506104056110d9565b6040516104129190611682565b60405180910390f35b348015610426575f5ffd5b50610441600480360381019061043c9190611761565b6110df565b60405161044e91906117f9565b60405180910390f35b348015610462575f5ffd5b5061047d60048036038101906104789190611761565b6110fc565b60405161048a9190611682565b60405180910390f35b34801561049e575f5ffd5b506104a7611111565b6040516104b49190611682565b60405180910390f35b3480156104c8575f5ffd5b506104e360048036038101906104de9190611761565b611117565b005b3480156104f0575f5ffd5b506104f961119b565b604051610506919061186d565b60405180910390f35b34801561051a575f5ffd5b506105356004803603810190610530919061178c565b6111c0565b005b600c5481565b60085481565b61054b611209565b81811161058d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610584906118f6565b60405180910390fd5b81600b8190555080600c819055507f72c7f30f1add5c8b5e197b8cb57516b3abbd8e31bccb1845d4e716717944e80a600b54600c546040516105d0929190611914565b60405180910390a15050565b6105e4611209565b5f8190505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062291906117c6565b602060405180830381865afa15801561063d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610661919061194f565b90505f81116106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c906119c4565b60405180910390fd5b6106d76106b0610fd0565b828473ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b6106df610fd0565b73ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516107249190611682565b60405180910390a2505050565b61073a5f610742565b565b60045481565b61074a61130f565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611a52565b60405180910390fd5b600b54421015610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081090611aba565b60405180910390fd5b600c54421061085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490611b22565b60405180910390fd5b600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f6108c36003546005546064611355565b905060035481111561090a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090190611bb0565b60405180910390fd5b5f816003546109199190611bfb565b90505f8190505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610b9b573373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790611c78565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2590611ce0565b60405180910390fd5b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611d48565b60405180910390fd5b600954600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90611dd6565b60405180910390fd5b60045481610b469190611df4565b9050600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190610b9590611e27565b91905055505b60075481600854610bac9190611df4565b1115610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be490611eb8565b60405180910390fd5b8281610bf99190611df4565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c5391906117c6565b602060405180830381865afa158015610c6e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c92919061194f565b1015610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca90611f46565b60405180910390fd5b610d26610cde610fd0565b8460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b610d2e610fd0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f02e039d7ce7a1bacd02cebc742cfba63668424d700fe6ff9b5be6f9f5801be1585604051610d8a9190611682565b60405180910390a38060085f828254610da39190611df4565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610e2c57610e2b8460045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b5b610e78338360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe36722f357b07c721b246e0a5cb2fa0015c07ad3df67bca291504054a799839460405160405180910390a3505050610edd611434565b50565b610ee8611209565b806009819055507fcc368607de2345e055465e8d50d99a7d1e1e3ce7516a4175a2c513aad17b146081604051610f1e9190611682565b60405180910390a150565b610f31611209565b610f3a5f61143d565b565b60095481565b610f4a611209565b600854811015610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8690611fd4565b60405180910390fd5b806007819055507f45c69c62555cb8d911ac4f0a16fa83a65e4a2ff5c5a884c39969e8c8b97cb51081604051610fc59190611682565b60405180910390a150565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610fff611209565b806003819055507f91a9538a48b80f8854e68761beacb4468cb2ac0a50d634dec96417cddc019a14816040516110359190611682565b60405180910390a150565b611048611209565b606481111561108c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108390612062565b60405180910390fd5b806005819055507f6852fdb2f20cad76e9f34cb63f2f0f19b8d69a0673886404fc871917cd81198a816040516110c29190611682565b60405180910390a150565b60075481565b60055481565b60035481565b6006602052805f5260405f205f915054906101000a900460ff1681565b600a602052805f5260405f205f915090505481565b600b5481565b61111f611209565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361118f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161118691906117c6565b60405180910390fd5b6111988161143d565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111c8611209565b806004819055507fa8868231bcabae5003167c1566dce9258f36e5babecdd040da1ef6e04377e0e2816040516111fe9190611682565b60405180910390a150565b6112116114fe565b73ffffffffffffffffffffffffffffffffffffffff1661122f610fd0565b73ffffffffffffffffffffffffffffffffffffffff161461128e576112526114fe565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161128591906117c6565b60405180910390fd5b565b61130a838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016112c3929190612080565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611505565b505050565b60026001540361134b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b5f5f5f61136286866115a0565b915091505f82036113875783818161137d5761137c6120a7565b5b049250505061142d565b8184116113a6576113a56113a05f8614601260116115bd565b6115d6565b5b5f8486880990508181118303925080820391505f855f038616905080860495508083049250600181825f0304019050808402831792505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808402955050505050505b9392505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5f60205f8451602086015f885af180611524576040513d5f823e3d81fd5b3d92505f519150505f821461153d576001811415611558565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561159a57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161159191906117c6565b60405180910390fd5b50505050565b5f5f5f198385098385029150818110828203039250509250929050565b5f6115c7846115e7565b82841802821890509392505050565b634e487b715f52806020526024601cfd5b5f8115159050919050565b5f82825260208201905092915050565b7f455448206e6f74206163636570746564000000000000000000000000000000005f82015250565b5f6116366010836115f2565b915061164182611602565b602082019050919050565b5f6020820190508181035f8301526116638161162a565b9050919050565b5f819050919050565b61167c8161166a565b82525050565b5f6020820190506116955f830184611673565b92915050565b5f5ffd5b6116a88161166a565b81146116b2575f5ffd5b50565b5f813590506116c38161169f565b92915050565b5f5f604083850312156116df576116de61169b565b5b5f6116ec858286016116b5565b92505060206116fd858286016116b5565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61173082611707565b9050919050565b61174081611726565b811461174a575f5ffd5b50565b5f8135905061175b81611737565b92915050565b5f602082840312156117765761177561169b565b5b5f6117838482850161174d565b91505092915050565b5f602082840312156117a1576117a061169b565b5b5f6117ae848285016116b5565b91505092915050565b6117c081611726565b82525050565b5f6020820190506117d95f8301846117b7565b92915050565b5f8115159050919050565b6117f3816117df565b82525050565b5f60208201905061180c5f8301846117ea565b92915050565b5f819050919050565b5f61183561183061182b84611707565b611812565b611707565b9050919050565b5f6118468261181b565b9050919050565b5f6118578261183c565b9050919050565b6118678161184d565b82525050565b5f6020820190506118805f83018461185e565b92915050565b7f53746f702074696d657374616d70206d757374206265206166746572207374615f8201527f72742074696d657374616d700000000000000000000000000000000000000000602082015250565b5f6118e0602c836115f2565b91506118eb82611886565b604082019050919050565b5f6020820190508181035f83015261190d816118d4565b9050919050565b5f6040820190506119275f830185611673565b6119346020830184611673565b9392505050565b5f815190506119498161169f565b92915050565b5f602082840312156119645761196361169b565b5b5f6119718482850161193b565b91505092915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6119ae6015836115f2565b91506119b98261197a565b602082019050919050565b5f6020820190508181035f8301526119db816119a2565b9050919050565b7f596f75206861766520616c726561647920636c61696d656420796f75722061695f8201527f7264726f70000000000000000000000000000000000000000000000000000000602082015250565b5f611a3c6025836115f2565b9150611a47826119e2565b604082019050919050565b5f6020820190508181035f830152611a6981611a30565b9050919050565b7f41697264726f7020686173206e6f7420737461727465642079657400000000005f82015250565b5f611aa4601b836115f2565b9150611aaf82611a70565b602082019050919050565b5f6020820190508181035f830152611ad181611a98565b9050919050565b7f41697264726f702068617320616c726561647920656e646564000000000000005f82015250565b5f611b0c6019836115f2565b9150611b1782611ad8565b602082019050919050565b5f6020820190508181035f830152611b3981611b00565b9050919050565b7f496e76616c69642066656520616d6f756e74206f722061697264726f7020616d5f8201527f6f756e7400000000000000000000000000000000000000000000000000000000602082015250565b5f611b9a6024836115f2565b9150611ba582611b40565b604082019050919050565b5f6020820190508181035f830152611bc781611b8e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c058261166a565b9150611c108361166a565b9250828203905081811115611c2857611c27611bce565b5b92915050565b7f43616e6e6f742073656c662d72656665720000000000000000000000000000005f82015250565b5f611c626011836115f2565b9150611c6d82611c2e565b602082019050919050565b5f6020820190508181035f830152611c8f81611c56565b9050919050565b7f496e76616c6964207265666572726572000000000000000000000000000000005f82015250565b5f611cca6010836115f2565b9150611cd582611c96565b602082019050919050565b5f6020820190508181035f830152611cf781611cbe565b9050919050565b7f526566657272657220686173206e6f742079657420636c61696d6564000000005f82015250565b5f611d32601c836115f2565b9150611d3d82611cfe565b602082019050919050565b5f6020820190508181035f830152611d5f81611d26565b9050919050565b7f52656665727265722068617320726561636865642074686569722072656665725f8201527f72616c206c696d69740000000000000000000000000000000000000000000000602082015250565b5f611dc06029836115f2565b9150611dcb82611d66565b604082019050919050565b5f6020820190508181035f830152611ded81611db4565b9050919050565b5f611dfe8261166a565b9150611e098361166a565b9250828201905080821115611e2157611e20611bce565b5b92915050565b5f611e318261166a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e6357611e62611bce565b5b600182019050919050565b7f546f74616c2061697264726f7020737570706c792065786861757374656400005f82015250565b5f611ea2601e836115f2565b9150611ead82611e6e565b602082019050919050565b5f6020820190508181035f830152611ecf81611e96565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e636520696e20636f5f8201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b5f611f306026836115f2565b9150611f3b82611ed6565b604082019050919050565b5f6020820190508181035f830152611f5d81611f24565b9050919050565b7f4e657720737570706c792063616e6e6f74206265206c657373207468616e20645f8201527f6973747269627574656420746f6b656e73000000000000000000000000000000602082015250565b5f611fbe6031836115f2565b9150611fc982611f64565b604082019050919050565b5f6020820190508181035f830152611feb81611fb2565b9050919050565b7f4665652070657263656e746167652063616e6e6f7420657863656564203130305f8201527f2500000000000000000000000000000000000000000000000000000000000000602082015250565b5f61204c6021836115f2565b915061205782611ff2565b604082019050919050565b5f6020820190508181035f83015261207981612040565b9050919050565b5f6040820190506120935f8301856117b7565b6120a06020830184611673565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212202610b8c100f67d8896ed1b31f2e7844db3b7d1441463f37a83380bcc8ed0df6464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2516 CODESIZE SUB DUP1 PUSH2 0x2516 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x196 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x3FF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x284 DUP3 PUSH2 0x25B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x294 DUP2 PUSH2 0x27A JUMP JUMPDEST DUP2 EQ PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AF DUP2 PUSH2 0x28B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C7 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E2 DUP2 PUSH2 0x2BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x257 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30E DUP9 DUP3 DUP10 ADD PUSH2 0x2A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x31F DUP9 DUP3 DUP10 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x330 DUP9 DUP3 DUP10 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x341 DUP9 DUP3 DUP10 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x352 DUP9 DUP3 DUP10 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x368 DUP2 PUSH2 0x27A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x381 PUSH0 DUP4 ADD DUP5 PUSH2 0x35F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3CB PUSH1 0x1C DUP4 PUSH2 0x387 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D6 DUP3 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3F8 DUP2 PUSH2 0x3BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210A DUP1 PUSH2 0x40C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xC884EF83 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xDB24F2A3 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xFF7345E5 EQ PUSH2 0x50F JUMPI PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x9A707D2F EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xA49A176E EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xAEAB26BE EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xB88BFD29 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xBF31B33E EQ PUSH2 0x3F1 JUMPI PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH4 0x6305B715 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x6305B715 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6A1D8713 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x747FC0D2 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x7E699A8C EQ PUSH2 0x2FB JUMPI PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH4 0x1C0E51D EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x152E84A7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x1BCEA05E EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x49DF728C EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x22B JUMPI PUSH2 0x183 JUMP JUMPDEST CALLDATASIZE PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0xEE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xF29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0xFF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x1040 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x405 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x11C0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x54B PUSH2 0x1209 JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x72C7F30F1ADD5C8B5E197B8CB57516B3ABBD8E31BCCB1845D4E716717944E80A PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x1209 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D7 PUSH2 0x6B0 PUSH2 0xFD0 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6DF PUSH2 0xFD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x73A PUSH0 PUSH2 0x742 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x74A PUSH2 0x130F JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD TIMESTAMP LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x854 SWAP1 PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x8C3 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x64 PUSH2 0x1355 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA25 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB95 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST GT ISZERO PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST LT ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCA SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD26 PUSH2 0xCDE PUSH2 0xFD0 JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD2E PUSH2 0xFD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2E039D7CE7A1BACD02CEBC742CFBA63668424D700FE6FF9B5BE6F9F5801BE15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2C JUMPI PUSH2 0xE2B DUP5 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xE78 CALLER DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE36722F357B07C721B246E0A5CB2FA0015C07AD3DF67BCA291504054A7998394 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xEDD PUSH2 0x1434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEE8 PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xCC368607DE2345E055465E8D50D99A7D1E1E3CE7516A4175A2C513AAD17B1460 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xF31 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xF3A PUSH0 PUSH2 0x143D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF4A PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x45C69C62555CB8D911AC4F0A16FA83A65E4A2FF5C5A884C39969E8C8B97CB510 DUP2 PUSH1 0x40 MLOAD PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFFF PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x91A9538A48B80F8854E68761BEACB4468CB2AC0A50D634DEC96417CDDC019A14 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1048 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x6852FDB2F20CAD76E9F34CB63F2F0F19B8D69A0673886404FC871917CD81198A DUP2 PUSH1 0x40 MLOAD PUSH2 0x10C2 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x111F PUSH2 0x1209 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1198 DUP2 PUSH2 0x143D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x11C8 PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xA8868231BCABAE5003167C1566DCE9258F36E5BABECDD040DA1EF6E04377E0E2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1211 PUSH2 0x14FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x122F PUSH2 0xFD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128E JUMPI PUSH2 0x1252 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1285 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x130A DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1505 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x1362 DUP7 DUP7 PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1387 JUMPI DUP4 DUP2 DUP2 PUSH2 0x137D JUMPI PUSH2 0x137C PUSH2 0x20A7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x142D JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x13A0 PUSH0 DUP7 EQ PUSH1 0x12 PUSH1 0x11 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP2 DUP2 GT DUP4 SUB SWAP3 POP DUP1 DUP3 SUB SWAP2 POP PUSH0 DUP6 PUSH0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP4 DIV SWAP3 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP5 MUL DUP4 OR SWAP3 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP5 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x153D JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1558 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x159A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1591 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 NOT DUP4 DUP6 MULMOD DUP4 DUP6 MUL SWAP2 POP DUP2 DUP2 LT DUP3 DUP3 SUB SUB SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15C7 DUP5 PUSH2 0x15E7 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x24 PUSH1 0x1C REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448206E6F7420616363657074656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1636 PUSH1 0x10 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1641 DUP3 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1663 DUP2 PUSH2 0x162A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x167C DUP2 PUSH2 0x166A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1695 PUSH0 DUP4 ADD DUP5 PUSH2 0x1673 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16A8 DUP2 PUSH2 0x166A JUMP JUMPDEST DUP2 EQ PUSH2 0x16B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C3 DUP2 PUSH2 0x169F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16EC DUP6 DUP3 DUP7 ADD PUSH2 0x16B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16FD DUP6 DUP3 DUP7 ADD PUSH2 0x16B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1730 DUP3 PUSH2 0x1707 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1740 DUP2 PUSH2 0x1726 JUMP JUMPDEST DUP2 EQ PUSH2 0x174A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175B DUP2 PUSH2 0x1737 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1783 DUP5 DUP3 DUP6 ADD PUSH2 0x174D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x17A0 PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17AE DUP5 DUP3 DUP6 ADD PUSH2 0x16B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C0 DUP2 PUSH2 0x1726 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F3 DUP2 PUSH2 0x17DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180C PUSH0 DUP4 ADD DUP5 PUSH2 0x17EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1835 PUSH2 0x1830 PUSH2 0x182B DUP5 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1707 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1846 DUP3 PUSH2 0x181B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1857 DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1867 DUP2 PUSH2 0x184D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1880 PUSH0 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53746F702074696D657374616D70206D75737420626520616674657220737461 PUSH0 DUP3 ADD MSTORE PUSH32 0x72742074696D657374616D700000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E0 PUSH1 0x2C DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EB DUP3 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190D DUP2 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1927 PUSH0 DUP4 ADD DUP6 PUSH2 0x1673 JUMP JUMPDEST PUSH2 0x1934 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1673 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1949 DUP2 PUSH2 0x169F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1971 DUP5 DUP3 DUP6 ADD PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19AE PUSH1 0x15 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B9 DUP3 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19DB DUP2 PUSH2 0x19A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C726561647920636C61696D656420796F7572206169 PUSH0 DUP3 ADD MSTORE PUSH32 0x7264726F70000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3C PUSH1 0x25 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A47 DUP3 PUSH2 0x19E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A69 DUP2 PUSH2 0x1A30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F7020686173206E6F742073746172746564207965740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA4 PUSH1 0x1B DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAF DUP3 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD1 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F702068617320616C726561647920656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0C PUSH1 0x19 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B17 DUP3 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B39 DUP2 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520616D6F756E74206F722061697264726F7020616D PUSH0 DUP3 ADD MSTORE PUSH32 0x6F756E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9A PUSH1 0x24 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA5 DUP3 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BC7 DUP2 PUSH2 0x1B8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C05 DUP3 PUSH2 0x166A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C10 DUP4 PUSH2 0x166A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742073656C662D7265666572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C62 PUSH1 0x11 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6D DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8F DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726566657272657200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCA PUSH1 0x10 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD5 DUP3 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CF7 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566657272657220686173206E6F742079657420636C61696D656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D32 PUSH1 0x1C DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3D DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5F DUP2 PUSH2 0x1D26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265666572726572206861732072656163686564207468656972207265666572 PUSH0 DUP3 ADD MSTORE PUSH32 0x72616C206C696D69740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC0 PUSH1 0x29 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP3 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFE DUP3 PUSH2 0x166A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E09 DUP4 PUSH2 0x166A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E21 JUMPI PUSH2 0x1E20 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E31 DUP3 PUSH2 0x166A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C2061697264726F7020737570706C79206578686175737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA2 PUSH1 0x1E DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAD DUP3 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ECF DUP2 PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520696E20636F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F30 PUSH1 0x26 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3B DUP3 PUSH2 0x1ED6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F5D DUP2 PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720737570706C792063616E6E6F74206265206C657373207468616E2064 PUSH0 DUP3 ADD MSTORE PUSH32 0x6973747269627574656420746F6B656E73000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBE PUSH1 0x31 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC9 DUP3 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FEB DUP2 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665652070657263656E746167652063616E6E6F742065786365656420313030 PUSH0 DUP3 ADD MSTORE PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x204C PUSH1 0x21 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2057 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2079 DUP2 PUSH2 0x2040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2093 PUSH0 DUP4 ADD DUP6 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x20A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1673 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 LT 0xB8 0xC1 STOP 0xF6 PUSH30 0x8896ED1B31F2E7844DB3B7D1441463F37A83380BCC8ED0DF6464736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "561:9510:12:-:0;;;3101:680;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3337:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:8;2061:7;:21;;;;3393:1:12::1;3368:27;;:13;:27;;::::0;3360:68:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3454:13;3439:5;;:29;;;;;;;;;;;;;;;;;;3499:25;3479:17;:45;;;;3557:27;3535:19;:49;;;;3613:23;3595:15;:41;;;;3668:26;3647:18;:47;;;;3720:3;3705:12;:18;;;;3101:680:::0;;;;;561:9510;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;2188:118::-;2275:24;2293:5;2275:24;:::i;:::-;2270:3;2263:37;2188:118;;:::o;2312:222::-;2405:4;2443:2;2432:9;2428:18;2420:26;;2456:71;2524:1;2513:9;2509:17;2500:6;2456:71;:::i;:::-;2312:222;;;;:::o;2540:169::-;2624:11;2658:6;2653:3;2646:19;2698:4;2693:3;2689:14;2674:29;;2540:169;;;;:::o;2715:178::-;2855:30;2851:1;2843:6;2839:14;2832:54;2715:178;:::o;2899:366::-;3041:3;3062:67;3126:2;3121:3;3062:67;:::i;:::-;3055:74;;3138:93;3227:3;3138:93;:::i;:::-;3256:2;3251:3;3247:12;3240:19;;2899:366;;;:::o;3271:419::-;3437:4;3475:2;3464:9;3460:18;3452:26;;3524:9;3518:4;3514:20;3510:1;3499:9;3495:17;3488:47;3552:131;3678:4;3552:131;:::i;:::-;3544:139;;3271:419;;;:::o;561:9510:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_4485": {
									"entryPoint": null,
									"id": 4485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 5381,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4617,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": 5374,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_918": {
									"entryPoint": 5172,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_910": {
									"entryPoint": 4879,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5181,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAirdrop_4627": {
									"entryPoint": 1841,
									"id": 4627,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimAirdrop_4818": {
									"entryPoint": 1858,
									"id": 4818,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimFeePercent_4353": {
									"entryPoint": 4307,
									"id": 4353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimed_4357": {
									"entryPoint": 4319,
									"id": 4357,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mainAirdropAmount_4349": {
									"entryPoint": 4313,
									"id": 4349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxReferrals_4363": {
									"entryPoint": 3900,
									"id": 4363,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul512_982": {
									"entryPoint": 5536,
									"id": 982,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@mulDiv_1469": {
									"entryPoint": 4949,
									"id": 1469,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 4048,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@panic_860": {
									"entryPoint": 5590,
									"id": 860,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@referralBonusAmount_4351": {
									"entryPoint": 1852,
									"id": 4351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referralCounts_4367": {
									"entryPoint": 4348,
									"id": 4367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3881,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 4752,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@scheduleAirdrop_4516": {
									"entryPoint": 1347,
									"id": 4516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setClaimFeePercent_4574": {
									"entryPoint": 4160,
									"id": 4574,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMainAirdropAmount_4533": {
									"entryPoint": 4087,
									"id": 4533,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxReferrals_4615": {
									"entryPoint": 3808,
									"id": 4615,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setReferralBonusAmount_4550": {
									"entryPoint": 4544,
									"id": 4550,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTotalAirdropSupply_4598": {
									"entryPoint": 3906,
									"id": 4598,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startAirdropAt_4369": {
									"entryPoint": 4369,
									"id": 4369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopAirdropAt_4371": {
									"entryPoint": 1335,
									"id": 4371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ternary_1231": {
									"entryPoint": 5565,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@toUint_4327": {
									"entryPoint": 5607,
									"id": 4327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_4347": {
									"entryPoint": 4507,
									"id": 4347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensDistributed_4361": {
									"entryPoint": 1341,
									"id": 4361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAirdropSupply_4359": {
									"entryPoint": 4301,
									"id": 4359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4375,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokens_4865": {
									"entryPoint": 1500,
									"id": 4865,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc": {
									"entryPoint": 6626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248": {
									"entryPoint": 6872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd": {
									"entryPoint": 5634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504": {
									"entryPoint": 7790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13": {
									"entryPoint": 7894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950": {
									"entryPoint": 8178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606": {
									"entryPoint": 7526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21765:13",
										"nodeType": "YulBlock",
										"src": "0:21765:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:13",
													"nodeType": "YulBlock",
													"src": "103:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:13"
																},
																"nativeSrc": "113:19:13",
																"nodeType": "YulFunctionCall",
																"src": "113:19:13"
															},
															"nativeSrc": "113:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:13"
														},
														{
															"nativeSrc": "141:29:13",
															"nodeType": "YulAssignment",
															"src": "141:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:13",
																		"nodeType": "YulLiteral",
																		"src": "165:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:13"
																},
																"nativeSrc": "156:14:13",
																"nodeType": "YulFunctionCall",
																"src": "156:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:13",
														"nodeType": "YulTypedName",
														"src": "75:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:13",
														"nodeType": "YulTypedName",
														"src": "80:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:13",
														"nodeType": "YulTypedName",
														"src": "91:11:13",
														"type": ""
													}
												],
												"src": "7:169:13"
											},
											{
												"body": {
													"nativeSrc": "288:60:13",
													"nodeType": "YulBlock",
													"src": "288:60:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:13",
																				"nodeType": "YulLiteral",
																				"src": "318:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:13"
																		},
																		"nativeSrc": "306:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:13"
																	},
																	{
																		"hexValue": "455448206e6f74206163636570746564",
																		"kind": "string",
																		"nativeSrc": "322:18:13",
																		"nodeType": "YulLiteral",
																		"src": "322:18:13",
																		"type": "",
																		"value": "ETH not accepted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:13"
																},
																"nativeSrc": "299:42:13",
																"nodeType": "YulFunctionCall",
																"src": "299:42:13"
															},
															"nativeSrc": "299:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "299:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd",
												"nativeSrc": "182:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:13",
														"nodeType": "YulTypedName",
														"src": "280:6:13",
														"type": ""
													}
												],
												"src": "182:166:13"
											},
											{
												"body": {
													"nativeSrc": "500:220:13",
													"nodeType": "YulBlock",
													"src": "500:220:13",
													"statements": [
														{
															"nativeSrc": "510:74:13",
															"nodeType": "YulAssignment",
															"src": "510:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "576:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "576:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "581:2:13",
																		"nodeType": "YulLiteral",
																		"src": "581:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "517:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "517:58:13"
																},
																"nativeSrc": "517:67:13",
																"nodeType": "YulFunctionCall",
																"src": "517:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "682:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "682:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd",
																	"nativeSrc": "593:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "593:88:13"
																},
																"nativeSrc": "593:93:13",
																"nodeType": "YulFunctionCall",
																"src": "593:93:13"
															},
															"nativeSrc": "593:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "593:93:13"
														},
														{
															"nativeSrc": "695:19:13",
															"nodeType": "YulAssignment",
															"src": "695:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "706:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "711:2:13",
																		"nodeType": "YulLiteral",
																		"src": "711:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "702:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:13"
																},
																"nativeSrc": "702:12:13",
																"nodeType": "YulFunctionCall",
																"src": "702:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "695:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "354:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "488:3:13",
														"nodeType": "YulTypedName",
														"src": "488:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "496:3:13",
														"nodeType": "YulTypedName",
														"src": "496:3:13",
														"type": ""
													}
												],
												"src": "354:366:13"
											},
											{
												"body": {
													"nativeSrc": "897:248:13",
													"nodeType": "YulBlock",
													"src": "897:248:13",
													"statements": [
														{
															"nativeSrc": "907:26:13",
															"nodeType": "YulAssignment",
															"src": "907:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "919:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "919:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "930:2:13",
																		"nodeType": "YulLiteral",
																		"src": "930:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "915:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "915:3:13"
																},
																"nativeSrc": "915:18:13",
																"nodeType": "YulFunctionCall",
																"src": "915:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "907:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "907:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "954:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "965:1:13",
																				"nodeType": "YulLiteral",
																				"src": "965:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "950:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:13"
																		},
																		"nativeSrc": "950:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "950:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "973:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "973:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "979:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "969:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "969:3:13"
																		},
																		"nativeSrc": "969:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "969:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "943:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "943:6:13"
																},
																"nativeSrc": "943:47:13",
																"nodeType": "YulFunctionCall",
																"src": "943:47:13"
															},
															"nativeSrc": "943:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "943:47:13"
														},
														{
															"nativeSrc": "999:139:13",
															"nodeType": "YulAssignment",
															"src": "999:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1133:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1133:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1007:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "1007:124:13"
																},
																"nativeSrc": "1007:131:13",
																"nodeType": "YulFunctionCall",
																"src": "1007:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "999:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "999:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "726:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:13",
														"nodeType": "YulTypedName",
														"src": "877:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "892:4:13",
														"nodeType": "YulTypedName",
														"src": "892:4:13",
														"type": ""
													}
												],
												"src": "726:419:13"
											},
											{
												"body": {
													"nativeSrc": "1196:32:13",
													"nodeType": "YulBlock",
													"src": "1196:32:13",
													"statements": [
														{
															"nativeSrc": "1206:16:13",
															"nodeType": "YulAssignment",
															"src": "1206:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1217:5:13",
																"nodeType": "YulIdentifier",
																"src": "1217:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1206:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1206:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1151:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1178:5:13",
														"nodeType": "YulTypedName",
														"src": "1178:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1188:7:13",
														"nodeType": "YulTypedName",
														"src": "1188:7:13",
														"type": ""
													}
												],
												"src": "1151:77:13"
											},
											{
												"body": {
													"nativeSrc": "1299:53:13",
													"nodeType": "YulBlock",
													"src": "1299:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1316:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1316:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1339:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1339:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1321:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1321:17:13"
																		},
																		"nativeSrc": "1321:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1321:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1309:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:13"
																},
																"nativeSrc": "1309:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1309:37:13"
															},
															"nativeSrc": "1309:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1309:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1234:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1287:5:13",
														"nodeType": "YulTypedName",
														"src": "1287:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1294:3:13",
														"nodeType": "YulTypedName",
														"src": "1294:3:13",
														"type": ""
													}
												],
												"src": "1234:118:13"
											},
											{
												"body": {
													"nativeSrc": "1456:124:13",
													"nodeType": "YulBlock",
													"src": "1456:124:13",
													"statements": [
														{
															"nativeSrc": "1466:26:13",
															"nodeType": "YulAssignment",
															"src": "1466:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1478:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1489:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1489:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1474:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1474:3:13"
																},
																"nativeSrc": "1474:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1474:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1466:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1466:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1546:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1546:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1559:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1559:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1570:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1570:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1555:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1555:3:13"
																		},
																		"nativeSrc": "1555:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1555:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1502:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1502:43:13"
																},
																"nativeSrc": "1502:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1502:71:13"
															},
															"nativeSrc": "1502:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1502:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1358:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1428:9:13",
														"nodeType": "YulTypedName",
														"src": "1428:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1440:6:13",
														"nodeType": "YulTypedName",
														"src": "1440:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1451:4:13",
														"nodeType": "YulTypedName",
														"src": "1451:4:13",
														"type": ""
													}
												],
												"src": "1358:222:13"
											},
											{
												"body": {
													"nativeSrc": "1626:35:13",
													"nodeType": "YulBlock",
													"src": "1626:35:13",
													"statements": [
														{
															"nativeSrc": "1636:19:13",
															"nodeType": "YulAssignment",
															"src": "1636:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1652:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1652:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1646:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1646:5:13"
																},
																"nativeSrc": "1646:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1646:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1636:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1636:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1586:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1619:6:13",
														"nodeType": "YulTypedName",
														"src": "1619:6:13",
														"type": ""
													}
												],
												"src": "1586:75:13"
											},
											{
												"body": {
													"nativeSrc": "1756:28:13",
													"nodeType": "YulBlock",
													"src": "1756:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1773:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1776:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1776:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1766:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:13"
																},
																"nativeSrc": "1766:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1766:12:13"
															},
															"nativeSrc": "1766:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1766:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1667:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1667:117:13"
											},
											{
												"body": {
													"nativeSrc": "1879:28:13",
													"nodeType": "YulBlock",
													"src": "1879:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1896:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1896:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1899:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1899:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1889:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:13"
																},
																"nativeSrc": "1889:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1889:12:13"
															},
															"nativeSrc": "1889:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1889:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1790:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1790:117:13"
											},
											{
												"body": {
													"nativeSrc": "1956:79:13",
													"nodeType": "YulBlock",
													"src": "1956:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:16:13",
																"nodeType": "YulBlock",
																"src": "2013:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2015:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:13"
																			},
																			"nativeSrc": "2015:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:12:13"
																		},
																		"nativeSrc": "2015:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2004:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2004:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1986:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1986:17:13"
																				},
																				"nativeSrc": "1986:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1986:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1976:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1976:2:13"
																		},
																		"nativeSrc": "1976:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1976:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1969:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:13"
																},
																"nativeSrc": "1969:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1969:43:13"
															},
															"nativeSrc": "1966:63:13",
															"nodeType": "YulIf",
															"src": "1966:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1913:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1949:5:13",
														"nodeType": "YulTypedName",
														"src": "1949:5:13",
														"type": ""
													}
												],
												"src": "1913:122:13"
											},
											{
												"body": {
													"nativeSrc": "2093:87:13",
													"nodeType": "YulBlock",
													"src": "2093:87:13",
													"statements": [
														{
															"nativeSrc": "2103:29:13",
															"nodeType": "YulAssignment",
															"src": "2103:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2125:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2112:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2112:12:13"
																},
																"nativeSrc": "2112:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2112:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2103:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2103:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2168:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2168:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2141:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2141:26:13"
																},
																"nativeSrc": "2141:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2141:33:13"
															},
															"nativeSrc": "2141:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2141:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2041:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2071:6:13",
														"nodeType": "YulTypedName",
														"src": "2071:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2079:3:13",
														"nodeType": "YulTypedName",
														"src": "2079:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2087:5:13",
														"nodeType": "YulTypedName",
														"src": "2087:5:13",
														"type": ""
													}
												],
												"src": "2041:139:13"
											},
											{
												"body": {
													"nativeSrc": "2269:391:13",
													"nodeType": "YulBlock",
													"src": "2269:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2315:83:13",
																"nodeType": "YulBlock",
																"src": "2315:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2317:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2317:77:13"
																			},
																			"nativeSrc": "2317:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2317:79:13"
																		},
																		"nativeSrc": "2317:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2290:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2290:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2299:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2299:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2286:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2286:3:13"
																		},
																		"nativeSrc": "2286:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2286:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2311:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2311:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2282:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:13"
																},
																"nativeSrc": "2282:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2282:32:13"
															},
															"nativeSrc": "2279:119:13",
															"nodeType": "YulIf",
															"src": "2279:119:13"
														},
														{
															"nativeSrc": "2408:117:13",
															"nodeType": "YulBlock",
															"src": "2408:117:13",
															"statements": [
																{
																	"nativeSrc": "2423:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2423:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2437:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2437:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2427:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2427:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2452:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2452:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2487:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2487:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2498:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2498:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2483:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2483:3:13"
																				},
																				"nativeSrc": "2483:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2483:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2507:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2507:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2462:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2462:20:13"
																		},
																		"nativeSrc": "2462:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2452:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2452:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2535:118:13",
															"nodeType": "YulBlock",
															"src": "2535:118:13",
															"statements": [
																{
																	"nativeSrc": "2550:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2550:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2564:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2564:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2554:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2554:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2580:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2580:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2615:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2615:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2626:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2626:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2611:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2611:3:13"
																				},
																				"nativeSrc": "2611:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2611:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2635:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2635:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2590:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2590:20:13"
																		},
																		"nativeSrc": "2590:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2590:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2580:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2580:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2186:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2231:9:13",
														"nodeType": "YulTypedName",
														"src": "2231:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2242:7:13",
														"nodeType": "YulTypedName",
														"src": "2242:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2254:6:13",
														"nodeType": "YulTypedName",
														"src": "2254:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2262:6:13",
														"nodeType": "YulTypedName",
														"src": "2262:6:13",
														"type": ""
													}
												],
												"src": "2186:474:13"
											},
											{
												"body": {
													"nativeSrc": "2711:81:13",
													"nodeType": "YulBlock",
													"src": "2711:81:13",
													"statements": [
														{
															"nativeSrc": "2721:65:13",
															"nodeType": "YulAssignment",
															"src": "2721:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2736:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2736:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2743:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2743:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2732:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:13"
																},
																"nativeSrc": "2732:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2732:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2721:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2721:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2666:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2693:5:13",
														"nodeType": "YulTypedName",
														"src": "2693:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2703:7:13",
														"nodeType": "YulTypedName",
														"src": "2703:7:13",
														"type": ""
													}
												],
												"src": "2666:126:13"
											},
											{
												"body": {
													"nativeSrc": "2843:51:13",
													"nodeType": "YulBlock",
													"src": "2843:51:13",
													"statements": [
														{
															"nativeSrc": "2853:35:13",
															"nodeType": "YulAssignment",
															"src": "2853:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2882:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2882:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2864:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2864:17:13"
																},
																"nativeSrc": "2864:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2864:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2853:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2853:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2798:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2825:5:13",
														"nodeType": "YulTypedName",
														"src": "2825:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2835:7:13",
														"nodeType": "YulTypedName",
														"src": "2835:7:13",
														"type": ""
													}
												],
												"src": "2798:96:13"
											},
											{
												"body": {
													"nativeSrc": "2943:79:13",
													"nodeType": "YulBlock",
													"src": "2943:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3000:16:13",
																"nodeType": "YulBlock",
																"src": "3000:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3009:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3009:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3012:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3012:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3002:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:13"
																			},
																			"nativeSrc": "3002:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3002:12:13"
																		},
																		"nativeSrc": "3002:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3002:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2966:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2966:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2991:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2991:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2973:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2973:17:13"
																				},
																				"nativeSrc": "2973:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2973:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2963:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2963:2:13"
																		},
																		"nativeSrc": "2963:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2956:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2956:6:13"
																},
																"nativeSrc": "2956:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2956:43:13"
															},
															"nativeSrc": "2953:63:13",
															"nodeType": "YulIf",
															"src": "2953:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2900:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:13",
														"nodeType": "YulTypedName",
														"src": "2936:5:13",
														"type": ""
													}
												],
												"src": "2900:122:13"
											},
											{
												"body": {
													"nativeSrc": "3080:87:13",
													"nodeType": "YulBlock",
													"src": "3080:87:13",
													"statements": [
														{
															"nativeSrc": "3090:29:13",
															"nodeType": "YulAssignment",
															"src": "3090:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3112:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3112:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3099:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3099:12:13"
																},
																"nativeSrc": "3099:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3099:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3090:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3090:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3155:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3155:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3128:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3128:26:13"
																},
																"nativeSrc": "3128:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3128:33:13"
															},
															"nativeSrc": "3128:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3128:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3028:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3058:6:13",
														"nodeType": "YulTypedName",
														"src": "3058:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3066:3:13",
														"nodeType": "YulTypedName",
														"src": "3066:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3074:5:13",
														"nodeType": "YulTypedName",
														"src": "3074:5:13",
														"type": ""
													}
												],
												"src": "3028:139:13"
											},
											{
												"body": {
													"nativeSrc": "3239:263:13",
													"nodeType": "YulBlock",
													"src": "3239:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3285:83:13",
																"nodeType": "YulBlock",
																"src": "3285:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3287:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3287:77:13"
																			},
																			"nativeSrc": "3287:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3287:79:13"
																		},
																		"nativeSrc": "3287:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3287:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3260:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3260:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3269:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3269:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3256:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3256:3:13"
																		},
																		"nativeSrc": "3256:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3281:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3281:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3252:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3252:3:13"
																},
																"nativeSrc": "3252:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3252:32:13"
															},
															"nativeSrc": "3249:119:13",
															"nodeType": "YulIf",
															"src": "3249:119:13"
														},
														{
															"nativeSrc": "3378:117:13",
															"nodeType": "YulBlock",
															"src": "3378:117:13",
															"statements": [
																{
																	"nativeSrc": "3393:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3393:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3407:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3407:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3397:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3397:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3422:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3422:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3457:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3457:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3468:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3468:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3453:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3453:3:13"
																				},
																				"nativeSrc": "3453:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3453:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3477:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3477:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3432:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3432:20:13"
																		},
																		"nativeSrc": "3432:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3432:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3422:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3422:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3173:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3209:9:13",
														"nodeType": "YulTypedName",
														"src": "3209:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3220:7:13",
														"nodeType": "YulTypedName",
														"src": "3220:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3232:6:13",
														"nodeType": "YulTypedName",
														"src": "3232:6:13",
														"type": ""
													}
												],
												"src": "3173:329:13"
											},
											{
												"body": {
													"nativeSrc": "3574:263:13",
													"nodeType": "YulBlock",
													"src": "3574:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3620:83:13",
																"nodeType": "YulBlock",
																"src": "3620:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3622:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3622:77:13"
																			},
																			"nativeSrc": "3622:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3622:79:13"
																		},
																		"nativeSrc": "3622:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3622:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3595:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3604:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3591:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:13"
																		},
																		"nativeSrc": "3591:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3591:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3616:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3616:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3587:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3587:3:13"
																},
																"nativeSrc": "3587:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3587:32:13"
															},
															"nativeSrc": "3584:119:13",
															"nodeType": "YulIf",
															"src": "3584:119:13"
														},
														{
															"nativeSrc": "3713:117:13",
															"nodeType": "YulBlock",
															"src": "3713:117:13",
															"statements": [
																{
																	"nativeSrc": "3728:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3728:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3742:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3742:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3732:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3732:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3757:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3757:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3792:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3792:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3803:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3803:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3788:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3788:3:13"
																				},
																				"nativeSrc": "3788:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3788:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3767:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3767:20:13"
																		},
																		"nativeSrc": "3767:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3757:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3757:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3508:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3544:9:13",
														"nodeType": "YulTypedName",
														"src": "3544:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3555:7:13",
														"nodeType": "YulTypedName",
														"src": "3555:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3567:6:13",
														"nodeType": "YulTypedName",
														"src": "3567:6:13",
														"type": ""
													}
												],
												"src": "3508:329:13"
											},
											{
												"body": {
													"nativeSrc": "3908:53:13",
													"nodeType": "YulBlock",
													"src": "3908:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3925:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3925:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3948:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3948:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3930:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3930:17:13"
																		},
																		"nativeSrc": "3930:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3930:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3918:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:13"
																},
																"nativeSrc": "3918:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3918:37:13"
															},
															"nativeSrc": "3918:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3918:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3843:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3896:5:13",
														"nodeType": "YulTypedName",
														"src": "3896:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3903:3:13",
														"nodeType": "YulTypedName",
														"src": "3903:3:13",
														"type": ""
													}
												],
												"src": "3843:118:13"
											},
											{
												"body": {
													"nativeSrc": "4065:124:13",
													"nodeType": "YulBlock",
													"src": "4065:124:13",
													"statements": [
														{
															"nativeSrc": "4075:26:13",
															"nodeType": "YulAssignment",
															"src": "4075:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4087:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4087:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4098:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4098:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4083:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4083:3:13"
																},
																"nativeSrc": "4083:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4083:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4075:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4075:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4155:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4155:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4168:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4168:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4179:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4179:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4164:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:13"
																		},
																		"nativeSrc": "4164:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4164:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4111:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4111:43:13"
																},
																"nativeSrc": "4111:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4111:71:13"
															},
															"nativeSrc": "4111:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4111:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3967:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4037:9:13",
														"nodeType": "YulTypedName",
														"src": "4037:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4049:6:13",
														"nodeType": "YulTypedName",
														"src": "4049:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4060:4:13",
														"nodeType": "YulTypedName",
														"src": "4060:4:13",
														"type": ""
													}
												],
												"src": "3967:222:13"
											},
											{
												"body": {
													"nativeSrc": "4237:48:13",
													"nodeType": "YulBlock",
													"src": "4237:48:13",
													"statements": [
														{
															"nativeSrc": "4247:32:13",
															"nodeType": "YulAssignment",
															"src": "4247:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4272:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4272:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4265:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4265:6:13"
																		},
																		"nativeSrc": "4265:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4265:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4258:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:13"
																},
																"nativeSrc": "4258:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4258:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4247:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4247:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4195:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4219:5:13",
														"nodeType": "YulTypedName",
														"src": "4219:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4229:7:13",
														"nodeType": "YulTypedName",
														"src": "4229:7:13",
														"type": ""
													}
												],
												"src": "4195:90:13"
											},
											{
												"body": {
													"nativeSrc": "4350:50:13",
													"nodeType": "YulBlock",
													"src": "4350:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4367:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4367:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4387:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4387:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4372:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "4372:14:13"
																		},
																		"nativeSrc": "4372:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4372:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4360:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:13"
																},
																"nativeSrc": "4360:34:13",
																"nodeType": "YulFunctionCall",
																"src": "4360:34:13"
															},
															"nativeSrc": "4360:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "4360:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4291:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4338:5:13",
														"nodeType": "YulTypedName",
														"src": "4338:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4345:3:13",
														"nodeType": "YulTypedName",
														"src": "4345:3:13",
														"type": ""
													}
												],
												"src": "4291:109:13"
											},
											{
												"body": {
													"nativeSrc": "4498:118:13",
													"nodeType": "YulBlock",
													"src": "4498:118:13",
													"statements": [
														{
															"nativeSrc": "4508:26:13",
															"nodeType": "YulAssignment",
															"src": "4508:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4520:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4520:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4516:3:13"
																},
																"nativeSrc": "4516:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4516:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4508:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4508:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4582:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4582:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4595:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4595:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4606:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4606:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4591:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:13"
																		},
																		"nativeSrc": "4591:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4591:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4544:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "4544:37:13"
																},
																"nativeSrc": "4544:65:13",
																"nodeType": "YulFunctionCall",
																"src": "4544:65:13"
															},
															"nativeSrc": "4544:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "4544:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4406:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4470:9:13",
														"nodeType": "YulTypedName",
														"src": "4470:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4482:6:13",
														"nodeType": "YulTypedName",
														"src": "4482:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4493:4:13",
														"nodeType": "YulTypedName",
														"src": "4493:4:13",
														"type": ""
													}
												],
												"src": "4406:210:13"
											},
											{
												"body": {
													"nativeSrc": "4654:28:13",
													"nodeType": "YulBlock",
													"src": "4654:28:13",
													"statements": [
														{
															"nativeSrc": "4664:12:13",
															"nodeType": "YulAssignment",
															"src": "4664:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4671:5:13",
																"nodeType": "YulIdentifier",
																"src": "4671:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4664:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4622:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4640:5:13",
														"nodeType": "YulTypedName",
														"src": "4640:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4650:3:13",
														"nodeType": "YulTypedName",
														"src": "4650:3:13",
														"type": ""
													}
												],
												"src": "4622:60:13"
											},
											{
												"body": {
													"nativeSrc": "4748:82:13",
													"nodeType": "YulBlock",
													"src": "4748:82:13",
													"statements": [
														{
															"nativeSrc": "4758:66:13",
															"nodeType": "YulAssignment",
															"src": "4758:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4816:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4816:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4798:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4798:17:13"
																				},
																				"nativeSrc": "4798:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4798:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4789:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "4789:8:13"
																		},
																		"nativeSrc": "4789:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4789:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4771:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4771:17:13"
																},
																"nativeSrc": "4771:53:13",
																"nodeType": "YulFunctionCall",
																"src": "4771:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4758:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4758:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4688:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4728:5:13",
														"nodeType": "YulTypedName",
														"src": "4728:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4738:9:13",
														"nodeType": "YulTypedName",
														"src": "4738:9:13",
														"type": ""
													}
												],
												"src": "4688:142:13"
											},
											{
												"body": {
													"nativeSrc": "4896:66:13",
													"nodeType": "YulBlock",
													"src": "4896:66:13",
													"statements": [
														{
															"nativeSrc": "4906:50:13",
															"nodeType": "YulAssignment",
															"src": "4906:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4950:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4950:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4919:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4919:30:13"
																},
																"nativeSrc": "4919:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4919:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4906:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4906:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4836:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4876:5:13",
														"nodeType": "YulTypedName",
														"src": "4876:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4886:9:13",
														"nodeType": "YulTypedName",
														"src": "4886:9:13",
														"type": ""
													}
												],
												"src": "4836:126:13"
											},
											{
												"body": {
													"nativeSrc": "5042:66:13",
													"nodeType": "YulBlock",
													"src": "5042:66:13",
													"statements": [
														{
															"nativeSrc": "5052:50:13",
															"nodeType": "YulAssignment",
															"src": "5052:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5096:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5096:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5065:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5065:30:13"
																},
																"nativeSrc": "5065:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5065:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5052:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5052:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nativeSrc": "4968:140:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5022:5:13",
														"nodeType": "YulTypedName",
														"src": "5022:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5032:9:13",
														"nodeType": "YulTypedName",
														"src": "5032:9:13",
														"type": ""
													}
												],
												"src": "4968:140:13"
											},
											{
												"body": {
													"nativeSrc": "5193:80:13",
													"nodeType": "YulBlock",
													"src": "5193:80:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5210:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5210:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5260:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5260:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nativeSrc": "5215:44:13",
																			"nodeType": "YulIdentifier",
																			"src": "5215:44:13"
																		},
																		"nativeSrc": "5215:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5215:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5203:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5203:6:13"
																},
																"nativeSrc": "5203:64:13",
																"nodeType": "YulFunctionCall",
																"src": "5203:64:13"
															},
															"nativeSrc": "5203:64:13",
															"nodeType": "YulExpressionStatement",
															"src": "5203:64:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nativeSrc": "5114:159:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5181:5:13",
														"nodeType": "YulTypedName",
														"src": "5181:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5188:3:13",
														"nodeType": "YulTypedName",
														"src": "5188:3:13",
														"type": ""
													}
												],
												"src": "5114:159:13"
											},
											{
												"body": {
													"nativeSrc": "5391:138:13",
													"nodeType": "YulBlock",
													"src": "5391:138:13",
													"statements": [
														{
															"nativeSrc": "5401:26:13",
															"nodeType": "YulAssignment",
															"src": "5401:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5413:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5413:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5424:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5409:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:13"
																},
																"nativeSrc": "5409:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5409:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5401:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5401:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5495:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5495:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5508:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5508:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5519:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5519:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5504:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5504:3:13"
																		},
																		"nativeSrc": "5504:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5504:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "5437:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "5437:57:13"
																},
																"nativeSrc": "5437:85:13",
																"nodeType": "YulFunctionCall",
																"src": "5437:85:13"
															},
															"nativeSrc": "5437:85:13",
															"nodeType": "YulExpressionStatement",
															"src": "5437:85:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "5279:250:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5363:9:13",
														"nodeType": "YulTypedName",
														"src": "5363:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5375:6:13",
														"nodeType": "YulTypedName",
														"src": "5375:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5386:4:13",
														"nodeType": "YulTypedName",
														"src": "5386:4:13",
														"type": ""
													}
												],
												"src": "5279:250:13"
											},
											{
												"body": {
													"nativeSrc": "5641:125:13",
													"nodeType": "YulBlock",
													"src": "5641:125:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5663:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5663:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5671:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5671:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5659:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5659:3:13"
																		},
																		"nativeSrc": "5659:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5659:14:13"
																	},
																	{
																		"hexValue": "53746f702074696d657374616d70206d75737420626520616674657220737461",
																		"kind": "string",
																		"nativeSrc": "5675:34:13",
																		"nodeType": "YulLiteral",
																		"src": "5675:34:13",
																		"type": "",
																		"value": "Stop timestamp must be after sta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5652:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:13"
																},
																"nativeSrc": "5652:58:13",
																"nodeType": "YulFunctionCall",
																"src": "5652:58:13"
															},
															"nativeSrc": "5652:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "5652:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5731:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5731:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5739:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5739:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5727:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5727:3:13"
																		},
																		"nativeSrc": "5727:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5727:15:13"
																	},
																	{
																		"hexValue": "72742074696d657374616d70",
																		"kind": "string",
																		"nativeSrc": "5744:14:13",
																		"nodeType": "YulLiteral",
																		"src": "5744:14:13",
																		"type": "",
																		"value": "rt timestamp"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5720:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:13"
																},
																"nativeSrc": "5720:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5720:39:13"
															},
															"nativeSrc": "5720:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "5720:39:13"
														}
													]
												},
												"name": "store_literal_in_memory_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc",
												"nativeSrc": "5535:231:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5633:6:13",
														"nodeType": "YulTypedName",
														"src": "5633:6:13",
														"type": ""
													}
												],
												"src": "5535:231:13"
											},
											{
												"body": {
													"nativeSrc": "5918:220:13",
													"nodeType": "YulBlock",
													"src": "5918:220:13",
													"statements": [
														{
															"nativeSrc": "5928:74:13",
															"nodeType": "YulAssignment",
															"src": "5928:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5994:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5994:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5999:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5999:2:13",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5935:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "5935:58:13"
																},
																"nativeSrc": "5935:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5935:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5928:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5928:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6100:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6100:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc",
																	"nativeSrc": "6011:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "6011:88:13"
																},
																"nativeSrc": "6011:93:13",
																"nodeType": "YulFunctionCall",
																"src": "6011:93:13"
															},
															"nativeSrc": "6011:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "6011:93:13"
														},
														{
															"nativeSrc": "6113:19:13",
															"nodeType": "YulAssignment",
															"src": "6113:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6124:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6124:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6129:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6129:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6120:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:13"
																},
																"nativeSrc": "6120:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6120:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6113:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5772:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5906:3:13",
														"nodeType": "YulTypedName",
														"src": "5906:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5914:3:13",
														"nodeType": "YulTypedName",
														"src": "5914:3:13",
														"type": ""
													}
												],
												"src": "5772:366:13"
											},
											{
												"body": {
													"nativeSrc": "6315:248:13",
													"nodeType": "YulBlock",
													"src": "6315:248:13",
													"statements": [
														{
															"nativeSrc": "6325:26:13",
															"nodeType": "YulAssignment",
															"src": "6325:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6337:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6337:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6348:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6333:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6333:3:13"
																},
																"nativeSrc": "6333:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6333:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6325:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6325:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6372:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6372:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6383:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6383:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6368:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:13"
																		},
																		"nativeSrc": "6368:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6368:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6391:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6391:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6397:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6397:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6387:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6387:3:13"
																		},
																		"nativeSrc": "6387:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6387:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6361:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:13"
																},
																"nativeSrc": "6361:47:13",
																"nodeType": "YulFunctionCall",
																"src": "6361:47:13"
															},
															"nativeSrc": "6361:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "6361:47:13"
														},
														{
															"nativeSrc": "6417:139:13",
															"nodeType": "YulAssignment",
															"src": "6417:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6551:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6551:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6425:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "6425:124:13"
																},
																"nativeSrc": "6425:131:13",
																"nodeType": "YulFunctionCall",
																"src": "6425:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6417:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6417:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6144:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6295:9:13",
														"nodeType": "YulTypedName",
														"src": "6295:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6310:4:13",
														"nodeType": "YulTypedName",
														"src": "6310:4:13",
														"type": ""
													}
												],
												"src": "6144:419:13"
											},
											{
												"body": {
													"nativeSrc": "6695:206:13",
													"nodeType": "YulBlock",
													"src": "6695:206:13",
													"statements": [
														{
															"nativeSrc": "6705:26:13",
															"nodeType": "YulAssignment",
															"src": "6705:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6717:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6717:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6728:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6728:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6713:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6713:3:13"
																},
																"nativeSrc": "6713:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6713:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6705:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6705:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6785:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6785:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6798:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6798:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6809:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6809:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6794:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6794:3:13"
																		},
																		"nativeSrc": "6794:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6794:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6741:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6741:43:13"
																},
																"nativeSrc": "6741:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6741:71:13"
															},
															"nativeSrc": "6741:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6741:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6866:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6866:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6879:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6879:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6890:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6890:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6875:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6875:3:13"
																		},
																		"nativeSrc": "6875:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6875:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6822:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6822:43:13"
																},
																"nativeSrc": "6822:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6822:72:13"
															},
															"nativeSrc": "6822:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6822:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6569:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6659:9:13",
														"nodeType": "YulTypedName",
														"src": "6659:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6671:6:13",
														"nodeType": "YulTypedName",
														"src": "6671:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6679:6:13",
														"nodeType": "YulTypedName",
														"src": "6679:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6690:4:13",
														"nodeType": "YulTypedName",
														"src": "6690:4:13",
														"type": ""
													}
												],
												"src": "6569:332:13"
											},
											{
												"body": {
													"nativeSrc": "6970:80:13",
													"nodeType": "YulBlock",
													"src": "6970:80:13",
													"statements": [
														{
															"nativeSrc": "6980:22:13",
															"nodeType": "YulAssignment",
															"src": "6980:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6995:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6995:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6989:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6989:5:13"
																},
																"nativeSrc": "6989:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6989:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6980:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6980:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7038:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7038:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7011:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "7011:26:13"
																},
																"nativeSrc": "7011:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7011:33:13"
															},
															"nativeSrc": "7011:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "7011:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6907:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6948:6:13",
														"nodeType": "YulTypedName",
														"src": "6948:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6956:3:13",
														"nodeType": "YulTypedName",
														"src": "6956:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6964:5:13",
														"nodeType": "YulTypedName",
														"src": "6964:5:13",
														"type": ""
													}
												],
												"src": "6907:143:13"
											},
											{
												"body": {
													"nativeSrc": "7133:274:13",
													"nodeType": "YulBlock",
													"src": "7133:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7179:83:13",
																"nodeType": "YulBlock",
																"src": "7179:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7181:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7181:77:13"
																			},
																			"nativeSrc": "7181:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7181:79:13"
																		},
																		"nativeSrc": "7181:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7181:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7154:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7154:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7163:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7163:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7150:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:13"
																		},
																		"nativeSrc": "7150:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7175:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7175:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7146:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:13"
																},
																"nativeSrc": "7146:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7146:32:13"
															},
															"nativeSrc": "7143:119:13",
															"nodeType": "YulIf",
															"src": "7143:119:13"
														},
														{
															"nativeSrc": "7272:128:13",
															"nodeType": "YulBlock",
															"src": "7272:128:13",
															"statements": [
																{
																	"nativeSrc": "7287:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7287:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7301:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7301:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7291:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7291:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7316:74:13",
																	"nodeType": "YulAssignment",
																	"src": "7316:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7362:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7362:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7373:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7373:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7358:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7358:3:13"
																				},
																				"nativeSrc": "7358:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7358:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7382:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7382:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7326:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "7326:31:13"
																		},
																		"nativeSrc": "7326:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7326:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7316:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7316:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7056:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7103:9:13",
														"nodeType": "YulTypedName",
														"src": "7103:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7114:7:13",
														"nodeType": "YulTypedName",
														"src": "7114:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7126:6:13",
														"nodeType": "YulTypedName",
														"src": "7126:6:13",
														"type": ""
													}
												],
												"src": "7056:351:13"
											},
											{
												"body": {
													"nativeSrc": "7519:65:13",
													"nodeType": "YulBlock",
													"src": "7519:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7541:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7541:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7549:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7549:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7537:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7537:3:13"
																		},
																		"nativeSrc": "7537:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7537:14:13"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "7553:23:13",
																		"nodeType": "YulLiteral",
																		"src": "7553:23:13",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7530:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:13"
																},
																"nativeSrc": "7530:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7530:47:13"
															},
															"nativeSrc": "7530:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "7530:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "7413:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7511:6:13",
														"nodeType": "YulTypedName",
														"src": "7511:6:13",
														"type": ""
													}
												],
												"src": "7413:171:13"
											},
											{
												"body": {
													"nativeSrc": "7736:220:13",
													"nodeType": "YulBlock",
													"src": "7736:220:13",
													"statements": [
														{
															"nativeSrc": "7746:74:13",
															"nodeType": "YulAssignment",
															"src": "7746:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7812:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7812:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7817:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7817:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7753:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7753:58:13"
																},
																"nativeSrc": "7753:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7753:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7746:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7746:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7918:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7918:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "7829:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "7829:88:13"
																},
																"nativeSrc": "7829:93:13",
																"nodeType": "YulFunctionCall",
																"src": "7829:93:13"
															},
															"nativeSrc": "7829:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "7829:93:13"
														},
														{
															"nativeSrc": "7931:19:13",
															"nodeType": "YulAssignment",
															"src": "7931:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7942:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7942:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7947:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7947:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7938:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:13"
																},
																"nativeSrc": "7938:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7938:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7931:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7931:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7590:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7724:3:13",
														"nodeType": "YulTypedName",
														"src": "7724:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7732:3:13",
														"nodeType": "YulTypedName",
														"src": "7732:3:13",
														"type": ""
													}
												],
												"src": "7590:366:13"
											},
											{
												"body": {
													"nativeSrc": "8133:248:13",
													"nodeType": "YulBlock",
													"src": "8133:248:13",
													"statements": [
														{
															"nativeSrc": "8143:26:13",
															"nodeType": "YulAssignment",
															"src": "8143:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8155:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8155:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8166:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8166:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8151:3:13"
																},
																"nativeSrc": "8151:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8151:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8143:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8143:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8190:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8190:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8201:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8201:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8186:3:13"
																		},
																		"nativeSrc": "8186:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8186:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8209:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8209:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8215:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8215:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8205:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8205:3:13"
																		},
																		"nativeSrc": "8205:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8205:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8179:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8179:6:13"
																},
																"nativeSrc": "8179:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8179:47:13"
															},
															"nativeSrc": "8179:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8179:47:13"
														},
														{
															"nativeSrc": "8235:139:13",
															"nodeType": "YulAssignment",
															"src": "8235:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8369:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8369:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8243:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8243:124:13"
																},
																"nativeSrc": "8243:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8243:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8235:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8235:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7962:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8113:9:13",
														"nodeType": "YulTypedName",
														"src": "8113:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8128:4:13",
														"nodeType": "YulTypedName",
														"src": "8128:4:13",
														"type": ""
													}
												],
												"src": "7962:419:13"
											},
											{
												"body": {
													"nativeSrc": "8493:118:13",
													"nodeType": "YulBlock",
													"src": "8493:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8515:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8515:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8523:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8523:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8511:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8511:3:13"
																		},
																		"nativeSrc": "8511:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8511:14:13"
																	},
																	{
																		"hexValue": "596f75206861766520616c726561647920636c61696d656420796f7572206169",
																		"kind": "string",
																		"nativeSrc": "8527:34:13",
																		"nodeType": "YulLiteral",
																		"src": "8527:34:13",
																		"type": "",
																		"value": "You have already claimed your ai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8504:6:13"
																},
																"nativeSrc": "8504:58:13",
																"nodeType": "YulFunctionCall",
																"src": "8504:58:13"
															},
															"nativeSrc": "8504:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "8504:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8583:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8583:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8591:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8591:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8579:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8579:3:13"
																		},
																		"nativeSrc": "8579:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8579:15:13"
																	},
																	{
																		"hexValue": "7264726f70",
																		"kind": "string",
																		"nativeSrc": "8596:7:13",
																		"nodeType": "YulLiteral",
																		"src": "8596:7:13",
																		"type": "",
																		"value": "rdrop"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8572:6:13"
																},
																"nativeSrc": "8572:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8572:32:13"
															},
															"nativeSrc": "8572:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "8572:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc",
												"nativeSrc": "8387:224:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8485:6:13",
														"nodeType": "YulTypedName",
														"src": "8485:6:13",
														"type": ""
													}
												],
												"src": "8387:224:13"
											},
											{
												"body": {
													"nativeSrc": "8763:220:13",
													"nodeType": "YulBlock",
													"src": "8763:220:13",
													"statements": [
														{
															"nativeSrc": "8773:74:13",
															"nodeType": "YulAssignment",
															"src": "8773:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8839:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8839:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8844:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8844:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8780:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "8780:58:13"
																},
																"nativeSrc": "8780:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8780:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8773:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8773:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8945:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8945:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc",
																	"nativeSrc": "8856:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8856:88:13"
																},
																"nativeSrc": "8856:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8856:93:13"
															},
															"nativeSrc": "8856:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8856:93:13"
														},
														{
															"nativeSrc": "8958:19:13",
															"nodeType": "YulAssignment",
															"src": "8958:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8969:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8969:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8974:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8974:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8965:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8965:3:13"
																},
																"nativeSrc": "8965:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8965:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8958:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8958:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8617:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8751:3:13",
														"nodeType": "YulTypedName",
														"src": "8751:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8759:3:13",
														"nodeType": "YulTypedName",
														"src": "8759:3:13",
														"type": ""
													}
												],
												"src": "8617:366:13"
											},
											{
												"body": {
													"nativeSrc": "9160:248:13",
													"nodeType": "YulBlock",
													"src": "9160:248:13",
													"statements": [
														{
															"nativeSrc": "9170:26:13",
															"nodeType": "YulAssignment",
															"src": "9170:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9182:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9182:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9193:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9193:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9178:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9178:3:13"
																},
																"nativeSrc": "9178:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9178:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9170:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9170:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9217:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9217:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9228:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9228:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9213:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9213:3:13"
																		},
																		"nativeSrc": "9213:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9213:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9236:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9236:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9242:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9242:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9232:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9232:3:13"
																		},
																		"nativeSrc": "9232:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9232:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9206:6:13"
																},
																"nativeSrc": "9206:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9206:47:13"
															},
															"nativeSrc": "9206:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9206:47:13"
														},
														{
															"nativeSrc": "9262:139:13",
															"nodeType": "YulAssignment",
															"src": "9262:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9396:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9396:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9270:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9270:124:13"
																},
																"nativeSrc": "9270:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9270:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9262:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9262:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8989:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9140:9:13",
														"nodeType": "YulTypedName",
														"src": "9140:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9155:4:13",
														"nodeType": "YulTypedName",
														"src": "9155:4:13",
														"type": ""
													}
												],
												"src": "8989:419:13"
											},
											{
												"body": {
													"nativeSrc": "9520:71:13",
													"nodeType": "YulBlock",
													"src": "9520:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9542:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9542:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9550:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9550:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9538:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9538:3:13"
																		},
																		"nativeSrc": "9538:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:14:13"
																	},
																	{
																		"hexValue": "41697264726f7020686173206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "9554:29:13",
																		"nodeType": "YulLiteral",
																		"src": "9554:29:13",
																		"type": "",
																		"value": "Airdrop has not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9531:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9531:6:13"
																},
																"nativeSrc": "9531:53:13",
																"nodeType": "YulFunctionCall",
																"src": "9531:53:13"
															},
															"nativeSrc": "9531:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "9531:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3",
												"nativeSrc": "9414:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9512:6:13",
														"nodeType": "YulTypedName",
														"src": "9512:6:13",
														"type": ""
													}
												],
												"src": "9414:177:13"
											},
											{
												"body": {
													"nativeSrc": "9743:220:13",
													"nodeType": "YulBlock",
													"src": "9743:220:13",
													"statements": [
														{
															"nativeSrc": "9753:74:13",
															"nodeType": "YulAssignment",
															"src": "9753:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9819:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9819:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9824:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9824:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9760:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9760:58:13"
																},
																"nativeSrc": "9760:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9760:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9753:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9753:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9925:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9925:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3",
																	"nativeSrc": "9836:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9836:88:13"
																},
																"nativeSrc": "9836:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9836:93:13"
															},
															"nativeSrc": "9836:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9836:93:13"
														},
														{
															"nativeSrc": "9938:19:13",
															"nodeType": "YulAssignment",
															"src": "9938:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9949:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9949:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9954:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9954:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9945:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9945:3:13"
																},
																"nativeSrc": "9945:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9945:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9938:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9938:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9597:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9731:3:13",
														"nodeType": "YulTypedName",
														"src": "9731:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9739:3:13",
														"nodeType": "YulTypedName",
														"src": "9739:3:13",
														"type": ""
													}
												],
												"src": "9597:366:13"
											},
											{
												"body": {
													"nativeSrc": "10140:248:13",
													"nodeType": "YulBlock",
													"src": "10140:248:13",
													"statements": [
														{
															"nativeSrc": "10150:26:13",
															"nodeType": "YulAssignment",
															"src": "10150:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10162:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10162:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10173:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10173:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10158:3:13"
																},
																"nativeSrc": "10158:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10158:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10150:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10150:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10197:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10197:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10208:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10208:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10193:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10193:3:13"
																		},
																		"nativeSrc": "10193:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10193:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10216:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10216:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10222:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10222:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10212:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10212:3:13"
																		},
																		"nativeSrc": "10212:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10212:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10186:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10186:6:13"
																},
																"nativeSrc": "10186:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10186:47:13"
															},
															"nativeSrc": "10186:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10186:47:13"
														},
														{
															"nativeSrc": "10242:139:13",
															"nodeType": "YulAssignment",
															"src": "10242:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10376:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10376:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10250:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10250:124:13"
																},
																"nativeSrc": "10250:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10250:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10242:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10242:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9969:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10120:9:13",
														"nodeType": "YulTypedName",
														"src": "10120:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10135:4:13",
														"nodeType": "YulTypedName",
														"src": "10135:4:13",
														"type": ""
													}
												],
												"src": "9969:419:13"
											},
											{
												"body": {
													"nativeSrc": "10500:69:13",
													"nodeType": "YulBlock",
													"src": "10500:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10522:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10522:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10530:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10530:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10518:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10518:3:13"
																		},
																		"nativeSrc": "10518:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10518:14:13"
																	},
																	{
																		"hexValue": "41697264726f702068617320616c726561647920656e646564",
																		"kind": "string",
																		"nativeSrc": "10534:27:13",
																		"nodeType": "YulLiteral",
																		"src": "10534:27:13",
																		"type": "",
																		"value": "Airdrop has already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10511:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10511:6:13"
																},
																"nativeSrc": "10511:51:13",
																"nodeType": "YulFunctionCall",
																"src": "10511:51:13"
															},
															"nativeSrc": "10511:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "10511:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248",
												"nativeSrc": "10394:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10492:6:13",
														"nodeType": "YulTypedName",
														"src": "10492:6:13",
														"type": ""
													}
												],
												"src": "10394:175:13"
											},
											{
												"body": {
													"nativeSrc": "10721:220:13",
													"nodeType": "YulBlock",
													"src": "10721:220:13",
													"statements": [
														{
															"nativeSrc": "10731:74:13",
															"nodeType": "YulAssignment",
															"src": "10731:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10797:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10797:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10802:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10802:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10738:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10738:58:13"
																},
																"nativeSrc": "10738:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10738:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10731:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10731:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10903:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10903:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248",
																	"nativeSrc": "10814:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10814:88:13"
																},
																"nativeSrc": "10814:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10814:93:13"
															},
															"nativeSrc": "10814:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10814:93:13"
														},
														{
															"nativeSrc": "10916:19:13",
															"nodeType": "YulAssignment",
															"src": "10916:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10927:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10927:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10932:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10932:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10923:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10923:3:13"
																},
																"nativeSrc": "10923:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10923:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10916:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10916:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10575:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10709:3:13",
														"nodeType": "YulTypedName",
														"src": "10709:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10717:3:13",
														"nodeType": "YulTypedName",
														"src": "10717:3:13",
														"type": ""
													}
												],
												"src": "10575:366:13"
											},
											{
												"body": {
													"nativeSrc": "11118:248:13",
													"nodeType": "YulBlock",
													"src": "11118:248:13",
													"statements": [
														{
															"nativeSrc": "11128:26:13",
															"nodeType": "YulAssignment",
															"src": "11128:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11140:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11140:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11151:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11151:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11136:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11136:3:13"
																},
																"nativeSrc": "11136:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11136:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11128:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11128:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11175:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11175:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11186:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11186:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11171:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11171:3:13"
																		},
																		"nativeSrc": "11171:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11171:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11194:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11194:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11200:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11200:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11190:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11190:3:13"
																		},
																		"nativeSrc": "11190:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11190:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11164:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:13"
																},
																"nativeSrc": "11164:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11164:47:13"
															},
															"nativeSrc": "11164:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11164:47:13"
														},
														{
															"nativeSrc": "11220:139:13",
															"nodeType": "YulAssignment",
															"src": "11220:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11354:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11354:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11228:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11228:124:13"
																},
																"nativeSrc": "11228:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11228:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11220:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11220:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10947:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11098:9:13",
														"nodeType": "YulTypedName",
														"src": "11098:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11113:4:13",
														"nodeType": "YulTypedName",
														"src": "11113:4:13",
														"type": ""
													}
												],
												"src": "10947:419:13"
											},
											{
												"body": {
													"nativeSrc": "11478:117:13",
													"nodeType": "YulBlock",
													"src": "11478:117:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11500:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11500:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11508:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11508:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11496:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11496:3:13"
																		},
																		"nativeSrc": "11496:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11496:14:13"
																	},
																	{
																		"hexValue": "496e76616c69642066656520616d6f756e74206f722061697264726f7020616d",
																		"kind": "string",
																		"nativeSrc": "11512:34:13",
																		"nodeType": "YulLiteral",
																		"src": "11512:34:13",
																		"type": "",
																		"value": "Invalid fee amount or airdrop am"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11489:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11489:6:13"
																},
																"nativeSrc": "11489:58:13",
																"nodeType": "YulFunctionCall",
																"src": "11489:58:13"
															},
															"nativeSrc": "11489:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "11489:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11568:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11568:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11576:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11576:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11564:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11564:3:13"
																		},
																		"nativeSrc": "11564:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11564:15:13"
																	},
																	{
																		"hexValue": "6f756e74",
																		"kind": "string",
																		"nativeSrc": "11581:6:13",
																		"nodeType": "YulLiteral",
																		"src": "11581:6:13",
																		"type": "",
																		"value": "ount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11557:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11557:6:13"
																},
																"nativeSrc": "11557:31:13",
																"nodeType": "YulFunctionCall",
																"src": "11557:31:13"
															},
															"nativeSrc": "11557:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "11557:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b",
												"nativeSrc": "11372:223:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11470:6:13",
														"nodeType": "YulTypedName",
														"src": "11470:6:13",
														"type": ""
													}
												],
												"src": "11372:223:13"
											},
											{
												"body": {
													"nativeSrc": "11747:220:13",
													"nodeType": "YulBlock",
													"src": "11747:220:13",
													"statements": [
														{
															"nativeSrc": "11757:74:13",
															"nodeType": "YulAssignment",
															"src": "11757:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11823:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11823:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11828:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11828:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11764:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11764:58:13"
																},
																"nativeSrc": "11764:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11764:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11757:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11757:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11929:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11929:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b",
																	"nativeSrc": "11840:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11840:88:13"
																},
																"nativeSrc": "11840:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11840:93:13"
															},
															"nativeSrc": "11840:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11840:93:13"
														},
														{
															"nativeSrc": "11942:19:13",
															"nodeType": "YulAssignment",
															"src": "11942:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11953:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11953:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11958:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11958:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11949:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11949:3:13"
																},
																"nativeSrc": "11949:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11949:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11942:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11942:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11601:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11735:3:13",
														"nodeType": "YulTypedName",
														"src": "11735:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11743:3:13",
														"nodeType": "YulTypedName",
														"src": "11743:3:13",
														"type": ""
													}
												],
												"src": "11601:366:13"
											},
											{
												"body": {
													"nativeSrc": "12144:248:13",
													"nodeType": "YulBlock",
													"src": "12144:248:13",
													"statements": [
														{
															"nativeSrc": "12154:26:13",
															"nodeType": "YulAssignment",
															"src": "12154:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12166:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12166:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12177:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12177:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12162:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:13"
																},
																"nativeSrc": "12162:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12162:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12154:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12154:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12201:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12201:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12212:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12212:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12197:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12197:3:13"
																		},
																		"nativeSrc": "12197:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12197:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12220:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12220:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12226:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12226:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12216:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12216:3:13"
																		},
																		"nativeSrc": "12216:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12216:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12190:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12190:6:13"
																},
																"nativeSrc": "12190:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12190:47:13"
															},
															"nativeSrc": "12190:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12190:47:13"
														},
														{
															"nativeSrc": "12246:139:13",
															"nodeType": "YulAssignment",
															"src": "12246:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12380:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12380:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12254:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12254:124:13"
																},
																"nativeSrc": "12254:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12254:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12246:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12246:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11973:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12124:9:13",
														"nodeType": "YulTypedName",
														"src": "12124:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12139:4:13",
														"nodeType": "YulTypedName",
														"src": "12139:4:13",
														"type": ""
													}
												],
												"src": "11973:419:13"
											},
											{
												"body": {
													"nativeSrc": "12426:152:13",
													"nodeType": "YulBlock",
													"src": "12426:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12443:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12446:77:13",
																		"nodeType": "YulLiteral",
																		"src": "12446:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12436:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:13"
																},
																"nativeSrc": "12436:88:13",
																"nodeType": "YulFunctionCall",
																"src": "12436:88:13"
															},
															"nativeSrc": "12436:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "12436:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12540:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12540:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12543:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12543:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12533:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12533:6:13"
																},
																"nativeSrc": "12533:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12533:15:13"
															},
															"nativeSrc": "12533:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12533:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12564:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12564:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12567:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12567:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12557:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12557:6:13"
																},
																"nativeSrc": "12557:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12557:15:13"
															},
															"nativeSrc": "12557:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12557:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12398:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "12398:180:13"
											},
											{
												"body": {
													"nativeSrc": "12629:149:13",
													"nodeType": "YulBlock",
													"src": "12629:149:13",
													"statements": [
														{
															"nativeSrc": "12639:25:13",
															"nodeType": "YulAssignment",
															"src": "12639:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12662:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12662:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12644:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12644:17:13"
																},
																"nativeSrc": "12644:20:13",
																"nodeType": "YulFunctionCall",
																"src": "12644:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12639:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "12639:1:13"
																}
															]
														},
														{
															"nativeSrc": "12673:25:13",
															"nodeType": "YulAssignment",
															"src": "12673:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12696:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12696:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12678:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12678:17:13"
																},
																"nativeSrc": "12678:20:13",
																"nodeType": "YulFunctionCall",
																"src": "12678:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12673:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "12673:1:13"
																}
															]
														},
														{
															"nativeSrc": "12707:17:13",
															"nodeType": "YulAssignment",
															"src": "12707:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12719:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12719:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12722:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12722:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12715:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12715:3:13"
																},
																"nativeSrc": "12715:9:13",
																"nodeType": "YulFunctionCall",
																"src": "12715:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12707:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12707:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12749:22:13",
																"nodeType": "YulBlock",
																"src": "12749:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12751:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12751:16:13"
																			},
																			"nativeSrc": "12751:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12751:18:13"
																		},
																		"nativeSrc": "12751:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12751:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12740:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12740:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12746:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12746:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12737:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12737:2:13"
																},
																"nativeSrc": "12737:11:13",
																"nodeType": "YulFunctionCall",
																"src": "12737:11:13"
															},
															"nativeSrc": "12734:37:13",
															"nodeType": "YulIf",
															"src": "12734:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12584:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12615:1:13",
														"nodeType": "YulTypedName",
														"src": "12615:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12618:1:13",
														"nodeType": "YulTypedName",
														"src": "12618:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12624:4:13",
														"nodeType": "YulTypedName",
														"src": "12624:4:13",
														"type": ""
													}
												],
												"src": "12584:194:13"
											},
											{
												"body": {
													"nativeSrc": "12890:61:13",
													"nodeType": "YulBlock",
													"src": "12890:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12912:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12912:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12920:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12920:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12908:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:13"
																		},
																		"nativeSrc": "12908:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12908:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f742073656c662d7265666572",
																		"kind": "string",
																		"nativeSrc": "12924:19:13",
																		"nodeType": "YulLiteral",
																		"src": "12924:19:13",
																		"type": "",
																		"value": "Cannot self-refer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12901:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12901:6:13"
																},
																"nativeSrc": "12901:43:13",
																"nodeType": "YulFunctionCall",
																"src": "12901:43:13"
															},
															"nativeSrc": "12901:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "12901:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a",
												"nativeSrc": "12784:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12882:6:13",
														"nodeType": "YulTypedName",
														"src": "12882:6:13",
														"type": ""
													}
												],
												"src": "12784:167:13"
											},
											{
												"body": {
													"nativeSrc": "13103:220:13",
													"nodeType": "YulBlock",
													"src": "13103:220:13",
													"statements": [
														{
															"nativeSrc": "13113:74:13",
															"nodeType": "YulAssignment",
															"src": "13113:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13179:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13179:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13184:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13184:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13120:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13120:58:13"
																},
																"nativeSrc": "13120:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13120:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13113:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13113:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13285:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13285:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a",
																	"nativeSrc": "13196:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13196:88:13"
																},
																"nativeSrc": "13196:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13196:93:13"
															},
															"nativeSrc": "13196:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13196:93:13"
														},
														{
															"nativeSrc": "13298:19:13",
															"nodeType": "YulAssignment",
															"src": "13298:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13309:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13309:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13314:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13314:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13305:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13305:3:13"
																},
																"nativeSrc": "13305:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13305:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13298:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13298:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12957:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13091:3:13",
														"nodeType": "YulTypedName",
														"src": "13091:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13099:3:13",
														"nodeType": "YulTypedName",
														"src": "13099:3:13",
														"type": ""
													}
												],
												"src": "12957:366:13"
											},
											{
												"body": {
													"nativeSrc": "13500:248:13",
													"nodeType": "YulBlock",
													"src": "13500:248:13",
													"statements": [
														{
															"nativeSrc": "13510:26:13",
															"nodeType": "YulAssignment",
															"src": "13510:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13522:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13522:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13533:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13533:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13518:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13518:3:13"
																},
																"nativeSrc": "13518:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13518:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13510:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13510:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13557:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13568:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13568:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13553:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:13"
																		},
																		"nativeSrc": "13553:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13553:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13576:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13576:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13582:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13582:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13572:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13572:3:13"
																		},
																		"nativeSrc": "13572:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13572:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13546:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13546:6:13"
																},
																"nativeSrc": "13546:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13546:47:13"
															},
															"nativeSrc": "13546:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13546:47:13"
														},
														{
															"nativeSrc": "13602:139:13",
															"nodeType": "YulAssignment",
															"src": "13602:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13736:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13736:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13610:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13610:124:13"
																},
																"nativeSrc": "13610:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13610:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13602:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13602:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13329:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13480:9:13",
														"nodeType": "YulTypedName",
														"src": "13480:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13495:4:13",
														"nodeType": "YulTypedName",
														"src": "13495:4:13",
														"type": ""
													}
												],
												"src": "13329:419:13"
											},
											{
												"body": {
													"nativeSrc": "13860:60:13",
													"nodeType": "YulBlock",
													"src": "13860:60:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13882:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13882:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13890:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13890:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13878:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13878:3:13"
																		},
																		"nativeSrc": "13878:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13878:14:13"
																	},
																	{
																		"hexValue": "496e76616c6964207265666572726572",
																		"kind": "string",
																		"nativeSrc": "13894:18:13",
																		"nodeType": "YulLiteral",
																		"src": "13894:18:13",
																		"type": "",
																		"value": "Invalid referrer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13871:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13871:6:13"
																},
																"nativeSrc": "13871:42:13",
																"nodeType": "YulFunctionCall",
																"src": "13871:42:13"
															},
															"nativeSrc": "13871:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "13871:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90",
												"nativeSrc": "13754:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13852:6:13",
														"nodeType": "YulTypedName",
														"src": "13852:6:13",
														"type": ""
													}
												],
												"src": "13754:166:13"
											},
											{
												"body": {
													"nativeSrc": "14072:220:13",
													"nodeType": "YulBlock",
													"src": "14072:220:13",
													"statements": [
														{
															"nativeSrc": "14082:74:13",
															"nodeType": "YulAssignment",
															"src": "14082:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14148:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14148:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14153:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14153:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14089:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "14089:58:13"
																},
																"nativeSrc": "14089:67:13",
																"nodeType": "YulFunctionCall",
																"src": "14089:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14082:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14082:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14254:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14254:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90",
																	"nativeSrc": "14165:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14165:88:13"
																},
																"nativeSrc": "14165:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14165:93:13"
															},
															"nativeSrc": "14165:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14165:93:13"
														},
														{
															"nativeSrc": "14267:19:13",
															"nodeType": "YulAssignment",
															"src": "14267:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14278:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14278:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14283:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14283:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14274:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14274:3:13"
																},
																"nativeSrc": "14274:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14274:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14267:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14267:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13926:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14060:3:13",
														"nodeType": "YulTypedName",
														"src": "14060:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14068:3:13",
														"nodeType": "YulTypedName",
														"src": "14068:3:13",
														"type": ""
													}
												],
												"src": "13926:366:13"
											},
											{
												"body": {
													"nativeSrc": "14469:248:13",
													"nodeType": "YulBlock",
													"src": "14469:248:13",
													"statements": [
														{
															"nativeSrc": "14479:26:13",
															"nodeType": "YulAssignment",
															"src": "14479:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14491:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14491:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14502:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14502:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14487:3:13"
																},
																"nativeSrc": "14487:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14487:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14479:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14479:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14526:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14526:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14537:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14537:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14522:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14522:3:13"
																		},
																		"nativeSrc": "14522:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14522:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14545:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14545:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14551:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14551:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14541:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14541:3:13"
																		},
																		"nativeSrc": "14541:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14541:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14515:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14515:6:13"
																},
																"nativeSrc": "14515:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14515:47:13"
															},
															"nativeSrc": "14515:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14515:47:13"
														},
														{
															"nativeSrc": "14571:139:13",
															"nodeType": "YulAssignment",
															"src": "14571:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14705:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14705:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14579:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14579:124:13"
																},
																"nativeSrc": "14579:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14579:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14571:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14571:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14298:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14449:9:13",
														"nodeType": "YulTypedName",
														"src": "14449:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14464:4:13",
														"nodeType": "YulTypedName",
														"src": "14464:4:13",
														"type": ""
													}
												],
												"src": "14298:419:13"
											},
											{
												"body": {
													"nativeSrc": "14829:72:13",
													"nodeType": "YulBlock",
													"src": "14829:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14851:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14851:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14859:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14859:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14847:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14847:3:13"
																		},
																		"nativeSrc": "14847:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14847:14:13"
																	},
																	{
																		"hexValue": "526566657272657220686173206e6f742079657420636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "14863:30:13",
																		"nodeType": "YulLiteral",
																		"src": "14863:30:13",
																		"type": "",
																		"value": "Referrer has not yet claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14840:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14840:6:13"
																},
																"nativeSrc": "14840:54:13",
																"nodeType": "YulFunctionCall",
																"src": "14840:54:13"
															},
															"nativeSrc": "14840:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "14840:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939",
												"nativeSrc": "14723:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14821:6:13",
														"nodeType": "YulTypedName",
														"src": "14821:6:13",
														"type": ""
													}
												],
												"src": "14723:178:13"
											},
											{
												"body": {
													"nativeSrc": "15053:220:13",
													"nodeType": "YulBlock",
													"src": "15053:220:13",
													"statements": [
														{
															"nativeSrc": "15063:74:13",
															"nodeType": "YulAssignment",
															"src": "15063:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15129:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15129:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15134:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15134:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15070:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15070:58:13"
																},
																"nativeSrc": "15070:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15070:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15063:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15063:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15235:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15235:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939",
																	"nativeSrc": "15146:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15146:88:13"
																},
																"nativeSrc": "15146:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15146:93:13"
															},
															"nativeSrc": "15146:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15146:93:13"
														},
														{
															"nativeSrc": "15248:19:13",
															"nodeType": "YulAssignment",
															"src": "15248:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15259:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15259:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15264:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15264:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15255:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15255:3:13"
																},
																"nativeSrc": "15255:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15255:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15248:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15248:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14907:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15041:3:13",
														"nodeType": "YulTypedName",
														"src": "15041:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15049:3:13",
														"nodeType": "YulTypedName",
														"src": "15049:3:13",
														"type": ""
													}
												],
												"src": "14907:366:13"
											},
											{
												"body": {
													"nativeSrc": "15450:248:13",
													"nodeType": "YulBlock",
													"src": "15450:248:13",
													"statements": [
														{
															"nativeSrc": "15460:26:13",
															"nodeType": "YulAssignment",
															"src": "15460:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15472:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15472:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15483:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15483:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15468:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15468:3:13"
																},
																"nativeSrc": "15468:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15468:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15460:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15460:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15507:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15507:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15518:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15518:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15503:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15503:3:13"
																		},
																		"nativeSrc": "15503:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15503:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15526:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15526:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15532:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15532:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15522:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15522:3:13"
																		},
																		"nativeSrc": "15522:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15522:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15496:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15496:6:13"
																},
																"nativeSrc": "15496:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15496:47:13"
															},
															"nativeSrc": "15496:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15496:47:13"
														},
														{
															"nativeSrc": "15552:139:13",
															"nodeType": "YulAssignment",
															"src": "15552:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15686:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15686:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15560:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15560:124:13"
																},
																"nativeSrc": "15560:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15560:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15552:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15552:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15279:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15430:9:13",
														"nodeType": "YulTypedName",
														"src": "15430:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15445:4:13",
														"nodeType": "YulTypedName",
														"src": "15445:4:13",
														"type": ""
													}
												],
												"src": "15279:419:13"
											},
											{
												"body": {
													"nativeSrc": "15810:122:13",
													"nodeType": "YulBlock",
													"src": "15810:122:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15832:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15832:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15840:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15840:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15828:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15828:3:13"
																		},
																		"nativeSrc": "15828:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15828:14:13"
																	},
																	{
																		"hexValue": "5265666572726572206861732072656163686564207468656972207265666572",
																		"kind": "string",
																		"nativeSrc": "15844:34:13",
																		"nodeType": "YulLiteral",
																		"src": "15844:34:13",
																		"type": "",
																		"value": "Referrer has reached their refer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15821:6:13"
																},
																"nativeSrc": "15821:58:13",
																"nodeType": "YulFunctionCall",
																"src": "15821:58:13"
															},
															"nativeSrc": "15821:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "15821:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15900:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15900:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15908:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15908:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15896:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15896:3:13"
																		},
																		"nativeSrc": "15896:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15896:15:13"
																	},
																	{
																		"hexValue": "72616c206c696d6974",
																		"kind": "string",
																		"nativeSrc": "15913:11:13",
																		"nodeType": "YulLiteral",
																		"src": "15913:11:13",
																		"type": "",
																		"value": "ral limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15889:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15889:6:13"
																},
																"nativeSrc": "15889:36:13",
																"nodeType": "YulFunctionCall",
																"src": "15889:36:13"
															},
															"nativeSrc": "15889:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "15889:36:13"
														}
													]
												},
												"name": "store_literal_in_memory_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606",
												"nativeSrc": "15704:228:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15802:6:13",
														"nodeType": "YulTypedName",
														"src": "15802:6:13",
														"type": ""
													}
												],
												"src": "15704:228:13"
											},
											{
												"body": {
													"nativeSrc": "16084:220:13",
													"nodeType": "YulBlock",
													"src": "16084:220:13",
													"statements": [
														{
															"nativeSrc": "16094:74:13",
															"nodeType": "YulAssignment",
															"src": "16094:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16160:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16160:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16165:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16165:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16101:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16101:58:13"
																},
																"nativeSrc": "16101:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16101:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16094:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16094:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16266:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16266:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606",
																	"nativeSrc": "16177:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16177:88:13"
																},
																"nativeSrc": "16177:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16177:93:13"
															},
															"nativeSrc": "16177:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16177:93:13"
														},
														{
															"nativeSrc": "16279:19:13",
															"nodeType": "YulAssignment",
															"src": "16279:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16290:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16290:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16295:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16295:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16286:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16286:3:13"
																},
																"nativeSrc": "16286:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16286:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16279:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16279:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15938:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16072:3:13",
														"nodeType": "YulTypedName",
														"src": "16072:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16080:3:13",
														"nodeType": "YulTypedName",
														"src": "16080:3:13",
														"type": ""
													}
												],
												"src": "15938:366:13"
											},
											{
												"body": {
													"nativeSrc": "16481:248:13",
													"nodeType": "YulBlock",
													"src": "16481:248:13",
													"statements": [
														{
															"nativeSrc": "16491:26:13",
															"nodeType": "YulAssignment",
															"src": "16491:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16503:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16503:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16514:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16514:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16499:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16499:3:13"
																},
																"nativeSrc": "16499:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16499:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16491:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16491:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16538:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16538:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16549:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16549:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16534:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16534:3:13"
																		},
																		"nativeSrc": "16534:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16534:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16557:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16557:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16563:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16563:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16553:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16553:3:13"
																		},
																		"nativeSrc": "16553:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16553:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16527:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16527:6:13"
																},
																"nativeSrc": "16527:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16527:47:13"
															},
															"nativeSrc": "16527:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16527:47:13"
														},
														{
															"nativeSrc": "16583:139:13",
															"nodeType": "YulAssignment",
															"src": "16583:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16717:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16717:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16591:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16591:124:13"
																},
																"nativeSrc": "16591:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16591:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16583:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16583:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16310:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16461:9:13",
														"nodeType": "YulTypedName",
														"src": "16461:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16476:4:13",
														"nodeType": "YulTypedName",
														"src": "16476:4:13",
														"type": ""
													}
												],
												"src": "16310:419:13"
											},
											{
												"body": {
													"nativeSrc": "16779:147:13",
													"nodeType": "YulBlock",
													"src": "16779:147:13",
													"statements": [
														{
															"nativeSrc": "16789:25:13",
															"nodeType": "YulAssignment",
															"src": "16789:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16812:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16812:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16794:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16794:17:13"
																},
																"nativeSrc": "16794:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16794:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16789:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16789:1:13"
																}
															]
														},
														{
															"nativeSrc": "16823:25:13",
															"nodeType": "YulAssignment",
															"src": "16823:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16846:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16846:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16828:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16828:17:13"
																},
																"nativeSrc": "16828:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16828:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16823:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16823:1:13"
																}
															]
														},
														{
															"nativeSrc": "16857:16:13",
															"nodeType": "YulAssignment",
															"src": "16857:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16868:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16868:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16871:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16871:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16864:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16864:3:13"
																},
																"nativeSrc": "16864:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16864:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16857:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16857:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16897:22:13",
																"nodeType": "YulBlock",
																"src": "16897:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16899:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16899:16:13"
																			},
																			"nativeSrc": "16899:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16899:18:13"
																		},
																		"nativeSrc": "16899:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16899:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16889:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16889:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16892:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16892:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16886:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16886:2:13"
																},
																"nativeSrc": "16886:10:13",
																"nodeType": "YulFunctionCall",
																"src": "16886:10:13"
															},
															"nativeSrc": "16883:36:13",
															"nodeType": "YulIf",
															"src": "16883:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16735:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16766:1:13",
														"nodeType": "YulTypedName",
														"src": "16766:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16769:1:13",
														"nodeType": "YulTypedName",
														"src": "16769:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16775:3:13",
														"nodeType": "YulTypedName",
														"src": "16775:3:13",
														"type": ""
													}
												],
												"src": "16735:191:13"
											},
											{
												"body": {
													"nativeSrc": "16975:190:13",
													"nodeType": "YulBlock",
													"src": "16975:190:13",
													"statements": [
														{
															"nativeSrc": "16985:33:13",
															"nodeType": "YulAssignment",
															"src": "16985:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17012:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17012:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16994:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16994:17:13"
																},
																"nativeSrc": "16994:24:13",
																"nodeType": "YulFunctionCall",
																"src": "16994:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16985:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16985:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17108:22:13",
																"nodeType": "YulBlock",
																"src": "17108:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17110:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "17110:16:13"
																			},
																			"nativeSrc": "17110:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17110:18:13"
																		},
																		"nativeSrc": "17110:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17110:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17033:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17033:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17040:66:13",
																		"nodeType": "YulLiteral",
																		"src": "17040:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17030:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17030:2:13"
																},
																"nativeSrc": "17030:77:13",
																"nodeType": "YulFunctionCall",
																"src": "17030:77:13"
															},
															"nativeSrc": "17027:103:13",
															"nodeType": "YulIf",
															"src": "17027:103:13"
														},
														{
															"nativeSrc": "17139:20:13",
															"nodeType": "YulAssignment",
															"src": "17139:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17150:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17150:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17157:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17157:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17146:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17146:3:13"
																},
																"nativeSrc": "17146:13:13",
																"nodeType": "YulFunctionCall",
																"src": "17146:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17139:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17139:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "16932:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16961:5:13",
														"nodeType": "YulTypedName",
														"src": "16961:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16971:3:13",
														"nodeType": "YulTypedName",
														"src": "16971:3:13",
														"type": ""
													}
												],
												"src": "16932:233:13"
											},
											{
												"body": {
													"nativeSrc": "17277:74:13",
													"nodeType": "YulBlock",
													"src": "17277:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17299:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17299:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17307:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17307:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17295:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17295:3:13"
																		},
																		"nativeSrc": "17295:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17295:14:13"
																	},
																	{
																		"hexValue": "546f74616c2061697264726f7020737570706c7920657868617573746564",
																		"kind": "string",
																		"nativeSrc": "17311:32:13",
																		"nodeType": "YulLiteral",
																		"src": "17311:32:13",
																		"type": "",
																		"value": "Total airdrop supply exhausted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17288:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17288:6:13"
																},
																"nativeSrc": "17288:56:13",
																"nodeType": "YulFunctionCall",
																"src": "17288:56:13"
															},
															"nativeSrc": "17288:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "17288:56:13"
														}
													]
												},
												"name": "store_literal_in_memory_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504",
												"nativeSrc": "17171:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17269:6:13",
														"nodeType": "YulTypedName",
														"src": "17269:6:13",
														"type": ""
													}
												],
												"src": "17171:180:13"
											},
											{
												"body": {
													"nativeSrc": "17503:220:13",
													"nodeType": "YulBlock",
													"src": "17503:220:13",
													"statements": [
														{
															"nativeSrc": "17513:74:13",
															"nodeType": "YulAssignment",
															"src": "17513:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17579:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17579:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17584:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17584:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17520:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17520:58:13"
																},
																"nativeSrc": "17520:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17520:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17513:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17513:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17685:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17685:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504",
																	"nativeSrc": "17596:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17596:88:13"
																},
																"nativeSrc": "17596:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17596:93:13"
															},
															"nativeSrc": "17596:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17596:93:13"
														},
														{
															"nativeSrc": "17698:19:13",
															"nodeType": "YulAssignment",
															"src": "17698:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17709:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17709:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17714:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17714:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17705:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17705:3:13"
																},
																"nativeSrc": "17705:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17705:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17698:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17698:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17357:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17491:3:13",
														"nodeType": "YulTypedName",
														"src": "17491:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17499:3:13",
														"nodeType": "YulTypedName",
														"src": "17499:3:13",
														"type": ""
													}
												],
												"src": "17357:366:13"
											},
											{
												"body": {
													"nativeSrc": "17900:248:13",
													"nodeType": "YulBlock",
													"src": "17900:248:13",
													"statements": [
														{
															"nativeSrc": "17910:26:13",
															"nodeType": "YulAssignment",
															"src": "17910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17922:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17922:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17933:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17918:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17918:3:13"
																},
																"nativeSrc": "17918:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17910:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17957:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17957:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17968:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17968:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17953:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17953:3:13"
																		},
																		"nativeSrc": "17953:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17953:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17976:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17976:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17982:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17982:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17972:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17972:3:13"
																		},
																		"nativeSrc": "17972:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17972:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17946:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17946:6:13"
																},
																"nativeSrc": "17946:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17946:47:13"
															},
															"nativeSrc": "17946:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17946:47:13"
														},
														{
															"nativeSrc": "18002:139:13",
															"nodeType": "YulAssignment",
															"src": "18002:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18136:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18136:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18010:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18010:124:13"
																},
																"nativeSrc": "18010:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18010:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18002:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18002:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17729:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17880:9:13",
														"nodeType": "YulTypedName",
														"src": "17880:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17895:4:13",
														"nodeType": "YulTypedName",
														"src": "17895:4:13",
														"type": ""
													}
												],
												"src": "17729:419:13"
											},
											{
												"body": {
													"nativeSrc": "18260:119:13",
													"nodeType": "YulBlock",
													"src": "18260:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18282:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18282:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18290:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18290:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18278:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18278:3:13"
																		},
																		"nativeSrc": "18278:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18278:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e636520696e20636f",
																		"kind": "string",
																		"nativeSrc": "18294:34:13",
																		"nodeType": "YulLiteral",
																		"src": "18294:34:13",
																		"type": "",
																		"value": "Insufficient token balance in co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18271:6:13"
																},
																"nativeSrc": "18271:58:13",
																"nodeType": "YulFunctionCall",
																"src": "18271:58:13"
															},
															"nativeSrc": "18271:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "18271:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18350:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18350:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18358:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18358:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18346:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18346:3:13"
																		},
																		"nativeSrc": "18346:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18346:15:13"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nativeSrc": "18363:8:13",
																		"nodeType": "YulLiteral",
																		"src": "18363:8:13",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18339:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18339:6:13"
																},
																"nativeSrc": "18339:33:13",
																"nodeType": "YulFunctionCall",
																"src": "18339:33:13"
															},
															"nativeSrc": "18339:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "18339:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13",
												"nativeSrc": "18154:225:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18252:6:13",
														"nodeType": "YulTypedName",
														"src": "18252:6:13",
														"type": ""
													}
												],
												"src": "18154:225:13"
											},
											{
												"body": {
													"nativeSrc": "18531:220:13",
													"nodeType": "YulBlock",
													"src": "18531:220:13",
													"statements": [
														{
															"nativeSrc": "18541:74:13",
															"nodeType": "YulAssignment",
															"src": "18541:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18607:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18607:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18612:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18612:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18548:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18548:58:13"
																},
																"nativeSrc": "18548:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18548:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18541:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18541:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18713:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18713:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13",
																	"nativeSrc": "18624:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18624:88:13"
																},
																"nativeSrc": "18624:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18624:93:13"
															},
															"nativeSrc": "18624:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18624:93:13"
														},
														{
															"nativeSrc": "18726:19:13",
															"nodeType": "YulAssignment",
															"src": "18726:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18737:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18737:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18742:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18742:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18733:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18733:3:13"
																},
																"nativeSrc": "18733:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18733:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18726:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18726:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18385:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18519:3:13",
														"nodeType": "YulTypedName",
														"src": "18519:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18527:3:13",
														"nodeType": "YulTypedName",
														"src": "18527:3:13",
														"type": ""
													}
												],
												"src": "18385:366:13"
											},
											{
												"body": {
													"nativeSrc": "18928:248:13",
													"nodeType": "YulBlock",
													"src": "18928:248:13",
													"statements": [
														{
															"nativeSrc": "18938:26:13",
															"nodeType": "YulAssignment",
															"src": "18938:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18950:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18950:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18961:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18961:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18946:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18946:3:13"
																},
																"nativeSrc": "18946:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18946:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18938:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18938:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18985:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18985:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18996:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18996:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18981:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18981:3:13"
																		},
																		"nativeSrc": "18981:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18981:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19004:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19004:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19010:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19010:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19000:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19000:3:13"
																		},
																		"nativeSrc": "19000:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19000:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18974:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18974:6:13"
																},
																"nativeSrc": "18974:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18974:47:13"
															},
															"nativeSrc": "18974:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18974:47:13"
														},
														{
															"nativeSrc": "19030:139:13",
															"nodeType": "YulAssignment",
															"src": "19030:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19164:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19164:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19038:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "19038:124:13"
																},
																"nativeSrc": "19038:131:13",
																"nodeType": "YulFunctionCall",
																"src": "19038:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19030:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19030:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18757:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18908:9:13",
														"nodeType": "YulTypedName",
														"src": "18908:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18923:4:13",
														"nodeType": "YulTypedName",
														"src": "18923:4:13",
														"type": ""
													}
												],
												"src": "18757:419:13"
											},
											{
												"body": {
													"nativeSrc": "19288:130:13",
													"nodeType": "YulBlock",
													"src": "19288:130:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19310:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19310:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19318:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19318:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19306:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19306:3:13"
																		},
																		"nativeSrc": "19306:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19306:14:13"
																	},
																	{
																		"hexValue": "4e657720737570706c792063616e6e6f74206265206c657373207468616e2064",
																		"kind": "string",
																		"nativeSrc": "19322:34:13",
																		"nodeType": "YulLiteral",
																		"src": "19322:34:13",
																		"type": "",
																		"value": "New supply cannot be less than d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19299:6:13"
																},
																"nativeSrc": "19299:58:13",
																"nodeType": "YulFunctionCall",
																"src": "19299:58:13"
															},
															"nativeSrc": "19299:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "19299:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19378:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19378:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19386:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19386:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19374:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19374:3:13"
																		},
																		"nativeSrc": "19374:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19374:15:13"
																	},
																	{
																		"hexValue": "6973747269627574656420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "19391:19:13",
																		"nodeType": "YulLiteral",
																		"src": "19391:19:13",
																		"type": "",
																		"value": "istributed tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19367:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19367:6:13"
																},
																"nativeSrc": "19367:44:13",
																"nodeType": "YulFunctionCall",
																"src": "19367:44:13"
															},
															"nativeSrc": "19367:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "19367:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc",
												"nativeSrc": "19182:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19280:6:13",
														"nodeType": "YulTypedName",
														"src": "19280:6:13",
														"type": ""
													}
												],
												"src": "19182:236:13"
											},
											{
												"body": {
													"nativeSrc": "19570:220:13",
													"nodeType": "YulBlock",
													"src": "19570:220:13",
													"statements": [
														{
															"nativeSrc": "19580:74:13",
															"nodeType": "YulAssignment",
															"src": "19580:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19646:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19646:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19651:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19651:2:13",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19587:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19587:58:13"
																},
																"nativeSrc": "19587:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19587:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19580:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19580:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19752:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19752:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc",
																	"nativeSrc": "19663:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19663:88:13"
																},
																"nativeSrc": "19663:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19663:93:13"
															},
															"nativeSrc": "19663:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19663:93:13"
														},
														{
															"nativeSrc": "19765:19:13",
															"nodeType": "YulAssignment",
															"src": "19765:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19781:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19781:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19772:3:13"
																},
																"nativeSrc": "19772:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19772:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19765:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19765:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19424:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19558:3:13",
														"nodeType": "YulTypedName",
														"src": "19558:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19566:3:13",
														"nodeType": "YulTypedName",
														"src": "19566:3:13",
														"type": ""
													}
												],
												"src": "19424:366:13"
											},
											{
												"body": {
													"nativeSrc": "19967:248:13",
													"nodeType": "YulBlock",
													"src": "19967:248:13",
													"statements": [
														{
															"nativeSrc": "19977:26:13",
															"nodeType": "YulAssignment",
															"src": "19977:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19989:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19989:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20000:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20000:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19985:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19985:3:13"
																},
																"nativeSrc": "19985:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19985:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19977:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19977:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20024:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20024:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20035:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20035:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20020:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20020:3:13"
																		},
																		"nativeSrc": "20020:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20020:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20043:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20043:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20049:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20049:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20039:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20039:3:13"
																		},
																		"nativeSrc": "20039:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20039:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20013:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20013:6:13"
																},
																"nativeSrc": "20013:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20013:47:13"
															},
															"nativeSrc": "20013:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20013:47:13"
														},
														{
															"nativeSrc": "20069:139:13",
															"nodeType": "YulAssignment",
															"src": "20069:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20203:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20203:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20077:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20077:124:13"
																},
																"nativeSrc": "20077:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20077:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20069:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20069:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19796:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19947:9:13",
														"nodeType": "YulTypedName",
														"src": "19947:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19962:4:13",
														"nodeType": "YulTypedName",
														"src": "19962:4:13",
														"type": ""
													}
												],
												"src": "19796:419:13"
											},
											{
												"body": {
													"nativeSrc": "20327:114:13",
													"nodeType": "YulBlock",
													"src": "20327:114:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20349:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20349:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20357:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20357:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20345:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20345:3:13"
																		},
																		"nativeSrc": "20345:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20345:14:13"
																	},
																	{
																		"hexValue": "4665652070657263656e746167652063616e6e6f742065786365656420313030",
																		"kind": "string",
																		"nativeSrc": "20361:34:13",
																		"nodeType": "YulLiteral",
																		"src": "20361:34:13",
																		"type": "",
																		"value": "Fee percentage cannot exceed 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20338:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20338:6:13"
																},
																"nativeSrc": "20338:58:13",
																"nodeType": "YulFunctionCall",
																"src": "20338:58:13"
															},
															"nativeSrc": "20338:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "20338:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20417:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20417:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20425:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20425:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20413:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20413:3:13"
																		},
																		"nativeSrc": "20413:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20413:15:13"
																	},
																	{
																		"hexValue": "25",
																		"kind": "string",
																		"nativeSrc": "20430:3:13",
																		"nodeType": "YulLiteral",
																		"src": "20430:3:13",
																		"type": "",
																		"value": "%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20406:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20406:6:13"
																},
																"nativeSrc": "20406:28:13",
																"nodeType": "YulFunctionCall",
																"src": "20406:28:13"
															},
															"nativeSrc": "20406:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "20406:28:13"
														}
													]
												},
												"name": "store_literal_in_memory_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950",
												"nativeSrc": "20221:220:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20319:6:13",
														"nodeType": "YulTypedName",
														"src": "20319:6:13",
														"type": ""
													}
												],
												"src": "20221:220:13"
											},
											{
												"body": {
													"nativeSrc": "20593:220:13",
													"nodeType": "YulBlock",
													"src": "20593:220:13",
													"statements": [
														{
															"nativeSrc": "20603:74:13",
															"nodeType": "YulAssignment",
															"src": "20603:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20669:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20669:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20674:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20674:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20610:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20610:58:13"
																},
																"nativeSrc": "20610:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20610:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20603:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20603:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20775:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20775:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950",
																	"nativeSrc": "20686:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20686:88:13"
																},
																"nativeSrc": "20686:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20686:93:13"
															},
															"nativeSrc": "20686:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20686:93:13"
														},
														{
															"nativeSrc": "20788:19:13",
															"nodeType": "YulAssignment",
															"src": "20788:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20799:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20799:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20804:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20804:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20795:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20795:3:13"
																},
																"nativeSrc": "20795:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20795:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20788:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20788:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20447:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20581:3:13",
														"nodeType": "YulTypedName",
														"src": "20581:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20589:3:13",
														"nodeType": "YulTypedName",
														"src": "20589:3:13",
														"type": ""
													}
												],
												"src": "20447:366:13"
											},
											{
												"body": {
													"nativeSrc": "20990:248:13",
													"nodeType": "YulBlock",
													"src": "20990:248:13",
													"statements": [
														{
															"nativeSrc": "21000:26:13",
															"nodeType": "YulAssignment",
															"src": "21000:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21012:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21012:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21023:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21023:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21008:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21008:3:13"
																},
																"nativeSrc": "21008:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21008:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21000:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21000:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21047:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21047:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21058:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21058:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21043:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21043:3:13"
																		},
																		"nativeSrc": "21043:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21043:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21066:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21066:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21072:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21072:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21062:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21062:3:13"
																		},
																		"nativeSrc": "21062:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21062:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21036:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21036:6:13"
																},
																"nativeSrc": "21036:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21036:47:13"
															},
															"nativeSrc": "21036:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21036:47:13"
														},
														{
															"nativeSrc": "21092:139:13",
															"nodeType": "YulAssignment",
															"src": "21092:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21226:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21226:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21100:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "21100:124:13"
																},
																"nativeSrc": "21100:131:13",
																"nodeType": "YulFunctionCall",
																"src": "21100:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21092:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21092:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20819:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20970:9:13",
														"nodeType": "YulTypedName",
														"src": "20970:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20985:4:13",
														"nodeType": "YulTypedName",
														"src": "20985:4:13",
														"type": ""
													}
												],
												"src": "20819:419:13"
											},
											{
												"body": {
													"nativeSrc": "21370:206:13",
													"nodeType": "YulBlock",
													"src": "21370:206:13",
													"statements": [
														{
															"nativeSrc": "21380:26:13",
															"nodeType": "YulAssignment",
															"src": "21380:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21392:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21392:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21403:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21403:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21388:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21388:3:13"
																},
																"nativeSrc": "21388:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21388:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21380:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21380:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21460:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21473:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21473:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21484:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21484:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21469:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21469:3:13"
																		},
																		"nativeSrc": "21469:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21469:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21416:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21416:43:13"
																},
																"nativeSrc": "21416:71:13",
																"nodeType": "YulFunctionCall",
																"src": "21416:71:13"
															},
															"nativeSrc": "21416:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "21416:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21541:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21541:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21554:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21554:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21565:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21565:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21550:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21550:3:13"
																		},
																		"nativeSrc": "21550:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21550:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21497:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21497:43:13"
																},
																"nativeSrc": "21497:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21497:72:13"
															},
															"nativeSrc": "21497:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21497:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21244:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21334:9:13",
														"nodeType": "YulTypedName",
														"src": "21334:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21346:6:13",
														"nodeType": "YulTypedName",
														"src": "21346:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21354:6:13",
														"nodeType": "YulTypedName",
														"src": "21354:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21365:4:13",
														"nodeType": "YulTypedName",
														"src": "21365:4:13",
														"type": ""
													}
												],
												"src": "21244:332:13"
											},
											{
												"body": {
													"nativeSrc": "21610:152:13",
													"nodeType": "YulBlock",
													"src": "21610:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21627:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21627:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21630:77:13",
																		"nodeType": "YulLiteral",
																		"src": "21630:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21620:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21620:6:13"
																},
																"nativeSrc": "21620:88:13",
																"nodeType": "YulFunctionCall",
																"src": "21620:88:13"
															},
															"nativeSrc": "21620:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "21620:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21724:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21724:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21727:4:13",
																		"nodeType": "YulLiteral",
																		"src": "21727:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21717:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21717:6:13"
																},
																"nativeSrc": "21717:15:13",
																"nodeType": "YulFunctionCall",
																"src": "21717:15:13"
															},
															"nativeSrc": "21717:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "21717:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21748:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21748:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21751:4:13",
																		"nodeType": "YulLiteral",
																		"src": "21751:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21741:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21741:6:13"
																},
																"nativeSrc": "21741:15:13",
																"nodeType": "YulFunctionCall",
																"src": "21741:15:13"
															},
															"nativeSrc": "21741:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "21741:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21582:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "21582:180:13"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH not accepted\")\n\n    }\n\n    function abi_encode_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stop timestamp must be after sta\")\n\n        mstore(add(memPtr, 32), \"rt timestamp\")\n\n    }\n\n    function abi_encode_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already claimed your ai\")\n\n        mstore(add(memPtr, 32), \"rdrop\")\n\n    }\n\n    function abi_encode_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Airdrop has not started yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248(memPtr) {\n\n        mstore(add(memPtr, 0), \"Airdrop has already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee amount or airdrop am\")\n\n        mstore(add(memPtr, 32), \"ount\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot self-refer\")\n\n    }\n\n    function abi_encode_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid referrer\")\n\n    }\n\n    function abi_encode_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939(memPtr) {\n\n        mstore(add(memPtr, 0), \"Referrer has not yet claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606(memPtr) {\n\n        mstore(add(memPtr, 0), \"Referrer has reached their refer\")\n\n        mstore(add(memPtr, 32), \"ral limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total airdrop supply exhausted\")\n\n    }\n\n    function abi_encode_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token balance in co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function abi_encode_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"New supply cannot be less than d\")\n\n        mstore(add(memPtr, 32), \"istributed tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee percentage cannot exceed 100\")\n\n        mstore(add(memPtr, 32), \"%\")\n\n    }\n\n    function abi_encode_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610143575f3560e01c80638da5cb5b116100b5578063c884ef831161006e578063c884ef831461041b578063cec297a014610457578063db24f2a314610493578063f2fde38b146104bd578063fc0c546a146104e5578063ff7345e51461050f57610183565b80638da5cb5b146103235780639a707d2f1461034d578063a49a176e14610375578063aeab26be1461039d578063b88bfd29146103c7578063bf31b33e146103f157610183565b80636305b715116101075780636305b7151461024157806365f8c6c51461026b5780636a1d871314610293578063715018a6146102bb578063747fc0d2146102d15780637e699a8c146102fb57610183565b806301c0e51d14610187578063152e84a7146101b15780631bcea05e146101db57806349df728c146102035780635b88349d1461022b57610183565b36610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a9061164c565b60405180910390fd5b5f5ffd5b348015610192575f5ffd5b5061019b610537565b6040516101a89190611682565b60405180910390f35b3480156101bc575f5ffd5b506101c561053d565b6040516101d29190611682565b60405180910390f35b3480156101e6575f5ffd5b5061020160048036038101906101fc91906116c9565b610543565b005b34801561020e575f5ffd5b5061022960048036038101906102249190611761565b6105dc565b005b348015610236575f5ffd5b5061023f610731565b005b34801561024c575f5ffd5b5061025561073c565b6040516102629190611682565b60405180910390f35b348015610276575f5ffd5b50610291600480360381019061028c9190611761565b610742565b005b34801561029e575f5ffd5b506102b960048036038101906102b4919061178c565b610ee0565b005b3480156102c6575f5ffd5b506102cf610f29565b005b3480156102dc575f5ffd5b506102e5610f3c565b6040516102f29190611682565b60405180910390f35b348015610306575f5ffd5b50610321600480360381019061031c919061178c565b610f42565b005b34801561032e575f5ffd5b50610337610fd0565b60405161034491906117c6565b60405180910390f35b348015610358575f5ffd5b50610373600480360381019061036e919061178c565b610ff7565b005b348015610380575f5ffd5b5061039b6004803603810190610396919061178c565b611040565b005b3480156103a8575f5ffd5b506103b16110cd565b6040516103be9190611682565b60405180910390f35b3480156103d2575f5ffd5b506103db6110d3565b6040516103e89190611682565b60405180910390f35b3480156103fc575f5ffd5b506104056110d9565b6040516104129190611682565b60405180910390f35b348015610426575f5ffd5b50610441600480360381019061043c9190611761565b6110df565b60405161044e91906117f9565b60405180910390f35b348015610462575f5ffd5b5061047d60048036038101906104789190611761565b6110fc565b60405161048a9190611682565b60405180910390f35b34801561049e575f5ffd5b506104a7611111565b6040516104b49190611682565b60405180910390f35b3480156104c8575f5ffd5b506104e360048036038101906104de9190611761565b611117565b005b3480156104f0575f5ffd5b506104f961119b565b604051610506919061186d565b60405180910390f35b34801561051a575f5ffd5b506105356004803603810190610530919061178c565b6111c0565b005b600c5481565b60085481565b61054b611209565b81811161058d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610584906118f6565b60405180910390fd5b81600b8190555080600c819055507f72c7f30f1add5c8b5e197b8cb57516b3abbd8e31bccb1845d4e716717944e80a600b54600c546040516105d0929190611914565b60405180910390a15050565b6105e4611209565b5f8190505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062291906117c6565b602060405180830381865afa15801561063d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610661919061194f565b90505f81116106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c906119c4565b60405180910390fd5b6106d76106b0610fd0565b828473ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b6106df610fd0565b73ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516107249190611682565b60405180910390a2505050565b61073a5f610742565b565b60045481565b61074a61130f565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611a52565b60405180910390fd5b600b54421015610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081090611aba565b60405180910390fd5b600c54421061085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490611b22565b60405180910390fd5b600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f6108c36003546005546064611355565b905060035481111561090a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090190611bb0565b60405180910390fd5b5f816003546109199190611bfb565b90505f8190505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610b9b573373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790611c78565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2590611ce0565b60405180910390fd5b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611d48565b60405180910390fd5b600954600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90611dd6565b60405180910390fd5b60045481610b469190611df4565b9050600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190610b9590611e27565b91905055505b60075481600854610bac9190611df4565b1115610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be490611eb8565b60405180910390fd5b8281610bf99190611df4565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c5391906117c6565b602060405180830381865afa158015610c6e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c92919061194f565b1015610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca90611f46565b60405180910390fd5b610d26610cde610fd0565b8460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b610d2e610fd0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f02e039d7ce7a1bacd02cebc742cfba63668424d700fe6ff9b5be6f9f5801be1585604051610d8a9190611682565b60405180910390a38060085f828254610da39190611df4565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610e2c57610e2b8460045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b5b610e78338360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112909092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe36722f357b07c721b246e0a5cb2fa0015c07ad3df67bca291504054a799839460405160405180910390a3505050610edd611434565b50565b610ee8611209565b806009819055507fcc368607de2345e055465e8d50d99a7d1e1e3ce7516a4175a2c513aad17b146081604051610f1e9190611682565b60405180910390a150565b610f31611209565b610f3a5f61143d565b565b60095481565b610f4a611209565b600854811015610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8690611fd4565b60405180910390fd5b806007819055507f45c69c62555cb8d911ac4f0a16fa83a65e4a2ff5c5a884c39969e8c8b97cb51081604051610fc59190611682565b60405180910390a150565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610fff611209565b806003819055507f91a9538a48b80f8854e68761beacb4468cb2ac0a50d634dec96417cddc019a14816040516110359190611682565b60405180910390a150565b611048611209565b606481111561108c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108390612062565b60405180910390fd5b806005819055507f6852fdb2f20cad76e9f34cb63f2f0f19b8d69a0673886404fc871917cd81198a816040516110c29190611682565b60405180910390a150565b60075481565b60055481565b60035481565b6006602052805f5260405f205f915054906101000a900460ff1681565b600a602052805f5260405f205f915090505481565b600b5481565b61111f611209565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361118f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161118691906117c6565b60405180910390fd5b6111988161143d565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111c8611209565b806004819055507fa8868231bcabae5003167c1566dce9258f36e5babecdd040da1ef6e04377e0e2816040516111fe9190611682565b60405180910390a150565b6112116114fe565b73ffffffffffffffffffffffffffffffffffffffff1661122f610fd0565b73ffffffffffffffffffffffffffffffffffffffff161461128e576112526114fe565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161128591906117c6565b60405180910390fd5b565b61130a838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016112c3929190612080565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611505565b505050565b60026001540361134b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b5f5f5f61136286866115a0565b915091505f82036113875783818161137d5761137c6120a7565b5b049250505061142d565b8184116113a6576113a56113a05f8614601260116115bd565b6115d6565b5b5f8486880990508181118303925080820391505f855f038616905080860495508083049250600181825f0304019050808402831792505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808402955050505050505b9392505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5f60205f8451602086015f885af180611524576040513d5f823e3d81fd5b3d92505f519150505f821461153d576001811415611558565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561159a57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161159191906117c6565b60405180910390fd5b50505050565b5f5f5f198385098385029150818110828203039250509250929050565b5f6115c7846115e7565b82841802821890509392505050565b634e487b715f52806020526024601cfd5b5f8115159050919050565b5f82825260208201905092915050565b7f455448206e6f74206163636570746564000000000000000000000000000000005f82015250565b5f6116366010836115f2565b915061164182611602565b602082019050919050565b5f6020820190508181035f8301526116638161162a565b9050919050565b5f819050919050565b61167c8161166a565b82525050565b5f6020820190506116955f830184611673565b92915050565b5f5ffd5b6116a88161166a565b81146116b2575f5ffd5b50565b5f813590506116c38161169f565b92915050565b5f5f604083850312156116df576116de61169b565b5b5f6116ec858286016116b5565b92505060206116fd858286016116b5565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61173082611707565b9050919050565b61174081611726565b811461174a575f5ffd5b50565b5f8135905061175b81611737565b92915050565b5f602082840312156117765761177561169b565b5b5f6117838482850161174d565b91505092915050565b5f602082840312156117a1576117a061169b565b5b5f6117ae848285016116b5565b91505092915050565b6117c081611726565b82525050565b5f6020820190506117d95f8301846117b7565b92915050565b5f8115159050919050565b6117f3816117df565b82525050565b5f60208201905061180c5f8301846117ea565b92915050565b5f819050919050565b5f61183561183061182b84611707565b611812565b611707565b9050919050565b5f6118468261181b565b9050919050565b5f6118578261183c565b9050919050565b6118678161184d565b82525050565b5f6020820190506118805f83018461185e565b92915050565b7f53746f702074696d657374616d70206d757374206265206166746572207374615f8201527f72742074696d657374616d700000000000000000000000000000000000000000602082015250565b5f6118e0602c836115f2565b91506118eb82611886565b604082019050919050565b5f6020820190508181035f83015261190d816118d4565b9050919050565b5f6040820190506119275f830185611673565b6119346020830184611673565b9392505050565b5f815190506119498161169f565b92915050565b5f602082840312156119645761196361169b565b5b5f6119718482850161193b565b91505092915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6119ae6015836115f2565b91506119b98261197a565b602082019050919050565b5f6020820190508181035f8301526119db816119a2565b9050919050565b7f596f75206861766520616c726561647920636c61696d656420796f75722061695f8201527f7264726f70000000000000000000000000000000000000000000000000000000602082015250565b5f611a3c6025836115f2565b9150611a47826119e2565b604082019050919050565b5f6020820190508181035f830152611a6981611a30565b9050919050565b7f41697264726f7020686173206e6f7420737461727465642079657400000000005f82015250565b5f611aa4601b836115f2565b9150611aaf82611a70565b602082019050919050565b5f6020820190508181035f830152611ad181611a98565b9050919050565b7f41697264726f702068617320616c726561647920656e646564000000000000005f82015250565b5f611b0c6019836115f2565b9150611b1782611ad8565b602082019050919050565b5f6020820190508181035f830152611b3981611b00565b9050919050565b7f496e76616c69642066656520616d6f756e74206f722061697264726f7020616d5f8201527f6f756e7400000000000000000000000000000000000000000000000000000000602082015250565b5f611b9a6024836115f2565b9150611ba582611b40565b604082019050919050565b5f6020820190508181035f830152611bc781611b8e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c058261166a565b9150611c108361166a565b9250828203905081811115611c2857611c27611bce565b5b92915050565b7f43616e6e6f742073656c662d72656665720000000000000000000000000000005f82015250565b5f611c626011836115f2565b9150611c6d82611c2e565b602082019050919050565b5f6020820190508181035f830152611c8f81611c56565b9050919050565b7f496e76616c6964207265666572726572000000000000000000000000000000005f82015250565b5f611cca6010836115f2565b9150611cd582611c96565b602082019050919050565b5f6020820190508181035f830152611cf781611cbe565b9050919050565b7f526566657272657220686173206e6f742079657420636c61696d6564000000005f82015250565b5f611d32601c836115f2565b9150611d3d82611cfe565b602082019050919050565b5f6020820190508181035f830152611d5f81611d26565b9050919050565b7f52656665727265722068617320726561636865642074686569722072656665725f8201527f72616c206c696d69740000000000000000000000000000000000000000000000602082015250565b5f611dc06029836115f2565b9150611dcb82611d66565b604082019050919050565b5f6020820190508181035f830152611ded81611db4565b9050919050565b5f611dfe8261166a565b9150611e098361166a565b9250828201905080821115611e2157611e20611bce565b5b92915050565b5f611e318261166a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e6357611e62611bce565b5b600182019050919050565b7f546f74616c2061697264726f7020737570706c792065786861757374656400005f82015250565b5f611ea2601e836115f2565b9150611ead82611e6e565b602082019050919050565b5f6020820190508181035f830152611ecf81611e96565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e636520696e20636f5f8201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b5f611f306026836115f2565b9150611f3b82611ed6565b604082019050919050565b5f6020820190508181035f830152611f5d81611f24565b9050919050565b7f4e657720737570706c792063616e6e6f74206265206c657373207468616e20645f8201527f6973747269627574656420746f6b656e73000000000000000000000000000000602082015250565b5f611fbe6031836115f2565b9150611fc982611f64565b604082019050919050565b5f6020820190508181035f830152611feb81611fb2565b9050919050565b7f4665652070657263656e746167652063616e6e6f7420657863656564203130305f8201527f2500000000000000000000000000000000000000000000000000000000000000602082015250565b5f61204c6021836115f2565b915061205782611ff2565b604082019050919050565b5f6020820190508181035f83015261207981612040565b9050919050565b5f6040820190506120935f8301856117b7565b6120a06020830184611673565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212202610b8c100f67d8896ed1b31f2e7844db3b7d1441463f37a83380bcc8ed0df6464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xC884EF83 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xDB24F2A3 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xFF7345E5 EQ PUSH2 0x50F JUMPI PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x9A707D2F EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xA49A176E EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xAEAB26BE EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xB88BFD29 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xBF31B33E EQ PUSH2 0x3F1 JUMPI PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH4 0x6305B715 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x6305B715 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6A1D8713 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x747FC0D2 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x7E699A8C EQ PUSH2 0x2FB JUMPI PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH4 0x1C0E51D EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x152E84A7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x1BCEA05E EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x49DF728C EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x22B JUMPI PUSH2 0x183 JUMP JUMPDEST CALLDATASIZE PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0xEE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xF29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0xFF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x1040 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x405 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x11C0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x54B PUSH2 0x1209 JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x72C7F30F1ADD5C8B5E197B8CB57516B3ABBD8E31BCCB1845D4E716717944E80A PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x1209 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D7 PUSH2 0x6B0 PUSH2 0xFD0 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6DF PUSH2 0xFD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x73A PUSH0 PUSH2 0x742 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x74A PUSH2 0x130F JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD TIMESTAMP LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x854 SWAP1 PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x8C3 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x64 PUSH2 0x1355 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA25 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB95 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST GT ISZERO PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST LT ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCA SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD26 PUSH2 0xCDE PUSH2 0xFD0 JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD2E PUSH2 0xFD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2E039D7CE7A1BACD02CEBC742CFBA63668424D700FE6FF9B5BE6F9F5801BE15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2C JUMPI PUSH2 0xE2B DUP5 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xE78 CALLER DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1290 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE36722F357B07C721B246E0A5CB2FA0015C07AD3DF67BCA291504054A7998394 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xEDD PUSH2 0x1434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEE8 PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xCC368607DE2345E055465E8D50D99A7D1E1E3CE7516A4175A2C513AAD17B1460 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xF31 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xF3A PUSH0 PUSH2 0x143D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF4A PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x45C69C62555CB8D911AC4F0A16FA83A65E4A2FF5C5A884C39969E8C8B97CB510 DUP2 PUSH1 0x40 MLOAD PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFFF PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x91A9538A48B80F8854E68761BEACB4468CB2AC0A50D634DEC96417CDDC019A14 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1048 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x6852FDB2F20CAD76E9F34CB63F2F0F19B8D69A0673886404FC871917CD81198A DUP2 PUSH1 0x40 MLOAD PUSH2 0x10C2 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x111F PUSH2 0x1209 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1198 DUP2 PUSH2 0x143D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x11C8 PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xA8868231BCABAE5003167C1566DCE9258F36E5BABECDD040DA1EF6E04377E0E2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1211 PUSH2 0x14FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x122F PUSH2 0xFD0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128E JUMPI PUSH2 0x1252 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1285 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x130A DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1505 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x1362 DUP7 DUP7 PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1387 JUMPI DUP4 DUP2 DUP2 PUSH2 0x137D JUMPI PUSH2 0x137C PUSH2 0x20A7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x142D JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x13A0 PUSH0 DUP7 EQ PUSH1 0x12 PUSH1 0x11 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP2 DUP2 GT DUP4 SUB SWAP3 POP DUP1 DUP3 SUB SWAP2 POP PUSH0 DUP6 PUSH0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP4 DIV SWAP3 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP5 MUL DUP4 OR SWAP3 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP5 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x153D JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1558 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x159A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1591 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 NOT DUP4 DUP6 MULMOD DUP4 DUP6 MUL SWAP2 POP DUP2 DUP2 LT DUP3 DUP3 SUB SUB SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15C7 DUP5 PUSH2 0x15E7 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x24 PUSH1 0x1C REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448206E6F7420616363657074656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1636 PUSH1 0x10 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1641 DUP3 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1663 DUP2 PUSH2 0x162A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x167C DUP2 PUSH2 0x166A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1695 PUSH0 DUP4 ADD DUP5 PUSH2 0x1673 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16A8 DUP2 PUSH2 0x166A JUMP JUMPDEST DUP2 EQ PUSH2 0x16B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C3 DUP2 PUSH2 0x169F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16EC DUP6 DUP3 DUP7 ADD PUSH2 0x16B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16FD DUP6 DUP3 DUP7 ADD PUSH2 0x16B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1730 DUP3 PUSH2 0x1707 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1740 DUP2 PUSH2 0x1726 JUMP JUMPDEST DUP2 EQ PUSH2 0x174A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175B DUP2 PUSH2 0x1737 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1783 DUP5 DUP3 DUP6 ADD PUSH2 0x174D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x17A0 PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17AE DUP5 DUP3 DUP6 ADD PUSH2 0x16B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C0 DUP2 PUSH2 0x1726 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F3 DUP2 PUSH2 0x17DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180C PUSH0 DUP4 ADD DUP5 PUSH2 0x17EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1835 PUSH2 0x1830 PUSH2 0x182B DUP5 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1707 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1846 DUP3 PUSH2 0x181B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1857 DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1867 DUP2 PUSH2 0x184D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1880 PUSH0 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53746F702074696D657374616D70206D75737420626520616674657220737461 PUSH0 DUP3 ADD MSTORE PUSH32 0x72742074696D657374616D700000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E0 PUSH1 0x2C DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EB DUP3 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190D DUP2 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1927 PUSH0 DUP4 ADD DUP6 PUSH2 0x1673 JUMP JUMPDEST PUSH2 0x1934 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1673 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1949 DUP2 PUSH2 0x169F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x169B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1971 DUP5 DUP3 DUP6 ADD PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19AE PUSH1 0x15 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B9 DUP3 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19DB DUP2 PUSH2 0x19A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C726561647920636C61696D656420796F7572206169 PUSH0 DUP3 ADD MSTORE PUSH32 0x7264726F70000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3C PUSH1 0x25 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A47 DUP3 PUSH2 0x19E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A69 DUP2 PUSH2 0x1A30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F7020686173206E6F742073746172746564207965740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA4 PUSH1 0x1B DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAF DUP3 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD1 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F702068617320616C726561647920656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0C PUSH1 0x19 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B17 DUP3 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B39 DUP2 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520616D6F756E74206F722061697264726F7020616D PUSH0 DUP3 ADD MSTORE PUSH32 0x6F756E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9A PUSH1 0x24 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA5 DUP3 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BC7 DUP2 PUSH2 0x1B8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C05 DUP3 PUSH2 0x166A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C10 DUP4 PUSH2 0x166A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742073656C662D7265666572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C62 PUSH1 0x11 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6D DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8F DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726566657272657200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCA PUSH1 0x10 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD5 DUP3 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CF7 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566657272657220686173206E6F742079657420636C61696D656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D32 PUSH1 0x1C DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3D DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5F DUP2 PUSH2 0x1D26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265666572726572206861732072656163686564207468656972207265666572 PUSH0 DUP3 ADD MSTORE PUSH32 0x72616C206C696D69740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC0 PUSH1 0x29 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP3 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFE DUP3 PUSH2 0x166A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E09 DUP4 PUSH2 0x166A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E21 JUMPI PUSH2 0x1E20 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E31 DUP3 PUSH2 0x166A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C2061697264726F7020737570706C79206578686175737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA2 PUSH1 0x1E DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAD DUP3 PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ECF DUP2 PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520696E20636F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F30 PUSH1 0x26 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3B DUP3 PUSH2 0x1ED6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F5D DUP2 PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720737570706C792063616E6E6F74206265206C657373207468616E2064 PUSH0 DUP3 ADD MSTORE PUSH32 0x6973747269627574656420746F6B656E73000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBE PUSH1 0x31 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC9 DUP3 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FEB DUP2 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665652070657263656E746167652063616E6E6F742065786365656420313030 PUSH0 DUP3 ADD MSTORE PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x204C PUSH1 0x21 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2057 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2079 DUP2 PUSH2 0x2040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2093 PUSH0 DUP4 ADD DUP6 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x20A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1673 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 LT 0xB8 0xC1 STOP 0xF6 PUSH30 0x8896ED1B31F2E7844DB3B7D1441463F37A83380BCC8ED0DF6464736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "561:9510:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4010:26;;;;;;;;;;:::i;:::-;;;;;;;;561:9510;;;;1800:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1421:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4304:352;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9735:333;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6725:74;;;;;;;;;;;;;:::i;:::-;;867:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7056:2429;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6415:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1529:27:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5893:357;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4826:168:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5489:247;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1289:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1043:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;774:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1161:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1642:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1764:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;690:19:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5152:174;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1800:28;;;;:::o;1421:32::-;;;;:::o;4304:352::-;1531:13:0;:11;:13::i;:::-;4431:15:12::1;4414:14;:32;4406:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;4523:15;4506:14;:32;;;;4565:14;4549:13;:30;;;;4595:53;4618:14;;4634:13;;4595:53;;;;;;;:::i;:::-;;;;;;;;4304:352:::0;;:::o;9735:333::-;1531:13:0;:11;:13::i;:::-;9810::12::1;9833;9810:37;;9858:15;9876:6;:16;;;9901:4;9876:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9858:49;;9936:1;9926:7;:11;9918:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;9974:37;9994:7;:5;:7::i;:::-;10003;9974:6;:19;;;;:37;;;;;:::i;:::-;10043:7;:5;:7::i;:::-;10027:33;;;10052:7;10027:33;;;;;;:::i;:::-;;;;;;;;9799:269;;9735:333:::0;:::o;6725:74::-;6767:24;6788:1;6767:12;:24::i;:::-;6725:74::o;867:34::-;;;;:::o;7056:2429::-;2500:21:8;:19;:21::i;:::-;7156:7:12::1;:19;7164:10;7156:19;;;;;;;;;;;;;;;;;;;;;;;;;7155:20;7147:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7255:14;;7236:15;:33;;7228:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7338:13;;7320:15;:31;7312:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7444:4;7422:7;:19;7430:10;7422:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;7486:17;7506:52;7518:17;;7537:15;;7554:3;7506:11;:52::i;:::-;7486:72;;7590:17;;7577:9;:30;;7569:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;7659:26;7708:9;7688:17;;:29;;;;:::i;:::-;7659:58;;7738:26;7767:18;7738:47;;7890:1;7869:23;;:9;:23;;;7865:733;;7930:10;7917:23;;:9;:23;;::::0;7909:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8006:4;7985:26;;:9;:26;;::::0;7977:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8177:7;:18;8185:9;8177:18;;;;;;;;;;;;;;;;;;;;;;;;;8169:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;8366:12;;8338:14;:25;8353:9;8338:25;;;;;;;;;;;;;;;;:40;8330:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;8463:19;;8441:41;;;;;:::i;:::-;;;8559:14;:25;8574:9;8559:25;;;;;;;;;;;;;;;;:27;;;;;;;;;:::i;:::-;;;;;;7865:733;8660:18;;8638;8618:17;;:38;;;;:::i;:::-;:60;;8610:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;9008:9;8987:18;:30;;;;:::i;:::-;8953:5;;;;;;;;;;;:15;;;8977:4;8953:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;8945:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;9081:38;9100:7;:5;:7::i;:::-;9109:9;9081:5;;;;;;;;;;;:18;;;;:38;;;;;:::i;:::-;9162:7;:5;:7::i;:::-;9135:46;;9150:10;9135:46;;;9171:9;9135:46;;;;;;:::i;:::-;;;;;;;;9215:18;9194:17;;:39;;;;;;;:::i;:::-;;;;;;;;9271:1;9250:23;;:9;:23;;;9246:106;;9290:50;9309:9;9320:19;;9290:5;;;;;;;;;;;:18;;;;:50;;;;;:::i;:::-;9246:106;9372:50;9391:10;9403:18;9372:5;;;;;;;;;;;:18;;;;:50;;;;;:::i;:::-;9467:9;9440:37;;9455:10;9440:37;;;;;;;;;;;;7117:2368;;;2542:20:8::0;:18;:20::i;:::-;7056:2429:12;:::o;6415:144::-;1531:13:0;:11;:13::i;:::-;6500:7:12::1;6485:12;:22;;;;6523:28;6543:7;6523:28;;;;;;:::i;:::-;;;;;;;;6415:144:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1529:27:12:-;;;;:::o;5893:357::-;1531:13:0;:11;:13::i;:::-;6076:17:12::1;;6062:10;:31;;6054:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;6179:10;6158:18;:31;;;;6205:37;6231:10;6205:37;;;;;;:::i;:::-;;;;;;;;5893:357:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4826:168:12:-;1531:13:0;:11;:13::i;:::-;4924:10:12::1;4904:17;:30;;;;4950:36;4975:10;4950:36;;;;;;:::i;:::-;;;;;;;;4826:168:::0;:::o;5489:247::-;1531:13:0;:11;:13::i;:::-;5595:3:12::1;5577:14;:21;;5569:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5665:14;5647:15;:32;;;;5695:33;5713:14;5695:33;;;;;;:::i;:::-;;;;;;;;5489:247:::0;:::o;1289:33::-;;;;:::o;1043:30::-;;;;:::o;774:32::-;;;;:::o;1161:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;1642:49::-;;;;;;;;;;;;;;;;;:::o;1764:29::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;690:19:12:-;;;;;;;;;;;;;:::o;5152:174::-;1531:13:0;:11;:13::i;:::-;5254:10:12::1;5232:19;:32;;;;5280:38;5307:10;5280:38;;;;;;:::i;:::-;;;;;;;;5152:174:::0;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1219:160:5:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2575:307:8:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;7242:3683:10:-;7324:14;7375:12;7389:11;7404:12;7411:1;7414;7404:6;:12::i;:::-;7374:42;;;;7506:1;7498:4;:9;7494:365;;7833:11;7827:3;:17;;;;;:::i;:::-;;;7820:24;;;;;;7494:365;7984:4;7969:11;:19;7965:142;;8008:84;8020:71;8043:1;8028:11;:16;1035:4:7;940;8020:7:10;:71::i;:::-;8008:11;:84::i;:::-;7965:142;8359:17;8510:11;8507:1;8504;8497:25;8484:38;;8636:3;8625:9;8622:18;8616:4;8612:29;8604:37;;8674:9;8669:3;8665:19;8658:26;;8902:12;8936:11;8932:1;:15;8917:11;:31;8902:46;;9084:4;9071:11;9067:22;9052:37;;9169:4;9164:3;9160:14;9153:21;;9330:1;9323:4;9316;9313:1;9309:12;9305:23;9301:31;9293:39;;9423:4;9416;:11;9409:18;;;;9762:15;9800:1;9785:11;9781:1;:15;9780:21;9762:39;;10047:7;10033:11;:21;10029:1;:25;10018:36;;;;10117:7;10103:11;:21;10099:1;:25;10088:36;;;;10189:7;10175:11;:21;10171:1;:25;10160:36;;;;10260:7;10246:11;:21;10242:1;:25;10231:36;;;;10333:7;10319:11;:21;10315:1;:25;10304:36;;;;10407:7;10393:11;:21;10389:1;:25;10378:36;;;;10874:7;10868:3;:13;10859:22;;10895:13;;;;;7242:3683;;;;;;:::o;2888:208:8:-;1857:1;3068:7;:21;;;;2888:208::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8370:720:5:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;1027:550:10:-;1088:12;1102:11;1478:1;1474:6;1471:1;1468;1461:20;1508:1;1505;1501:9;1494:16;;1556:3;1552:2;1549:11;1543:3;1539:2;1535:12;1531:30;1523:38;;1437:134;1027:550;;;;;:::o;5071:294::-;5149:7;5321:26;5337:9;5321:15;:26::i;:::-;5316:1;5312;:5;5311:36;5306:1;:42;5299:49;;5071:294;;;;;:::o;1776:194:7:-;1881:10;1875:4;1868:24;1918:4;1912;1905:18;1949:4;1943;1936:18;34795:145:11;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;7:169:13:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:166::-;322:18;318:1;310:6;306:14;299:42;182:166;:::o;354:366::-;496:3;517:67;581:2;576:3;517:67;:::i;:::-;510:74;;593:93;682:3;593:93;:::i;:::-;711:2;706:3;702:12;695:19;;354:366;;;:::o;726:419::-;892:4;930:2;919:9;915:18;907:26;;979:9;973:4;969:20;965:1;954:9;950:17;943:47;1007:131;1133:4;1007:131;:::i;:::-;999:139;;726:419;;;:::o;1151:77::-;1188:7;1217:5;1206:16;;1151:77;;;:::o;1234:118::-;1321:24;1339:5;1321:24;:::i;:::-;1316:3;1309:37;1234:118;;:::o;1358:222::-;1451:4;1489:2;1478:9;1474:18;1466:26;;1502:71;1570:1;1559:9;1555:17;1546:6;1502:71;:::i;:::-;1358:222;;;;:::o;1667:117::-;1776:1;1773;1766:12;1913:122;1986:24;2004:5;1986:24;:::i;:::-;1979:5;1976:35;1966:63;;2025:1;2022;2015:12;1966:63;1913:122;:::o;2041:139::-;2087:5;2125:6;2112:20;2103:29;;2141:33;2168:5;2141:33;:::i;:::-;2041:139;;;;:::o;2186:474::-;2254:6;2262;2311:2;2299:9;2290:7;2286:23;2282:32;2279:119;;;2317:79;;:::i;:::-;2279:119;2437:1;2462:53;2507:7;2498:6;2487:9;2483:22;2462:53;:::i;:::-;2452:63;;2408:117;2564:2;2590:53;2635:7;2626:6;2615:9;2611:22;2590:53;:::i;:::-;2580:63;;2535:118;2186:474;;;;;:::o;2666:126::-;2703:7;2743:42;2736:5;2732:54;2721:65;;2666:126;;;:::o;2798:96::-;2835:7;2864:24;2882:5;2864:24;:::i;:::-;2853:35;;2798:96;;;:::o;2900:122::-;2973:24;2991:5;2973:24;:::i;:::-;2966:5;2963:35;2953:63;;3012:1;3009;3002:12;2953:63;2900:122;:::o;3028:139::-;3074:5;3112:6;3099:20;3090:29;;3128:33;3155:5;3128:33;:::i;:::-;3028:139;;;;:::o;3173:329::-;3232:6;3281:2;3269:9;3260:7;3256:23;3252:32;3249:119;;;3287:79;;:::i;:::-;3249:119;3407:1;3432:53;3477:7;3468:6;3457:9;3453:22;3432:53;:::i;:::-;3422:63;;3378:117;3173:329;;;;:::o;3508:::-;3567:6;3616:2;3604:9;3595:7;3591:23;3587:32;3584:119;;;3622:79;;:::i;:::-;3584:119;3742:1;3767:53;3812:7;3803:6;3792:9;3788:22;3767:53;:::i;:::-;3757:63;;3713:117;3508:329;;;;:::o;3843:118::-;3930:24;3948:5;3930:24;:::i;:::-;3925:3;3918:37;3843:118;;:::o;3967:222::-;4060:4;4098:2;4087:9;4083:18;4075:26;;4111:71;4179:1;4168:9;4164:17;4155:6;4111:71;:::i;:::-;3967:222;;;;:::o;4195:90::-;4229:7;4272:5;4265:13;4258:21;4247:32;;4195:90;;;:::o;4291:109::-;4372:21;4387:5;4372:21;:::i;:::-;4367:3;4360:34;4291:109;;:::o;4406:210::-;4493:4;4531:2;4520:9;4516:18;4508:26;;4544:65;4606:1;4595:9;4591:17;4582:6;4544:65;:::i;:::-;4406:210;;;;:::o;4622:60::-;4650:3;4671:5;4664:12;;4622:60;;;:::o;4688:142::-;4738:9;4771:53;4789:34;4798:24;4816:5;4798:24;:::i;:::-;4789:34;:::i;:::-;4771:53;:::i;:::-;4758:66;;4688:142;;;:::o;4836:126::-;4886:9;4919:37;4950:5;4919:37;:::i;:::-;4906:50;;4836:126;;;:::o;4968:140::-;5032:9;5065:37;5096:5;5065:37;:::i;:::-;5052:50;;4968:140;;;:::o;5114:159::-;5215:51;5260:5;5215:51;:::i;:::-;5210:3;5203:64;5114:159;;:::o;5279:250::-;5386:4;5424:2;5413:9;5409:18;5401:26;;5437:85;5519:1;5508:9;5504:17;5495:6;5437:85;:::i;:::-;5279:250;;;;:::o;5535:231::-;5675:34;5671:1;5663:6;5659:14;5652:58;5744:14;5739:2;5731:6;5727:15;5720:39;5535:231;:::o;5772:366::-;5914:3;5935:67;5999:2;5994:3;5935:67;:::i;:::-;5928:74;;6011:93;6100:3;6011:93;:::i;:::-;6129:2;6124:3;6120:12;6113:19;;5772:366;;;:::o;6144:419::-;6310:4;6348:2;6337:9;6333:18;6325:26;;6397:9;6391:4;6387:20;6383:1;6372:9;6368:17;6361:47;6425:131;6551:4;6425:131;:::i;:::-;6417:139;;6144:419;;;:::o;6569:332::-;6690:4;6728:2;6717:9;6713:18;6705:26;;6741:71;6809:1;6798:9;6794:17;6785:6;6741:71;:::i;:::-;6822:72;6890:2;6879:9;6875:18;6866:6;6822:72;:::i;:::-;6569:332;;;;;:::o;6907:143::-;6964:5;6995:6;6989:13;6980:22;;7011:33;7038:5;7011:33;:::i;:::-;6907:143;;;;:::o;7056:351::-;7126:6;7175:2;7163:9;7154:7;7150:23;7146:32;7143:119;;;7181:79;;:::i;:::-;7143:119;7301:1;7326:64;7382:7;7373:6;7362:9;7358:22;7326:64;:::i;:::-;7316:74;;7272:128;7056:351;;;;:::o;7413:171::-;7553:23;7549:1;7541:6;7537:14;7530:47;7413:171;:::o;7590:366::-;7732:3;7753:67;7817:2;7812:3;7753:67;:::i;:::-;7746:74;;7829:93;7918:3;7829:93;:::i;:::-;7947:2;7942:3;7938:12;7931:19;;7590:366;;;:::o;7962:419::-;8128:4;8166:2;8155:9;8151:18;8143:26;;8215:9;8209:4;8205:20;8201:1;8190:9;8186:17;8179:47;8243:131;8369:4;8243:131;:::i;:::-;8235:139;;7962:419;;;:::o;8387:224::-;8527:34;8523:1;8515:6;8511:14;8504:58;8596:7;8591:2;8583:6;8579:15;8572:32;8387:224;:::o;8617:366::-;8759:3;8780:67;8844:2;8839:3;8780:67;:::i;:::-;8773:74;;8856:93;8945:3;8856:93;:::i;:::-;8974:2;8969:3;8965:12;8958:19;;8617:366;;;:::o;8989:419::-;9155:4;9193:2;9182:9;9178:18;9170:26;;9242:9;9236:4;9232:20;9228:1;9217:9;9213:17;9206:47;9270:131;9396:4;9270:131;:::i;:::-;9262:139;;8989:419;;;:::o;9414:177::-;9554:29;9550:1;9542:6;9538:14;9531:53;9414:177;:::o;9597:366::-;9739:3;9760:67;9824:2;9819:3;9760:67;:::i;:::-;9753:74;;9836:93;9925:3;9836:93;:::i;:::-;9954:2;9949:3;9945:12;9938:19;;9597:366;;;:::o;9969:419::-;10135:4;10173:2;10162:9;10158:18;10150:26;;10222:9;10216:4;10212:20;10208:1;10197:9;10193:17;10186:47;10250:131;10376:4;10250:131;:::i;:::-;10242:139;;9969:419;;;:::o;10394:175::-;10534:27;10530:1;10522:6;10518:14;10511:51;10394:175;:::o;10575:366::-;10717:3;10738:67;10802:2;10797:3;10738:67;:::i;:::-;10731:74;;10814:93;10903:3;10814:93;:::i;:::-;10932:2;10927:3;10923:12;10916:19;;10575:366;;;:::o;10947:419::-;11113:4;11151:2;11140:9;11136:18;11128:26;;11200:9;11194:4;11190:20;11186:1;11175:9;11171:17;11164:47;11228:131;11354:4;11228:131;:::i;:::-;11220:139;;10947:419;;;:::o;11372:223::-;11512:34;11508:1;11500:6;11496:14;11489:58;11581:6;11576:2;11568:6;11564:15;11557:31;11372:223;:::o;11601:366::-;11743:3;11764:67;11828:2;11823:3;11764:67;:::i;:::-;11757:74;;11840:93;11929:3;11840:93;:::i;:::-;11958:2;11953:3;11949:12;11942:19;;11601:366;;;:::o;11973:419::-;12139:4;12177:2;12166:9;12162:18;12154:26;;12226:9;12220:4;12216:20;12212:1;12201:9;12197:17;12190:47;12254:131;12380:4;12254:131;:::i;:::-;12246:139;;11973:419;;;:::o;12398:180::-;12446:77;12443:1;12436:88;12543:4;12540:1;12533:15;12567:4;12564:1;12557:15;12584:194;12624:4;12644:20;12662:1;12644:20;:::i;:::-;12639:25;;12678:20;12696:1;12678:20;:::i;:::-;12673:25;;12722:1;12719;12715:9;12707:17;;12746:1;12740:4;12737:11;12734:37;;;12751:18;;:::i;:::-;12734:37;12584:194;;;;:::o;12784:167::-;12924:19;12920:1;12912:6;12908:14;12901:43;12784:167;:::o;12957:366::-;13099:3;13120:67;13184:2;13179:3;13120:67;:::i;:::-;13113:74;;13196:93;13285:3;13196:93;:::i;:::-;13314:2;13309:3;13305:12;13298:19;;12957:366;;;:::o;13329:419::-;13495:4;13533:2;13522:9;13518:18;13510:26;;13582:9;13576:4;13572:20;13568:1;13557:9;13553:17;13546:47;13610:131;13736:4;13610:131;:::i;:::-;13602:139;;13329:419;;;:::o;13754:166::-;13894:18;13890:1;13882:6;13878:14;13871:42;13754:166;:::o;13926:366::-;14068:3;14089:67;14153:2;14148:3;14089:67;:::i;:::-;14082:74;;14165:93;14254:3;14165:93;:::i;:::-;14283:2;14278:3;14274:12;14267:19;;13926:366;;;:::o;14298:419::-;14464:4;14502:2;14491:9;14487:18;14479:26;;14551:9;14545:4;14541:20;14537:1;14526:9;14522:17;14515:47;14579:131;14705:4;14579:131;:::i;:::-;14571:139;;14298:419;;;:::o;14723:178::-;14863:30;14859:1;14851:6;14847:14;14840:54;14723:178;:::o;14907:366::-;15049:3;15070:67;15134:2;15129:3;15070:67;:::i;:::-;15063:74;;15146:93;15235:3;15146:93;:::i;:::-;15264:2;15259:3;15255:12;15248:19;;14907:366;;;:::o;15279:419::-;15445:4;15483:2;15472:9;15468:18;15460:26;;15532:9;15526:4;15522:20;15518:1;15507:9;15503:17;15496:47;15560:131;15686:4;15560:131;:::i;:::-;15552:139;;15279:419;;;:::o;15704:228::-;15844:34;15840:1;15832:6;15828:14;15821:58;15913:11;15908:2;15900:6;15896:15;15889:36;15704:228;:::o;15938:366::-;16080:3;16101:67;16165:2;16160:3;16101:67;:::i;:::-;16094:74;;16177:93;16266:3;16177:93;:::i;:::-;16295:2;16290:3;16286:12;16279:19;;15938:366;;;:::o;16310:419::-;16476:4;16514:2;16503:9;16499:18;16491:26;;16563:9;16557:4;16553:20;16549:1;16538:9;16534:17;16527:47;16591:131;16717:4;16591:131;:::i;:::-;16583:139;;16310:419;;;:::o;16735:191::-;16775:3;16794:20;16812:1;16794:20;:::i;:::-;16789:25;;16828:20;16846:1;16828:20;:::i;:::-;16823:25;;16871:1;16868;16864:9;16857:16;;16892:3;16889:1;16886:10;16883:36;;;16899:18;;:::i;:::-;16883:36;16735:191;;;;:::o;16932:233::-;16971:3;16994:24;17012:5;16994:24;:::i;:::-;16985:33;;17040:66;17033:5;17030:77;17027:103;;17110:18;;:::i;:::-;17027:103;17157:1;17150:5;17146:13;17139:20;;16932:233;;;:::o;17171:180::-;17311:32;17307:1;17299:6;17295:14;17288:56;17171:180;:::o;17357:366::-;17499:3;17520:67;17584:2;17579:3;17520:67;:::i;:::-;17513:74;;17596:93;17685:3;17596:93;:::i;:::-;17714:2;17709:3;17705:12;17698:19;;17357:366;;;:::o;17729:419::-;17895:4;17933:2;17922:9;17918:18;17910:26;;17982:9;17976:4;17972:20;17968:1;17957:9;17953:17;17946:47;18010:131;18136:4;18010:131;:::i;:::-;18002:139;;17729:419;;;:::o;18154:225::-;18294:34;18290:1;18282:6;18278:14;18271:58;18363:8;18358:2;18350:6;18346:15;18339:33;18154:225;:::o;18385:366::-;18527:3;18548:67;18612:2;18607:3;18548:67;:::i;:::-;18541:74;;18624:93;18713:3;18624:93;:::i;:::-;18742:2;18737:3;18733:12;18726:19;;18385:366;;;:::o;18757:419::-;18923:4;18961:2;18950:9;18946:18;18938:26;;19010:9;19004:4;19000:20;18996:1;18985:9;18981:17;18974:47;19038:131;19164:4;19038:131;:::i;:::-;19030:139;;18757:419;;;:::o;19182:236::-;19322:34;19318:1;19310:6;19306:14;19299:58;19391:19;19386:2;19378:6;19374:15;19367:44;19182:236;:::o;19424:366::-;19566:3;19587:67;19651:2;19646:3;19587:67;:::i;:::-;19580:74;;19663:93;19752:3;19663:93;:::i;:::-;19781:2;19776:3;19772:12;19765:19;;19424:366;;;:::o;19796:419::-;19962:4;20000:2;19989:9;19985:18;19977:26;;20049:9;20043:4;20039:20;20035:1;20024:9;20020:17;20013:47;20077:131;20203:4;20077:131;:::i;:::-;20069:139;;19796:419;;;:::o;20221:220::-;20361:34;20357:1;20349:6;20345:14;20338:58;20430:3;20425:2;20417:6;20413:15;20406:28;20221:220;:::o;20447:366::-;20589:3;20610:67;20674:2;20669:3;20610:67;:::i;:::-;20603:74;;20686:93;20775:3;20686:93;:::i;:::-;20804:2;20799:3;20795:12;20788:19;;20447:366;;;:::o;20819:419::-;20985:4;21023:2;21012:9;21008:18;21000:26;;21072:9;21066:4;21062:20;21058:1;21047:9;21043:17;21036:47;21100:131;21226:4;21100:131;:::i;:::-;21092:139;;20819:419;;;:::o;21244:332::-;21365:4;21403:2;21392:9;21388:18;21380:26;;21416:71;21484:1;21473:9;21469:17;21460:6;21416:71;:::i;:::-;21497:72;21565:2;21554:9;21550:18;21541:6;21497:72;:::i;:::-;21244:332;;;;;:::o;21582:180::-;21630:77;21627:1;21620:88;21727:4;21724:1;21717:15;21751:4;21748:1;21741:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1691600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimAirdrop()": "infinite",
								"claimAirdrop(address)": "infinite",
								"claimFeePercent()": "2536",
								"claimed(address)": "2855",
								"mainAirdropAmount()": "2558",
								"maxReferrals()": "2536",
								"owner()": "2537",
								"referralBonusAmount()": "2448",
								"referralCounts(address)": "2846",
								"renounceOwnership()": "infinite",
								"scheduleAirdrop(uint256,uint256)": "infinite",
								"setClaimFeePercent(uint256)": "infinite",
								"setMainAirdropAmount(uint256)": "infinite",
								"setMaxReferrals(uint256)": "infinite",
								"setReferralBonusAmount(uint256)": "infinite",
								"setTotalAirdropSupply(uint256)": "infinite",
								"startAirdropAt()": "2491",
								"stopAirdropAt()": "2449",
								"token()": "infinite",
								"tokensDistributed()": "2471",
								"totalAirdropSupply()": "2514",
								"transferOwnership(address)": "infinite",
								"withdrawTokens(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 561,
									"end": 10071,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3101,
									"end": 3781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3337,
									"end": 3347,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3393,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3368,
									"end": 3395,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3368,
									"end": 3395,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3368,
									"end": 3381,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3368,
									"end": 3395,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3368,
									"end": 3395,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3368,
									"end": 3395,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 3360,
									"end": 3428,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3360,
									"end": 3428,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3454,
									"end": 3467,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3444,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3439,
									"end": 3444,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3468,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3524,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3496,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3479,
									"end": 3524,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3524,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3524,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3524,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3557,
									"end": 3584,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3535,
									"end": 3554,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3535,
									"end": 3584,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3535,
									"end": 3584,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3535,
									"end": 3584,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3535,
									"end": 3584,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3613,
									"end": 3636,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3610,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 3595,
									"end": 3636,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3636,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3636,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3636,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3668,
									"end": 3694,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3647,
									"end": 3665,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3647,
									"end": 3694,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3647,
									"end": 3694,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3647,
									"end": 3694,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3647,
									"end": 3694,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 3723,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F4"
								},
								{
									"begin": 3705,
									"end": 3717,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 3705,
									"end": 3723,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3705,
									"end": 3723,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3705,
									"end": 3723,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3705,
									"end": 3723,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3101,
									"end": 3781,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 1380,
									"end": 1389,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1367,
									"end": 1390,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1363,
									"end": 1396,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1399,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1600,
									"end": 1607,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1576,
									"end": 1598,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1544,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1618,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1739,
									"end": 1746,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1736,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1737,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1683,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1796,
									"end": 1798,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1822,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1896,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1935,
									"end": 1937,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2008,
									"end": 2014,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1993,
									"end": 2015,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1961,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1906,
									"end": 2035,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2074,
									"end": 2077,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 2157,
									"end": 2164,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2101,
									"end": 2165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2045,
									"end": 2175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 2293,
									"end": 2298,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2275,
									"end": 2299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2270,
									"end": 2273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2263,
									"end": 2300,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2405,
									"end": 2409,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2443,
									"end": 2445,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2432,
									"end": 2441,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2428,
									"end": 2446,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2522,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2509,
									"end": 2526,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2456,
									"end": 2527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2312,
									"end": 2534,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2635,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2658,
									"end": 2664,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2653,
									"end": 2656,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2646,
									"end": 2665,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2698,
									"end": 2702,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2693,
									"end": 2696,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 2703,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2674,
									"end": 2703,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2674,
									"end": 2703,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2540,
									"end": 2709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2893,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2715,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2855,
									"end": 2885,
									"name": "PUSH",
									"source": 13,
									"value": "546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000"
								},
								{
									"begin": 2851,
									"end": 2852,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2843,
									"end": 2849,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2839,
									"end": 2853,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2832,
									"end": 2886,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2893,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2893,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2899,
									"end": 3265,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2899,
									"end": 3265,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3044,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3062,
									"end": 3129,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 3126,
									"end": 3128,
									"name": "PUSH",
									"source": 13,
									"value": "1C"
								},
								{
									"begin": 3121,
									"end": 3124,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3062,
									"end": 3129,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 3062,
									"end": 3129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3062,
									"end": 3129,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 3062,
									"end": 3129,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3055,
									"end": 3129,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3055,
									"end": 3129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 3138,
									"end": 3231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3256,
									"end": 3258,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3251,
									"end": 3254,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3247,
									"end": 3259,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3240,
									"end": 3259,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3240,
									"end": 3259,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2899,
									"end": 3265,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2899,
									"end": 3265,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2899,
									"end": 3265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2899,
									"end": 3265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3271,
									"end": 3690,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 3271,
									"end": 3690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3437,
									"end": 3441,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3477,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3464,
									"end": 3473,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3460,
									"end": 3478,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3452,
									"end": 3478,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3452,
									"end": 3478,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3524,
									"end": 3533,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3518,
									"end": 3522,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3514,
									"end": 3534,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3510,
									"end": 3511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3499,
									"end": 3508,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3512,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3488,
									"end": 3535,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3552,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 3678,
									"end": 3682,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3552,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 3552,
									"end": 3683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3552,
									"end": 3683,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 3552,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3544,
									"end": 3683,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3544,
									"end": 3683,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3271,
									"end": 3690,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3271,
									"end": 3690,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3271,
									"end": 3690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3271,
									"end": 3690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 10071,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202610b8c100f67d8896ed1b31f2e7844db3b7d1441463f37a83380bcc8ed0df6464736f6c634300081e0033",
									".code": [
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "C884EF83"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "C884EF83"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "CEC297A0"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "DB24F2A3"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "FC0C546A"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "FF7345E5"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "9A707D2F"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "A49A176E"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "AEAB26BE"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "B88BFD29"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "BF31B33E"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "6305B715"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "6305B715"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "65F8C6C5"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "6A1D8713"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "747FC0D2"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "7E699A8C"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "1C0E51D"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "152E84A7"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "1BCEA05E"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "49DF728C"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "5B88349D"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 4010,
											"end": 4036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 10071,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1800,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1800,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1421,
											"end": 1453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 4304,
											"end": 4656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 4304,
											"end": 4656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 9735,
											"end": 10068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 9735,
											"end": 10068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 6725,
											"end": 6799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 867,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 867,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 7056,
											"end": 9485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 7056,
											"end": 9485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 6415,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 6415,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1529,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1529,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 5893,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 5893,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4826,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4826,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 5489,
											"end": 5736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5489,
											"end": 5736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1289,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1289,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1043,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1043,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 774,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 774,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1161,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1161,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1161,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1642,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1642,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1642,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1764,
											"end": 1793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1764,
											"end": 1793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 709,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 690,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 690,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 5152,
											"end": 5326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 5152,
											"end": 5326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4414,
											"end": 4446,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 4406,
											"end": 4495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 4406,
											"end": 4495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4523,
											"end": 4538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4506,
											"end": 4538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4565,
											"end": 4579,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4549,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4549,
											"end": 4579,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4549,
											"end": 4579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4549,
											"end": 4579,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4549,
											"end": 4579,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "72C7F30F1ADD5C8B5E197B8CB57516B3ABBD8E31BCCB1845D4E716717944E80A"
										},
										{
											"begin": 4618,
											"end": 4632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4618,
											"end": 4632,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4634,
											"end": 4647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4634,
											"end": 4647,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 4595,
											"end": 4648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4648,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9833,
											"end": 9846,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9810,
											"end": 9847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9810,
											"end": 9847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9858,
											"end": 9873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9876,
											"end": 9892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 9901,
											"end": 9905,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 9876,
											"end": 9907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9876,
											"end": 9907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 9876,
											"end": 9907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9858,
											"end": 9907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9858,
											"end": 9907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9926,
											"end": 9937,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 9918,
											"end": 9963,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 9918,
											"end": 9963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 9994,
											"end": 10001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9994,
											"end": 9999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 9994,
											"end": 10001,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9994,
											"end": 10001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9994,
											"end": 10001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10003,
											"end": 10010,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 9980,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 9993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9974,
											"end": 9993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 9993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 9974,
											"end": 9993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 9974,
											"end": 10011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10043,
											"end": 10050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 10043,
											"end": 10048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 10043,
											"end": 10050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10043,
											"end": 10050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 10043,
											"end": 10050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
										},
										{
											"begin": 10052,
											"end": 10059,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 10027,
											"end": 10060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10060,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 10068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 10068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 10068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 6725,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6767,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 6767,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6791,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 6767,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 867,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7156,
											"end": 7163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7174,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7156,
											"end": 7175,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7155,
											"end": 7175,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 7147,
											"end": 7217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 7147,
											"end": 7217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7255,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 7255,
											"end": 7269,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7236,
											"end": 7251,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 7236,
											"end": 7269,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7236,
											"end": 7269,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 7228,
											"end": 7301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 7228,
											"end": 7301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 7338,
											"end": 7351,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7335,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7351,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 7312,
											"end": 7381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 7312,
											"end": 7381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7422,
											"end": 7429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 7440,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7448,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 7518,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7518,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7537,
											"end": 7552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 7537,
											"end": 7552,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7506,
											"end": 7517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 7506,
											"end": 7558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7506,
											"end": 7558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 7506,
											"end": 7558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7590,
											"end": 7607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7607,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7607,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 7569,
											"end": 7648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7569,
											"end": 7648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7688,
											"end": 7705,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 7688,
											"end": 7717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 7688,
											"end": 7717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 7688,
											"end": 7717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7738,
											"end": 7764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7738,
											"end": 7785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7738,
											"end": 7785,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7869,
											"end": 7892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7878,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7869,
											"end": 7892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7892,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 7865,
											"end": 8598,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7930,
											"end": 7940,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7917,
											"end": 7940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7917,
											"end": 7940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7917,
											"end": 7926,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7917,
											"end": 7940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7917,
											"end": 7940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7917,
											"end": 7940,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 7909,
											"end": 7962,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 7909,
											"end": 7962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8006,
											"end": 8010,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 7985,
											"end": 8011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7985,
											"end": 8011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7985,
											"end": 7994,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7985,
											"end": 8011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7985,
											"end": 8011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7985,
											"end": 8011,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 7977,
											"end": 8032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 7977,
											"end": 8032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 8194,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8177,
											"end": 8195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 8169,
											"end": 8228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 8169,
											"end": 8228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8366,
											"end": 8378,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8362,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8363,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8378,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 8330,
											"end": 8424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 8330,
											"end": 8424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8463,
											"end": 8482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8463,
											"end": 8482,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 8441,
											"end": 8482,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8482,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8583,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 8559,
											"end": 8586,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 7865,
											"end": 8598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8660,
											"end": 8678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 8660,
											"end": 8678,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8638,
											"end": 8656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8618,
											"end": 8635,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 8618,
											"end": 8656,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 8618,
											"end": 8656,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 8618,
											"end": 8656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8678,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8678,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 8610,
											"end": 8713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 8610,
											"end": 8713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9008,
											"end": 9017,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 9005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 9017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 8987,
											"end": 9017,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 9017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 9017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 8987,
											"end": 9017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 9017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 8987,
											"end": 9017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8953,
											"end": 8958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8953,
											"end": 8968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 8977,
											"end": 8981,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 8953,
											"end": 8983,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 8953,
											"end": 8983,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 8953,
											"end": 8983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9017,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9017,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 8945,
											"end": 9060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 8945,
											"end": 9060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9100,
											"end": 9107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 9100,
											"end": 9105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 9100,
											"end": 9107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 9100,
											"end": 9107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9118,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9081,
											"end": 9086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9081,
											"end": 9099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 9081,
											"end": 9099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9081,
											"end": 9119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9162,
											"end": 9169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 9162,
											"end": 9167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 9162,
											"end": 9169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9162,
											"end": 9169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 9162,
											"end": 9169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9150,
											"end": 9160,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2E039D7CE7A1BACD02CEBC742CFBA63668424D700FE6FF9B5BE6F9F5801BE15"
										},
										{
											"begin": 9171,
											"end": 9180,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 9135,
											"end": 9181,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9181,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9194,
											"end": 9211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 9194,
											"end": 9233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9271,
											"end": 9272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9250,
											"end": 9273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9250,
											"end": 9273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9259,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9250,
											"end": 9273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9273,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9246,
											"end": 9352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 9246,
											"end": 9352,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 9309,
											"end": 9318,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9320,
											"end": 9339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9320,
											"end": 9339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9290,
											"end": 9295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9290,
											"end": 9308,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 9290,
											"end": 9308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 9290,
											"end": 9340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9246,
											"end": 9352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 9246,
											"end": 9352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 9391,
											"end": 9401,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9403,
											"end": 9421,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9372,
											"end": 9377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9372,
											"end": 9390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 9372,
											"end": 9390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 9372,
											"end": 9422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9467,
											"end": 9476,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9455,
											"end": 9465,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E36722F357B07C721B246E0A5CB2FA0015C07AD3DF67BCA291504054A7998394"
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9477,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 9485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 9485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 9485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7056,
											"end": 9485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 9485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6507,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6485,
											"end": 6507,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6507,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6507,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "CC368607DE2345E055465E8D50D99A7D1E1E3CE7516A4175A2C513AAD17B1460"
										},
										{
											"begin": 6543,
											"end": 6550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 6523,
											"end": 6551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6076,
											"end": 6093,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6062,
											"end": 6072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6062,
											"end": 6093,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6062,
											"end": 6093,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 6054,
											"end": 6147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 6054,
											"end": 6147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6179,
											"end": 6189,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6158,
											"end": 6189,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6189,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6189,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "45C69C62555CB8D911AC4F0A16FA83A65E4A2FF5C5A884C39969E8C8B97CB510"
										},
										{
											"begin": 6231,
											"end": 6241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 6205,
											"end": 6242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6242,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 6250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4924,
											"end": 4934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4904,
											"end": 4934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4934,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "91A9538A48B80F8854E68761BEACB4468CB2AC0A50D634DEC96417CDDC019A14"
										},
										{
											"begin": 4975,
											"end": 4985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 4950,
											"end": 4986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4986,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5595,
											"end": 5598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5577,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5577,
											"end": 5598,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5577,
											"end": 5598,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5569,
											"end": 5636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 5569,
											"end": 5636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5665,
											"end": 5679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5647,
											"end": 5662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5647,
											"end": 5679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5647,
											"end": 5679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5647,
											"end": 5679,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5647,
											"end": 5679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6852FDB2F20CAD76E9F34CB63F2F0F19B8D69A0673886404FC871917CD81198A"
										},
										{
											"begin": 5713,
											"end": 5727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 5695,
											"end": 5728,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5728,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 774,
											"end": 806,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 774,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 709,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 709,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 690,
											"end": 709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5264,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5232,
											"end": 5264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5264,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A8868231BCABAE5003167C1566DCE9258F36E5BABECDD040DA1EF6E04377E0E2"
										},
										{
											"begin": 5307,
											"end": 5317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 5280,
											"end": 5318,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5318,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 8,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7324,
											"end": 7338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7404,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7411,
											"end": 7412,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7415,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7404,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7404,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7404,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7404,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7507,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7494,
											"end": 7859,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7844,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7830,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7827,
											"end": 7844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7844,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7844,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7820,
											"end": 7844,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7859,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7494,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 7980,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 7988,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7965,
											"end": 8107,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8020,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 8043,
											"end": 8044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8039,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8028,
											"end": 8044,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 940,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8020,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 8020,
											"end": 8091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8020,
											"end": 8091,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 8020,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 8008,
											"end": 8092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8092,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8008,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 8107,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7965,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8359,
											"end": 8376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8521,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8507,
											"end": 8508,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8505,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8497,
											"end": 8522,
											"name": "MULMOD",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8636,
											"end": 8639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8625,
											"end": 8634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8641,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8683,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8684,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8902,
											"end": 8914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8936,
											"end": 8947,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8932,
											"end": 8933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8947,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8917,
											"end": 8928,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8917,
											"end": 8948,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8902,
											"end": 8948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8902,
											"end": 8948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9082,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9067,
											"end": 9089,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 9089,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 9089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9167,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9174,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9330,
											"end": 9331,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9305,
											"end": 9328,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9301,
											"end": 9332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9416,
											"end": 9420,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9416,
											"end": 9427,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9762,
											"end": 9777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 9801,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9785,
											"end": 9796,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9782,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9781,
											"end": 9796,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9801,
											"name": "XOR",
											"source": 10
										},
										{
											"begin": 9762,
											"end": 9801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9762,
											"end": 9801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10033,
											"end": 10044,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10033,
											"end": 10054,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10030,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10029,
											"end": 10054,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10054,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10103,
											"end": 10114,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10103,
											"end": 10124,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10099,
											"end": 10100,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10099,
											"end": 10124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10124,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10189,
											"end": 10196,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10186,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10196,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10171,
											"end": 10172,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10160,
											"end": 10196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10160,
											"end": 10196,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10160,
											"end": 10196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10160,
											"end": 10196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10267,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10246,
											"end": 10257,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10246,
											"end": 10267,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10242,
											"end": 10267,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10267,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10333,
											"end": 10340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10319,
											"end": 10330,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10316,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10315,
											"end": 10340,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10340,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10407,
											"end": 10414,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10404,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10414,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10389,
											"end": 10390,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10389,
											"end": 10414,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10414,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10881,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 10871,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 10881,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10859,
											"end": 10881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 10925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 10925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1577,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1027,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1480,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1481,
											"name": "MULMOD",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1560,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1547,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1561,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1577,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1577,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5337,
											"end": 5346,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5321,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "XOR",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5347,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5348,
											"name": "XOR",
											"source": 10
										},
										{
											"begin": 5299,
											"end": 5348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5299,
											"end": 5348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1970,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1776,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1943,
											"end": 1947,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34842,
											"end": 34851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34921,
											"end": 34922,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34914,
											"end": 34923,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34907,
											"end": 34924,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34795,
											"end": 34940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 182,
											"end": 348,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 182,
											"end": 348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 322,
											"end": 340,
											"name": "PUSH",
											"source": 13,
											"value": "455448206E6F7420616363657074656400000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 299,
											"end": 341,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 182,
											"end": 348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 182,
											"end": 348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 354,
											"end": 720,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 354,
											"end": 720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 581,
											"end": 583,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 576,
											"end": 579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 517,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 517,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 517,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 517,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 510,
											"end": 584,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 510,
											"end": 584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 682,
											"end": 685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 593,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 593,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 686,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 593,
											"end": 686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 711,
											"end": 713,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 702,
											"end": 714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 695,
											"end": 714,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 354,
											"end": 720,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 354,
											"end": 720,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 354,
											"end": 720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 354,
											"end": 720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1145,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 726,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 892,
											"end": 896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 932,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 907,
											"end": 933,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 907,
											"end": 933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 979,
											"end": 988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 973,
											"end": 977,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 969,
											"end": 989,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 950,
											"end": 967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 943,
											"end": 990,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1007,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1138,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1007,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1138,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 726,
											"end": 1145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1228,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 1151,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1188,
											"end": 1195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1206,
											"end": 1222,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1206,
											"end": 1222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1234,
											"end": 1352,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1234,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 1321,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1345,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 1321,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1316,
											"end": 1319,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1309,
											"end": 1346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1234,
											"end": 1352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1234,
											"end": 1352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1234,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1580,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1358,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1491,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1474,
											"end": 1492,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1502,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1552,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1502,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1502,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1502,
											"end": 1573,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 1502,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1580,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1784,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 1667,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1774,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 2035,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 1913,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1986,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 2004,
											"end": 2009,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1986,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 1986,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1986,
											"end": 2010,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 1986,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2011,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1966,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1966,
											"end": 2029,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1966,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1966,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 2035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 2035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2041,
											"end": 2180,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 2041,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2087,
											"end": 2092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2132,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 2141,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2174,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2141,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2041,
											"end": 2180,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2041,
											"end": 2180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2041,
											"end": 2180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2041,
											"end": 2180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2041,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2660,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2186,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2290,
											"end": 2297,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2286,
											"end": 2309,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2314,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 2317,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 2462,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2452,
											"end": 2515,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2452,
											"end": 2515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2566,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2635,
											"end": 2642,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2615,
											"end": 2624,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2611,
											"end": 2633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 2590,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2580,
											"end": 2643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2580,
											"end": 2643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2660,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2660,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2792,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 2666,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2703,
											"end": 2710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2785,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2732,
											"end": 2786,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2792,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2894,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 2798,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 2864,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2888,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2900,
											"end": 3022,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2900,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 2991,
											"end": 2996,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 2973,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 2997,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 2973,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2998,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3014,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 2953,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2900,
											"end": 3022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2900,
											"end": 3022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3167,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 3028,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3119,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3119,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 3155,
											"end": 3160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 3128,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3167,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3502,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3173,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3279,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3284,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3368,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 3249,
											"end": 3368,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3287,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 3287,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 3287,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3287,
											"end": 3366,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 3287,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3368,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 3249,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3407,
											"end": 3408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3453,
											"end": 3475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3432,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 3432,
											"end": 3485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3432,
											"end": 3485,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 3432,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3485,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3502,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3502,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3591,
											"end": 3614,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 3622,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3788,
											"end": 3810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 3767,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3757,
											"end": 3820,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3757,
											"end": 3820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3961,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3843,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 3930,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 3930,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 3928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4189,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 3967,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4100,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4087,
											"end": 4096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4075,
											"end": 4101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4075,
											"end": 4101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4177,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 4111,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4182,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 4111,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4189,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4189,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4285,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 4195,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4278,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4279,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4279,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4291,
											"end": 4400,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4291,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4387,
											"end": 4392,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 4372,
											"end": 4393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4393,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4372,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4367,
											"end": 4370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4394,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4291,
											"end": 4400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4291,
											"end": 4400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4291,
											"end": 4400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4616,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 4406,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4544,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4606,
											"end": 4607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4544,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4544,
											"end": 4609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4544,
											"end": 4609,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4544,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4616,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4616,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4622,
											"end": 4682,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 4622,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4650,
											"end": 4653,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4622,
											"end": 4682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4622,
											"end": 4682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4622,
											"end": 4682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4622,
											"end": 4682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4830,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 4688,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4789,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4816,
											"end": 4821,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4798,
											"end": 4822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4789,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 4789,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4789,
											"end": 4823,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4789,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4771,
											"end": 4824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4824,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4771,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4962,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 4836,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4906,
											"end": 4956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4906,
											"end": 4956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4962,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5108,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4968,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 5096,
											"end": 5101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 5065,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5102,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 5065,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5052,
											"end": 5102,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5052,
											"end": 5102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5108,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5114,
											"end": 5273,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5114,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 5260,
											"end": 5265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5215,
											"end": 5266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5266,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 5215,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5210,
											"end": 5213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 5267,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5114,
											"end": 5273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5114,
											"end": 5273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5114,
											"end": 5273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5529,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5279,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5386,
											"end": 5390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5517,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5437,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5522,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 5437,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5529,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5766,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5535,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5675,
											"end": 5709,
											"name": "PUSH",
											"source": 13,
											"value": "53746F702074696D657374616D70206D75737420626520616674657220737461"
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5652,
											"end": 5710,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5758,
											"name": "PUSH",
											"source": 13,
											"value": "72742074696D657374616D700000000000000000000000000000000000000000"
										},
										{
											"begin": 5739,
											"end": 5741,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5742,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5720,
											"end": 5759,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 6138,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 5772,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 13,
											"value": "2C"
										},
										{
											"begin": 5994,
											"end": 5997,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 5935,
											"end": 6002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 6002,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5935,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5928,
											"end": 6002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5928,
											"end": 6002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 6011,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6104,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 6011,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6129,
											"end": 6131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6124,
											"end": 6127,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6120,
											"end": 6132,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 6138,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 6138,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 6138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 6138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6563,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6144,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6314,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6397,
											"end": 6406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6391,
											"end": 6395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6407,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6408,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 6425,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6556,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6425,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6417,
											"end": 6556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6417,
											"end": 6556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6563,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6563,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6901,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6569,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6730,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6713,
											"end": 6731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6705,
											"end": 6731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6705,
											"end": 6731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6809,
											"end": 6810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6794,
											"end": 6811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6785,
											"end": 6791,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6741,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6822,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6890,
											"end": 6892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6822,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6822,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6822,
											"end": 6894,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6822,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6901,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6901,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 7050,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6907,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6964,
											"end": 6969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7001,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 7002,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 7002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 7002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7011,
											"end": 7044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 7050,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 7050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 7050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 7050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 7050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7407,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7056,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7126,
											"end": 7132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7173,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7178,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7262,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 7143,
											"end": 7262,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 7181,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7181,
											"end": 7260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7260,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 7181,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7262,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 7143,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 7382,
											"end": 7389,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7371,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 7326,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7390,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 7326,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7407,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7407,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7407,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7407,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7413,
											"end": 7584,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 7413,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7553,
											"end": 7576,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 7549,
											"end": 7550,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7530,
											"end": 7577,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7413,
											"end": 7584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7413,
											"end": 7584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7956,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 7590,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7735,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7817,
											"end": 7819,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 7812,
											"end": 7815,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 7753,
											"end": 7820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7820,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7753,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7820,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7829,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7918,
											"end": 7921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7829,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 7829,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7829,
											"end": 7922,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7829,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7947,
											"end": 7949,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7942,
											"end": 7945,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7938,
											"end": 7950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7956,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8381,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 7962,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8155,
											"end": 8164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8205,
											"end": 8225,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8201,
											"end": 8202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8190,
											"end": 8199,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8186,
											"end": 8203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8226,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8243,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8369,
											"end": 8373,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8243,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 8243,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8243,
											"end": 8374,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8243,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8381,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8387,
											"end": 8611,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8387,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8527,
											"end": 8561,
											"name": "PUSH",
											"source": 13,
											"value": "596F75206861766520616C726561647920636C61696D656420796F7572206169"
										},
										{
											"begin": 8523,
											"end": 8524,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8515,
											"end": 8521,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8511,
											"end": 8525,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8504,
											"end": 8562,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8596,
											"end": 8603,
											"name": "PUSH",
											"source": 13,
											"value": "7264726F70000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8583,
											"end": 8589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8579,
											"end": 8594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8572,
											"end": 8604,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8387,
											"end": 8611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8387,
											"end": 8611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8983,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 8617,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8780,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 8844,
											"end": 8846,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8780,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 8780,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8780,
											"end": 8847,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 8780,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8856,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8945,
											"end": 8948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8856,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8856,
											"end": 8949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8856,
											"end": 8949,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8856,
											"end": 8949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8974,
											"end": 8976,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 8972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8965,
											"end": 8977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 8977,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 8977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8983,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8989,
											"end": 9408,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 8989,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9155,
											"end": 9159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9182,
											"end": 9191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9170,
											"end": 9196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9170,
											"end": 9196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9242,
											"end": 9251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9232,
											"end": 9252,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9226,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9206,
											"end": 9253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 9396,
											"end": 9400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 9270,
											"end": 9401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9401,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 9270,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9262,
											"end": 9401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9262,
											"end": 9401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8989,
											"end": 9408,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8989,
											"end": 9408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8989,
											"end": 9408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8989,
											"end": 9408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9591,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 9414,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9554,
											"end": 9583,
											"name": "PUSH",
											"source": 13,
											"value": "41697264726F7020686173206E6F742073746172746564207965740000000000"
										},
										{
											"begin": 9550,
											"end": 9551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9538,
											"end": 9552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9963,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9597,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9742,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9760,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 9824,
											"end": 9826,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 9819,
											"end": 9822,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9760,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 9760,
											"end": 9827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9760,
											"end": 9827,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 9760,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9753,
											"end": 9827,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9753,
											"end": 9827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9836,
											"end": 9929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 9925,
											"end": 9928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9836,
											"end": 9929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 9836,
											"end": 9929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9836,
											"end": 9929,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 9836,
											"end": 9929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9954,
											"end": 9956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 9952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9945,
											"end": 9957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9938,
											"end": 9957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9938,
											"end": 9957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10388,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 9969,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10135,
											"end": 10139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10173,
											"end": 10175,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10162,
											"end": 10171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10158,
											"end": 10176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10150,
											"end": 10176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10150,
											"end": 10176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10216,
											"end": 10220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10232,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10197,
											"end": 10206,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10193,
											"end": 10210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10233,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10250,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 10376,
											"end": 10380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10250,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 10250,
											"end": 10381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10250,
											"end": 10381,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 10250,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10242,
											"end": 10381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10242,
											"end": 10381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10388,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10388,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10569,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 10394,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10534,
											"end": 10561,
											"name": "PUSH",
											"source": 13,
											"value": "41697264726F702068617320616C726561647920656E64656400000000000000"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10528,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10518,
											"end": 10532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10562,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10941,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 10575,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10717,
											"end": 10720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 10802,
											"end": 10804,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 10797,
											"end": 10800,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10738,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 10738,
											"end": 10805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10738,
											"end": 10805,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 10738,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10731,
											"end": 10805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10731,
											"end": 10805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 10903,
											"end": 10906,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 10814,
											"end": 10907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10907,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 10814,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10932,
											"end": 10934,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10927,
											"end": 10930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10923,
											"end": 10935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10941,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10941,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 11366,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 10947,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11113,
											"end": 11117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11151,
											"end": 11153,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11140,
											"end": 11149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11154,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11200,
											"end": 11209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11190,
											"end": 11210,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11186,
											"end": 11187,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11175,
											"end": 11184,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11171,
											"end": 11188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11164,
											"end": 11211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 11354,
											"end": 11358,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 11228,
											"end": 11359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11359,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 11228,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11220,
											"end": 11359,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11220,
											"end": 11359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 11366,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 11366,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 11366,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 11366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11372,
											"end": 11595,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 11372,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11546,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C69642066656520616D6F756E74206F722061697264726F7020616D"
										},
										{
											"begin": 11508,
											"end": 11509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11506,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11489,
											"end": 11547,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11581,
											"end": 11587,
											"name": "PUSH",
											"source": 13,
											"value": "6F756E7400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11576,
											"end": 11578,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11568,
											"end": 11574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11564,
											"end": 11579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11557,
											"end": 11588,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11372,
											"end": 11595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11372,
											"end": 11595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 11828,
											"end": 11830,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11823,
											"end": 11826,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 11764,
											"end": 11831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11757,
											"end": 11831,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11757,
											"end": 11831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 11929,
											"end": 11932,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 11840,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11958,
											"end": 11960,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11953,
											"end": 11956,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11949,
											"end": 11961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12139,
											"end": 12143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12179,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12166,
											"end": 12175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12154,
											"end": 12180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12154,
											"end": 12180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12226,
											"end": 12235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12220,
											"end": 12224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12212,
											"end": 12213,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12201,
											"end": 12210,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12197,
											"end": 12214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12190,
											"end": 12237,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 12380,
											"end": 12384,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12254,
											"end": 12385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12246,
											"end": 12385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12246,
											"end": 12385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12398,
											"end": 12578,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 12398,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12446,
											"end": 12523,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12443,
											"end": 12444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12524,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12543,
											"end": 12547,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 12540,
											"end": 12541,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12533,
											"end": 12548,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12567,
											"end": 12571,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12564,
											"end": 12565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12572,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12778,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 12584,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12624,
											"end": 12628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12644,
											"end": 12664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 12662,
											"end": 12663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12644,
											"end": 12664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 12644,
											"end": 12664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12644,
											"end": 12664,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 12644,
											"end": 12664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12639,
											"end": 12664,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12639,
											"end": 12664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12678,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12696,
											"end": 12697,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12678,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 12678,
											"end": 12698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12678,
											"end": 12698,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12678,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12698,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12722,
											"end": 12723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12719,
											"end": 12720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12715,
											"end": 12724,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12707,
											"end": 12724,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12707,
											"end": 12724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12746,
											"end": 12747,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12740,
											"end": 12744,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12737,
											"end": 12748,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12734,
											"end": 12771,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12734,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12734,
											"end": 12771,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 12751,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12734,
											"end": 12771,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12734,
											"end": 12771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12778,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12778,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12778,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12784,
											"end": 12951,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 12784,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12924,
											"end": 12943,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F742073656C662D7265666572000000000000000000000000000000"
										},
										{
											"begin": 12920,
											"end": 12921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12912,
											"end": 12918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 12922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12901,
											"end": 12944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12784,
											"end": 12951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12784,
											"end": 12951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 13323,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 12957,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13099,
											"end": 13102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 13184,
											"end": 13186,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 13179,
											"end": 13182,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13120,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 13120,
											"end": 13187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13120,
											"end": 13187,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 13120,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13113,
											"end": 13187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13113,
											"end": 13187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13196,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 13285,
											"end": 13288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13196,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 13196,
											"end": 13289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13196,
											"end": 13289,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 13196,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13314,
											"end": 13316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13309,
											"end": 13312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13305,
											"end": 13317,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 13323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 13323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 13323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 13323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13748,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 13329,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13533,
											"end": 13535,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13522,
											"end": 13531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13518,
											"end": 13536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13510,
											"end": 13536,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13510,
											"end": 13536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13582,
											"end": 13591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13576,
											"end": 13580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13572,
											"end": 13592,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13568,
											"end": 13569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13557,
											"end": 13566,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13553,
											"end": 13570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13546,
											"end": 13593,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13610,
											"end": 13741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 13736,
											"end": 13740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13610,
											"end": 13741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 13610,
											"end": 13741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13610,
											"end": 13741,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 13610,
											"end": 13741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13602,
											"end": 13741,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13602,
											"end": 13741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13920,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 13754,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13894,
											"end": 13912,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C696420726566657272657200000000000000000000000000000000"
										},
										{
											"begin": 13890,
											"end": 13891,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13888,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13878,
											"end": 13892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13871,
											"end": 13913,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14068,
											"end": 14071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 14153,
											"end": 14155,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 14148,
											"end": 14151,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 14089,
											"end": 14156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14082,
											"end": 14156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14082,
											"end": 14156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 14165,
											"end": 14258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14283,
											"end": 14285,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14278,
											"end": 14281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14286,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14267,
											"end": 14286,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14267,
											"end": 14286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13926,
											"end": 14292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14464,
											"end": 14468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14502,
											"end": 14504,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14491,
											"end": 14500,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14487,
											"end": 14505,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14551,
											"end": 14560,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14545,
											"end": 14549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14541,
											"end": 14561,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14537,
											"end": 14538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14535,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14522,
											"end": 14539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14515,
											"end": 14562,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 14705,
											"end": 14709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14579,
											"end": 14710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14571,
											"end": 14710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14571,
											"end": 14710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14723,
											"end": 14901,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 14723,
											"end": 14901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14893,
											"name": "PUSH",
											"source": 13,
											"value": "526566657272657220686173206E6F742079657420636C61696D656400000000"
										},
										{
											"begin": 14859,
											"end": 14860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14847,
											"end": 14861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14840,
											"end": 14894,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14723,
											"end": 14901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14723,
											"end": 14901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14907,
											"end": 15273,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 14907,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15049,
											"end": 15052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15070,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 15134,
											"end": 15136,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 15129,
											"end": 15132,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15070,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 15070,
											"end": 15137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15070,
											"end": 15137,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 15070,
											"end": 15137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15063,
											"end": 15137,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15063,
											"end": 15137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15146,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 15235,
											"end": 15238,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15146,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 15146,
											"end": 15239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15146,
											"end": 15239,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 15146,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15264,
											"end": 15266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15259,
											"end": 15262,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15255,
											"end": 15267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15248,
											"end": 15267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15248,
											"end": 15267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14907,
											"end": 15273,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14907,
											"end": 15273,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14907,
											"end": 15273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14907,
											"end": 15273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15698,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 15279,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15483,
											"end": 15485,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15472,
											"end": 15481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15468,
											"end": 15486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15460,
											"end": 15486,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15460,
											"end": 15486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15532,
											"end": 15541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15526,
											"end": 15530,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15522,
											"end": 15542,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15507,
											"end": 15516,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15496,
											"end": 15543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15560,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 15686,
											"end": 15690,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15560,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 15560,
											"end": 15691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15560,
											"end": 15691,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 15560,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15552,
											"end": 15691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15552,
											"end": 15691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15698,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15932,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 15704,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15878,
											"name": "PUSH",
											"source": 13,
											"value": "5265666572726572206861732072656163686564207468656972207265666572"
										},
										{
											"begin": 15840,
											"end": 15841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15832,
											"end": 15838,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15828,
											"end": 15842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15821,
											"end": 15879,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15913,
											"end": 15924,
											"name": "PUSH",
											"source": 13,
											"value": "72616C206C696D69740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15908,
											"end": 15910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15900,
											"end": 15906,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15896,
											"end": 15911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15889,
											"end": 15925,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15932,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16080,
											"end": 16083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 16165,
											"end": 16167,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 16160,
											"end": 16163,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 16101,
											"end": 16168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16094,
											"end": 16168,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16094,
											"end": 16168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 16266,
											"end": 16269,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 16177,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16295,
											"end": 16297,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16290,
											"end": 16293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16286,
											"end": 16298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 16304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16729,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 16310,
											"end": 16729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16476,
											"end": 16480,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16514,
											"end": 16516,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16503,
											"end": 16512,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16499,
											"end": 16517,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16517,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16563,
											"end": 16572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16557,
											"end": 16561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16553,
											"end": 16573,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16549,
											"end": 16550,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16538,
											"end": 16547,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16527,
											"end": 16574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16591,
											"end": 16722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 16717,
											"end": 16721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16591,
											"end": 16722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 16591,
											"end": 16722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16591,
											"end": 16722,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 16591,
											"end": 16722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16583,
											"end": 16722,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16583,
											"end": 16722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16729,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16735,
											"end": 16926,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 16735,
											"end": 16926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16775,
											"end": 16778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 16812,
											"end": 16813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 16794,
											"end": 16814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 16794,
											"end": 16814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 16814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 16814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16828,
											"end": 16848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 16846,
											"end": 16847,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16828,
											"end": 16848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 16828,
											"end": 16848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16828,
											"end": 16848,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 16828,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16823,
											"end": 16848,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16823,
											"end": 16848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16871,
											"end": 16872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16868,
											"end": 16869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16895,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16889,
											"end": 16890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16886,
											"end": 16896,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16883,
											"end": 16919,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16883,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 16883,
											"end": 16919,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 16899,
											"end": 16917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 16899,
											"end": 16917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16883,
											"end": 16919,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 16883,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16735,
											"end": 16926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16735,
											"end": 16926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16735,
											"end": 16926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16735,
											"end": 16926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16735,
											"end": 16926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16932,
											"end": 17165,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 16932,
											"end": 17165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16971,
											"end": 16974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 17012,
											"end": 17017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 16994,
											"end": 17018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16985,
											"end": 17018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16985,
											"end": 17018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17040,
											"end": 17106,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17033,
											"end": 17038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17030,
											"end": 17107,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17027,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 17027,
											"end": 17130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17110,
											"end": 17128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 17110,
											"end": 17128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 17110,
											"end": 17128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17110,
											"end": 17128,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 17110,
											"end": 17128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17027,
											"end": 17130,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 17027,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17157,
											"end": 17158,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17150,
											"end": 17155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17146,
											"end": 17159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17139,
											"end": 17159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17139,
											"end": 17159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16932,
											"end": 17165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16932,
											"end": 17165,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16932,
											"end": 17165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16932,
											"end": 17165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17171,
											"end": 17351,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 17171,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17311,
											"end": 17343,
											"name": "PUSH",
											"source": 13,
											"value": "546F74616C2061697264726F7020737570706C79206578686175737465640000"
										},
										{
											"begin": 17307,
											"end": 17308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17299,
											"end": 17305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17295,
											"end": 17309,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17288,
											"end": 17344,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17171,
											"end": 17351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17171,
											"end": 17351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17357,
											"end": 17723,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 17357,
											"end": 17723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17520,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 17584,
											"end": 17586,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 17579,
											"end": 17582,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17520,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 17520,
											"end": 17587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17520,
											"end": 17587,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 17520,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17596,
											"end": 17689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 17685,
											"end": 17688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17596,
											"end": 17689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 17596,
											"end": 17689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17596,
											"end": 17689,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 17596,
											"end": 17689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17714,
											"end": 17716,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17709,
											"end": 17712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17705,
											"end": 17717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17698,
											"end": 17717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17698,
											"end": 17717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17357,
											"end": 17723,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17357,
											"end": 17723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17357,
											"end": 17723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17357,
											"end": 17723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17895,
											"end": 17899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17933,
											"end": 17935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17922,
											"end": 17931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17910,
											"end": 17936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17910,
											"end": 17936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17982,
											"end": 17991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17976,
											"end": 17980,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17972,
											"end": 17992,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17968,
											"end": 17969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17957,
											"end": 17966,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17953,
											"end": 17970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 17993,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 18136,
											"end": 18140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 18010,
											"end": 18141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 18010,
											"end": 18141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18002,
											"end": 18141,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18002,
											"end": 18141,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17729,
											"end": 18148,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17729,
											"end": 18148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18154,
											"end": 18379,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 18154,
											"end": 18379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E7420746F6B656E2062616C616E636520696E20636F"
										},
										{
											"begin": 18290,
											"end": 18291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18282,
											"end": 18288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18278,
											"end": 18292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18363,
											"end": 18371,
											"name": "PUSH",
											"source": 13,
											"value": "6E74726163740000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18358,
											"end": 18360,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18350,
											"end": 18356,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18346,
											"end": 18361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18339,
											"end": 18372,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18154,
											"end": 18379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18154,
											"end": 18379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18385,
											"end": 18751,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 18385,
											"end": 18751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18527,
											"end": 18530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18548,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 18612,
											"end": 18614,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 18607,
											"end": 18610,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18548,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 18548,
											"end": 18615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18548,
											"end": 18615,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 18548,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18541,
											"end": 18615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18541,
											"end": 18615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18624,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 18713,
											"end": 18716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18624,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 18624,
											"end": 18717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18624,
											"end": 18717,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 18624,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18742,
											"end": 18744,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18737,
											"end": 18740,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18733,
											"end": 18745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18726,
											"end": 18745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18726,
											"end": 18745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18385,
											"end": 18751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18385,
											"end": 18751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18385,
											"end": 18751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18385,
											"end": 18751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18757,
											"end": 19176,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 18757,
											"end": 19176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18923,
											"end": 18927,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18961,
											"end": 18963,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18950,
											"end": 18959,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18946,
											"end": 18964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18938,
											"end": 18964,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18938,
											"end": 18964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19010,
											"end": 19019,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19004,
											"end": 19008,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19020,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18996,
											"end": 18997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18985,
											"end": 18994,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18981,
											"end": 18998,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18974,
											"end": 19021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19038,
											"end": 19169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 19164,
											"end": 19168,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19038,
											"end": 19169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 19038,
											"end": 19169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19038,
											"end": 19169,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 19038,
											"end": 19169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19030,
											"end": 19169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19030,
											"end": 19169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18757,
											"end": 19176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18757,
											"end": 19176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18757,
											"end": 19176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18757,
											"end": 19176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19182,
											"end": 19418,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 19182,
											"end": 19418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19322,
											"end": 19356,
											"name": "PUSH",
											"source": 13,
											"value": "4E657720737570706C792063616E6E6F74206265206C657373207468616E2064"
										},
										{
											"begin": 19318,
											"end": 19319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19310,
											"end": 19316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19299,
											"end": 19357,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19391,
											"end": 19410,
											"name": "PUSH",
											"source": 13,
											"value": "6973747269627574656420746F6B656E73000000000000000000000000000000"
										},
										{
											"begin": 19386,
											"end": 19388,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19378,
											"end": 19384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19374,
											"end": 19389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19367,
											"end": 19411,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19182,
											"end": 19418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19182,
											"end": 19418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19424,
											"end": 19790,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 19424,
											"end": 19790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19566,
											"end": 19569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19587,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 19651,
											"end": 19653,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 19646,
											"end": 19649,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19587,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 19587,
											"end": 19654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19587,
											"end": 19654,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 19587,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19580,
											"end": 19654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19580,
											"end": 19654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19663,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 19752,
											"end": 19755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19663,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 19663,
											"end": 19756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19663,
											"end": 19756,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 19663,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19781,
											"end": 19783,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19776,
											"end": 19779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19765,
											"end": 19784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19765,
											"end": 19784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19424,
											"end": 19790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19424,
											"end": 19790,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19424,
											"end": 19790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19424,
											"end": 19790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19796,
											"end": 20215,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 19796,
											"end": 20215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19962,
											"end": 19966,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20000,
											"end": 20002,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19989,
											"end": 19998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19985,
											"end": 20003,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19977,
											"end": 20003,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19977,
											"end": 20003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20049,
											"end": 20058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20043,
											"end": 20047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20039,
											"end": 20059,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20035,
											"end": 20036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20024,
											"end": 20033,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20020,
											"end": 20037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20013,
											"end": 20060,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20077,
											"end": 20208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 20203,
											"end": 20207,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20077,
											"end": 20208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 20077,
											"end": 20208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20077,
											"end": 20208,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 20077,
											"end": 20208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20069,
											"end": 20208,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20069,
											"end": 20208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19796,
											"end": 20215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19796,
											"end": 20215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19796,
											"end": 20215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19796,
											"end": 20215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20221,
											"end": 20441,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 20221,
											"end": 20441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20361,
											"end": 20395,
											"name": "PUSH",
											"source": 13,
											"value": "4665652070657263656E746167652063616E6E6F742065786365656420313030"
										},
										{
											"begin": 20357,
											"end": 20358,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20349,
											"end": 20355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20345,
											"end": 20359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20338,
											"end": 20396,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20430,
											"end": 20433,
											"name": "PUSH",
											"source": 13,
											"value": "2500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20425,
											"end": 20427,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20417,
											"end": 20423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20413,
											"end": 20428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20406,
											"end": 20434,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20221,
											"end": 20441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20221,
											"end": 20441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20447,
											"end": 20813,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 20447,
											"end": 20813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20589,
											"end": 20592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20610,
											"end": 20677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 20674,
											"end": 20676,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 20669,
											"end": 20672,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20610,
											"end": 20677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 20610,
											"end": 20677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20610,
											"end": 20677,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 20610,
											"end": 20677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20603,
											"end": 20677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20603,
											"end": 20677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20686,
											"end": 20779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 20775,
											"end": 20778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20686,
											"end": 20779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 20686,
											"end": 20779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20686,
											"end": 20779,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 20686,
											"end": 20779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20804,
											"end": 20806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20799,
											"end": 20802,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20795,
											"end": 20807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 20807,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 20807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20447,
											"end": 20813,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20447,
											"end": 20813,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20447,
											"end": 20813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20447,
											"end": 20813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20819,
											"end": 21238,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 20819,
											"end": 21238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20985,
											"end": 20989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21023,
											"end": 21025,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21012,
											"end": 21021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21008,
											"end": 21026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21000,
											"end": 21026,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21000,
											"end": 21026,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21072,
											"end": 21081,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21066,
											"end": 21070,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21062,
											"end": 21082,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21058,
											"end": 21059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21047,
											"end": 21056,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21043,
											"end": 21060,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21036,
											"end": 21083,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21100,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 21226,
											"end": 21230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21100,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 21100,
											"end": 21231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21100,
											"end": 21231,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 21100,
											"end": 21231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21092,
											"end": 21231,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21092,
											"end": 21231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20819,
											"end": 21238,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20819,
											"end": 21238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20819,
											"end": 21238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20819,
											"end": 21238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21576,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 21244,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21365,
											"end": 21369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21403,
											"end": 21405,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21392,
											"end": 21401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21380,
											"end": 21406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21380,
											"end": 21406,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21416,
											"end": 21487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 21484,
											"end": 21485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21473,
											"end": 21482,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21469,
											"end": 21486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21460,
											"end": 21466,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21416,
											"end": 21487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 21416,
											"end": 21487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21416,
											"end": 21487,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 21416,
											"end": 21487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21497,
											"end": 21569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 21565,
											"end": 21567,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21554,
											"end": 21563,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21550,
											"end": 21568,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21547,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21497,
											"end": 21569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 21497,
											"end": 21569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21497,
											"end": 21569,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 21497,
											"end": 21569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21576,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21576,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21582,
											"end": 21762,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 21582,
											"end": 21762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21630,
											"end": 21707,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21627,
											"end": 21628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21620,
											"end": 21708,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21727,
											"end": 21731,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 21724,
											"end": 21725,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 21717,
											"end": 21732,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21751,
											"end": 21755,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 21748,
											"end": 21749,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21741,
											"end": 21756,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"airdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimAirdrop()": "5b88349d",
							"claimAirdrop(address)": "65f8c6c5",
							"claimFeePercent()": "b88bfd29",
							"claimed(address)": "c884ef83",
							"mainAirdropAmount()": "bf31b33e",
							"maxReferrals()": "747fc0d2",
							"owner()": "8da5cb5b",
							"referralBonusAmount()": "6305b715",
							"referralCounts(address)": "cec297a0",
							"renounceOwnership()": "715018a6",
							"scheduleAirdrop(uint256,uint256)": "1bcea05e",
							"setClaimFeePercent(uint256)": "a49a176e",
							"setMainAirdropAmount(uint256)": "9a707d2f",
							"setMaxReferrals(uint256)": "6a1d8713",
							"setReferralBonusAmount(uint256)": "ff7345e5",
							"setTotalAirdropSupply(uint256)": "7e699a8c",
							"startAirdropAt()": "db24f2a3",
							"stopAirdropAt()": "01c0e51d",
							"token()": "fc0c546a",
							"tokensDistributed()": "152e84a7",
							"totalAirdropSupply()": "aeab26be",
							"transferOwnership(address)": "f2fde38b",
							"withdrawTokens(address)": "49df728c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialMainAirdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialReferralBonusAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialClaimFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialTotalAirdropSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"AirdropClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"AirdropFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"AirdropFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stopTimestamp\",\"type\":\"uint256\"}],\"name\":\"AirdropScheduleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AirdropStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AirdropStopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"MainAirdropAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMax\",\"type\":\"uint256\"}],\"name\":\"MaxReferralsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"ReferralBonusAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSupply\",\"type\":\"uint256\"}],\"name\":\"TotalAirdropSupplyUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainAirdropAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReferrals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralBonusAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stopTimestamp\",\"type\":\"uint256\"}],\"name\":\"scheduleAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"setClaimFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newAmount\",\"type\":\"uint256\"}],\"name\":\"setMainAirdropAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMax\",\"type\":\"uint256\"}],\"name\":\"setMaxReferrals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newAmount\",\"type\":\"uint256\"}],\"name\":\"setReferralBonusAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newSupply\",\"type\":\"uint256\"}],\"name\":\"setTotalAirdropSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdropAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAirdropAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAirdropSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A smart contract for managing a token airdrop on the Polygon network. The owner can configure airdrop and referral amounts, and control the airdrop's lifecycle.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"claimAirdrop()\":{\"details\":\"A function for a user to claim their airdrop without a referral. It calls the main claim function with a zero address.\"},\"claimAirdrop(address)\":{\"details\":\"A function for a user to claim their airdrop. This function also handles the referral bonus and a configurable fee.\",\"params\":{\"_referrer\":\"The address of the referrer. Use address(0) if there is no referrer.\"}},\"constructor\":{\"details\":\"The constructor initializes the contract with the token address, airdrop amounts, and total supply.\",\"params\":{\"_initialClaimFeePercent\":\"The initial fee percentage (e.g., 20 for 2%).\",\"_initialMainAirdropAmount\":\"The initial amount of tokens for each participant.\",\"_initialReferralBonusAmount\":\"The initial amount of tokens for each referral.\",\"_initialTotalAirdropSupply\":\"The initial total supply of tokens for the airdrop.\",\"_tokenAddress\":\"The address of the ERC20 token to be airdropped.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"scheduleAirdrop(uint256,uint256)\":{\"details\":\"Allows the owner to schedule the start and end of the airdrop.\",\"params\":{\"_startTimestamp\":\"The timestamp for when the airdrop should start.\",\"_stopTimestamp\":\"The timestamp for when the airdrop should stop.\"}},\"setClaimFeePercent(uint256)\":{\"details\":\"Allows the owner to set the airdrop fee percentage.\",\"params\":{\"_newFeePercent\":\"The new fee percentage (e.g., 20 for 2%).\"}},\"setMainAirdropAmount(uint256)\":{\"details\":\"Allows the owner to change the main airdrop amount per participant.\",\"params\":{\"_newAmount\":\"The new amount for the main airdrop.\"}},\"setMaxReferrals(uint256)\":{\"details\":\"Allows the owner to set the maximum number of referrals per user.\",\"params\":{\"_newMax\":\"The new maximum number of referrals.\"}},\"setReferralBonusAmount(uint256)\":{\"details\":\"Allows the owner to change the referral bonus amount.\",\"params\":{\"_newAmount\":\"The new amount for the referral bonus.\"}},\"setTotalAirdropSupply(uint256)\":{\"details\":\"Allows the owner to set the total supply for the airdrop.\",\"params\":{\"_newSupply\":\"The new total airdrop supply.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawTokens(address)\":{\"details\":\"Allows the owner to withdraw any remaining tokens from the contract. This is useful after the airdrop has concluded or in an emergency.\",\"params\":{\"_tokenAddress\":\"The address of the token to withdraw.\"}}},\"title\":\"Airdrop\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"airdrop.sol\":\"Airdrop\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"airdrop.sol\":{\"keccak256\":\"0x31571d0ea5e777d6fe39a15e54989def384aa1ec9b7d836909294d3376d6ba45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd298a59ba9767fb9f13dbb6785306ef90bc349c66694b8dbe8d70922d2d936\",\"dweb:/ipfs/QmZtZb1Gyak5zgg6vQpGRezDscx9aYQXW6KgXWSAJxHESa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "airdrop.sol:Airdrop",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 872,
								"contract": "airdrop.sol:Airdrop",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 4347,
								"contract": "airdrop.sol:Airdrop",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 4349,
								"contract": "airdrop.sol:Airdrop",
								"label": "mainAirdropAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 4351,
								"contract": "airdrop.sol:Airdrop",
								"label": "referralBonusAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 4353,
								"contract": "airdrop.sol:Airdrop",
								"label": "claimFeePercent",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 4357,
								"contract": "airdrop.sol:Airdrop",
								"label": "claimed",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 4359,
								"contract": "airdrop.sol:Airdrop",
								"label": "totalAirdropSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 4361,
								"contract": "airdrop.sol:Airdrop",
								"label": "tokensDistributed",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 4363,
								"contract": "airdrop.sol:Airdrop",
								"label": "maxReferrals",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 4367,
								"contract": "airdrop.sol:Airdrop",
								"label": "referralCounts",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 4369,
								"contract": "airdrop.sol:Airdrop",
								"label": "startAirdropAt",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 4371,
								"contract": "airdrop.sol:Airdrop",
								"label": "stopAirdropAt",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							942
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								942,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							942
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 943,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 315,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 315,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 315,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 315,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 315,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 315,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							861
						]
					},
					"id": 862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:7",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "Panic",
							"nameLocation": "665:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:7",
										"text": "@dev generic / unspecified error"
									},
									"id": 816,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "718:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 814,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:7",
										"text": "@dev used by the assert() builtin"
									},
									"id": 820,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "806:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 819,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:7",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 824,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "897:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 822,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 823,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:7",
										"text": "@dev division or modulo by zero"
									},
									"id": 828,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "990:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:7",
										"text": "@dev enum conversion error"
									},
									"id": 832,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1080:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 831,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:7",
										"text": "@dev invalid encoding in storage"
									},
									"id": 836,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1181:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 834,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 835,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:7",
										"text": "@dev empty array pop"
									},
									"id": 840,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1271:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 838,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 839,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:7",
										"text": "@dev array out of bounds access"
									},
									"id": 844,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1365:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 842,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 843,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:7",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 848,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1493:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 846,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 847,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:7",
										"text": "@dev calling invalid internal function"
									},
									"id": 852,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1593:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 851,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "1819:151:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:7",
													"nodeType": "YulBlock",
													"src": "1854:110:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:7",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:7",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:7"
																},
																"nativeSrc": "1868:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:7"
															},
															"nativeSrc": "1868:24:7",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:7",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:7"
																},
																"nativeSrc": "1905:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:7"
															},
															"nativeSrc": "1905:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:7",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:7"
																},
																"nativeSrc": "1936:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:7"
															},
															"nativeSrc": "1936:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:7"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 855,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 858,
												"nodeType": "InlineAssembly",
												"src": "1829:135:7"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:7",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1791:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:7"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:7"
									},
									"scope": 861,
									"src": "1776:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 862,
							"src": "657:1315:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							930
						]
					},
					"id": 931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 864,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:8",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 867,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 930,
									"src": "1818:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 865,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 866,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 870,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 930,
									"src": "1864:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 869,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 930,
									"src": "1907:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:8",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 875,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:8"
									},
									"src": "1994:37:8"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2051:38:8",
										"statements": [
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2061:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "2071:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:8"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:8"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:8"
									},
									"scope": 930,
									"src": "2037:52:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2490:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 886,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2500:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:8"
											},
											{
												"id": 889,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 890,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2542:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:8"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:8",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 894,
									"name": "nonReentrant",
									"nameLocation": "2475:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:8"
									},
									"src": "2466:103:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "2614:268:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2702:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 898,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2713:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "2698:86:8",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "2722:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 900,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "2743:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "2736:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2858:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2868:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:8"
											}
										]
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:8"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:8"
									},
									"scope": 930,
									"src": "2575:307:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "2926:170:8",
										"statements": [
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3068:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 914,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "3078:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:8"
											}
										]
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:8"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:8"
									},
									"scope": 930,
									"src": "2888:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "3339:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3356:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 925,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3367:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 923,
												"id": 927,
												"nodeType": "Return",
												"src": "3349:25:8"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:8",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:8"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "3333:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:8"
									},
									"scope": 930,
									"src": "3275:106:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 931,
							"src": "1030:2353:8",
							"usedErrors": [
								875
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC165",
							"nameLocation": "433:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "819:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 935,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:9"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "862:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:9"
									},
									"scope": 942,
									"src": "792:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "423:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2563
						],
						"Panic": [
							861
						],
						"SafeCast": [
							4328
						]
					},
					"id": 2564,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2564,
							"sourceUnit": 862,
							"src": "129:35:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 861,
										"src": "137:5:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2564,
							"sourceUnit": 4329,
							"src": "165:40:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 947,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4328,
										"src": "173:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2563,
							"linearizedBaseContracts": [
								2563
							],
							"name": "Math",
							"nameLocation": "289:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 954,
									"members": [
										{
											"id": 950,
											"name": "Floor",
											"nameLocation": "324:5:10",
											"nodeType": "EnumValue",
											"src": "324:5:10"
										},
										{
											"id": 951,
											"name": "Ceil",
											"nameLocation": "367:4:10",
											"nodeType": "EnumValue",
											"src": "367:4:10"
										},
										{
											"id": 952,
											"name": "Trunc",
											"nameLocation": "409:5:10",
											"nodeType": "EnumValue",
											"src": "409:5:10"
										},
										{
											"id": 953,
											"name": "Expand",
											"nameLocation": "439:6:10",
											"nodeType": "EnumValue",
											"src": "439:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:10",
									"nodeType": "EnumDefinition",
									"src": "300:169:10"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "731:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "766:71:10",
													"nodeType": "YulBlock",
													"src": "766:71:10",
													"statements": [
														{
															"nativeSrc": "780:16:10",
															"nodeType": "YulAssignment",
															"src": "780:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "791:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "791:1:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "794:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "794:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "787:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:10"
																},
																"nativeSrc": "787:9:10",
																"nodeType": "YulFunctionCall",
																"src": "787:9:10"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "780:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:10"
																}
															]
														},
														{
															"nativeSrc": "809:18:10",
															"nodeType": "YulAssignment",
															"src": "809:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "low",
																		"nativeSrc": "820:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "820:3:10"
																	},
																	{
																		"name": "a",
																		"nativeSrc": "825:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "825:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "817:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "817:2:10"
																},
																"nativeSrc": "817:10:10",
																"nodeType": "YulFunctionCall",
																"src": "817:10:10"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "809:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "791:1:10",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "825:1:10",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "794:1:10",
														"valueSize": 1
													},
													{
														"declaration": 962,
														"isOffset": false,
														"isSlot": false,
														"src": "809:4:10",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "780:3:10",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "820:3:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 966,
												"nodeType": "InlineAssembly",
												"src": "741:96:10"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "475:163:10",
										"text": " @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add512",
									"nameLocation": "652:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "667:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "659:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "678:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "670:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:22:10"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "712:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "704:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "726:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "718:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:27:10"
									},
									"scope": 2563,
									"src": "643:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1115:462:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1437:134:10",
													"nodeType": "YulBlock",
													"src": "1437:134:10",
													"statements": [
														{
															"nativeSrc": "1451:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1451:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1468:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1468:1:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1471:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1471:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1478:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1478:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1474:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:10"
																		},
																		"nativeSrc": "1474:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1474:6:10"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nativeSrc": "1461:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:10"
																},
																"nativeSrc": "1461:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1461:20:10"
															},
															"variables": [
																{
																	"name": "mm",
																	"nativeSrc": "1455:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1455:2:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1494:16:10",
															"nodeType": "YulAssignment",
															"src": "1494:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1505:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1505:1:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1508:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1501:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1501:3:10"
																},
																"nativeSrc": "1501:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1501:9:10"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "1494:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:10"
																}
															]
														},
														{
															"nativeSrc": "1523:38:10",
															"nodeType": "YulAssignment",
															"src": "1523:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1539:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1539:2:10"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1543:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1543:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:10"
																		},
																		"nativeSrc": "1535:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1552:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1552:2:10"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1556:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1556:3:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1549:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1549:2:10"
																		},
																		"nativeSrc": "1549:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1549:11:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1531:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1531:3:10"
																},
																"nativeSrc": "1531:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1531:30:10"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "1523:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1523:4:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 971,
														"isOffset": false,
														"isSlot": false,
														"src": "1468:1:10",
														"valueSize": 1
													},
													{
														"declaration": 971,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:1:10",
														"valueSize": 1
													},
													{
														"declaration": 973,
														"isOffset": false,
														"isSlot": false,
														"src": "1471:1:10",
														"valueSize": 1
													},
													{
														"declaration": 973,
														"isOffset": false,
														"isSlot": false,
														"src": "1508:1:10",
														"valueSize": 1
													},
													{
														"declaration": 976,
														"isOffset": false,
														"isSlot": false,
														"src": "1523:4:10",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "1494:3:10",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "1543:3:10",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "1556:3:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 980,
												"nodeType": "InlineAssembly",
												"src": "1412:159:10"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "849:173:10",
										"text": " @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul512",
									"nameLocation": "1036:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1051:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1043:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1062:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1054:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:22:10"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "1096:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1088:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "1110:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1102:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:27:10"
									},
									"scope": 2563,
									"src": "1027:550:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "1784:149:10",
										"statements": [
											{
												"id": 1015,
												"nodeType": "UncheckedBlock",
												"src": "1794:133:10",
												"statements": [
													{
														"assignments": [
															995
														],
														"declarations": [
															{
																"constant": false,
																"id": 995,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1826:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1015,
																"src": "1818:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 994,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1818:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 999,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "1830:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1834:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1830:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1818:17:10"
													},
													{
														"expression": {
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1000,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "1849:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1001,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "1859:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1002,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "1864:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1859:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1849:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1005,
														"nodeType": "ExpressionStatement",
														"src": "1849:16:10"
													},
													{
														"expression": {
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1006,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "1879:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "1888:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1010,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "1908:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1008,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4328,
																			"src": "1892:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1901:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4327,
																		"src": "1892:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1892:24:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1888:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1014,
														"nodeType": "ExpressionStatement",
														"src": "1879:37:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "1583:105:10",
										"text": " @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1702:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1717:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1709:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1728:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1720:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:22:10"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1759:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1754:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1776:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1768:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:30:10"
									},
									"scope": 2563,
									"src": "1693:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "2143:149:10",
										"statements": [
											{
												"id": 1050,
												"nodeType": "UncheckedBlock",
												"src": "2153:133:10",
												"statements": [
													{
														"assignments": [
															1030
														],
														"declarations": [
															{
																"constant": false,
																"id": 1030,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2185:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1050,
																"src": "2177:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1029,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2177:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1034,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1031,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "2189:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "2193:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2189:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2177:17:10"
													},
													{
														"expression": {
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1035,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "2208:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1036,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2218:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1037,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "2223:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2218:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2208:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "2208:16:10"
													},
													{
														"expression": {
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1041,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "2238:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1042,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2247:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1045,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1025,
																			"src": "2267:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1043,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4328,
																			"src": "2251:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2260:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4327,
																		"src": "2251:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2251:24:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2247:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2238:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1049,
														"nodeType": "ExpressionStatement",
														"src": "2238:37:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1939:108:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "2061:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2076:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2068:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2087:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2079:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:22:10"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2118:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2113:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2135:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2127:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:30:10"
									},
									"scope": 2563,
									"src": "2052:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2505:391:10",
										"statements": [
											{
												"id": 1080,
												"nodeType": "UncheckedBlock",
												"src": "2515:375:10",
												"statements": [
													{
														"assignments": [
															1065
														],
														"declarations": [
															{
																"constant": false,
																"id": 1065,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2547:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1080,
																"src": "2539:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1064,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2539:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1069,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "2555:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2551:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2539:17:10"
													},
													{
														"AST": {
															"nativeSrc": "2595:188:10",
															"nodeType": "YulBlock",
															"src": "2595:188:10",
															"statements": [
																{
																	"nativeSrc": "2727:42:10",
																	"nodeType": "YulAssignment",
																	"src": "2727:42:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "c",
																								"nativeSrc": "2748:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "2748:1:10"
																							},
																							{
																								"name": "a",
																								"nativeSrc": "2751:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "2751:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2744:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2744:3:10"
																						},
																						"nativeSrc": "2744:9:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2744:9:10"
																					},
																					{
																						"name": "b",
																						"nativeSrc": "2755:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "2755:1:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2741:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "2741:2:10"
																				},
																				"nativeSrc": "2741:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2741:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "a",
																						"nativeSrc": "2766:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "2766:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2759:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2759:6:10"
																				},
																				"nativeSrc": "2759:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:9:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2738:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2738:2:10"
																		},
																		"nativeSrc": "2738:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2738:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "success",
																			"nativeSrc": "2727:7:10",
																			"nodeType": "YulIdentifier",
																			"src": "2727:7:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1055,
																"isOffset": false,
																"isSlot": false,
																"src": "2751:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1055,
																"isOffset": false,
																"isSlot": false,
																"src": "2766:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1057,
																"isOffset": false,
																"isSlot": false,
																"src": "2755:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1065,
																"isOffset": false,
																"isSlot": false,
																"src": "2748:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "2727:7:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1070,
														"nodeType": "InlineAssembly",
														"src": "2570:213:10"
													},
													{
														"expression": {
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1071,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "2842:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1072,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "2851:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1075,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "2871:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1073,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4328,
																			"src": "2855:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2864:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4327,
																		"src": "2855:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:24:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2851:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2842:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1079,
														"nodeType": "ExpressionStatement",
														"src": "2842:37:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "2298:111:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "2423:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2438:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2430:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2449:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2441:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:22:10"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2480:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2475:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2475:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2497:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2489:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:30:10"
									},
									"scope": 2563,
									"src": "2414:482:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "3111:231:10",
										"statements": [
											{
												"id": 1101,
												"nodeType": "UncheckedBlock",
												"src": "3121:215:10",
												"statements": [
													{
														"expression": {
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1094,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "3145:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1095,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "3155:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3155:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3145:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1099,
														"nodeType": "ExpressionStatement",
														"src": "3145:15:10"
													},
													{
														"AST": {
															"nativeSrc": "3199:127:10",
															"nodeType": "YulBlock",
															"src": "3199:127:10",
															"statements": [
																{
																	"nativeSrc": "3293:19:10",
																	"nodeType": "YulAssignment",
																	"src": "3293:19:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3307:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3307:1:10"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3310:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3310:1:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3303:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:10"
																		},
																		"nativeSrc": "3303:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3293:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3293:6:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1085,
																"isOffset": false,
																"isSlot": false,
																"src": "3307:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1087,
																"isOffset": false,
																"isSlot": false,
																"src": "3310:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1092,
																"isOffset": false,
																"isSlot": false,
																"src": "3293:6:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1100,
														"nodeType": "InlineAssembly",
														"src": "3174:152:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "2902:113:10",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "3029:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3044:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3036:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3055:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3047:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:22:10"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3086:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3081:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3081:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3103:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3095:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:30:10"
									},
									"scope": 2563,
									"src": "3020:322:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "3567:231:10",
										"statements": [
											{
												"id": 1122,
												"nodeType": "UncheckedBlock",
												"src": "3577:215:10",
												"statements": [
													{
														"expression": {
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1115,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "3601:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "3611:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3611:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3601:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1120,
														"nodeType": "ExpressionStatement",
														"src": "3601:15:10"
													},
													{
														"AST": {
															"nativeSrc": "3655:127:10",
															"nodeType": "YulBlock",
															"src": "3655:127:10",
															"statements": [
																{
																	"nativeSrc": "3749:19:10",
																	"nodeType": "YulAssignment",
																	"src": "3749:19:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3763:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3763:1:10"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3766:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3766:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mod",
																			"nativeSrc": "3759:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3759:3:10"
																		},
																		"nativeSrc": "3759:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3749:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3749:6:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1106,
																"isOffset": false,
																"isSlot": false,
																"src": "3763:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1108,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1113,
																"isOffset": false,
																"isSlot": false,
																"src": "3749:6:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1121,
														"nodeType": "InlineAssembly",
														"src": "3630:152:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "3348:123:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "3485:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3500:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3492:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3503:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:22:10"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3542:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3537:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3537:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3559:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3551:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:30:10"
									},
									"scope": 2563,
									"src": "3476:322:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "3989:122:10",
										"statements": [
											{
												"assignments": [
													1135,
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4005:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "4000:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4000:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4022:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "4014:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4014:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1139,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4039:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1140,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "4042:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1138,
														"name": "tryAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "4032:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3999:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4069:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1145,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4078:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4091:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1147,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4091:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1146,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4086:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4086:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4100:3:10",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4086:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1143,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4061:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1152,
												"nodeType": "Return",
												"src": "4054:50:10"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "3804:103:10",
										"text": " @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingAdd",
									"nameLocation": "3921:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3954:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3946:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:22:10"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3980:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3979:9:10"
									},
									"scope": 2563,
									"src": "3912:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "4294:73:10",
										"statements": [
											{
												"assignments": [
													null,
													1165
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4315:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "4307:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4307:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [
														{
															"id": 1167,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4332:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1168,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "4335:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "trySub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "4325:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4304:33:10"
											},
											{
												"expression": {
													"id": 1171,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1165,
													"src": "4354:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1172,
												"nodeType": "Return",
												"src": "4347:13:10"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "4117:95:10",
										"text": " @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingSub",
									"nameLocation": "4226:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4248:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "4240:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4240:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4259:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "4251:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:22:10"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "4285:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:9:10"
									},
									"scope": 2563,
									"src": "4217:150:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "4564:122:10",
										"statements": [
											{
												"assignments": [
													1185,
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4580:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "4575:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1184,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4575:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4597:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "4589:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4589:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"arguments": [
														{
															"id": 1189,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4614:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1190,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4617:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1188,
														"name": "tryMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4607:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4574:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1194,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "4644:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1195,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4653:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4666:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1197,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4666:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1196,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4661:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4661:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4675:3:10",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4661:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4636:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1202,
												"nodeType": "Return",
												"src": "4629:50:10"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "4373:109:10",
										"text": " @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingMul",
									"nameLocation": "4496:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4518:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4510:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4529:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4521:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:22:10"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4555:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:9:10"
									},
									"scope": 2563,
									"src": "4487:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "5158:207:10",
										"statements": [
											{
												"id": 1229,
												"nodeType": "UncheckedBlock",
												"src": "5168:191:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "5306:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1217,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1209,
																						"src": "5312:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1218,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1211,
																						"src": "5316:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5312:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1220,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5311:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1223,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1207,
																					"src": "5337:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1221,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4328,
																					"src": "5321:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5330:6:10",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4327,
																				"src": "5321:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5321:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5311:36:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5310:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5306:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1215,
														"id": 1228,
														"nodeType": "Return",
														"src": "5299:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "4692:374:10",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "5080:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "5093:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5088:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5088:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5112:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5104:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5123:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5115:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:38:10"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5149:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:9:10"
									},
									"scope": 2563,
									"src": "5071:294:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "5502:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1242,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "5527:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "5531:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5527:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1245,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "5534:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1246,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "5537:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5519:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1248,
												"nodeType": "Return",
												"src": "5512:27:10"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "5371:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5444:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5456:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "5448:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5467:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "5459:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5447:22:10"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "5493:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:9:10"
									},
									"scope": 2563,
									"src": "5435:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "5684:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1261,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "5709:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1262,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "5713:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5709:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1264,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "5716:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1265,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "5719:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1260,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5701:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5701:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1267,
												"nodeType": "Return",
												"src": "5694:27:10"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "5552:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5626:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5638:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5630:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5649:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5641:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:22:10"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5675:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:10"
									},
									"scope": 2563,
									"src": "5617:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "5912:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1279,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "5967:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1280,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "5971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5967:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1282,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5966:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1283,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "5977:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1284,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "5981:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5977:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1286,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5976:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5986:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "5976:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5966:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1290,
												"nodeType": "Return",
												"src": "5959:28:10"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "5734:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "5850:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5866:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5858:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5877:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5869:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5857:22:10"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5903:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:9:10"
									},
									"scope": 2563,
									"src": "5841:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "6286:633:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1302,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "6300:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6305:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6300:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "6296:150:10",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "6308:138:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1308,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "6412:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6418:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 828,
																		"src": "6412:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1305,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "6400:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6406:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 860,
																	"src": "6400:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6400:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1311,
															"nodeType": "ExpressionStatement",
															"src": "6400:35:10"
														}
													]
												}
											},
											{
												"id": 1331,
												"nodeType": "UncheckedBlock",
												"src": "6829:84:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1316,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "6876:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6880:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6876:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1314,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "6860:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6869:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "6860:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6860:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1320,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1295,
																							"src": "6887:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1321,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6891:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6887:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1323,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6886:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1324,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "6896:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6886:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6900:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6886:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6885:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6860:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1301,
														"id": 1330,
														"nodeType": "Return",
														"src": "6853:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "6000:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "6224:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6240:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "6232:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6251:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "6243:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:22:10"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "6277:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:9:10"
									},
									"scope": 2563,
									"src": "6215:704:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "7340:3585:10",
										"statements": [
											{
												"id": 1467,
												"nodeType": "UncheckedBlock",
												"src": "7350:3569:10",
												"statements": [
													{
														"assignments": [
															1346,
															1348
														],
														"declarations": [
															{
																"constant": false,
																"id": 1346,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "7383:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "7375:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7375:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1348,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "7397:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "7389:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7389:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1353,
														"initialValue": {
															"arguments": [
																{
																	"id": 1350,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "7411:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1351,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "7414:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1349,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "7404:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7404:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7374:42:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1354,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "7498:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7506:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7498:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1362,
														"nodeType": "IfStatement",
														"src": "7494:365:10",
														"trueBody": {
															"id": 1361,
															"nodeType": "Block",
															"src": "7509:350:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1357,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "7827:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1358,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "7833:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7827:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1344,
																	"id": 1360,
																	"nodeType": "Return",
																	"src": "7820:24:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1363,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "7969:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1364,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "7984:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7969:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1381,
														"nodeType": "IfStatement",
														"src": "7965:142:10",
														"trueBody": {
															"id": 1380,
															"nodeType": "Block",
															"src": "7990:117:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1370,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1340,
																							"src": "8028:11:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1371,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8043:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8028:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1373,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "8046:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1374,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8052:16:10",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 828,
																						"src": "8046:22:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1375,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "8070:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8076:14:10",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 824,
																						"src": "8070:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1369,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1231,
																					"src": "8020:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8020:71:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1366,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "8008:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8014:5:10",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 860,
																			"src": "8008:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8008:84:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "8008:84:10"
																}
															]
														}
													},
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "8367:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "8359:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8359:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"nodeType": "VariableDeclarationStatement",
														"src": "8359:17:10"
													},
													{
														"AST": {
															"nativeSrc": "8415:283:10",
															"nodeType": "YulBlock",
															"src": "8415:283:10",
															"statements": [
																{
																	"nativeSrc": "8484:38:10",
																	"nodeType": "YulAssignment",
																	"src": "8484:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8504:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8504:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "8507:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8507:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "8510:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "8510:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "8497:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8497:6:10"
																		},
																		"nativeSrc": "8497:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "8484:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "8484:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "8604:37:10",
																	"nodeType": "YulAssignment",
																	"src": "8604:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "high",
																				"nativeSrc": "8616:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "8625:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8625:9:10"
																					},
																					{
																						"name": "low",
																						"nativeSrc": "8636:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8636:3:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "8622:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8622:2:10"
																				},
																				"nativeSrc": "8622:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8622:18:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:10"
																		},
																		"nativeSrc": "8612:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:29:10"
																	},
																	"variableNames": [
																		{
																			"name": "high",
																			"nativeSrc": "8604:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "8604:4:10"
																		}
																	]
																},
																{
																	"nativeSrc": "8658:26:10",
																	"nodeType": "YulAssignment",
																	"src": "8658:26:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "8669:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8669:3:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "8674:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8674:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8665:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:10"
																		},
																		"nativeSrc": "8665:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:19:10"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "8658:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1340,
																"isOffset": false,
																"isSlot": false,
																"src": "8510:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "8604:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "8616:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "8636:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "8658:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "8669:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "8484:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "8625:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "8674:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1336,
																"isOffset": false,
																"isSlot": false,
																"src": "8504:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1338,
																"isOffset": false,
																"isSlot": false,
																"src": "8507:1:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1385,
														"nodeType": "InlineAssembly",
														"src": "8390:308:10"
													},
													{
														"assignments": [
															1387
														],
														"declarations": [
															{
																"constant": false,
																"id": 1387,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "8910:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "8902:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1386,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8902:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1394,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1388,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "8917:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8932:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1390,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "8936:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8932:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8931:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8917:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8902:46:10"
													},
													{
														"AST": {
															"nativeSrc": "8987:359:10",
															"nodeType": "YulBlock",
															"src": "8987:359:10",
															"statements": [
																{
																	"nativeSrc": "9052:37:10",
																	"nodeType": "YulAssignment",
																	"src": "9052:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "9071:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "9071:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9084:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9084:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9067:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:10"
																		},
																		"nativeSrc": "9067:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9067:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "9052:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "9052:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "9153:21:10",
																	"nodeType": "YulAssignment",
																	"src": "9153:21:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "9164:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9164:3:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9169:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9169:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9160:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:10"
																		},
																		"nativeSrc": "9160:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:14:10"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "9153:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:10"
																		}
																	]
																},
																{
																	"nativeSrc": "9293:39:10",
																	"nodeType": "YulAssignment",
																	"src": "9293:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9313:1:10",
																								"nodeType": "YulLiteral",
																								"src": "9313:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "9316:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "9316:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "9309:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9309:3:10"
																						},
																						"nativeSrc": "9309:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9309:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "9323:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "9323:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "9305:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9305:3:10"
																				},
																				"nativeSrc": "9305:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9305:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9330:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9330:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9301:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9301:3:10"
																		},
																		"nativeSrc": "9301:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9301:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "9293:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "9293:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1340,
																"isOffset": false,
																"isSlot": false,
																"src": "9052:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1340,
																"isOffset": false,
																"isSlot": false,
																"src": "9071:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "9153:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "9164:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9084:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9169:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9293:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9316:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9323:4:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1395,
														"nodeType": "InlineAssembly",
														"src": "8962:384:10"
													},
													{
														"expression": {
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1396,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "9409:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1397,
																	"name": "high",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "9416:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1398,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "9423:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9416:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9409:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1401,
														"nodeType": "ExpressionStatement",
														"src": "9409:18:10"
													},
													{
														"assignments": [
															1403
														],
														"declarations": [
															{
																"constant": false,
																"id": 1403,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "9770:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "9762:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1402,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9762:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1410,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9781:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1405,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "9785:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9781:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9780:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9800:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "9780:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9762:39:10"
													},
													{
														"expression": {
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1411,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10018:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10029:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1413,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10033:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1414,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10047:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10033:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10029:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10018:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1418,
														"nodeType": "ExpressionStatement",
														"src": "10018:36:10"
													},
													{
														"expression": {
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1419,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10088:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1421,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10103:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1422,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10117:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10103:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10099:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10088:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1426,
														"nodeType": "ExpressionStatement",
														"src": "10088:36:10"
													},
													{
														"expression": {
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1427,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10160:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10171:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1429,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10175:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1430,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10189:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10175:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10171:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10160:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1434,
														"nodeType": "ExpressionStatement",
														"src": "10160:36:10"
													},
													{
														"expression": {
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1435,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10231:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10242:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1437,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10246:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1438,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10260:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10246:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10242:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1442,
														"nodeType": "ExpressionStatement",
														"src": "10231:36:10"
													},
													{
														"expression": {
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1443,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10304:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1445,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10319:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1446,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10333:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10319:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10315:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10304:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1450,
														"nodeType": "ExpressionStatement",
														"src": "10304:36:10"
													},
													{
														"expression": {
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1451,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10378:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10389:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1453,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10393:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1454,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10407:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10393:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10389:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10378:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1458,
														"nodeType": "ExpressionStatement",
														"src": "10378:36:10"
													},
													{
														"expression": {
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1459,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "10859:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1460,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "10868:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1461,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "10874:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10868:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10859:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1464,
														"nodeType": "ExpressionStatement",
														"src": "10859:22:10"
													},
													{
														"expression": {
															"id": 1465,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "10902:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1344,
														"id": 1466,
														"nodeType": "Return",
														"src": "10895:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "6925:312:10",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "7251:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7266:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7258:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7277:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7269:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7269:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "7288:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7280:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:43:10"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7332:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7324:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:16:10"
									},
									"scope": 2563,
									"src": "7242:3683:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "11164:128:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1485,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "11188:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1486,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "11191:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1487,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "11194:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1484,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1469,
																1506
															],
															"referencedDeclaration": 1469,
															"src": "11181:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11181:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1492,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "11242:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1491,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "11225:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11225:26:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1495,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1472,
																				"src": "11262:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1496,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1474,
																				"src": "11265:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1497,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1476,
																				"src": "11268:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1494,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "11255:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11255:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11283:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11255:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11225:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1489,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4328,
																"src": "11209:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11218:6:10",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4327,
															"src": "11209:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11209:76:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11181:104:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1504,
												"nodeType": "Return",
												"src": "11174:111:10"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "10931:118:10",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11063:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11078:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11070:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11089:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11081:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11100:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11092:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11122:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11113:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1477,
														"name": "Rounding",
														"nameLocations": [
															"11113:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "11113:8:10"
													},
													"referencedDeclaration": 954,
													"src": "11113:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11069:62:10"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11155:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11155:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11154:9:10"
									},
									"scope": 2563,
									"src": "11054:238:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "11500:245:10",
										"statements": [
											{
												"id": 1554,
												"nodeType": "UncheckedBlock",
												"src": "11510:229:10",
												"statements": [
													{
														"assignments": [
															1519,
															1521
														],
														"declarations": [
															{
																"constant": false,
																"id": 1519,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "11543:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1554,
																"src": "11535:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1518,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11535:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1521,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "11557:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1554,
																"src": "11549:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1520,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11549:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1526,
														"initialValue": {
															"arguments": [
																{
																	"id": 1523,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "11571:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1524,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "11574:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1522,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "11564:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11564:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11534:42:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1527,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "11594:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11602:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1529,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "11607:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "11602:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11594:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1540,
														"nodeType": "IfStatement",
														"src": "11590:86:10",
														"trueBody": {
															"id": 1539,
															"nodeType": "Block",
															"src": "11610:66:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1535,
																					"name": "Panic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 861,
																					"src": "11640:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																						"typeString": "type(library Panic)"
																					}
																				},
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "11646:14:10",
																				"memberName": "UNDER_OVERFLOW",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 824,
																				"src": "11640:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1532,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "11628:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11634:5:10",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 860,
																			"src": "11628:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11628:33:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1538,
																	"nodeType": "ExpressionStatement",
																	"src": "11628:33:10"
																}
															]
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1541,
																			"name": "high",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "11697:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 1544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "323536",
																						"id": 1542,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11706:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"value": "256"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1543,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1513,
																						"src": "11712:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "11706:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"id": 1545,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11705:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "11697:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11696:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1548,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1521,
																			"src": "11719:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"id": 1549,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "11726:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "11719:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11718:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11696:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1517,
														"id": 1553,
														"nodeType": "Return",
														"src": "11689:39:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "11298:111:10",
										"text": " @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11423:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11438:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11430:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11430:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11449:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11441:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11441:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11458:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11452:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1512,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11452:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11429:31:10"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11492:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11484:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:16:10"
									},
									"scope": 2563,
									"src": "11414:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "11963:113:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1572,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "11987:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1573,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "11990:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1574,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "11993:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1571,
															"name": "mulShr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1556,
																1595
															],
															"referencedDeclaration": 1556,
															"src": "11980:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11980:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1579,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "12031:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1578,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "12014:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12014:26:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1582,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1559,
																				"src": "12051:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1583,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "12054:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12057:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1585,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "12062:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "12057:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1581,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "12044:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12044:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12067:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12044:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12014:54:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1576,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4328,
																"src": "11998:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12007:6:10",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4327,
															"src": "11998:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11998:71:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11980:89:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1593,
												"nodeType": "Return",
												"src": "11973:96:10"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "11751:109:10",
										"text": " @dev Calculates x * y >> n with full precision, following the selected rounding direction."
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11874:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11889:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11881:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11900:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11892:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11909:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11903:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1562,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11903:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11921:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11912:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1564,
														"name": "Rounding",
														"nameLocations": [
															"11912:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "11912:8:10"
													},
													"referencedDeclaration": 954,
													"src": "11912:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:50:10"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11954:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11954:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:9:10"
									},
									"scope": 2563,
									"src": "11865:211:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "12710:1849:10",
										"statements": [
											{
												"id": 1690,
												"nodeType": "UncheckedBlock",
												"src": "12720:1833:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1605,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "12748:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12753:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12748:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1610,
														"nodeType": "IfStatement",
														"src": "12744:20:10",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12763:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1604,
															"id": 1609,
															"nodeType": "Return",
															"src": "12756:8:10"
														}
													},
													{
														"assignments": [
															1612
														],
														"declarations": [
															{
																"constant": false,
																"id": 1612,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13243:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13235:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1611,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13235:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1616,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "13255:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1614,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "13259:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13255:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13235:25:10"
													},
													{
														"assignments": [
															1618
														],
														"declarations": [
															{
																"constant": false,
																"id": 1618,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "13282:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13274:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1617,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13274:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1620,
														"initialValue": {
															"id": 1619,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "13288:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13274:15:10"
													},
													{
														"assignments": [
															1622
														],
														"declarations": [
															{
																"constant": false,
																"id": 1622,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "13432:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13425:8:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1621,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13425:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1624,
														"initialValue": {
															"hexValue": "30",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13436:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13425:12:10"
													},
													{
														"assignments": [
															1626
														],
														"declarations": [
															{
																"constant": false,
																"id": 1626,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "13458:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13451:8:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1625,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13451:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1628,
														"initialValue": {
															"hexValue": "31",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13462:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13451:12:10"
													},
													{
														"body": {
															"id": 1665,
															"nodeType": "Block",
															"src": "13501:882:10",
															"statements": [
																{
																	"assignments": [
																		1633
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1633,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "13527:8:10",
																			"nodeType": "VariableDeclaration",
																			"scope": 1665,
																			"src": "13519:16:10",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1632,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "13519:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1637,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1634,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "13538:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1635,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "13544:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13538:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "13519:34:10"
																},
																{
																	"expression": {
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1638,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1618,
																					"src": "13573:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1639,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1612,
																					"src": "13578:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1640,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13572:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1641,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1612,
																					"src": "13678:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1642,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1618,
																						"src": "13923:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1643,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1612,
																							"src": "13929:9:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1644,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1633,
																							"src": "13941:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13929:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13923:26:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1647,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13591:376:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "13572:395:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1649,
																	"nodeType": "ExpressionStatement",
																	"src": "13572:395:10"
																},
																{
																	"expression": {
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1650,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1622,
																					"src": "13987:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1651,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "13990:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1652,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1653,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "14072:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1654,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1622,
																						"src": "14326:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1660,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1655,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1626,
																							"src": "14330:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1658,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1633,
																									"src": "14341:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1657,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14334:6:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1656,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "14334:6:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1659,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14334:16:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "14330:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "14326:24:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1662,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13995:373:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "13986:382:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1664,
																	"nodeType": "ExpressionStatement",
																	"src": "13986:382:10"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1629,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "13485:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13498:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13485:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1666,
														"nodeType": "WhileStatement",
														"src": "13478:905:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1667,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "14401:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14408:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14401:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1672,
														"nodeType": "IfStatement",
														"src": "14397:22:10",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14418:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1604,
															"id": 1671,
															"nodeType": "Return",
															"src": "14411:8:10"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1674,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "14470:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14474:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14470:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1677,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1600,
																		"src": "14477:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "14489:2:10",
																				"subExpression": {
																					"id": 1680,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1622,
																					"src": "14490:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14481:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1678,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14481:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14481:11:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14477:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1686,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "14502:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14494:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1684,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14494:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14494:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1673,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "14462:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14462:43:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1604,
														"id": 1689,
														"nodeType": "Return",
														"src": "14455:50:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "12082:553:10",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "12649:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12664:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "12656:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12656:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "12675:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "12667:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12667:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12655:22:10"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "12701:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12701:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12700:9:10"
									},
									"scope": 2563,
									"src": "12640:1919:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "15159:82:10",
										"statements": [
											{
												"id": 1711,
												"nodeType": "UncheckedBlock",
												"src": "15169:66:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1704,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "15212:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1705,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "15215:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15219:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "15215:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1708,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "15222:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1702,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "15200:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15205:6:10",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1749,
																"src": "15200:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15200:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1701,
														"id": 1710,
														"nodeType": "Return",
														"src": "15193:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "14565:514:10",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "15093:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15113:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "15105:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15105:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "15124:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "15116:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15116:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15104:22:10"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "15150:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15150:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15149:9:10"
									},
									"scope": 2563,
									"src": "15084:157:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "16011:174:10",
										"statements": [
											{
												"assignments": [
													1726,
													1728
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16027:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "16022:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1725,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16022:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16044:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "16036:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1727,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16036:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"arguments": [
														{
															"id": 1730,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "16064:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1731,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "16067:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1732,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "16070:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1729,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1773,
															1855
														],
														"referencedDeclaration": 1773,
														"src": "16054:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16054:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16021:51:10"
											},
											{
												"condition": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16086:8:10",
													"subExpression": {
														"id": 1735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "16087:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "16082:74:10",
												"trueBody": {
													"id": 1744,
													"nodeType": "Block",
													"src": "16096:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1740,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "16122:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16128:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 828,
																		"src": "16122:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1737,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "16110:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16116:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 860,
																	"src": "16110:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16110:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1743,
															"nodeType": "ExpressionStatement",
															"src": "16110:35:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1746,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1728,
													"src": "16172:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1747,
												"nodeType": "Return",
												"src": "16165:13:10"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "15247:678:10",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "15939:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15954:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "15946:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15946:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "15965:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "15957:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15957:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "15976:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "15968:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15968:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15945:33:10"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "16002:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16002:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16001:9:10"
									},
									"scope": 2563,
									"src": "15930:255:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "17039:1493:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "17053:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17058:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17053:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "17049:29:10",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17069:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17076:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1768,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17068:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1762,
													"id": 1769,
													"nodeType": "Return",
													"src": "17061:17:10"
												}
											},
											{
												"AST": {
													"nativeSrc": "17113:1413:10",
													"nodeType": "YulBlock",
													"src": "17113:1413:10",
													"statements": [
														{
															"nativeSrc": "17127:22:10",
															"nodeType": "YulVariableDeclaration",
															"src": "17127:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17144:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17144:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "17138:5:10"
																},
																"nativeSrc": "17138:11:10",
																"nodeType": "YulFunctionCall",
																"src": "17138:11:10"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "17131:3:10",
																	"nodeType": "YulTypedName",
																	"src": "17131:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "18057:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18057:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18062:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18062:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18050:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18050:6:10"
																},
																"nativeSrc": "18050:17:10",
																"nodeType": "YulFunctionCall",
																"src": "18050:17:10"
															},
															"nativeSrc": "18050:17:10",
															"nodeType": "YulExpressionStatement",
															"src": "18050:17:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18091:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18091:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18096:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18096:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18087:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18087:3:10"
																		},
																		"nativeSrc": "18087:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18087:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18103:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18080:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18080:6:10"
																},
																"nativeSrc": "18080:28:10",
																"nodeType": "YulFunctionCall",
																"src": "18080:28:10"
															},
															"nativeSrc": "18080:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "18080:28:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18132:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18132:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18137:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18137:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18128:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18128:3:10"
																		},
																		"nativeSrc": "18128:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18128:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18144:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18144:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18121:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18121:6:10"
																},
																"nativeSrc": "18121:28:10",
																"nodeType": "YulFunctionCall",
																"src": "18121:28:10"
															},
															"nativeSrc": "18121:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "18121:28:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18173:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18173:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18178:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18178:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18169:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:10"
																		},
																		"nativeSrc": "18169:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:14:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "18185:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18185:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18162:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:10"
																},
																"nativeSrc": "18162:25:10",
																"nodeType": "YulFunctionCall",
																"src": "18162:25:10"
															},
															"nativeSrc": "18162:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "18162:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18211:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18211:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18216:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18216:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18207:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18207:3:10"
																		},
																		"nativeSrc": "18207:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18207:14:10"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "18223:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18223:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18200:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18200:6:10"
																},
																"nativeSrc": "18200:25:10",
																"nodeType": "YulFunctionCall",
																"src": "18200:25:10"
															},
															"nativeSrc": "18200:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "18200:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18249:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18249:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18254:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18245:3:10"
																		},
																		"nativeSrc": "18245:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18245:14:10"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "18261:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18261:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18238:6:10"
																},
																"nativeSrc": "18238:25:10",
																"nodeType": "YulFunctionCall",
																"src": "18238:25:10"
															},
															"nativeSrc": "18238:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "18238:25:10"
														},
														{
															"nativeSrc": "18425:57:10",
															"nodeType": "YulAssignment",
															"src": "18425:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "18447:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18447:3:10"
																		},
																		"nativeSrc": "18447:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18447:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18454:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18454:4:10",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18460:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18460:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18465:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18465:4:10",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18471:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18471:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18477:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18477:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "18436:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "18436:10:10"
																},
																"nativeSrc": "18436:46:10",
																"nodeType": "YulFunctionCall",
																"src": "18436:46:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "18425:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "18425:7:10"
																}
															]
														},
														{
															"nativeSrc": "18495:21:10",
															"nodeType": "YulAssignment",
															"src": "18495:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18511:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18511:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18505:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18505:5:10"
																},
																"nativeSrc": "18505:11:10",
																"nodeType": "YulFunctionCall",
																"src": "18505:11:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18495:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1752,
														"isOffset": false,
														"isSlot": false,
														"src": "18185:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "18223:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "18261:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1761,
														"isOffset": false,
														"isSlot": false,
														"src": "18495:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1759,
														"isOffset": false,
														"isSlot": false,
														"src": "18425:7:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1771,
												"nodeType": "InlineAssembly",
												"src": "17088:1438:10"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "16191:738:10",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16943:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16961:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "16953:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16972:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "16964:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16983:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "16975:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16952:33:10"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17014:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "17009:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17009:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17031:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "17023:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17023:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17008:30:10"
									},
									"scope": 2563,
									"src": "16934:1598:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "18729:179:10",
										"statements": [
											{
												"assignments": [
													1786,
													1788
												],
												"declarations": [
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18745:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "18740:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1785,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18740:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1788,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18767:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "18754:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1787,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18754:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1794,
												"initialValue": {
													"arguments": [
														{
															"id": 1790,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "18787:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1791,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "18790:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1792,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "18793:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1789,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1773,
															1855
														],
														"referencedDeclaration": 1855,
														"src": "18777:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18777:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18739:56:10"
											},
											{
												"condition": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18809:8:10",
													"subExpression": {
														"id": 1795,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "18810:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1805,
												"nodeType": "IfStatement",
												"src": "18805:74:10",
												"trueBody": {
													"id": 1804,
													"nodeType": "Block",
													"src": "18819:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1800,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "18845:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18851:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 828,
																		"src": "18845:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1797,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "18833:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18839:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 860,
																	"src": "18833:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18833:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1803,
															"nodeType": "ExpressionStatement",
															"src": "18833:35:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1806,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1788,
													"src": "18895:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1807,
												"nodeType": "Return",
												"src": "18888:13:10"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "18538:85:10",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "18637:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18657:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18644:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18644:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "18673:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18660:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18660:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "18689:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18676:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18676:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18643:48:10"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18715:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18715:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18714:14:10"
									},
									"scope": 2563,
									"src": "18628:280:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "19162:771:10",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1824,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "19187:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1823,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "19176:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19176:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1833,
												"nodeType": "IfStatement",
												"src": "19172:47:10",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19199:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19216:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "19206:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1827,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19210:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19206:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1831,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19198:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1822,
													"id": 1832,
													"nodeType": "Return",
													"src": "19191:28:10"
												}
											},
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "19238:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "19230:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19230:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1838,
												"initialValue": {
													"expression": {
														"id": 1836,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "19245:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19247:6:10",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "19245:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19230:23:10"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1839,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "19335:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1842,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "19361:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19363:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19361:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1844,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "19371:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19373:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19371:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1846,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "19381:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "19387:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1848,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "19390:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1849,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "19393:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1840,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "19344:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19348:12:10",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "19344:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19344:51:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "19335:60:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "19335:60:10"
											},
											{
												"AST": {
													"nativeSrc": "19431:496:10",
													"nodeType": "YulBlock",
													"src": "19431:496:10",
													"statements": [
														{
															"nativeSrc": "19445:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19445:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19464:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19464:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19472:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19472:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19460:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19460:3:10"
																},
																"nativeSrc": "19460:17:10",
																"nodeType": "YulFunctionCall",
																"src": "19460:17:10"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "19449:7:10",
																	"nodeType": "YulTypedName",
																	"src": "19449:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19567:73:10",
															"nodeType": "YulAssignment",
															"src": "19567:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "19589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19589:3:10"
																		},
																		"nativeSrc": "19589:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19589:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19596:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19596:4:10",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19602:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "19602:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "19617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19617:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19611:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "19611:5:10"
																		},
																		"nativeSrc": "19611:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19611:13:10"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19626:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "19626:7:10"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19635:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19635:4:10"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "19578:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "19578:10:10"
																},
																"nativeSrc": "19578:62:10",
																"nodeType": "YulFunctionCall",
																"src": "19578:62:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "19567:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "19567:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19796:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19796:6:10"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19804:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19789:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19789:6:10"
																},
																"nativeSrc": "19789:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19789:20:10"
															},
															"nativeSrc": "19789:20:10",
															"nodeType": "YulExpressionStatement",
															"src": "19789:20:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19892:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19892:4:10",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "19902:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "19902:7:10"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "19911:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19911:4:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19898:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19898:3:10"
																		},
																		"nativeSrc": "19898:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19898:18:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19885:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19885:6:10"
																},
																"nativeSrc": "19885:32:10",
																"nodeType": "YulFunctionCall",
																"src": "19885:32:10"
															},
															"nativeSrc": "19885:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "19885:32:10"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1835,
														"isOffset": false,
														"isSlot": false,
														"src": "19635:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1835,
														"isOffset": false,
														"isSlot": false,
														"src": "19804:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1835,
														"isOffset": false,
														"isSlot": false,
														"src": "19911:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "19464:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "19617:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "19796:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "19567:7:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1853,
												"nodeType": "InlineAssembly",
												"src": "19406:521:10"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "18914:88:10",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "19016:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19048:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19035:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19035:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "19072:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19059:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19059:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "19096:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19083:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19083:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19025:78:10"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "19132:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19127:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19127:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19154:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19141:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19141:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19126:35:10"
									},
									"scope": 2563,
									"src": "19007:926:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "20088:176:10",
										"statements": [
											{
												"body": {
													"id": 1883,
													"nodeType": "Block",
													"src": "20145:92:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1874,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "20163:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1876,
																	"indexExpression": {
																		"id": 1875,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "20173:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20163:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20179:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20163:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1882,
															"nodeType": "IfStatement",
															"src": "20159:68:10",
															"trueBody": {
																"id": 1881,
																"nodeType": "Block",
																"src": "20182:45:10",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20207:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1862,
																		"id": 1880,
																		"nodeType": "Return",
																		"src": "20200:12:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1867,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "20118:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1868,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "20122:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20132:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20122:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20118:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"initializationExpression": {
													"assignments": [
														1864
													],
													"declarations": [
														{
															"constant": false,
															"id": 1864,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20111:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1884,
															"src": "20103:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1863,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20103:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1866,
													"initialValue": {
														"hexValue": "30",
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20115:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20103:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "20140:3:10",
														"subExpression": {
															"id": 1871,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "20142:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1873,
													"nodeType": "ExpressionStatement",
													"src": "20140:3:10"
												},
												"nodeType": "ForStatement",
												"src": "20098:139:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20253:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1862,
												"id": 1886,
												"nodeType": "Return",
												"src": "20246:11:10"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "19939:72:10",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "20025:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "20049:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "20036:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20036:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20035:24:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "20082:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20082:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20081:6:10"
									},
									"scope": 2563,
									"src": "20016:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "20624:5124:10",
										"statements": [
											{
												"id": 2105,
												"nodeType": "UncheckedBlock",
												"src": "20634:5108:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1896,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "20728:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20728:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1902,
														"nodeType": "IfStatement",
														"src": "20724:53:10",
														"trueBody": {
															"id": 1901,
															"nodeType": "Block",
															"src": "20736:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 1899,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "20761:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1895,
																	"id": 1900,
																	"nodeType": "Return",
																	"src": "20754:8:10"
																}
															]
														}
													},
													{
														"assignments": [
															1904
														],
														"declarations": [
															{
																"constant": false,
																"id": 1904,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "21712:2:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "21704:10:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1903,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21704:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1906,
														"initialValue": {
															"id": 1905,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "21717:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21704:14:10"
													},
													{
														"assignments": [
															1908
														],
														"declarations": [
															{
																"constant": false,
																"id": 1908,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "21740:2:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "21732:10:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1907,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21732:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1910,
														"initialValue": {
															"hexValue": "31",
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21745:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21732:14:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1911,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21765:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 1914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21772:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21777:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21772:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 1915,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "21765:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1926,
														"nodeType": "IfStatement",
														"src": "21761:92:10",
														"trueBody": {
															"id": 1925,
															"nodeType": "Block",
															"src": "21783:70:10",
															"statements": [
																{
																	"expression": {
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1917,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "21801:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21808:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21801:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1920,
																	"nodeType": "ExpressionStatement",
																	"src": "21801:10:10"
																},
																{
																	"expression": {
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1921,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "21829:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21836:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21829:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1924,
																	"nodeType": "ExpressionStatement",
																	"src": "21829:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1927,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21870:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21877:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21882:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21877:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21876:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "21870:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1942,
														"nodeType": "IfStatement",
														"src": "21866:90:10",
														"trueBody": {
															"id": 1941,
															"nodeType": "Block",
															"src": "21887:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1933,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "21905:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21912:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21905:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1936,
																	"nodeType": "ExpressionStatement",
																	"src": "21905:9:10"
																},
																{
																	"expression": {
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1937,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "21932:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21939:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21932:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1940,
																	"nodeType": "ExpressionStatement",
																	"src": "21932:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1943,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21973:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21980:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21985:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21980:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 1947,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21979:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "21973:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1958,
														"nodeType": "IfStatement",
														"src": "21969:90:10",
														"trueBody": {
															"id": 1957,
															"nodeType": "Block",
															"src": "21990:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1949,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22008:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22015:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22008:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1952,
																	"nodeType": "ExpressionStatement",
																	"src": "22008:9:10"
																},
																{
																	"expression": {
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1953,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22035:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22042:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22035:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1956,
																	"nodeType": "ExpressionStatement",
																	"src": "22035:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1959,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22076:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22083:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22088:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22083:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22082:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "22076:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1974,
														"nodeType": "IfStatement",
														"src": "22072:89:10",
														"trueBody": {
															"id": 1973,
															"nodeType": "Block",
															"src": "22093:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1965,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22111:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22118:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22111:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1968,
																	"nodeType": "ExpressionStatement",
																	"src": "22111:9:10"
																},
																{
																	"expression": {
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1969,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22138:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22145:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22138:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1972,
																	"nodeType": "ExpressionStatement",
																	"src": "22138:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1975,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22178:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22185:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22190:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22185:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22184:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "22178:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1990,
														"nodeType": "IfStatement",
														"src": "22174:87:10",
														"trueBody": {
															"id": 1989,
															"nodeType": "Block",
															"src": "22194:67:10",
															"statements": [
																{
																	"expression": {
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1981,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22212:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22219:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22212:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1984,
																	"nodeType": "ExpressionStatement",
																	"src": "22212:8:10"
																},
																{
																	"expression": {
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1985,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22238:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22245:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22238:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1988,
																	"nodeType": "ExpressionStatement",
																	"src": "22238:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22278:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22285:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22290:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22285:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 1995,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22284:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "22278:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2006,
														"nodeType": "IfStatement",
														"src": "22274:87:10",
														"trueBody": {
															"id": 2005,
															"nodeType": "Block",
															"src": "22294:67:10",
															"statements": [
																{
																	"expression": {
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1997,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22312:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22319:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22312:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2000,
																	"nodeType": "ExpressionStatement",
																	"src": "22312:8:10"
																},
																{
																	"expression": {
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2001,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22338:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22345:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22338:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2004,
																	"nodeType": "ExpressionStatement",
																	"src": "22338:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2007,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22378:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22385:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22390:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22385:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 2011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22384:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "22378:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2018,
														"nodeType": "IfStatement",
														"src": "22374:61:10",
														"trueBody": {
															"id": 2017,
															"nodeType": "Block",
															"src": "22394:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2013,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22412:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22419:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22412:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2016,
																	"nodeType": "ExpressionStatement",
																	"src": "22412:8:10"
																}
															]
														}
													},
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2019,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "22855:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 2020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22861:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2021,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "22865:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22861:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2023,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22860:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22872:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22860:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22855:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "22855:18:10"
													},
													{
														"expression": {
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2028,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "24760:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2029,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "24766:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2030,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "24771:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2031,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "24775:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24771:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24766:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24765:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24765:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24760:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2038,
														"nodeType": "ExpressionStatement",
														"src": "24760:23:10"
													},
													{
														"expression": {
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2039,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "24869:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2040,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "24875:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2041,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "24880:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2042,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "24884:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24880:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24875:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24874:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24891:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24874:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24869:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2049,
														"nodeType": "ExpressionStatement",
														"src": "24869:23:10"
													},
													{
														"expression": {
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2050,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "24980:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2051,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "24986:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2052,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "24991:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2053,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "24995:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24991:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24986:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24985:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25002:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24985:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24980:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2060,
														"nodeType": "ExpressionStatement",
														"src": "24980:23:10"
													},
													{
														"expression": {
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2061,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25089:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2062,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25095:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2063,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "25100:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2064,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "25104:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25100:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25095:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25094:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25094:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25089:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2071,
														"nodeType": "ExpressionStatement",
														"src": "25089:23:10"
													},
													{
														"expression": {
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2072,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25199:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2073,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25205:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2074,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "25210:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2075,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "25214:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25210:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25205:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2078,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25204:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25221:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25204:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25199:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2082,
														"nodeType": "ExpressionStatement",
														"src": "25199:23:10"
													},
													{
														"expression": {
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2083,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25309:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2084,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25315:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2085,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "25320:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2086,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "25324:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25320:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25315:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2089,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25314:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25331:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25314:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25309:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2093,
														"nodeType": "ExpressionStatement",
														"src": "25309:23:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25698:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2097,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "25719:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2098,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1891,
																				"src": "25724:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2099,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25728:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25724:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25719:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2095,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "25703:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25712:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "25703:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25703:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25698:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1895,
														"id": 2104,
														"nodeType": "Return",
														"src": "25691:40:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "20270:292:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20576:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "20581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20580:11:10"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "20615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20614:9:10"
									},
									"scope": 2563,
									"src": "20567:5181:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "25921:171:10",
										"statements": [
											{
												"id": 2139,
												"nodeType": "UncheckedBlock",
												"src": "25931:155:10",
												"statements": [
													{
														"assignments": [
															2119
														],
														"declarations": [
															{
																"constant": false,
																"id": 2119,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25963:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "25955:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2118,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25955:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2123,
														"initialValue": {
															"arguments": [
																{
																	"id": 2121,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "25977:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2120,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2107,
																	2141
																],
																"referencedDeclaration": 2107,
																"src": "25972:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25972:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25955:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2124,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "26000:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2128,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2113,
																					"src": "26042:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2127,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "26025:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26025:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2130,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2119,
																					"src": "26055:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2131,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2119,
																					"src": "26064:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26055:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2133,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2110,
																				"src": "26073:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26055:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26025:49:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2125,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "26009:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26018:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "26009:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26009:66:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26000:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2117,
														"id": 2138,
														"nodeType": "Return",
														"src": "25993:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "25754:86:10",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25854:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25867:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "25859:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25859:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25879:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "25870:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2111,
														"name": "Rounding",
														"nameLocations": [
															"25870:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "25870:8:10"
													},
													"referencedDeclaration": 954,
													"src": "25870:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25858:30:10"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "25912:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25912:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25911:9:10"
									},
									"scope": 2563,
									"src": "25845:247:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "26281:2334:10",
										"statements": [
											{
												"expression": {
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2149,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26363:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2152,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "26383:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26387:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "26383:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2150,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26367:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26376:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26367:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26367:55:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26426:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "26367:60:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26363:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "26363:64:10"
											},
											{
												"expression": {
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2160,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26503:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2163,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26525:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2164,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26530:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26525:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2166,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26524:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26535:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "26524:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2161,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26508:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26517:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26508:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26508:46:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26558:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "26508:51:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26503:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "26503:56:10"
											},
											{
												"expression": {
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2174,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26634:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2177,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26656:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2178,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26661:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26656:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2180,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26655:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26666:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "26655:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2175,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26639:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26648:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26639:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26639:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26681:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "26639:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26634:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "26634:48:10"
											},
											{
												"expression": {
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2188,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26757:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2191,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26779:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2192,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26784:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26779:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2194,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26778:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26789:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "26778:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2189,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26762:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26771:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26762:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26762:34:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26800:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "26762:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26757:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "26757:44:10"
											},
											{
												"expression": {
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2202,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26874:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2205,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26896:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2206,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26901:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26896:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2208,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26895:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666",
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26906:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xff"
																	},
																	"src": "26895:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2203,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26879:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26888:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26879:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26879:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "33",
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26915:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "26879:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26874:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "26874:42:10"
											},
											{
												"expression": {
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2216,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26988:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2219,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "27010:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2220,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "27015:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27010:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2222,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "27009:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866",
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27020:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "0xf"
																	},
																	"src": "27009:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2217,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26993:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27002:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26993:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26993:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "32",
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27028:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26993:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26988:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2229,
												"nodeType": "ExpressionStatement",
												"src": "26988:41:10"
											},
											{
												"AST": {
													"nativeSrc": "28490:119:10",
													"nodeType": "YulBlock",
													"src": "28490:119:10",
													"statements": [
														{
															"nativeSrc": "28504:95:10",
															"nodeType": "YulAssignment",
															"src": "28504:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "28512:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "28512:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "28524:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "28524:1:10"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "28527:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "28527:1:10"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "28520:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "28520:3:10"
																				},
																				"nativeSrc": "28520:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28520:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28531:66:10",
																				"nodeType": "YulLiteral",
																				"src": "28531:66:10",
																				"type": "",
																				"value": "0x0000010102020202030303030303030300000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "byte",
																			"nativeSrc": "28515:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "28515:4:10"
																		},
																		"nativeSrc": "28515:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28515:83:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28509:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "28509:2:10"
																},
																"nativeSrc": "28509:90:10",
																"nodeType": "YulFunctionCall",
																"src": "28509:90:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "28504:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "28504:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2147,
														"isOffset": false,
														"isSlot": false,
														"src": "28504:1:10",
														"valueSize": 1
													},
													{
														"declaration": 2147,
														"isOffset": false,
														"isSlot": false,
														"src": "28512:1:10",
														"valueSize": 1
													},
													{
														"declaration": 2147,
														"isOffset": false,
														"isSlot": false,
														"src": "28524:1:10",
														"valueSize": 1
													},
													{
														"declaration": 2144,
														"isOffset": false,
														"isSlot": false,
														"src": "28527:1:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2230,
												"nodeType": "InlineAssembly",
												"src": "28465:144:10"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "26098:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26231:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "26244:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "26236:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26236:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26235:11:10"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "26278:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "26270:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26270:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26269:11:10"
									},
									"scope": 2563,
									"src": "26222:2393:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "28848:175:10",
										"statements": [
											{
												"id": 2264,
												"nodeType": "UncheckedBlock",
												"src": "28858:159:10",
												"statements": [
													{
														"assignments": [
															2244
														],
														"declarations": [
															{
																"constant": false,
																"id": 2244,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "28890:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2264,
																"src": "28882:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2243,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28882:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2248,
														"initialValue": {
															"arguments": [
																{
																	"id": 2246,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "28904:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2245,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2232,
																	2266
																],
																"referencedDeclaration": 2232,
																"src": "28899:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28899:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28882:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2249,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "28931:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2253,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "28973:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2252,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "28956:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28956:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28986:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2256,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2244,
																					"src": "28991:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28986:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2258,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2235,
																				"src": "29000:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28986:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "28956:49:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2250,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "28940:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28949:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "28940:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28940:66:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28931:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2242,
														"id": 2263,
														"nodeType": "Return",
														"src": "28924:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "28621:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "28777:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28790:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "28782:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28782:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28806:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "28797:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2236,
														"name": "Rounding",
														"nameLocations": [
															"28797:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "28797:8:10"
													},
													"referencedDeclaration": 954,
													"src": "28797:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28781:34:10"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "28839:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28839:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28838:9:10"
									},
									"scope": 2563,
									"src": "28768:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "29216:854:10",
										"statements": [
											{
												"assignments": [
													2275
												],
												"declarations": [
													{
														"constant": false,
														"id": 2275,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29234:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2394,
														"src": "29226:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29226:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2277,
												"initialValue": {
													"hexValue": "30",
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29243:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29226:18:10"
											},
											{
												"id": 2391,
												"nodeType": "UncheckedBlock",
												"src": "29254:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2278,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29282:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29291:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29297:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29291:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "29282:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2294,
														"nodeType": "IfStatement",
														"src": "29278:103:10",
														"trueBody": {
															"id": 2293,
															"nodeType": "Block",
															"src": "29301:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29319:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29328:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29334:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "29328:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "29319:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2288,
																	"nodeType": "ExpressionStatement",
																	"src": "29319:17:10"
																},
																{
																	"expression": {
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2289,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29354:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29364:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29354:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2292,
																	"nodeType": "ExpressionStatement",
																	"src": "29354:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2295,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29398:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29407:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29413:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29407:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "29398:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2311,
														"nodeType": "IfStatement",
														"src": "29394:103:10",
														"trueBody": {
															"id": 2310,
															"nodeType": "Block",
															"src": "29417:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29435:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29444:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29450:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "29444:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "29435:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2305,
																	"nodeType": "ExpressionStatement",
																	"src": "29435:17:10"
																},
																{
																	"expression": {
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2306,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29470:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29480:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29470:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2309,
																	"nodeType": "ExpressionStatement",
																	"src": "29470:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2312,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29514:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29523:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29529:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29523:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "29514:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2328,
														"nodeType": "IfStatement",
														"src": "29510:103:10",
														"trueBody": {
															"id": 2327,
															"nodeType": "Block",
															"src": "29533:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29551:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29560:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29566:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "29560:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "29551:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2322,
																	"nodeType": "ExpressionStatement",
																	"src": "29551:17:10"
																},
																{
																	"expression": {
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2323,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29586:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29596:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29586:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2326,
																	"nodeType": "ExpressionStatement",
																	"src": "29586:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29630:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29639:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29645:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "29639:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "29630:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2345,
														"nodeType": "IfStatement",
														"src": "29626:100:10",
														"trueBody": {
															"id": 2344,
															"nodeType": "Block",
															"src": "29648:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2334,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29666:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29675:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29681:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "29675:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "29666:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2339,
																	"nodeType": "ExpressionStatement",
																	"src": "29666:16:10"
																},
																{
																	"expression": {
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2340,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29700:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29710:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29700:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2343,
																	"nodeType": "ExpressionStatement",
																	"src": "29700:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2346,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29743:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29752:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29758:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29752:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "29743:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2362,
														"nodeType": "IfStatement",
														"src": "29739:100:10",
														"trueBody": {
															"id": 2361,
															"nodeType": "Block",
															"src": "29761:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2351,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29779:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29788:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29794:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "29788:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "29779:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2356,
																	"nodeType": "ExpressionStatement",
																	"src": "29779:16:10"
																},
																{
																	"expression": {
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2357,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29813:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29823:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29813:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2360,
																	"nodeType": "ExpressionStatement",
																	"src": "29813:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29856:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29865:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29871:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "29865:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "29856:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2379,
														"nodeType": "IfStatement",
														"src": "29852:100:10",
														"trueBody": {
															"id": 2378,
															"nodeType": "Block",
															"src": "29874:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2368,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29892:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29901:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29907:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "29901:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "29892:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2373,
																	"nodeType": "ExpressionStatement",
																	"src": "29892:16:10"
																},
																{
																	"expression": {
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29926:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29936:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29926:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2377,
																	"nodeType": "ExpressionStatement",
																	"src": "29926:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29969:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29978:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29984:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29978:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "29969:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2390,
														"nodeType": "IfStatement",
														"src": "29965:66:10",
														"trueBody": {
															"id": 2389,
															"nodeType": "Block",
															"src": "29987:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2385,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "30005:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30015:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30005:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2388,
																	"nodeType": "ExpressionStatement",
																	"src": "30005:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2392,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2275,
													"src": "30057:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2393,
												"nodeType": "Return",
												"src": "30050:13:10"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "29029:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "29163:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29177:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "29169:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29168:15:10"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "29207:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29207:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29206:9:10"
									},
									"scope": 2563,
									"src": "29154:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "30305:177:10",
										"statements": [
											{
												"id": 2427,
												"nodeType": "UncheckedBlock",
												"src": "30315:161:10",
												"statements": [
													{
														"assignments": [
															2407
														],
														"declarations": [
															{
																"constant": false,
																"id": 2407,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30347:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "30339:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2406,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30339:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2411,
														"initialValue": {
															"arguments": [
																{
																	"id": 2409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2398,
																	"src": "30362:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2408,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2395,
																	2429
																],
																"referencedDeclaration": 2395,
																"src": "30356:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30356:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30339:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2412,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "30389:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2416,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2401,
																					"src": "30431:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2415,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "30414:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30414:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30444:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2419,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "30450:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30444:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2421,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2398,
																				"src": "30459:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30444:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "30414:50:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2413,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "30398:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30407:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "30398:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30398:67:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30389:76:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2405,
														"id": 2426,
														"nodeType": "Return",
														"src": "30382:83:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "30076:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "30233:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30247:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "30239:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30239:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30263:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "30254:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2399,
														"name": "Rounding",
														"nameLocations": [
															"30254:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "30254:8:10"
													},
													"referencedDeclaration": 954,
													"src": "30254:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30238:34:10"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "30296:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30296:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30295:9:10"
									},
									"scope": 2563,
									"src": "30224:258:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2505,
										"nodeType": "Block",
										"src": "30800:675:10",
										"statements": [
											{
												"expression": {
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2437,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "30882:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2440,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2432,
																		"src": "30902:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30906:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "30902:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2438,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "30886:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30895:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "30886:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30886:55:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30945:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "30886:60:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30882:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2447,
												"nodeType": "ExpressionStatement",
												"src": "30882:64:10"
											},
											{
												"expression": {
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2448,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "31022:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2451,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "31044:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2452,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "31049:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31044:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2454,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31043:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31054:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "31043:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2449,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "31027:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31036:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "31027:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31027:46:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31077:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "31027:51:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31022:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2461,
												"nodeType": "ExpressionStatement",
												"src": "31022:56:10"
											},
											{
												"expression": {
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2462,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "31153:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2465,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "31175:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2466,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "31180:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31175:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2468,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31174:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31185:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "31174:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2463,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "31158:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31167:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "31158:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31158:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31200:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "31158:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31153:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "31153:48:10"
											},
											{
												"expression": {
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2476,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "31276:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2479,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "31298:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2480,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "31303:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31298:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2482,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31297:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31308:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "31297:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2477,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "31281:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31290:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "31281:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31281:34:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31319:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "31281:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31276:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "31276:44:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2490,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "31426:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "31426:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2493,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31425:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2496,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2432,
																				"src": "31453:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 2497,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2435,
																				"src": "31458:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31453:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2499,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31452:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30786666",
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31463:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "0xff"
																},
																"src": "31452:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2494,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4328,
																"src": "31436:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31445:6:10",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4327,
															"src": "31436:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31436:32:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31425:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2436,
												"id": 2504,
												"nodeType": "Return",
												"src": "31418:50:10"
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "30488:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30748:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "30763:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "30755:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30755:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30754:11:10"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "30797:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "30789:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30789:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30788:11:10"
									},
									"scope": 2563,
									"src": "30739:736:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "31712:184:10",
										"statements": [
											{
												"id": 2541,
												"nodeType": "UncheckedBlock",
												"src": "31722:168:10",
												"statements": [
													{
														"assignments": [
															2518
														],
														"declarations": [
															{
																"constant": false,
																"id": 2518,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "31754:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2541,
																"src": "31746:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2517,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31746:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2522,
														"initialValue": {
															"arguments": [
																{
																	"id": 2520,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "31770:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2519,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2506,
																	2543
																],
																"referencedDeclaration": 2506,
																"src": "31763:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31763:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31746:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2523,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2518,
																"src": "31797:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2527,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "31839:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2526,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "31822:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31822:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2529,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31852:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2530,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2518,
																								"src": "31858:6:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2531,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "31868:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "31858:11:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2533,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "31857:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31852:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2535,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2509,
																				"src": "31873:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31852:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "31822:56:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2524,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "31806:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31815:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "31806:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31806:73:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31797:82:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2516,
														"id": 2540,
														"nodeType": "Return",
														"src": "31790:89:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2507,
										"nodeType": "StructuredDocumentation",
										"src": "31481:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "31639:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31654:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "31646:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31670:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "31661:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2510,
														"name": "Rounding",
														"nameLocations": [
															"31661:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "31661:8:10"
													},
													"referencedDeclaration": 954,
													"src": "31661:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31645:34:10"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "31703:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31702:9:10"
									},
									"scope": 2563,
									"src": "31630:266:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "32094:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2554,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "32117:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$954",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$954",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32111:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2552,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "32111:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32111:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32129:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "32111:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32134:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32111:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2551,
												"id": 2560,
												"nodeType": "Return",
												"src": "32104:31:10"
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "31902:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "32029:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "32055:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "32046:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2545,
														"name": "Rounding",
														"nameLocations": [
															"32046:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "32046:8:10"
													},
													"referencedDeclaration": 954,
													"src": "32046:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32045:19:10"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "32088:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32088:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32087:6:10"
									},
									"scope": 2563,
									"src": "32020:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "281:31863:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:32042:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4328
						]
					},
					"id": 4329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2565,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2566,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:11",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4328,
							"linearizedBaseContracts": [
								4328
							],
							"name": "SafeCast",
							"nameLocation": "777:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2567,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:11",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2573,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "902:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2568,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "914:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:11"
									},
									"src": "865:64:11"
								},
								{
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:11",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2578,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "1049:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2575,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:11"
									},
									"src": "1015:48:11"
								},
								{
									"documentation": {
										"id": 2579,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:11",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2585,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1177:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2580,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1189:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2582,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:11"
									},
									"src": "1141:62:11"
								},
								{
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:11",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2590,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "1323:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:11"
									},
									"src": "1289:49:11"
								},
								{
									"body": {
										"id": 2617,
										"nodeType": "Block",
										"src": "1695:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2598,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2593,
														"src": "1709:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2600,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2599,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2611,
												"nodeType": "IfStatement",
												"src": "1705:105:11",
												"trueBody": {
													"id": 2610,
													"nodeType": "Block",
													"src": "1736:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2607,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "1793:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2605,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "1757:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2609,
															"nodeType": "RevertStatement",
															"src": "1750:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2614,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "1834:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2612,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2597,
												"id": 2616,
												"nodeType": "Return",
												"src": "1819:21:11"
											}
										]
									},
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:11",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "1648:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:11"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "1686:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2595,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:11"
									},
									"scope": 4328,
									"src": "1629:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "2204:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2626,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2621,
														"src": "2218:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2628,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2627,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2639,
												"nodeType": "IfStatement",
												"src": "2214:105:11",
												"trueBody": {
													"id": 2638,
													"nodeType": "Block",
													"src": "2245:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2635,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "2302:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2633,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "2266:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2637,
															"nodeType": "RevertStatement",
															"src": "2259:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2642,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "2343:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2640,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2625,
												"id": 2644,
												"nodeType": "Return",
												"src": "2328:21:11"
											}
										]
									},
									"documentation": {
										"id": 2619,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:11",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "2157:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:11"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "2195:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2623,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:11"
									},
									"scope": 4328,
									"src": "2138:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "2713:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2654,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "2727:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2656,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2655,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2667,
												"nodeType": "IfStatement",
												"src": "2723:105:11",
												"trueBody": {
													"id": 2666,
													"nodeType": "Block",
													"src": "2754:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2663,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2649,
																		"src": "2811:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2661,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "2775:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2665,
															"nodeType": "RevertStatement",
															"src": "2768:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "2852:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2668,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2653,
												"id": 2672,
												"nodeType": "Return",
												"src": "2837:21:11"
											}
										]
									},
									"documentation": {
										"id": 2647,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:11",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "2666:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:11"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "2704:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2651,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:11"
									},
									"scope": 4328,
									"src": "2647:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2701,
										"nodeType": "Block",
										"src": "3222:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2682,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "3236:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2684,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2683,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2695,
												"nodeType": "IfStatement",
												"src": "3232:105:11",
												"trueBody": {
													"id": 2694,
													"nodeType": "Block",
													"src": "3263:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2691,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2677,
																		"src": "3320:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2689,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "3284:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2693,
															"nodeType": "RevertStatement",
															"src": "3277:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "3361:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2696,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2681,
												"id": 2700,
												"nodeType": "Return",
												"src": "3346:21:11"
											}
										]
									},
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:11",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "3175:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:11"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "3213:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2679,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:11"
									},
									"scope": 4328,
									"src": "3156:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "3731:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2710,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "3745:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2712,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2711,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2723,
												"nodeType": "IfStatement",
												"src": "3741:105:11",
												"trueBody": {
													"id": 2722,
													"nodeType": "Block",
													"src": "3772:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2719,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2705,
																		"src": "3829:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2717,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "3793:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2721,
															"nodeType": "RevertStatement",
															"src": "3786:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2726,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3870:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2724,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2709,
												"id": 2728,
												"nodeType": "Return",
												"src": "3855:21:11"
											}
										]
									},
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:11",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3684:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:11"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3722:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2707,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:11"
									},
									"scope": 4328,
									"src": "3665:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2757,
										"nodeType": "Block",
										"src": "4240:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2738,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "4254:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2740,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2739,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2751,
												"nodeType": "IfStatement",
												"src": "4250:105:11",
												"trueBody": {
													"id": 2750,
													"nodeType": "Block",
													"src": "4281:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2747,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2733,
																		"src": "4338:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2745,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "4302:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2749,
															"nodeType": "RevertStatement",
															"src": "4295:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2754,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2733,
															"src": "4379:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2752,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2737,
												"id": 2756,
												"nodeType": "Return",
												"src": "4364:21:11"
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:11",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "4193:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:11"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "4231:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2735,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:11"
									},
									"scope": 4328,
									"src": "4174:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2785,
										"nodeType": "Block",
										"src": "4749:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2766,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2761,
														"src": "4763:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2768,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2767,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2779,
												"nodeType": "IfStatement",
												"src": "4759:105:11",
												"trueBody": {
													"id": 2778,
													"nodeType": "Block",
													"src": "4790:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2775,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2761,
																		"src": "4847:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2773,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "4811:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2777,
															"nodeType": "RevertStatement",
															"src": "4804:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "4888:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2780,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2765,
												"id": 2784,
												"nodeType": "Return",
												"src": "4873:21:11"
											}
										]
									},
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:11",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "4702:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:11"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "4740:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2763,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:11"
									},
									"scope": 4328,
									"src": "4683:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "5258:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2794,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "5272:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2796,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2795,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2807,
												"nodeType": "IfStatement",
												"src": "5268:105:11",
												"trueBody": {
													"id": 2806,
													"nodeType": "Block",
													"src": "5299:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2803,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "5356:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2801,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "5320:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2805,
															"nodeType": "RevertStatement",
															"src": "5313:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2810,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "5397:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2808,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2793,
												"id": 2812,
												"nodeType": "Return",
												"src": "5382:21:11"
											}
										]
									},
									"documentation": {
										"id": 2787,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:11",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "5211:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:11"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "5249:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2791,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:11"
									},
									"scope": 4328,
									"src": "5192:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "5767:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "5781:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2824,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2823,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2835,
												"nodeType": "IfStatement",
												"src": "5777:105:11",
												"trueBody": {
													"id": 2834,
													"nodeType": "Block",
													"src": "5808:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2831,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2817,
																		"src": "5865:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2829,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "5829:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2833,
															"nodeType": "RevertStatement",
															"src": "5822:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2838,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "5906:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2836,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2821,
												"id": 2840,
												"nodeType": "Return",
												"src": "5891:21:11"
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:11",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "5720:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:11"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "5758:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2819,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:11"
									},
									"scope": 4328,
									"src": "5701:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "6276:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2850,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "6290:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2852,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2851,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2863,
												"nodeType": "IfStatement",
												"src": "6286:105:11",
												"trueBody": {
													"id": 2862,
													"nodeType": "Block",
													"src": "6317:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2859,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2845,
																		"src": "6374:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2857,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "6338:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2861,
															"nodeType": "RevertStatement",
															"src": "6331:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "6415:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2864,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2849,
												"id": 2868,
												"nodeType": "Return",
												"src": "6400:21:11"
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:11",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "6229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:11"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "6267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2847,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:11"
									},
									"scope": 4328,
									"src": "6210:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "6785:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2878,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2873,
														"src": "6799:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2880,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2879,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2891,
												"nodeType": "IfStatement",
												"src": "6795:105:11",
												"trueBody": {
													"id": 2890,
													"nodeType": "Block",
													"src": "6826:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2887,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2873,
																		"src": "6883:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2885,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "6847:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2889,
															"nodeType": "RevertStatement",
															"src": "6840:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2894,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "6924:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2892,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2877,
												"id": 2896,
												"nodeType": "Return",
												"src": "6909:21:11"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:11",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "6738:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:11"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "6776:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2875,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:11"
									},
									"scope": 4328,
									"src": "6719:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2925,
										"nodeType": "Block",
										"src": "7294:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2906,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "7308:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2908,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2907,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2919,
												"nodeType": "IfStatement",
												"src": "7304:105:11",
												"trueBody": {
													"id": 2918,
													"nodeType": "Block",
													"src": "7335:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2915,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "7392:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2913,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "7356:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2917,
															"nodeType": "RevertStatement",
															"src": "7349:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2922,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "7433:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2920,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2905,
												"id": 2924,
												"nodeType": "Return",
												"src": "7418:21:11"
											}
										]
									},
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:11",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "7247:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:11"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "7285:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2903,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:11"
									},
									"scope": 4328,
									"src": "7228:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "7803:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2934,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "7817:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2936,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2935,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "7813:105:11",
												"trueBody": {
													"id": 2946,
													"nodeType": "Block",
													"src": "7844:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2943,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "7901:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2941,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "7865:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2945,
															"nodeType": "RevertStatement",
															"src": "7858:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "7942:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2948,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2933,
												"id": 2952,
												"nodeType": "Return",
												"src": "7927:21:11"
											}
										]
									},
									"documentation": {
										"id": 2927,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:11",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "7756:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:11"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "7794:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2931,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:11"
									},
									"scope": 4328,
									"src": "7737:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "8312:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2962,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "8326:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2964,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2963,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2975,
												"nodeType": "IfStatement",
												"src": "8322:105:11",
												"trueBody": {
													"id": 2974,
													"nodeType": "Block",
													"src": "8353:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2971,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2957,
																		"src": "8410:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2969,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "8374:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2973,
															"nodeType": "RevertStatement",
															"src": "8367:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "8451:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2976,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2961,
												"id": 2980,
												"nodeType": "Return",
												"src": "8436:21:11"
											}
										]
									},
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:11",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "8265:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:11"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "8303:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2959,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:11"
									},
									"scope": 4328,
									"src": "8246:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "8821:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2990,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "8835:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2992,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2991,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3003,
												"nodeType": "IfStatement",
												"src": "8831:105:11",
												"trueBody": {
													"id": 3002,
													"nodeType": "Block",
													"src": "8862:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2999,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2985,
																		"src": "8919:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2997,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "8883:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3001,
															"nodeType": "RevertStatement",
															"src": "8876:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "8960:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3004,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2989,
												"id": 3008,
												"nodeType": "Return",
												"src": "8945:21:11"
											}
										]
									},
									"documentation": {
										"id": 2983,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:11",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "8774:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:11"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "8812:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2987,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:11"
									},
									"scope": 4328,
									"src": "8755:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3037,
										"nodeType": "Block",
										"src": "9330:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3018,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "9344:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3020,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3019,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3031,
												"nodeType": "IfStatement",
												"src": "9340:105:11",
												"trueBody": {
													"id": 3030,
													"nodeType": "Block",
													"src": "9371:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3027,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3013,
																		"src": "9428:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3025,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "9392:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3029,
															"nodeType": "RevertStatement",
															"src": "9385:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3034,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "9469:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3032,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3017,
												"id": 3036,
												"nodeType": "Return",
												"src": "9454:21:11"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:11",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "9283:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:11"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "9321:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3015,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:11"
									},
									"scope": 4328,
									"src": "9264:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "9839:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3046,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3041,
														"src": "9853:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3048,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3047,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3059,
												"nodeType": "IfStatement",
												"src": "9849:105:11",
												"trueBody": {
													"id": 3058,
													"nodeType": "Block",
													"src": "9880:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3055,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3041,
																		"src": "9937:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3053,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "9901:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3057,
															"nodeType": "RevertStatement",
															"src": "9894:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3062,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "9978:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3060,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3045,
												"id": 3064,
												"nodeType": "Return",
												"src": "9963:21:11"
											}
										]
									},
									"documentation": {
										"id": 3039,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:11",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "9792:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:11"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "9830:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3043,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:11"
									},
									"scope": 4328,
									"src": "9773:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "10348:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3074,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "10362:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3076,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3075,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3087,
												"nodeType": "IfStatement",
												"src": "10358:105:11",
												"trueBody": {
													"id": 3086,
													"nodeType": "Block",
													"src": "10389:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3083,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3069,
																		"src": "10446:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3081,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "10410:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3085,
															"nodeType": "RevertStatement",
															"src": "10403:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3090,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "10487:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3088,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3073,
												"id": 3092,
												"nodeType": "Return",
												"src": "10472:21:11"
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:11",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "10301:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:11"
									},
									"returnParameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "10339:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3071,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:11"
									},
									"scope": 4328,
									"src": "10282:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3121,
										"nodeType": "Block",
										"src": "10857:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3102,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3097,
														"src": "10871:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3104,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3103,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3115,
												"nodeType": "IfStatement",
												"src": "10867:105:11",
												"trueBody": {
													"id": 3114,
													"nodeType": "Block",
													"src": "10898:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3097,
																		"src": "10955:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3109,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "10919:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3113,
															"nodeType": "RevertStatement",
															"src": "10912:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3118,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "10996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3116,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3101,
												"id": 3120,
												"nodeType": "Return",
												"src": "10981:21:11"
											}
										]
									},
									"documentation": {
										"id": 3095,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:11",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "10810:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:11"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "10848:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3099,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:11"
									},
									"scope": 4328,
									"src": "10791:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3149,
										"nodeType": "Block",
										"src": "11360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3130,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3125,
														"src": "11374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3132,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3131,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3143,
												"nodeType": "IfStatement",
												"src": "11370:103:11",
												"trueBody": {
													"id": 3142,
													"nodeType": "Block",
													"src": "11400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3139,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3125,
																		"src": "11456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3137,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "11421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3141,
															"nodeType": "RevertStatement",
															"src": "11414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3146,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3125,
															"src": "11496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3144,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3129,
												"id": 3148,
												"nodeType": "Return",
												"src": "11482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3123,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:11",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "11314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:11"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "11352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3127,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:11"
									},
									"scope": 4328,
									"src": "11296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3177,
										"nodeType": "Block",
										"src": "11860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3158,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "11874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3160,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3159,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3171,
												"nodeType": "IfStatement",
												"src": "11870:103:11",
												"trueBody": {
													"id": 3170,
													"nodeType": "Block",
													"src": "11900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3167,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3153,
																		"src": "11956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3165,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "11921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3169,
															"nodeType": "RevertStatement",
															"src": "11914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3174,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "11996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3172,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3157,
												"id": 3176,
												"nodeType": "Return",
												"src": "11982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3151,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:11",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "11814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:11"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "11852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3155,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:11"
									},
									"scope": 4328,
									"src": "11796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3205,
										"nodeType": "Block",
										"src": "12360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3186,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "12374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3188,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3187,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3199,
												"nodeType": "IfStatement",
												"src": "12370:103:11",
												"trueBody": {
													"id": 3198,
													"nodeType": "Block",
													"src": "12400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3195,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3181,
																		"src": "12456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3193,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "12421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3197,
															"nodeType": "RevertStatement",
															"src": "12414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3181,
															"src": "12496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3200,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3185,
												"id": 3204,
												"nodeType": "Return",
												"src": "12482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3179,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:11",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "12314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:11"
									},
									"returnParameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "12352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3183,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:11"
									},
									"scope": 4328,
									"src": "12296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3233,
										"nodeType": "Block",
										"src": "12860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3214,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "12874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 3216,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 3215,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 3219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3227,
												"nodeType": "IfStatement",
												"src": "12870:103:11",
												"trueBody": {
													"id": 3226,
													"nodeType": "Block",
													"src": "12900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3209,
																		"src": "12956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3221,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "12921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3225,
															"nodeType": "RevertStatement",
															"src": "12914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "12996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 3228,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3213,
												"id": 3232,
												"nodeType": "Return",
												"src": "12982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3207,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:11",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "12814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:11"
									},
									"returnParameters": {
										"id": 3213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "12852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3211,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:11"
									},
									"scope": 4328,
									"src": "12796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "13360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3242,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "13374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3244,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 3243,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3255,
												"nodeType": "IfStatement",
												"src": "13370:103:11",
												"trueBody": {
													"id": 3254,
													"nodeType": "Block",
													"src": "13400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3251,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3237,
																		"src": "13456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3249,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "13421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3253,
															"nodeType": "RevertStatement",
															"src": "13414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3258,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3237,
															"src": "13496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3256,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 3241,
												"id": 3260,
												"nodeType": "Return",
												"src": "13482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3235,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:11",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "13314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:11"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "13352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3239,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:11"
									},
									"scope": 4328,
									"src": "13296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "13860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3270,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3265,
														"src": "13874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3272,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3271,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3283,
												"nodeType": "IfStatement",
												"src": "13870:103:11",
												"trueBody": {
													"id": 3282,
													"nodeType": "Block",
													"src": "13900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3279,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3265,
																		"src": "13956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3277,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "13921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3281,
															"nodeType": "RevertStatement",
															"src": "13914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3265,
															"src": "13996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3284,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3269,
												"id": 3288,
												"nodeType": "Return",
												"src": "13982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3263,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:11",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "13814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:11"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "13852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3267,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:11"
									},
									"scope": 4328,
									"src": "13796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "14360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3298,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3293,
														"src": "14374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3300,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3299,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3311,
												"nodeType": "IfStatement",
												"src": "14370:103:11",
												"trueBody": {
													"id": 3310,
													"nodeType": "Block",
													"src": "14400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3307,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3293,
																		"src": "14456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3305,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "14421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3309,
															"nodeType": "RevertStatement",
															"src": "14414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3314,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3293,
															"src": "14496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3312,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3297,
												"id": 3316,
												"nodeType": "Return",
												"src": "14482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3291,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:11",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "14314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:11"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "14352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3295,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:11"
									},
									"scope": 4328,
									"src": "14296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3345,
										"nodeType": "Block",
										"src": "14860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3326,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3321,
														"src": "14874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3328,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3327,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3339,
												"nodeType": "IfStatement",
												"src": "14870:103:11",
												"trueBody": {
													"id": 3338,
													"nodeType": "Block",
													"src": "14900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3335,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3321,
																		"src": "14956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3333,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "14921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3337,
															"nodeType": "RevertStatement",
															"src": "14914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3321,
															"src": "14996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3340,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3325,
												"id": 3344,
												"nodeType": "Return",
												"src": "14982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3319,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:11",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "14814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:11"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "14852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3323,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:11"
									},
									"scope": 4328,
									"src": "14796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3373,
										"nodeType": "Block",
										"src": "15360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3354,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "15374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3356,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3355,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3367,
												"nodeType": "IfStatement",
												"src": "15370:103:11",
												"trueBody": {
													"id": 3366,
													"nodeType": "Block",
													"src": "15400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3363,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3349,
																		"src": "15456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3361,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "15421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3365,
															"nodeType": "RevertStatement",
															"src": "15414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3370,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3349,
															"src": "15496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 3368,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3353,
												"id": 3372,
												"nodeType": "Return",
												"src": "15482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3347,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:11",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "15314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:11"
									},
									"returnParameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "15352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3351,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:11"
									},
									"scope": 4328,
									"src": "15296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3401,
										"nodeType": "Block",
										"src": "15860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3382,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "15874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 3384,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 3383,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 3387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3395,
												"nodeType": "IfStatement",
												"src": "15870:103:11",
												"trueBody": {
													"id": 3394,
													"nodeType": "Block",
													"src": "15900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3391,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3377,
																		"src": "15956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3389,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "15921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3393,
															"nodeType": "RevertStatement",
															"src": "15914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3377,
															"src": "15996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3396,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 3381,
												"id": 3400,
												"nodeType": "Return",
												"src": "15982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3375,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:11",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "15814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:11"
									},
									"returnParameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "15852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3379,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:11"
									},
									"scope": 4328,
									"src": "15796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3429,
										"nodeType": "Block",
										"src": "16360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3410,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3405,
														"src": "16374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3412,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3411,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3423,
												"nodeType": "IfStatement",
												"src": "16370:103:11",
												"trueBody": {
													"id": 3422,
													"nodeType": "Block",
													"src": "16400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3419,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3405,
																		"src": "16456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3417,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "16421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3421,
															"nodeType": "RevertStatement",
															"src": "16414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3426,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3405,
															"src": "16496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3424,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3409,
												"id": 3428,
												"nodeType": "Return",
												"src": "16482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3403,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:11",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "16314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:11"
									},
									"returnParameters": {
										"id": 3409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "16352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3407,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:11"
									},
									"scope": 4328,
									"src": "16296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3457,
										"nodeType": "Block",
										"src": "16854:146:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3438,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3433,
														"src": "16868:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3440,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3439,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3451,
												"nodeType": "IfStatement",
												"src": "16864:101:11",
												"trueBody": {
													"id": 3450,
													"nodeType": "Block",
													"src": "16893:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3447,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3433,
																		"src": "16948:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3445,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "16914:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3449,
															"nodeType": "RevertStatement",
															"src": "16907:47:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3433,
															"src": "16987:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3452,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:11",
															"typeDescriptions": {}
														}
													},
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3437,
												"id": 3456,
												"nodeType": "Return",
												"src": "16974:19:11"
											}
										]
									},
									"documentation": {
										"id": 3431,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:11",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "16809:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:11"
									},
									"returnParameters": {
										"id": 3437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "16847:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3435,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:11"
									},
									"scope": 4328,
									"src": "16792:208:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "17236:128:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3466,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "17250:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "17246:81:11",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "17261:66:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3470,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3461,
																		"src": "17310:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3469,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "17282:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "17275:41:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3477,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3461,
															"src": "17351:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3465,
												"id": 3479,
												"nodeType": "Return",
												"src": "17336:21:11"
											}
										]
									},
									"documentation": {
										"id": 3459,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:11",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "17190:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3460,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:11"
									},
									"returnParameters": {
										"id": 3465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "17227:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:11"
									},
									"scope": 4328,
									"src": "17171:193:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3506,
										"nodeType": "Block",
										"src": "17761:150:11",
										"statements": [
											{
												"expression": {
													"id": 3494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3489,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3487,
														"src": "17771:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3492,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3484,
																"src": "17791:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3490,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3495,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3496,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3487,
														"src": "17811:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3497,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "17825:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3505,
												"nodeType": "IfStatement",
												"src": "17807:98:11",
												"trueBody": {
													"id": 3504,
													"nodeType": "Block",
													"src": "17832:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3484,
																		"src": "17888:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3499,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "17853:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3503,
															"nodeType": "RevertStatement",
															"src": "17846:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3482,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:11",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "17705:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3483,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:11"
									},
									"returnParameters": {
										"id": 3488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3487,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "17742:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3486,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:11"
									},
									"scope": 4328,
									"src": "17687:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3532,
										"nodeType": "Block",
										"src": "18308:150:11",
										"statements": [
											{
												"expression": {
													"id": 3520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3515,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "18318:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3510,
																"src": "18338:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3516,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3521,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3522,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "18358:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3523,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3510,
														"src": "18372:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3531,
												"nodeType": "IfStatement",
												"src": "18354:98:11",
												"trueBody": {
													"id": 3530,
													"nodeType": "Block",
													"src": "18379:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3527,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "18435:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3525,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "18400:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3529,
															"nodeType": "RevertStatement",
															"src": "18393:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3508,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:11",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "18252:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3509,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:11"
									},
									"returnParameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "18289:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3512,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:11"
									},
									"scope": 4328,
									"src": "18234:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3558,
										"nodeType": "Block",
										"src": "18855:150:11",
										"statements": [
											{
												"expression": {
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3541,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3539,
														"src": "18865:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3536,
																"src": "18885:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3542,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3547,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3548,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3539,
														"src": "18905:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3549,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3536,
														"src": "18919:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3557,
												"nodeType": "IfStatement",
												"src": "18901:98:11",
												"trueBody": {
													"id": 3556,
													"nodeType": "Block",
													"src": "18926:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3553,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3536,
																		"src": "18982:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3551,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "18947:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3555,
															"nodeType": "RevertStatement",
															"src": "18940:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3534,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:11",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "18799:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3535,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:11"
									},
									"returnParameters": {
										"id": 3540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3539,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "18836:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3538,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:11"
									},
									"scope": 4328,
									"src": "18781:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3584,
										"nodeType": "Block",
										"src": "19402:150:11",
										"statements": [
											{
												"expression": {
													"id": 3572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3567,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3565,
														"src": "19412:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3570,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3562,
																"src": "19432:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3568,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3573,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3574,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3565,
														"src": "19452:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3575,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3562,
														"src": "19466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3583,
												"nodeType": "IfStatement",
												"src": "19448:98:11",
												"trueBody": {
													"id": 3582,
													"nodeType": "Block",
													"src": "19473:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3579,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3562,
																		"src": "19529:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3577,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "19494:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3581,
															"nodeType": "RevertStatement",
															"src": "19487:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3560,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:11",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "19346:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3561,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:11"
									},
									"returnParameters": {
										"id": 3566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "19383:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3564,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:11"
									},
									"scope": 4328,
									"src": "19328:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3610,
										"nodeType": "Block",
										"src": "19949:150:11",
										"statements": [
											{
												"expression": {
													"id": 3598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3593,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3591,
														"src": "19959:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3596,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3588,
																"src": "19979:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3594,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3599,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3600,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3591,
														"src": "19999:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3601,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3588,
														"src": "20013:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3609,
												"nodeType": "IfStatement",
												"src": "19995:98:11",
												"trueBody": {
													"id": 3608,
													"nodeType": "Block",
													"src": "20020:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3605,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3588,
																		"src": "20076:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3603,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "20041:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3607,
															"nodeType": "RevertStatement",
															"src": "20034:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3586,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:11",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "19893:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3587,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:11"
									},
									"returnParameters": {
										"id": 3592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3591,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "19930:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3590,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:11"
									},
									"scope": 4328,
									"src": "19875:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3636,
										"nodeType": "Block",
										"src": "20496:150:11",
										"statements": [
											{
												"expression": {
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3619,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "20506:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3622,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3614,
																"src": "20526:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3620,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3625,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3626,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "20546:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3627,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3614,
														"src": "20560:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3635,
												"nodeType": "IfStatement",
												"src": "20542:98:11",
												"trueBody": {
													"id": 3634,
													"nodeType": "Block",
													"src": "20567:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3631,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3614,
																		"src": "20623:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3629,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "20588:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3633,
															"nodeType": "RevertStatement",
															"src": "20581:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3612,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:11",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "20440:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:11"
									},
									"returnParameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3617,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "20477:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3616,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:11"
									},
									"scope": 4328,
									"src": "20422:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3662,
										"nodeType": "Block",
										"src": "21043:150:11",
										"statements": [
											{
												"expression": {
													"id": 3650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3645,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "21053:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3648,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3640,
																"src": "21073:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3646,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3651,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3652,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "21093:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3653,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3640,
														"src": "21107:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3661,
												"nodeType": "IfStatement",
												"src": "21089:98:11",
												"trueBody": {
													"id": 3660,
													"nodeType": "Block",
													"src": "21114:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3657,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3640,
																		"src": "21170:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3655,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "21135:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3659,
															"nodeType": "RevertStatement",
															"src": "21128:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3638,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:11",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3663,
												"src": "20987:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3639,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:11"
									},
									"returnParameters": {
										"id": 3644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3663,
												"src": "21024:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3642,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:11"
									},
									"scope": 4328,
									"src": "20969:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3688,
										"nodeType": "Block",
										"src": "21590:150:11",
										"statements": [
											{
												"expression": {
													"id": 3676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3671,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "21600:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3674,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3666,
																"src": "21620:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3672,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3677,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3678,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "21640:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3679,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3666,
														"src": "21654:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3687,
												"nodeType": "IfStatement",
												"src": "21636:98:11",
												"trueBody": {
													"id": 3686,
													"nodeType": "Block",
													"src": "21661:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3683,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3666,
																		"src": "21717:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3681,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "21682:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3685,
															"nodeType": "RevertStatement",
															"src": "21675:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3664,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:11",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "21534:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:11"
									},
									"returnParameters": {
										"id": 3670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3669,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "21571:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3668,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:11"
									},
									"scope": 4328,
									"src": "21516:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3714,
										"nodeType": "Block",
										"src": "22137:150:11",
										"statements": [
											{
												"expression": {
													"id": 3702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3697,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "22147:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "22167:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3698,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3703,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3704,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "22187:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3705,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3692,
														"src": "22201:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3713,
												"nodeType": "IfStatement",
												"src": "22183:98:11",
												"trueBody": {
													"id": 3712,
													"nodeType": "Block",
													"src": "22208:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3709,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3692,
																		"src": "22264:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3707,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "22229:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3711,
															"nodeType": "RevertStatement",
															"src": "22222:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3690,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:11",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "22081:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3691,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:11"
									},
									"returnParameters": {
										"id": 3696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3695,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "22118:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3694,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:11"
									},
									"scope": 4328,
									"src": "22063:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3740,
										"nodeType": "Block",
										"src": "22684:150:11",
										"statements": [
											{
												"expression": {
													"id": 3728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3723,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "22694:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3726,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3718,
																"src": "22714:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3724,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3729,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3730,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "22734:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3731,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3718,
														"src": "22748:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3739,
												"nodeType": "IfStatement",
												"src": "22730:98:11",
												"trueBody": {
													"id": 3738,
													"nodeType": "Block",
													"src": "22755:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3718,
																		"src": "22811:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3733,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "22776:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3737,
															"nodeType": "RevertStatement",
															"src": "22769:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3716,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:11",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "22628:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3717,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:11"
									},
									"returnParameters": {
										"id": 3722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3721,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "22665:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3720,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:11"
									},
									"scope": 4328,
									"src": "22610:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3766,
										"nodeType": "Block",
										"src": "23231:150:11",
										"statements": [
											{
												"expression": {
													"id": 3754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3749,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "23241:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3752,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3744,
																"src": "23261:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3750,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3755,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3756,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "23281:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3757,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3744,
														"src": "23295:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3765,
												"nodeType": "IfStatement",
												"src": "23277:98:11",
												"trueBody": {
													"id": 3764,
													"nodeType": "Block",
													"src": "23302:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3761,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3744,
																		"src": "23358:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3759,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "23323:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3763,
															"nodeType": "RevertStatement",
															"src": "23316:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3742,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:11",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "23175:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:11"
									},
									"returnParameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "23212:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3746,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:11"
									},
									"scope": 4328,
									"src": "23157:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3792,
										"nodeType": "Block",
										"src": "23778:150:11",
										"statements": [
											{
												"expression": {
													"id": 3780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3775,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3773,
														"src": "23788:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3778,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3770,
																"src": "23808:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3776,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3781,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3782,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3773,
														"src": "23828:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3783,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3770,
														"src": "23842:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3791,
												"nodeType": "IfStatement",
												"src": "23824:98:11",
												"trueBody": {
													"id": 3790,
													"nodeType": "Block",
													"src": "23849:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3787,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3770,
																		"src": "23905:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3785,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "23870:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3789,
															"nodeType": "RevertStatement",
															"src": "23863:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3768,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:11",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3793,
												"src": "23722:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:11"
									},
									"returnParameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3773,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3793,
												"src": "23759:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3772,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:11"
									},
									"scope": 4328,
									"src": "23704:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3818,
										"nodeType": "Block",
										"src": "24325:150:11",
										"statements": [
											{
												"expression": {
													"id": 3806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3801,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "24335:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3804,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3796,
																"src": "24355:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3802,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3807,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3808,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "24375:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3809,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3796,
														"src": "24389:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3817,
												"nodeType": "IfStatement",
												"src": "24371:98:11",
												"trueBody": {
													"id": 3816,
													"nodeType": "Block",
													"src": "24396:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3813,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3796,
																		"src": "24452:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3811,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "24417:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3815,
															"nodeType": "RevertStatement",
															"src": "24410:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3794,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:11",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "24269:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3795,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:11"
									},
									"returnParameters": {
										"id": 3800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3799,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "24306:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3798,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:11"
									},
									"scope": 4328,
									"src": "24251:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3844,
										"nodeType": "Block",
										"src": "24872:150:11",
										"statements": [
											{
												"expression": {
													"id": 3832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3827,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "24882:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3830,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3822,
																"src": "24902:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3828,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3833,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3834,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "24922:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3835,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3822,
														"src": "24936:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3843,
												"nodeType": "IfStatement",
												"src": "24918:98:11",
												"trueBody": {
													"id": 3842,
													"nodeType": "Block",
													"src": "24943:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3839,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3822,
																		"src": "24999:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3837,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "24964:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3841,
															"nodeType": "RevertStatement",
															"src": "24957:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3820,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:11",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "24816:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3821,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:11"
									},
									"returnParameters": {
										"id": 3826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3825,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "24853:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3824,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:11"
									},
									"scope": 4328,
									"src": "24798:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3870,
										"nodeType": "Block",
										"src": "25419:150:11",
										"statements": [
											{
												"expression": {
													"id": 3858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3853,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "25429:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3856,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3848,
																"src": "25449:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3854,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3859,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3860,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "25469:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3861,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3848,
														"src": "25483:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3869,
												"nodeType": "IfStatement",
												"src": "25465:98:11",
												"trueBody": {
													"id": 3868,
													"nodeType": "Block",
													"src": "25490:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3865,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3848,
																		"src": "25546:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3863,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "25511:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3867,
															"nodeType": "RevertStatement",
															"src": "25504:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3846,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:11",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3871,
												"src": "25363:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3847,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:11"
									},
									"returnParameters": {
										"id": 3852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3871,
												"src": "25400:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3850,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:11"
									},
									"scope": 4328,
									"src": "25345:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3896,
										"nodeType": "Block",
										"src": "25966:150:11",
										"statements": [
											{
												"expression": {
													"id": 3884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3879,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3877,
														"src": "25976:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3874,
																"src": "25996:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3880,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3885,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3886,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3877,
														"src": "26016:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3887,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3874,
														"src": "26030:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3895,
												"nodeType": "IfStatement",
												"src": "26012:98:11",
												"trueBody": {
													"id": 3894,
													"nodeType": "Block",
													"src": "26037:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3891,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3874,
																		"src": "26093:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3889,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "26058:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3893,
															"nodeType": "RevertStatement",
															"src": "26051:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3872,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:11",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3897,
												"src": "25910:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3873,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:11"
									},
									"returnParameters": {
										"id": 3878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3877,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3897,
												"src": "25947:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3876,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:11"
									},
									"scope": 4328,
									"src": "25892:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3922,
										"nodeType": "Block",
										"src": "26513:150:11",
										"statements": [
											{
												"expression": {
													"id": 3910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3905,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3903,
														"src": "26523:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3908,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3900,
																"src": "26543:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3906,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3911,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3912,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3903,
														"src": "26563:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3913,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3900,
														"src": "26577:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3921,
												"nodeType": "IfStatement",
												"src": "26559:98:11",
												"trueBody": {
													"id": 3920,
													"nodeType": "Block",
													"src": "26584:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3900,
																		"src": "26640:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3915,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "26605:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3919,
															"nodeType": "RevertStatement",
															"src": "26598:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3898,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:11",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "26457:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3899,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:11"
									},
									"returnParameters": {
										"id": 3904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3903,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "26494:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3902,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:11"
									},
									"scope": 4328,
									"src": "26439:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3948,
										"nodeType": "Block",
										"src": "27060:150:11",
										"statements": [
											{
												"expression": {
													"id": 3936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3931,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "27070:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3934,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3926,
																"src": "27090:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3932,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3937,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3938,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "27110:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3939,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3926,
														"src": "27124:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3947,
												"nodeType": "IfStatement",
												"src": "27106:98:11",
												"trueBody": {
													"id": 3946,
													"nodeType": "Block",
													"src": "27131:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3943,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3926,
																		"src": "27187:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3941,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "27152:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3945,
															"nodeType": "RevertStatement",
															"src": "27145:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3924,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:11",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3926,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "27004:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3925,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:11"
									},
									"returnParameters": {
										"id": 3930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3929,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "27041:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3928,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:11"
									},
									"scope": 4328,
									"src": "26986:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3974,
										"nodeType": "Block",
										"src": "27607:150:11",
										"statements": [
											{
												"expression": {
													"id": 3962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3957,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "27617:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3960,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3952,
																"src": "27637:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3958,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3963,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3964,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "27657:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3965,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3952,
														"src": "27671:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3973,
												"nodeType": "IfStatement",
												"src": "27653:98:11",
												"trueBody": {
													"id": 3972,
													"nodeType": "Block",
													"src": "27678:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3969,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3952,
																		"src": "27734:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3967,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "27699:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3971,
															"nodeType": "RevertStatement",
															"src": "27692:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3950,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:11",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3975,
												"src": "27551:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3951,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:11"
									},
									"returnParameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3955,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3975,
												"src": "27588:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3954,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:11"
									},
									"scope": 4328,
									"src": "27533:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4000,
										"nodeType": "Block",
										"src": "28147:148:11",
										"statements": [
											{
												"expression": {
													"id": 3988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3983,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3981,
														"src": "28157:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3986,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3978,
																"src": "28176:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3984,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 3987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3989,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3990,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3981,
														"src": "28196:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3991,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3978,
														"src": "28210:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3999,
												"nodeType": "IfStatement",
												"src": "28192:97:11",
												"trueBody": {
													"id": 3998,
													"nodeType": "Block",
													"src": "28217:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3995,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3978,
																		"src": "28272:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3993,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "28238:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3997,
															"nodeType": "RevertStatement",
															"src": "28231:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3976,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:11",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3978,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4001,
												"src": "28092:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3977,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:11"
									},
									"returnParameters": {
										"id": 3982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3981,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4001,
												"src": "28129:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3980,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:11"
									},
									"scope": 4328,
									"src": "28075:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4026,
										"nodeType": "Block",
										"src": "28685:148:11",
										"statements": [
											{
												"expression": {
													"id": 4014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4009,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "28695:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4012,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4004,
																"src": "28714:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4010,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4015,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4016,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "28734:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4017,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4004,
														"src": "28748:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4025,
												"nodeType": "IfStatement",
												"src": "28730:97:11",
												"trueBody": {
													"id": 4024,
													"nodeType": "Block",
													"src": "28755:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4021,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4004,
																		"src": "28810:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4019,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "28776:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4023,
															"nodeType": "RevertStatement",
															"src": "28769:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4002,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:11",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4027,
												"src": "28630:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4003,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:11"
									},
									"returnParameters": {
										"id": 4008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4007,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4027,
												"src": "28667:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4006,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:11"
									},
									"scope": 4328,
									"src": "28613:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4052,
										"nodeType": "Block",
										"src": "29223:148:11",
										"statements": [
											{
												"expression": {
													"id": 4040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4035,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4033,
														"src": "29233:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4038,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4030,
																"src": "29252:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4036,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4041,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4042,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4033,
														"src": "29272:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4043,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4030,
														"src": "29286:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4051,
												"nodeType": "IfStatement",
												"src": "29268:97:11",
												"trueBody": {
													"id": 4050,
													"nodeType": "Block",
													"src": "29293:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4047,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4030,
																		"src": "29348:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4045,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "29314:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4049,
															"nodeType": "RevertStatement",
															"src": "29307:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4028,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:11",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4053,
												"src": "29168:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4029,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:11"
									},
									"returnParameters": {
										"id": 4034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4033,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4053,
												"src": "29205:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4032,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:11"
									},
									"scope": 4328,
									"src": "29151:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4078,
										"nodeType": "Block",
										"src": "29761:148:11",
										"statements": [
											{
												"expression": {
													"id": 4066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4061,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "29771:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4056,
																"src": "29790:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4062,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4067,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4068,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "29810:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4069,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4056,
														"src": "29824:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4077,
												"nodeType": "IfStatement",
												"src": "29806:97:11",
												"trueBody": {
													"id": 4076,
													"nodeType": "Block",
													"src": "29831:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4073,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4056,
																		"src": "29886:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4071,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "29852:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4075,
															"nodeType": "RevertStatement",
															"src": "29845:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4054,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:11",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4056,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "29706:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4055,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:11"
									},
									"returnParameters": {
										"id": 4060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4059,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "29743:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4058,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:11"
									},
									"scope": 4328,
									"src": "29689:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4104,
										"nodeType": "Block",
										"src": "30299:148:11",
										"statements": [
											{
												"expression": {
													"id": 4092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4087,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4085,
														"src": "30309:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4090,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4082,
																"src": "30328:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4088,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4093,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4094,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4085,
														"src": "30348:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4095,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4082,
														"src": "30362:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4103,
												"nodeType": "IfStatement",
												"src": "30344:97:11",
												"trueBody": {
													"id": 4102,
													"nodeType": "Block",
													"src": "30369:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4099,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4082,
																		"src": "30424:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4097,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "30390:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4101,
															"nodeType": "RevertStatement",
															"src": "30383:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4080,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:11",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4105,
												"src": "30244:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4081,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:11"
									},
									"returnParameters": {
										"id": 4086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4085,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4105,
												"src": "30281:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4084,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:11"
									},
									"scope": 4328,
									"src": "30227:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4130,
										"nodeType": "Block",
										"src": "30837:148:11",
										"statements": [
											{
												"expression": {
													"id": 4118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4113,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4111,
														"src": "30847:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4116,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4108,
																"src": "30866:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4114,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4119,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4120,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4111,
														"src": "30886:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4121,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4108,
														"src": "30900:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4129,
												"nodeType": "IfStatement",
												"src": "30882:97:11",
												"trueBody": {
													"id": 4128,
													"nodeType": "Block",
													"src": "30907:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4125,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4108,
																		"src": "30962:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4123,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "30928:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4127,
															"nodeType": "RevertStatement",
															"src": "30921:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4106,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:11",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4131,
												"src": "30782:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4107,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:11"
									},
									"returnParameters": {
										"id": 4112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4111,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4131,
												"src": "30819:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4110,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:11"
									},
									"scope": 4328,
									"src": "30765:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4156,
										"nodeType": "Block",
										"src": "31375:148:11",
										"statements": [
											{
												"expression": {
													"id": 4144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4139,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4137,
														"src": "31385:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4134,
																"src": "31404:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4140,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4145,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4146,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4137,
														"src": "31424:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4147,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4134,
														"src": "31438:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4155,
												"nodeType": "IfStatement",
												"src": "31420:97:11",
												"trueBody": {
													"id": 4154,
													"nodeType": "Block",
													"src": "31445:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4151,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4134,
																		"src": "31500:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4149,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "31466:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4153,
															"nodeType": "RevertStatement",
															"src": "31459:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4132,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:11",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4157,
												"src": "31320:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4133,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:11"
									},
									"returnParameters": {
										"id": 4138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4137,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4157,
												"src": "31357:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4136,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:11"
									},
									"scope": 4328,
									"src": "31303:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4182,
										"nodeType": "Block",
										"src": "31913:148:11",
										"statements": [
											{
												"expression": {
													"id": 4170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4165,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4163,
														"src": "31923:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4168,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4160,
																"src": "31942:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4166,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4171,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4172,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4163,
														"src": "31962:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4173,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4160,
														"src": "31976:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4181,
												"nodeType": "IfStatement",
												"src": "31958:97:11",
												"trueBody": {
													"id": 4180,
													"nodeType": "Block",
													"src": "31983:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4177,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4160,
																		"src": "32038:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4175,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "32004:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4179,
															"nodeType": "RevertStatement",
															"src": "31997:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4158,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:11",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4183,
												"src": "31858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4159,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:11"
									},
									"returnParameters": {
										"id": 4164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4163,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4183,
												"src": "31895:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4162,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:11"
									},
									"scope": 4328,
									"src": "31841:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4208,
										"nodeType": "Block",
										"src": "32451:148:11",
										"statements": [
											{
												"expression": {
													"id": 4196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4191,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4189,
														"src": "32461:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4194,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4186,
																"src": "32480:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4192,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4197,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4198,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4189,
														"src": "32500:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4186,
														"src": "32514:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4207,
												"nodeType": "IfStatement",
												"src": "32496:97:11",
												"trueBody": {
													"id": 4206,
													"nodeType": "Block",
													"src": "32521:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4203,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4186,
																		"src": "32576:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4201,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "32542:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4205,
															"nodeType": "RevertStatement",
															"src": "32535:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4184,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:11",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "32396:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4185,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:11"
									},
									"returnParameters": {
										"id": 4190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4189,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "32433:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4188,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:11"
									},
									"scope": 4328,
									"src": "32379:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4234,
										"nodeType": "Block",
										"src": "32989:148:11",
										"statements": [
											{
												"expression": {
													"id": 4222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4217,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4215,
														"src": "32999:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4220,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4212,
																"src": "33018:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 4218,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 4223,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4224,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4215,
														"src": "33038:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4225,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4212,
														"src": "33052:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4233,
												"nodeType": "IfStatement",
												"src": "33034:97:11",
												"trueBody": {
													"id": 4232,
													"nodeType": "Block",
													"src": "33059:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4229,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4212,
																		"src": "33114:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4227,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "33080:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4231,
															"nodeType": "RevertStatement",
															"src": "33073:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4210,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:11",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4235,
												"src": "32934:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4211,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:11"
									},
									"returnParameters": {
										"id": 4216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4215,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4235,
												"src": "32971:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4214,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:11"
									},
									"scope": 4328,
									"src": "32917:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4260,
										"nodeType": "Block",
										"src": "33527:148:11",
										"statements": [
											{
												"expression": {
													"id": 4248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4243,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "33537:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4238,
																"src": "33556:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4244,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4249,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4250,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "33576:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4251,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4238,
														"src": "33590:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4259,
												"nodeType": "IfStatement",
												"src": "33572:97:11",
												"trueBody": {
													"id": 4258,
													"nodeType": "Block",
													"src": "33597:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4255,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4238,
																		"src": "33652:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4253,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "33618:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4257,
															"nodeType": "RevertStatement",
															"src": "33611:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4236,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:11",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4261,
												"src": "33472:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4237,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:11"
									},
									"returnParameters": {
										"id": 4242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4241,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4261,
												"src": "33509:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4240,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:11"
									},
									"scope": 4328,
									"src": "33455:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4286,
										"nodeType": "Block",
										"src": "34058:146:11",
										"statements": [
											{
												"expression": {
													"id": 4274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4269,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4267,
														"src": "34068:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4272,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4264,
																"src": "34086:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4270,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:11",
																"typeDescriptions": {}
															}
														},
														"id": 4273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4275,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4276,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4267,
														"src": "34106:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4277,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4264,
														"src": "34120:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4285,
												"nodeType": "IfStatement",
												"src": "34102:96:11",
												"trueBody": {
													"id": 4284,
													"nodeType": "Block",
													"src": "34127:71:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4281,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4264,
																		"src": "34181:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4279,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "34148:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4283,
															"nodeType": "RevertStatement",
															"src": "34141:46:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4262,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:11",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4264,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "34004:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4263,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:11"
									},
									"returnParameters": {
										"id": 4268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4267,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "34041:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4266,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:11"
									},
									"scope": 4328,
									"src": "33988:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4316,
										"nodeType": "Block",
										"src": "34444:250:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4295,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4290,
														"src": "34557:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4299,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:11",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4298,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:11",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4296,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4310,
												"nodeType": "IfStatement",
												"src": "34553:105:11",
												"trueBody": {
													"id": 4309,
													"nodeType": "Block",
													"src": "34592:66:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4306,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4290,
																		"src": "34641:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4305,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "34613:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4308,
															"nodeType": "RevertStatement",
															"src": "34606:41:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4313,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4290,
															"src": "34681:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4311,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 4314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4294,
												"id": 4315,
												"nodeType": "Return",
												"src": "34667:20:11"
											}
										]
									},
									"documentation": {
										"id": 4288,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:11",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4317,
												"src": "34398:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:11"
									},
									"returnParameters": {
										"id": 4294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4317,
												"src": "34436:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4292,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:11"
									},
									"scope": 4328,
									"src": "34380:314:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4326,
										"nodeType": "Block",
										"src": "34853:87:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:11",
													"nodeType": "YulBlock",
													"src": "34888:46:11",
													"statements": [
														{
															"nativeSrc": "34902:22:11",
															"nodeType": "YulAssignment",
															"src": "34902:22:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:11"
																		},
																		"nativeSrc": "34914:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:11"
																},
																"nativeSrc": "34907:17:11",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:11"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 4320,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:11",
														"valueSize": 1
													},
													{
														"declaration": 4323,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4325,
												"nodeType": "InlineAssembly",
												"src": "34863:71:11"
											}
										]
									},
									"documentation": {
										"id": 4318,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:11",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4320,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 4327,
												"src": "34811:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:11"
									},
									"returnParameters": {
										"id": 4324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4323,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 4327,
												"src": "34842:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:11"
									},
									"scope": 4328,
									"src": "34795:145:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4329,
							"src": "769:34173:11",
							"usedErrors": [
								2573,
								2578,
								2585,
								2590
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:11"
				},
				"id": 11
			},
			"airdrop.sol": {
				"ast": {
					"absolutePath": "airdrop.sol",
					"exportedSymbols": {
						"Airdrop": [
							4866
						],
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"Math": [
							2563
						],
						"Ownable": [
							147
						],
						"Panic": [
							861
						],
						"ReentrancyGuard": [
							930
						],
						"SafeCast": [
							4328
						],
						"SafeERC20": [
							779
						]
					},
					"id": 4867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4867,
							"sourceUnit": 148,
							"src": "61:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 4332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4867,
							"sourceUnit": 316,
							"src": "115:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 4333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4867,
							"sourceUnit": 780,
							"src": "173:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 4334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4867,
							"sourceUnit": 931,
							"src": "240:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 4335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4867,
							"sourceUnit": 2564,
							"src": "301:53:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4337,
										"name": "Ownable",
										"nameLocations": [
											"581:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "581:7:12"
									},
									"id": 4338,
									"nodeType": "InheritanceSpecifier",
									"src": "581:7:12"
								},
								{
									"baseName": {
										"id": 4339,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"590:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "590:15:12"
									},
									"id": 4340,
									"nodeType": "InheritanceSpecifier",
									"src": "590:15:12"
								}
							],
							"canonicalName": "Airdrop",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4336,
								"nodeType": "StructuredDocumentation",
								"src": "358:201:12",
								"text": " @title Airdrop\n @dev A smart contract for managing a token airdrop on the Polygon network.\n The owner can configure airdrop and referral amounts, and control the airdrop's lifecycle."
							},
							"fullyImplemented": true,
							"id": 4866,
							"linearizedBaseContracts": [
								4866,
								930,
								147,
								809
							],
							"name": "Airdrop",
							"nameLocation": "570:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 4344,
									"libraryName": {
										"id": 4341,
										"name": "SafeERC20",
										"nameLocations": [
											"619:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "619:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "613:27:12",
									"typeName": {
										"id": 4343,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4342,
											"name": "IERC20",
											"nameLocations": [
												"633:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "633:6:12"
										},
										"referencedDeclaration": 315,
										"src": "633:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 4347,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "704:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "690:19:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 4346,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4345,
											"name": "IERC20",
											"nameLocations": [
												"690:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "690:6:12"
										},
										"referencedDeclaration": 315,
										"src": "690:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf31b33e",
									"id": 4349,
									"mutability": "mutable",
									"name": "mainAirdropAmount",
									"nameLocation": "789:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "774:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6305b715",
									"id": 4351,
									"mutability": "mutable",
									"name": "referralBonusAmount",
									"nameLocation": "882:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "867:34:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "867:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b88bfd29",
									"id": 4353,
									"mutability": "mutable",
									"name": "claimFeePercent",
									"nameLocation": "1058:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1043:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4352,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1043:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c884ef83",
									"id": 4357,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "1193:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1161:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 4356,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4354,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1169:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1161:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4355,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1180:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aeab26be",
									"id": 4359,
									"mutability": "mutable",
									"name": "totalAirdropSupply",
									"nameLocation": "1304:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1289:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4358,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "152e84a7",
									"id": 4361,
									"mutability": "mutable",
									"name": "tokensDistributed",
									"nameLocation": "1436:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1421:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1421:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "747fc0d2",
									"id": 4363,
									"mutability": "mutable",
									"name": "maxReferrals",
									"nameLocation": "1544:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1529:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4362,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1529:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cec297a0",
									"id": 4367,
									"mutability": "mutable",
									"name": "referralCounts",
									"nameLocation": "1677:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1642:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4366,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1650:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1642:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4365,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1661:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "db24f2a3",
									"id": 4369,
									"mutability": "mutable",
									"name": "startAirdropAt",
									"nameLocation": "1779:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1764:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1764:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01c0e51d",
									"id": 4371,
									"mutability": "mutable",
									"name": "stopAirdropAt",
									"nameLocation": "1815:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 4866,
									"src": "1800:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1800:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e36722f357b07c721b246e0a5cb2fa0015c07ad3df67bca291504054a7998394",
									"id": 4377,
									"name": "AirdropClaimed",
									"nameLocation": "1884:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4373,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "1915:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 4377,
												"src": "1899:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4375,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1941:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 4377,
												"src": "1925:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:52:12"
									},
									"src": "1878:73:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1f3c7c0ddbb563b01a4cc0296b5eb7b0af467fb7299174b3b16ea09cee7f72e9",
									"id": 4379,
									"name": "AirdropStarted",
									"nameLocation": "1963:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:12"
									},
									"src": "1957:23:12"
								},
								{
									"anonymous": false,
									"eventSelector": "2f63f5d78882068cfeb4265cff9993094cedbb7b88f9f9ff7334728a7de9fdcb",
									"id": 4381,
									"name": "AirdropStopped",
									"nameLocation": "1992:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:2:12"
									},
									"src": "1986:23:12"
								},
								{
									"anonymous": false,
									"eventSelector": "6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b",
									"id": 4387,
									"name": "TokensWithdrawn",
									"nameLocation": "2021:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4383,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2053:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "2037:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4385,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2068:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "2060:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:39:12"
									},
									"src": "2015:61:12"
								},
								{
									"anonymous": false,
									"eventSelector": "91a9538a48b80f8854e68761beacb4468cb2ac0a50d634dec96417cddc019a14",
									"id": 4391,
									"name": "MainAirdropAmountUpdated",
									"nameLocation": "2088:24:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4389,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "2121:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4391,
												"src": "2113:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:19:12"
									},
									"src": "2082:50:12"
								},
								{
									"anonymous": false,
									"eventSelector": "a8868231bcabae5003167c1566dce9258f36e5babecdd040da1ef6e04377e0e2",
									"id": 4395,
									"name": "ReferralBonusAmountUpdated",
									"nameLocation": "2144:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4393,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "2179:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4395,
												"src": "2171:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:19:12"
									},
									"src": "2138:52:12"
								},
								{
									"anonymous": false,
									"eventSelector": "6852fdb2f20cad76e9f34cb63f2f0f19b8d69a0673886404fc871917cd81198a",
									"id": 4399,
									"name": "AirdropFeeUpdated",
									"nameLocation": "2202:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4397,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "2228:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4399,
												"src": "2220:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:16:12"
									},
									"src": "2196:40:12"
								},
								{
									"anonymous": false,
									"eventSelector": "02e039d7ce7a1bacd02cebc742cfba63668424d700fe6ff9b5be6f9f5801be15",
									"id": 4407,
									"name": "AirdropFeePaid",
									"nameLocation": "2248:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4401,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "2279:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "2263:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4403,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2305:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "2289:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4405,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeAmount",
												"nameLocation": "2324:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "2316:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:72:12"
									},
									"src": "2242:93:12"
								},
								{
									"anonymous": false,
									"eventSelector": "45c69c62555cb8d911ac4f0a16fa83a65e4a2ff5c5a884c39969e8c8b97cb510",
									"id": 4411,
									"name": "TotalAirdropSupplyUpdated",
									"nameLocation": "2347:25:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4409,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSupply",
												"nameLocation": "2381:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4411,
												"src": "2373:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2372:19:12"
									},
									"src": "2341:51:12"
								},
								{
									"anonymous": false,
									"eventSelector": "cc368607de2345e055465e8d50d99a7d1e1e3ce7516a4175a2c513aad17b1460",
									"id": 4415,
									"name": "MaxReferralsUpdated",
									"nameLocation": "2404:19:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4413,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMax",
												"nameLocation": "2432:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4415,
												"src": "2424:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:16:12"
									},
									"src": "2398:42:12"
								},
								{
									"anonymous": false,
									"eventSelector": "72c7f30f1add5c8b5e197b8cb57516b3abbd8e31bccb1845d4e716717944e80a",
									"id": 4421,
									"name": "AirdropScheduleUpdated",
									"nameLocation": "2452:22:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4417,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "2483:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 4421,
												"src": "2475:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4419,
												"indexed": false,
												"mutability": "mutable",
												"name": "stopTimestamp",
												"nameLocation": "2507:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4421,
												"src": "2499:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:47:12"
									},
									"src": "2446:76:12"
								},
								{
									"body": {
										"id": 4475,
										"nodeType": "Block",
										"src": "3349:432:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4440,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4424,
																"src": "3368:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3393:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3385:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4441,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3385:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 4444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3385:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3368:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 4446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3397:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															},
															"value": "Token address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															}
														],
														"id": 4439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3360:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4448,
												"nodeType": "ExpressionStatement",
												"src": "3360:68:12"
											},
											{
												"expression": {
													"id": 4453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4449,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4347,
														"src": "3439:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4451,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4424,
																"src": "3454:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 4450,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3447:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 4452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3447:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "3439:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 4454,
												"nodeType": "ExpressionStatement",
												"src": "3439:29:12"
											},
											{
												"expression": {
													"id": 4457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4455,
														"name": "mainAirdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4349,
														"src": "3479:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4456,
														"name": "_initialMainAirdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4426,
														"src": "3499:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3479:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4458,
												"nodeType": "ExpressionStatement",
												"src": "3479:45:12"
											},
											{
												"expression": {
													"id": 4461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4459,
														"name": "referralBonusAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4351,
														"src": "3535:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4460,
														"name": "_initialReferralBonusAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4428,
														"src": "3557:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:49:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4462,
												"nodeType": "ExpressionStatement",
												"src": "3535:49:12"
											},
											{
												"expression": {
													"id": 4465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4463,
														"name": "claimFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4353,
														"src": "3595:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4464,
														"name": "_initialClaimFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4430,
														"src": "3613:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3595:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4466,
												"nodeType": "ExpressionStatement",
												"src": "3595:41:12"
											},
											{
												"expression": {
													"id": 4469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4467,
														"name": "totalAirdropSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4359,
														"src": "3647:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4468,
														"name": "_initialTotalAirdropSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4432,
														"src": "3668:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3647:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4470,
												"nodeType": "ExpressionStatement",
												"src": "3647:47:12"
											},
											{
												"expression": {
													"id": 4473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4471,
														"name": "maxReferrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4363,
														"src": "3705:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030",
														"id": 4472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3720:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"src": "3705:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4474,
												"nodeType": "ExpressionStatement",
												"src": "3705:18:12"
											}
										]
									},
									"documentation": {
										"id": 4422,
										"nodeType": "StructuredDocumentation",
										"src": "2530:565:12",
										"text": " @dev The constructor initializes the contract with the token address, airdrop amounts, and total supply.\n @param _tokenAddress The address of the ERC20 token to be airdropped.\n @param _initialMainAirdropAmount The initial amount of tokens for each participant.\n @param _initialReferralBonusAmount The initial amount of tokens for each referral.\n @param _initialClaimFeePercent The initial fee percentage (e.g., 20 for 2%).\n @param _initialTotalAirdropSupply The initial total supply of tokens for the airdrop."
									},
									"id": 4476,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 4435,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3337:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 4436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3341:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3337:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 4437,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4434,
												"name": "Ownable",
												"nameLocations": [
													"3329:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3329:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3329:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4424,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "3131:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "3123:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3123:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4426,
												"mutability": "mutable",
												"name": "_initialMainAirdropAmount",
												"nameLocation": "3163:25:12",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "3155:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4428,
												"mutability": "mutable",
												"name": "_initialReferralBonusAmount",
												"nameLocation": "3207:27:12",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "3199:35:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4430,
												"mutability": "mutable",
												"name": "_initialClaimFeePercent",
												"nameLocation": "3253:23:12",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "3245:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3245:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4432,
												"mutability": "mutable",
												"name": "_initialTotalAirdropSupply",
												"nameLocation": "3295:26:12",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "3287:34:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3112:216:12"
									},
									"returnParameters": {
										"id": 4438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:12"
									},
									"scope": 4866,
									"src": "3101:680:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4484,
										"nodeType": "Block",
										"src": "3999:45:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "455448206e6f74206163636570746564",
															"id": 4481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4017:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd",
																"typeString": "literal_string \"ETH not accepted\""
															},
															"value": "ETH not accepted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_90c9fa763dce8643cdb747f613918588df7edf6ad0ab43f79c813c24bc293edd",
																"typeString": "literal_string \"ETH not accepted\""
															}
														],
														"id": 4480,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4010:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 4482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4483,
												"nodeType": "ExpressionStatement",
												"src": "4010:26:12"
											}
										]
									},
									"documentation": {
										"id": 4477,
										"nodeType": "StructuredDocumentation",
										"src": "3789:177:12",
										"text": " @dev Fallback function to handle any accidental Ether sent to the contract.\n It simply reverts the transaction, preventing the ETH from being locked."
									},
									"id": 4485,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3979:2:12"
									},
									"returnParameters": {
										"id": 4479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3999:0:12"
									},
									"scope": 4866,
									"src": "3972:72:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4515,
										"nodeType": "Block",
										"src": "4395:261:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4496,
																"name": "_stopTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4490,
																"src": "4414:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 4497,
																"name": "_startTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4488,
																"src": "4431:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4414:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746f702074696d657374616d70206d7573742062652061667465722073746172742074696d657374616d70",
															"id": 4499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4448:46:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc",
																"typeString": "literal_string \"Stop timestamp must be after start timestamp\""
															},
															"value": "Stop timestamp must be after start timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07fce35465ab01013a551bab2045bda3ea0acec0004ab6c39065fd11231b4fc",
																"typeString": "literal_string \"Stop timestamp must be after start timestamp\""
															}
														],
														"id": 4495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4406:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4406:89:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4501,
												"nodeType": "ExpressionStatement",
												"src": "4406:89:12"
											},
											{
												"expression": {
													"id": 4504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4502,
														"name": "startAirdropAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4369,
														"src": "4506:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4503,
														"name": "_startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4488,
														"src": "4523:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4506:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4505,
												"nodeType": "ExpressionStatement",
												"src": "4506:32:12"
											},
											{
												"expression": {
													"id": 4508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4506,
														"name": "stopAirdropAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4371,
														"src": "4549:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4507,
														"name": "_stopTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4490,
														"src": "4565:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4549:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4509,
												"nodeType": "ExpressionStatement",
												"src": "4549:30:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4511,
															"name": "startAirdropAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4369,
															"src": "4618:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4512,
															"name": "stopAirdropAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4371,
															"src": "4634:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4510,
														"name": "AirdropScheduleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4421,
														"src": "4595:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 4513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4514,
												"nodeType": "EmitStatement",
												"src": "4590:58:12"
											}
										]
									},
									"documentation": {
										"id": 4486,
										"nodeType": "StructuredDocumentation",
										"src": "4052:246:12",
										"text": " @dev Allows the owner to schedule the start and end of the airdrop.\n @param _startTimestamp The timestamp for when the airdrop should start.\n @param _stopTimestamp The timestamp for when the airdrop should stop."
									},
									"functionSelector": "1bcea05e",
									"id": 4516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4493,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4492,
												"name": "onlyOwner",
												"nameLocations": [
													"4385:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4385:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4385:9:12"
										}
									],
									"name": "scheduleAirdrop",
									"nameLocation": "4313:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4488,
												"mutability": "mutable",
												"name": "_startTimestamp",
												"nameLocation": "4337:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 4516,
												"src": "4329:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4490,
												"mutability": "mutable",
												"name": "_stopTimestamp",
												"nameLocation": "4362:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 4516,
												"src": "4354:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4354:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:49:12"
									},
									"returnParameters": {
										"id": 4494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4395:0:12"
									},
									"scope": 4866,
									"src": "4304:352:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4532,
										"nodeType": "Block",
										"src": "4893:101:12",
										"statements": [
											{
												"expression": {
													"id": 4526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4524,
														"name": "mainAirdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4349,
														"src": "4904:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4525,
														"name": "_newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4519,
														"src": "4924:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4904:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4527,
												"nodeType": "ExpressionStatement",
												"src": "4904:30:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4529,
															"name": "_newAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4519,
															"src": "4975:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4528,
														"name": "MainAirdropAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4391,
														"src": "4950:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 4530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4531,
												"nodeType": "EmitStatement",
												"src": "4945:41:12"
											}
										]
									},
									"documentation": {
										"id": 4517,
										"nodeType": "StructuredDocumentation",
										"src": "4664:156:12",
										"text": " @dev Allows the owner to change the main airdrop amount per participant.\n @param _newAmount The new amount for the main airdrop."
									},
									"functionSelector": "9a707d2f",
									"id": 4533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4521,
												"name": "onlyOwner",
												"nameLocations": [
													"4883:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4883:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4883:9:12"
										}
									],
									"name": "setMainAirdropAmount",
									"nameLocation": "4835:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4519,
												"mutability": "mutable",
												"name": "_newAmount",
												"nameLocation": "4864:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4533,
												"src": "4856:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:20:12"
									},
									"returnParameters": {
										"id": 4523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4893:0:12"
									},
									"scope": 4866,
									"src": "4826:168:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4549,
										"nodeType": "Block",
										"src": "5221:105:12",
										"statements": [
											{
												"expression": {
													"id": 4543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4541,
														"name": "referralBonusAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4351,
														"src": "5232:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4542,
														"name": "_newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4536,
														"src": "5254:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5232:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4544,
												"nodeType": "ExpressionStatement",
												"src": "5232:32:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4546,
															"name": "_newAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4536,
															"src": "5307:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4545,
														"name": "ReferralBonusAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4395,
														"src": "5280:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 4547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4548,
												"nodeType": "EmitStatement",
												"src": "5275:43:12"
											}
										]
									},
									"documentation": {
										"id": 4534,
										"nodeType": "StructuredDocumentation",
										"src": "5002:144:12",
										"text": " @dev Allows the owner to change the referral bonus amount.\n @param _newAmount The new amount for the referral bonus."
									},
									"functionSelector": "ff7345e5",
									"id": 4550,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4539,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4538,
												"name": "onlyOwner",
												"nameLocations": [
													"5211:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5211:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5211:9:12"
										}
									],
									"name": "setReferralBonusAmount",
									"nameLocation": "5161:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4536,
												"mutability": "mutable",
												"name": "_newAmount",
												"nameLocation": "5192:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4550,
												"src": "5184:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5183:20:12"
									},
									"returnParameters": {
										"id": 4540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5221:0:12"
									},
									"scope": 4866,
									"src": "5152:174:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4573,
										"nodeType": "Block",
										"src": "5558:178:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4559,
																"name": "_newFeePercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4553,
																"src": "5577:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 4560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5595:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "5577:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4665652070657263656e746167652063616e6e6f74206578636565642031303025",
															"id": 4562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5600:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950",
																"typeString": "literal_string \"Fee percentage cannot exceed 100%\""
															},
															"value": "Fee percentage cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eba0b2e2f1b7a070d7d60cd19a3c489ee5aaa30360583595405e9c80199d3950",
																"typeString": "literal_string \"Fee percentage cannot exceed 100%\""
															}
														],
														"id": 4558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5569:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5569:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4564,
												"nodeType": "ExpressionStatement",
												"src": "5569:67:12"
											},
											{
												"expression": {
													"id": 4567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4565,
														"name": "claimFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4353,
														"src": "5647:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4566,
														"name": "_newFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4553,
														"src": "5665:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5647:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4568,
												"nodeType": "ExpressionStatement",
												"src": "5647:32:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4570,
															"name": "_newFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4553,
															"src": "5713:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4569,
														"name": "AirdropFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4399,
														"src": "5695:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 4571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5695:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4572,
												"nodeType": "EmitStatement",
												"src": "5690:38:12"
											}
										]
									},
									"documentation": {
										"id": 4551,
										"nodeType": "StructuredDocumentation",
										"src": "5334:149:12",
										"text": " @dev Allows the owner to set the airdrop fee percentage.\n @param _newFeePercent The new fee percentage (e.g., 20 for 2%)."
									},
									"functionSelector": "a49a176e",
									"id": 4574,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4556,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4555,
												"name": "onlyOwner",
												"nameLocations": [
													"5548:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5548:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5548:9:12"
										}
									],
									"name": "setClaimFeePercent",
									"nameLocation": "5498:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4553,
												"mutability": "mutable",
												"name": "_newFeePercent",
												"nameLocation": "5525:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 4574,
												"src": "5517:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5517:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5516:24:12"
									},
									"returnParameters": {
										"id": 4557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5558:0:12"
									},
									"scope": 4866,
									"src": "5489:247:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4597,
										"nodeType": "Block",
										"src": "5961:289:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4583,
																"name": "_newSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4577,
																"src": "6062:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4584,
																"name": "tokensDistributed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4361,
																"src": "6076:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6062:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720737570706c792063616e6e6f74206265206c657373207468616e20646973747269627574656420746f6b656e73",
															"id": 4586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6095:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc",
																"typeString": "literal_string \"New supply cannot be less than distributed tokens\""
															},
															"value": "New supply cannot be less than distributed tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e0a8d997551e8389a3ea7f43cd12e60c06618bb4628d4243db472ce8e0b26bc",
																"typeString": "literal_string \"New supply cannot be less than distributed tokens\""
															}
														],
														"id": 4582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6054:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6054:93:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4588,
												"nodeType": "ExpressionStatement",
												"src": "6054:93:12"
											},
											{
												"expression": {
													"id": 4591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4589,
														"name": "totalAirdropSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4359,
														"src": "6158:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4590,
														"name": "_newSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4577,
														"src": "6179:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6158:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4592,
												"nodeType": "ExpressionStatement",
												"src": "6158:31:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4594,
															"name": "_newSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4577,
															"src": "6231:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4593,
														"name": "TotalAirdropSupplyUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4411,
														"src": "6205:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 4595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6205:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4596,
												"nodeType": "EmitStatement",
												"src": "6200:42:12"
											}
										]
									},
									"documentation": {
										"id": 4575,
										"nodeType": "StructuredDocumentation",
										"src": "5748:139:12",
										"text": " @dev Allows the owner to set the total supply for the airdrop.\n @param _newSupply The new total airdrop supply."
									},
									"functionSelector": "7e699a8c",
									"id": 4598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4579,
												"name": "onlyOwner",
												"nameLocations": [
													"5951:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5951:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5951:9:12"
										}
									],
									"name": "setTotalAirdropSupply",
									"nameLocation": "5902:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4577,
												"mutability": "mutable",
												"name": "_newSupply",
												"nameLocation": "5932:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4598,
												"src": "5924:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5923:20:12"
									},
									"returnParameters": {
										"id": 4581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5961:0:12"
									},
									"scope": 4866,
									"src": "5893:357:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4614,
										"nodeType": "Block",
										"src": "6474:85:12",
										"statements": [
											{
												"expression": {
													"id": 4608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4606,
														"name": "maxReferrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4363,
														"src": "6485:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4607,
														"name": "_newMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4601,
														"src": "6500:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6485:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4609,
												"nodeType": "ExpressionStatement",
												"src": "6485:22:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4611,
															"name": "_newMax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4601,
															"src": "6543:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4610,
														"name": "MaxReferralsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4415,
														"src": "6523:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 4612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6523:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4613,
												"nodeType": "EmitStatement",
												"src": "6518:33:12"
											}
										]
									},
									"documentation": {
										"id": 4599,
										"nodeType": "StructuredDocumentation",
										"src": "6258:151:12",
										"text": " @dev Allows the owner to set the maximum number of referrals per user.\n @param _newMax The new maximum number of referrals."
									},
									"functionSelector": "6a1d8713",
									"id": 4615,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4604,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4603,
												"name": "onlyOwner",
												"nameLocations": [
													"6464:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6464:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6464:9:12"
										}
									],
									"name": "setMaxReferrals",
									"nameLocation": "6424:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4601,
												"mutability": "mutable",
												"name": "_newMax",
												"nameLocation": "6448:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4615,
												"src": "6440:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6439:17:12"
									},
									"returnParameters": {
										"id": 4605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6474:0:12"
									},
									"scope": 4866,
									"src": "6415:144:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4626,
										"nodeType": "Block",
										"src": "6756:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 4622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6788:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 4621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6780:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4620,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6780:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4619,
														"name": "claimAirdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4627,
															4818
														],
														"referencedDeclaration": 4818,
														"src": "6767:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 4624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6767:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4625,
												"nodeType": "ExpressionStatement",
												"src": "6767:24:12"
											}
										]
									},
									"documentation": {
										"id": 4616,
										"nodeType": "StructuredDocumentation",
										"src": "6567:152:12",
										"text": " @dev A function for a user to claim their airdrop without a referral.\n It calls the main claim function with a zero address."
									},
									"functionSelector": "5b88349d",
									"id": 4627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimAirdrop",
									"nameLocation": "6734:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6746:2:12"
									},
									"returnParameters": {
										"id": 4618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6756:0:12"
									},
									"scope": 4866,
									"src": "6725:74:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4817,
										"nodeType": "Block",
										"src": "7117:2368:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7155:20:12",
															"subExpression": {
																"baseExpression": {
																	"id": 4636,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4357,
																	"src": "7156:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 4639,
																"indexExpression": {
																	"expression": {
																		"id": 4637,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7164:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 4638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7168:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7164:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7156:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520616c726561647920636c61696d656420796f75722061697264726f70",
															"id": 4641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7177:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc",
																"typeString": "literal_string \"You have already claimed your airdrop\""
															},
															"value": "You have already claimed your airdrop"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f6b8005fa513083ed0ce577b033bf16663e91396d503af6b642000031e1c4dc",
																"typeString": "literal_string \"You have already claimed your airdrop\""
															}
														],
														"id": 4635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7147:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7147:70:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4643,
												"nodeType": "ExpressionStatement",
												"src": "7147:70:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4645,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7236:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 4646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7242:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7236:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4647,
																"name": "startAirdropAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4369,
																"src": "7255:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7236:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f7020686173206e6f74207374617274656420796574",
															"id": 4649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7271:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3",
																"typeString": "literal_string \"Airdrop has not started yet\""
															},
															"value": "Airdrop has not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cf6befbb81d3b01093c704ee862a8918400b6a44b1948a96fa41ab67deb6db3",
																"typeString": "literal_string \"Airdrop has not started yet\""
															}
														],
														"id": 4644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7228:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7228:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4651,
												"nodeType": "ExpressionStatement",
												"src": "7228:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4653,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7320:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 4654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7326:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7320:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 4655,
																"name": "stopAirdropAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4371,
																"src": "7338:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7320:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f702068617320616c726561647920656e646564",
															"id": 4657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7353:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248",
																"typeString": "literal_string \"Airdrop has already ended\""
															},
															"value": "Airdrop has already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ea97289507a0a0dd7d616791a6192c0daafc7fc85d8840f2546878282d19248",
																"typeString": "literal_string \"Airdrop has already ended\""
															}
														],
														"id": 4652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7312:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7312:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4659,
												"nodeType": "ExpressionStatement",
												"src": "7312:69:12"
											},
											{
												"expression": {
													"id": 4665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4660,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4357,
															"src": "7422:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 4663,
														"indexExpression": {
															"expression": {
																"id": 4661,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7430:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7434:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7430:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7422:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 4664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7444:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7422:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4666,
												"nodeType": "ExpressionStatement",
												"src": "7422:26:12"
											},
											{
												"assignments": [
													4668
												],
												"declarations": [
													{
														"constant": false,
														"id": 4668,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "7494:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 4817,
														"src": "7486:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7486:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4675,
												"initialValue": {
													"arguments": [
														{
															"id": 4671,
															"name": "mainAirdropAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4349,
															"src": "7518:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4672,
															"name": "claimFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4353,
															"src": "7537:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 4673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7554:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 4669,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "7506:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 4670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7511:6:12",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1469,
														"src": "7506:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 4674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7506:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7486:72:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4677,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4668,
																"src": "7577:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 4678,
																"name": "mainAirdropAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4349,
																"src": "7590:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7577:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642066656520616d6f756e74206f722061697264726f7020616d6f756e74",
															"id": 4680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7609:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b",
																"typeString": "literal_string \"Invalid fee amount or airdrop amount\""
															},
															"value": "Invalid fee amount or airdrop amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad946eb15fa1f70ab040e05bd1e81164c08f19948c33e65351cbd1b524e5b16b",
																"typeString": "literal_string \"Invalid fee amount or airdrop amount\""
															}
														],
														"id": 4676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7569:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7569:79:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4682,
												"nodeType": "ExpressionStatement",
												"src": "7569:79:12"
											},
											{
												"assignments": [
													4684
												],
												"declarations": [
													{
														"constant": false,
														"id": 4684,
														"mutability": "mutable",
														"name": "finalAirdropAmount",
														"nameLocation": "7667:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 4817,
														"src": "7659:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7659:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4688,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4685,
														"name": "mainAirdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4349,
														"src": "7688:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 4686,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4668,
														"src": "7708:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7688:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7659:58:12"
											},
											{
												"assignments": [
													4690
												],
												"declarations": [
													{
														"constant": false,
														"id": 4690,
														"mutability": "mutable",
														"name": "tokensToDistribute",
														"nameLocation": "7746:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 4817,
														"src": "7738:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7738:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4692,
												"initialValue": {
													"id": 4691,
													"name": "finalAirdropAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4684,
													"src": "7767:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7738:47:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4693,
														"name": "_referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4630,
														"src": "7869:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7890:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7882:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4694,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7882:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 4697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7882:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7869:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4743,
												"nodeType": "IfStatement",
												"src": "7865:733:12",
												"trueBody": {
													"id": 4742,
													"nodeType": "Block",
													"src": "7894:704:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 4703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4700,
																			"name": "_referrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4630,
																			"src": "7917:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 4701,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7930:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 4702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7934:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7930:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7917:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e6e6f742073656c662d7265666572",
																		"id": 4704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7942:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a",
																			"typeString": "literal_string \"Cannot self-refer\""
																		},
																		"value": "Cannot self-refer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_930e7bd303b7efa5408f1c4b5f5fc533115dba125050c477212fe613b9d4d93a",
																			"typeString": "literal_string \"Cannot self-refer\""
																		}
																	],
																	"id": 4699,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7909:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7909:53:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4706,
															"nodeType": "ExpressionStatement",
															"src": "7909:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 4713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4708,
																			"name": "_referrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4630,
																			"src": "7985:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 4711,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "8006:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Airdrop_$4866",
																						"typeString": "contract Airdrop"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Airdrop_$4866",
																						"typeString": "contract Airdrop"
																					}
																				],
																				"id": 4710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7998:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 4709,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7998:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7998:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7985:26:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964207265666572726572",
																		"id": 4714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8013:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90",
																			"typeString": "literal_string \"Invalid referrer\""
																		},
																		"value": "Invalid referrer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6065dd21fbdd0f8eae485b1abbdd8c64a3395d6825d4f12fcb3926fecc49dc90",
																			"typeString": "literal_string \"Invalid referrer\""
																		}
																	],
																	"id": 4707,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7977:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7977:55:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4716,
															"nodeType": "ExpressionStatement",
															"src": "7977:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 4718,
																			"name": "claimed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4357,
																			"src": "8177:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 4720,
																		"indexExpression": {
																			"id": 4719,
																			"name": "_referrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4630,
																			"src": "8185:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8177:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526566657272657220686173206e6f742079657420636c61696d6564",
																		"id": 4721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8197:30:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939",
																			"typeString": "literal_string \"Referrer has not yet claimed\""
																		},
																		"value": "Referrer has not yet claimed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c79b7827c09ee973fb4ba08e496957c3b1fb1801b5e8040b49c561011981e939",
																			"typeString": "literal_string \"Referrer has not yet claimed\""
																		}
																	],
																	"id": 4717,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8169:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8169:59:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4723,
															"nodeType": "ExpressionStatement",
															"src": "8169:59:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 4725,
																				"name": "referralCounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4367,
																				"src": "8338:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 4727,
																			"indexExpression": {
																				"id": 4726,
																				"name": "_referrer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4630,
																				"src": "8353:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8338:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 4728,
																			"name": "maxReferrals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4363,
																			"src": "8366:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8338:40:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526566657272657220686173207265616368656420746865697220726566657272616c206c696d6974",
																		"id": 4730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8380:43:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606",
																			"typeString": "literal_string \"Referrer has reached their referral limit\""
																		},
																		"value": "Referrer has reached their referral limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fdc1c2aa6b4517df345e63e79b27c5199c8d26b9785e48e4d16490de74edc606",
																			"typeString": "literal_string \"Referrer has reached their referral limit\""
																		}
																	],
																	"id": 4724,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8330:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8330:94:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4732,
															"nodeType": "ExpressionStatement",
															"src": "8330:94:12"
														},
														{
															"expression": {
																"id": 4735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4733,
																	"name": "tokensToDistribute",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4690,
																	"src": "8441:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 4734,
																	"name": "referralBonusAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4351,
																	"src": "8463:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8441:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4736,
															"nodeType": "ExpressionStatement",
															"src": "8441:41:12"
														},
														{
															"expression": {
																"id": 4740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8559:27:12",
																"subExpression": {
																	"baseExpression": {
																		"id": 4737,
																		"name": "referralCounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4367,
																		"src": "8559:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 4739,
																	"indexExpression": {
																		"id": 4738,
																		"name": "_referrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4630,
																		"src": "8574:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8559:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4741,
															"nodeType": "ExpressionStatement",
															"src": "8559:27:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4745,
																	"name": "tokensDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4361,
																	"src": "8618:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 4746,
																	"name": "tokensToDistribute",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4690,
																	"src": "8638:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8618:38:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 4748,
																"name": "totalAirdropSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4359,
																"src": "8660:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8618:60:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c2061697264726f7020737570706c7920657868617573746564",
															"id": 4750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8680:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504",
																"typeString": "literal_string \"Total airdrop supply exhausted\""
															},
															"value": "Total airdrop supply exhausted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_929c067195aa50e997228cdbad5bd77bbf4328cf46a41c82eac4401d110a2504",
																"typeString": "literal_string \"Total airdrop supply exhausted\""
															}
														],
														"id": 4744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8610:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8610:103:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4752,
												"nodeType": "ExpressionStatement",
												"src": "8610:103:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 4758,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8977:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Airdrop_$4866",
																					"typeString": "contract Airdrop"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Airdrop_$4866",
																					"typeString": "contract Airdrop"
																				}
																			],
																			"id": 4757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8969:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 4756,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8969:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 4759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8969:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 4754,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4347,
																		"src": "8953:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 4755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8959:9:12",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "8953:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 4760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8953:30:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4761,
																	"name": "tokensToDistribute",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4690,
																	"src": "8987:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 4762,
																	"name": "feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4668,
																	"src": "9008:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8987:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8953:64:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e636520696e20636f6e7472616374",
															"id": 4765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9019:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13",
																"typeString": "literal_string \"Insufficient token balance in contract\""
															},
															"value": "Insufficient token balance in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e390cd67d6ce01771cc4e4628f327a71fccd54886099705171d2231640f9ef13",
																"typeString": "literal_string \"Insufficient token balance in contract\""
															}
														],
														"id": 4753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8945:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8945:115:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4767,
												"nodeType": "ExpressionStatement",
												"src": "8945:115:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4771,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "9100:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9100:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4773,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4668,
															"src": "9109:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4768,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4347,
															"src": "9081:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 4770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9087:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "9081:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 4774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9081:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4775,
												"nodeType": "ExpressionStatement",
												"src": "9081:38:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9150:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9154:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9150:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4779,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "9162:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9162:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4781,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4668,
															"src": "9171:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4776,
														"name": "AirdropFeePaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4407,
														"src": "9135:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 4782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9135:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4783,
												"nodeType": "EmitStatement",
												"src": "9130:51:12"
											},
											{
												"expression": {
													"id": 4786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4784,
														"name": "tokensDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4361,
														"src": "9194:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4785,
														"name": "tokensToDistribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4690,
														"src": "9215:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9194:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4787,
												"nodeType": "ExpressionStatement",
												"src": "9194:39:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4788,
														"name": "_referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4630,
														"src": "9250:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9271:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9263:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9263:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 4792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9263:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9250:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4802,
												"nodeType": "IfStatement",
												"src": "9246:106:12",
												"trueBody": {
													"id": 4801,
													"nodeType": "Block",
													"src": "9275:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 4797,
																		"name": "_referrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4630,
																		"src": "9309:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 4798,
																		"name": "referralBonusAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4351,
																		"src": "9320:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 4794,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4347,
																		"src": "9290:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 4796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9296:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "9290:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 4799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9290:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4800,
															"nodeType": "ExpressionStatement",
															"src": "9290:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4806,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9391:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9395:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9391:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4808,
															"name": "finalAirdropAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4684,
															"src": "9403:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4803,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4347,
															"src": "9372:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 4805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9378:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "9372:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 4809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9372:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4810,
												"nodeType": "ExpressionStatement",
												"src": "9372:50:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4812,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9455:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9459:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9455:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4814,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4630,
															"src": "9467:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4811,
														"name": "AirdropClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4377,
														"src": "9440:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 4815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9440:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4816,
												"nodeType": "EmitStatement",
												"src": "9435:42:12"
											}
										]
									},
									"documentation": {
										"id": 4628,
										"nodeType": "StructuredDocumentation",
										"src": "6807:243:12",
										"text": " @dev A function for a user to claim their airdrop.\n This function also handles the referral bonus and a configurable fee.\n @param _referrer The address of the referrer. Use address(0) if there is no referrer."
									},
									"functionSelector": "65f8c6c5",
									"id": 4818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4633,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4632,
												"name": "nonReentrant",
												"nameLocations": [
													"7104:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 894,
												"src": "7104:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7104:12:12"
										}
									],
									"name": "claimAirdrop",
									"nameLocation": "7065:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4630,
												"mutability": "mutable",
												"name": "_referrer",
												"nameLocation": "7086:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4818,
												"src": "7078:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7078:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7077:19:12"
									},
									"returnParameters": {
										"id": 4634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7117:0:12"
									},
									"scope": 4866,
									"src": "7056:2429:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4864,
										"nodeType": "Block",
										"src": "9799:269:12",
										"statements": [
											{
												"assignments": [
													4828
												],
												"declarations": [
													{
														"constant": false,
														"id": 4828,
														"mutability": "mutable",
														"name": "_token",
														"nameLocation": "9817:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 4864,
														"src": "9810:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 4827,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4826,
																"name": "IERC20",
																"nameLocations": [
																	"9810:6:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 315,
																"src": "9810:6:12"
															},
															"referencedDeclaration": 315,
															"src": "9810:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4832,
												"initialValue": {
													"arguments": [
														{
															"id": 4830,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4821,
															"src": "9833:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4829,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "9826:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 4831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9826:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9810:37:12"
											},
											{
												"assignments": [
													4834
												],
												"declarations": [
													{
														"constant": false,
														"id": 4834,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "9866:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 4864,
														"src": "9858:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9858:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4842,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4839,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9901:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Airdrop_$4866",
																		"typeString": "contract Airdrop"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Airdrop_$4866",
																		"typeString": "contract Airdrop"
																	}
																],
																"id": 4838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9893:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9893:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9893:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 4835,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4828,
															"src": "9876:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 4836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9883:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "9876:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 4841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9876:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9858:49:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4844,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4834,
																"src": "9926:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9926:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 4847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9939:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 4843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9918:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4849,
												"nodeType": "ExpressionStatement",
												"src": "9918:45:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4853,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "9994:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9994:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4855,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4834,
															"src": "10003:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4850,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4828,
															"src": "9974:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 4852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9981:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "9974:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 4856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9974:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4857,
												"nodeType": "ExpressionStatement",
												"src": "9974:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4859,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "10043:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10043:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4861,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4834,
															"src": "10052:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4858,
														"name": "TokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4387,
														"src": "10027:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10027:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4863,
												"nodeType": "EmitStatement",
												"src": "10022:38:12"
											}
										]
									},
									"documentation": {
										"id": 4819,
										"nodeType": "StructuredDocumentation",
										"src": "9493:236:12",
										"text": " @dev Allows the owner to withdraw any remaining tokens from the contract.\n This is useful after the airdrop has concluded or in an emergency.\n @param _tokenAddress The address of the token to withdraw."
									},
									"functionSelector": "49df728c",
									"id": 4865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4823,
												"name": "onlyOwner",
												"nameLocations": [
													"9789:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9789:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9789:9:12"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "9744:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4821,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "9767:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4865,
												"src": "9759:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9758:23:12"
									},
									"returnParameters": {
										"id": 4825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:12"
									},
									"scope": 4866,
									"src": "9735:333:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4867,
							"src": "561:9510:12",
							"usedErrors": [
								13,
								18,
								327,
								875
							],
							"usedEvents": [
								24,
								4377,
								4379,
								4381,
								4387,
								4391,
								4395,
								4399,
								4407,
								4411,
								4415,
								4421
							]
						}
					],
					"src": "33:10040:12"
				},
				"id": 12
			}
		}
	}
}