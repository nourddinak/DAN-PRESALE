{
	"id": "bc173aee88325b9f043f82e608d07518",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"danpresale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\n\r\n/**\r\n * @title PreSale\r\n * @dev This contract manages a token presale on the Polygon network.\r\n * It allows users to purchase a specified ERC20 token using MATIC.\r\n * The contract owner has full control over the presale status, pricing,\r\n * and fund management.\r\n *\r\n * It is highly recommended to test this contract on a testnet (like Polygon Mumbai)\r\n * before deploying to the mainnet.\r\n */\r\ncontract PreSale is Ownable, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // --- State Variables ---\r\n\r\n    // The address of the token being sold in the presale.\r\n    // User's token from the request: 0x46fc3e44a9dbbbb6b9abcd9c55b7f91037f16cffd\r\n    IERC20Metadata public immutable token;\r\n\r\n    // The price of the token, represented as the number of tokens\r\n    // a user receives for 1 MATIC.\r\n    uint256 public tokensPerMatic;\r\n\r\n    // A flag to indicate whether the presale is currently active.\r\n    bool public preSaleActive;\r\n\r\n    // Total amount of MATIC raised during the presale.\r\n    uint256 public totalMaticRaised;\r\n\r\n    // A mapping to track the amount of tokens sold to each address.\r\n    mapping(address => uint256) public tokensSoldTo;\r\n\r\n    // Minimum and maximum MATIC amount per single buy transaction.\r\n    uint256 public minMaticBuy;\r\n    uint256 public maxMaticBuy;\r\n\r\n    // --- Events ---\r\n\r\n    event PresaleStarted();\r\n    event PresaleEnded();\r\n    event TokenPriceUpdated(uint256 newPrice);\r\n    event TokensPurchased(address indexed buyer, uint256 maticAmount, uint256 tokenAmount);\r\n    event MaticWithdrawn(address indexed to, uint256 amount);\r\n    event UnsoldTokensWithdrawn(uint256 amount);\r\n    event BuyLimitsUpdated(uint256 newMin, uint256 newMax);\r\n\r\n    /**\r\n     * @dev The constructor initializes the contract with the token address,\r\n     * an initial price, and buy limits.\r\n     * @param _tokenAddress The address of the ERC20 token to be sold.\r\n     * @param _tokensPerMatic The initial price (tokens per 1 MATIC).\r\n     * @param _minMaticBuy The minimum amount of MATIC for a purchase.\r\n     * @param _maxMaticBuy The maximum amount of MATIC for a purchase.\r\n     */\r\n    constructor(\r\n        address _tokenAddress,\r\n        uint256 _tokensPerMatic,\r\n        uint256 _minMaticBuy,\r\n        uint256 _maxMaticBuy\r\n    ) Ownable(msg.sender) {\r\n        token = IERC20Metadata(_tokenAddress);\r\n        tokensPerMatic = _tokensPerMatic;\r\n        minMaticBuy = _minMaticBuy;\r\n        maxMaticBuy = _maxMaticBuy;\r\n        preSaleActive = false;\r\n    }\r\n\r\n    // --- Public Functions ---\r\n\r\n    /**\r\n     * @dev Allows users to purchase tokens using MATIC.\r\n     * The `payable` modifier makes this function able to receive MATIC.\r\n     * The `nonReentrant` modifier prevents reentrancy attacks.\r\n     * Note: This function assumes the incoming MATIC has 18 decimals.\r\n     */\r\n    function buyTokens() external payable nonReentrant {\r\n        // Ensure the presale is active\r\n        require(preSaleActive, \"Presale is not active\");\r\n\r\n        // Enforce buy limits\r\n        require(msg.value >= minMaticBuy, \"MATIC amount is below the minimum buy limit\");\r\n        require(msg.value <= maxMaticBuy, \"MATIC amount exceeds the maximum buy limit\");\r\n\r\n        // Calculate the amount of tokens to send to the buyer, handling token decimals.\r\n        // We use IERC20Metadata to get the token's decimals.\r\n        uint256 tokenAmount = (msg.value * tokensPerMatic * (10 ** token.decimals())) / (10 ** 18);\r\n\r\n        // Ensure the contract has enough tokens to fulfill the order.\r\n        require(IERC20(address(token)).balanceOf(address(this)) >= tokenAmount, \"Not enough tokens available for sale\");\r\n\r\n        // Record the MATIC raised and tokens sold\r\n        totalMaticRaised += msg.value;\r\n        tokensSoldTo[msg.sender] += tokenAmount;\r\n\r\n        // Transfer the tokens to the buyer.\r\n        IERC20(address(token)).safeTransfer(msg.sender, tokenAmount);\r\n\r\n        // Emit an event to log the purchase.\r\n        emit TokensPurchased(msg.sender, msg.value, tokenAmount);\r\n    }\r\n\r\n    // --- Owner-only Functions ---\r\n\r\n    /**\r\n     * @dev Allows the owner to start the presale.\r\n     * Only callable if the presale is not already active.\r\n     */\r\n    function startPresale() external onlyOwner {\r\n        require(!preSaleActive, \"Presale is already active\");\r\n        preSaleActive = true;\r\n        emit PresaleStarted();\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to stop the presale.\r\n     * Only callable if the presale is active.\r\n     */\r\n    function stopPresale() external onlyOwner {\r\n        require(preSaleActive, \"Presale is not active\");\r\n        preSaleActive = false;\r\n        emit PresaleEnded();\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to update the token price.\r\n     * @param _newPrice The new price, representing tokens per 1 MATIC.\r\n     */\r\n    function setTokenPrice(uint256 _newPrice) external onlyOwner {\r\n        tokensPerMatic = _newPrice;\r\n        emit TokenPriceUpdated(_newPrice);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to set the minimum and maximum buy limits.\r\n     * @param _newMin The new minimum MATIC buy limit.\r\n     * @param _newMax The new maximum MATIC buy limit.\r\n     */\r\n    function setBuyLimits(uint256 _newMin, uint256 _newMax) external onlyOwner {\r\n        require(_newMin <= _newMax, \"Min buy must be less than or equal to max buy\");\r\n        minMaticBuy = _newMin;\r\n        maxMaticBuy = _newMax;\r\n        emit BuyLimitsUpdated(_newMin, _newMax);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to withdraw the collected MATIC.\r\n     * This function transfers the entire MATIC balance of the contract to the owner.\r\n     */\r\n    function withdrawFunds() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"No MATIC to withdraw\");\r\n\r\n        // Use a low-level call to handle the MATIC transfer safely.\r\n        (bool sent,) = payable(owner()).call{value: balance}(\"\");\r\n        require(sent, \"Failed to withdraw MATIC\");\r\n        emit MaticWithdrawn(owner(), balance);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to withdraw any unsold tokens from the contract.\r\n     * This can be used after the presale has ended.\r\n     */\r\n    function withdrawUnsoldTokens() external onlyOwner {\r\n        uint256 tokenBalance = IERC20(address(token)).balanceOf(address(this));\r\n        require(tokenBalance > 0, \"No tokens to withdraw\");\r\n\r\n        IERC20(address(token)).safeTransfer(owner(), tokenBalance);\r\n        emit UnsoldTokensWithdrawn(tokenBalance);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"danpresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"danpresale.sol": {
				"PreSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokensPerMatic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minMaticBuy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxMaticBuy",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMin",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMax",
									"type": "uint256"
								}
							],
							"name": "BuyLimitsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "MaticWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "TokenPriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maticAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnsoldTokensWithdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxMaticBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minMaticBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newMax",
									"type": "uint256"
								}
							],
							"name": "setBuyLimits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPrice",
									"type": "uint256"
								}
							],
							"name": "setTokenPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20Metadata",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensPerMatic",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokensSoldTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalMaticRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawUnsoldTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract manages a token presale on the Polygon network. It allows users to purchase a specified ERC20 token using MATIC. The contract owner has full control over the presale status, pricing, and fund management. It is highly recommended to test this contract on a testnet (like Polygon Mumbai) before deploying to the mainnet.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"buyTokens()": {
								"details": "Allows users to purchase tokens using MATIC. The `payable` modifier makes this function able to receive MATIC. The `nonReentrant` modifier prevents reentrancy attacks. Note: This function assumes the incoming MATIC has 18 decimals."
							},
							"constructor": {
								"details": "The constructor initializes the contract with the token address, an initial price, and buy limits.",
								"params": {
									"_maxMaticBuy": "The maximum amount of MATIC for a purchase.",
									"_minMaticBuy": "The minimum amount of MATIC for a purchase.",
									"_tokenAddress": "The address of the ERC20 token to be sold.",
									"_tokensPerMatic": "The initial price (tokens per 1 MATIC)."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setBuyLimits(uint256,uint256)": {
								"details": "Allows the owner to set the minimum and maximum buy limits.",
								"params": {
									"_newMax": "The new maximum MATIC buy limit.",
									"_newMin": "The new minimum MATIC buy limit."
								}
							},
							"setTokenPrice(uint256)": {
								"details": "Allows the owner to update the token price.",
								"params": {
									"_newPrice": "The new price, representing tokens per 1 MATIC."
								}
							},
							"startPresale()": {
								"details": "Allows the owner to start the presale. Only callable if the presale is not already active."
							},
							"stopPresale()": {
								"details": "Allows the owner to stop the presale. Only callable if the presale is active."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawFunds()": {
								"details": "Allows the owner to withdraw the collected MATIC. This function transfers the entire MATIC balance of the contract to the owner."
							},
							"withdrawUnsoldTokens()": {
								"details": "Allows the owner to withdraw any unsold tokens from the contract. This can be used after the presale has ended."
							}
						},
						"title": "PreSale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"danpresale.sol\":778:6928  contract PreSale is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"danpresale.sol\":2516:2888  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"danpresale.sol\":2671:2681  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"danpresale.sol\":2717:2730  _tokenAddress */\n  dup4\n    /* \"danpresale.sol\":2694:2731  token = IERC20Metadata(_tokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"danpresale.sol\":2759:2774  _tokensPerMatic */\n  dup3\n    /* \"danpresale.sol\":2742:2756  tokensPerMatic */\n  0x02\n    /* \"danpresale.sol\":2742:2774  tokensPerMatic = _tokensPerMatic */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"danpresale.sol\":2799:2811  _minMaticBuy */\n  dup2\n    /* \"danpresale.sol\":2785:2796  minMaticBuy */\n  0x06\n    /* \"danpresale.sol\":2785:2811  minMaticBuy = _minMaticBuy */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"danpresale.sol\":2836:2848  _maxMaticBuy */\n  dup1\n    /* \"danpresale.sol\":2822:2833  maxMaticBuy */\n  0x07\n    /* \"danpresale.sol\":2822:2848  maxMaticBuy = _maxMaticBuy */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"danpresale.sol\":2875:2880  false */\n  0x00\n    /* \"danpresale.sol\":2859:2872  preSaleActive */\n  0x03\n  0x00\n    /* \"danpresale.sol\":2859:2880  preSaleActive = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"danpresale.sol\":2516:2888  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"danpresale.sol\":778:6928  contract PreSale is Ownable, ReentrancyGuard {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_34\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_36\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_37:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_39\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_24:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_25:\n    /* \"#utility.yul\":1001:1025   */\n  tag_42\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_43:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_26:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_45\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  0x00\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  0x00\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_48\n  tag_18\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1343:1463   */\ntag_47:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_49\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_23\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_50\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_26\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_51\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_26\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_52\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2031:2149   */\ntag_27:\n    /* \"#utility.yul\":2118:2142   */\n  tag_54\n    /* \"#utility.yul\":2136:2141   */\n  dup2\n    /* \"#utility.yul\":2118:2142   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2113:2116   */\n  dup3\n    /* \"#utility.yul\":2106:2143   */\n  mstore\n    /* \"#utility.yul\":2031:2149   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2155:2377   */\ntag_10:\n    /* \"#utility.yul\":2248:2252   */\n  0x00\n    /* \"#utility.yul\":2286:2288   */\n  0x20\n    /* \"#utility.yul\":2275:2284   */\n  dup3\n    /* \"#utility.yul\":2271:2289   */\n  add\n    /* \"#utility.yul\":2263:2289   */\n  swap1\n  pop\n    /* \"#utility.yul\":2299:2370   */\n  tag_56\n    /* \"#utility.yul\":2367:2368   */\n  0x00\n    /* \"#utility.yul\":2356:2365   */\n  dup4\n    /* \"#utility.yul\":2352:2369   */\n  add\n    /* \"#utility.yul\":2343:2349   */\n  dup5\n    /* \"#utility.yul\":2299:2370   */\n  tag_27\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2155:2377   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"danpresale.sol\":778:6928  contract PreSale is Ownable, ReentrancyGuard {... */\ntag_15:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"danpresale.sol\":778:6928  contract PreSale is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc8bdbfb6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc8bdbfb6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd076c608\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x84494708\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc43a0135\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x22c6baf6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x22c6baf6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x464695b3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6a61e5fc\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x04c98b2b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0da2c5f0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x125b8b78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1ad2ad1a\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"danpresale.sol\":4598:4775  function startPresale() external onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"danpresale.sol\":5587:5871  function setBuyLimits(uint256 _newMin, uint256 _newMax) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"danpresale.sol\":1390:1421  uint256 public totalMaticRaised */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":4900:5070  function stopPresale() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"danpresale.sol\":1625:1651  uint256 public minMaticBuy */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":6047:6443  function withdrawFunds() external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"danpresale.sol\":1500:1547  mapping(address => uint256) public tokensSoldTo */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":5226:5376  function setTokenPrice(uint256 _newPrice) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"danpresale.sol\":1299:1324  bool public preSaleActive */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      revert(0x00, 0x00)\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":1658:1684  uint256 public maxMaticBuy */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":6602:6925  function withdrawUnsoldTokens() external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"danpresale.sol\":1193:1222  uint256 public tokensPerMatic */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":3218:4421  function buyTokens() external payable nonReentrant {... */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"danpresale.sol\":1042:1079  IERC20Metadata public immutable token */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":4598:4775  function startPresale() external onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_92:\n        /* \"danpresale.sol\":4661:4674  preSaleActive */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"danpresale.sol\":4660:4674  !preSaleActive */\n      iszero\n        /* \"danpresale.sol\":4652:4704  require(!preSaleActive, \"Presale is already active\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"danpresale.sol\":4731:4735  true */\n      0x01\n        /* \"danpresale.sol\":4715:4728  preSaleActive */\n      0x03\n      0x00\n        /* \"danpresale.sol\":4715:4735  preSaleActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":4751:4767  PresaleStarted() */\n      0x17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":4598:4775  function startPresale() external onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":5587:5871  function setBuyLimits(uint256 _newMin, uint256 _newMax) external onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_99:\n        /* \"danpresale.sol\":5692:5699  _newMax */\n      dup1\n        /* \"danpresale.sol\":5681:5688  _newMin */\n      dup3\n        /* \"danpresale.sol\":5681:5699  _newMin <= _newMax */\n      gt\n      iszero\n        /* \"danpresale.sol\":5673:5749  require(_newMin <= _newMax, \"Min buy must be less than or equal to max buy\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"danpresale.sol\":5774:5781  _newMin */\n      dup2\n        /* \"danpresale.sol\":5760:5771  minMaticBuy */\n      0x06\n        /* \"danpresale.sol\":5760:5781  minMaticBuy = _newMin */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":5806:5813  _newMax */\n      dup1\n        /* \"danpresale.sol\":5792:5803  maxMaticBuy */\n      0x07\n        /* \"danpresale.sol\":5792:5813  maxMaticBuy = _newMax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":5829:5863  BuyLimitsUpdated(_newMin, _newMax) */\n      0x7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b\n        /* \"danpresale.sol\":5846:5853  _newMin */\n      dup3\n        /* \"danpresale.sol\":5855:5862  _newMax */\n      dup3\n        /* \"danpresale.sol\":5829:5863  BuyLimitsUpdated(_newMin, _newMax) */\n      mload(0x40)\n      tag_104\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":5587:5871  function setBuyLimits(uint256 _newMin, uint256 _newMax) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"danpresale.sol\":1390:1421  uint256 public totalMaticRaised */\n    tag_32:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":4900:5070  function stopPresale() external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"danpresale.sol\":4961:4974  preSaleActive */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"danpresale.sol\":4953:5000  require(preSaleActive, \"Presale is not active\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"danpresale.sol\":5027:5032  false */\n      0x00\n        /* \"danpresale.sol\":5011:5024  preSaleActive */\n      0x03\n      0x00\n        /* \"danpresale.sol\":5011:5032  preSaleActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":5048:5062  PresaleEnded() */\n      0x1eb1561f8507eb9bc6988331f66f369e75710f2b4b678ad5b4a52454b6636f5f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":4900:5070  function stopPresale() external onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":1625:1651  uint256 public minMaticBuy */\n    tag_40:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":6047:6443  function withdrawFunds() external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"danpresale.sol\":6102:6117  uint256 balance */\n      0x00\n        /* \"danpresale.sol\":6120:6141  address(this).balance */\n      selfbalance\n        /* \"danpresale.sol\":6102:6141  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"danpresale.sol\":6170:6171  0 */\n      0x00\n        /* \"danpresale.sol\":6160:6167  balance */\n      dup2\n        /* \"danpresale.sol\":6160:6171  balance > 0 */\n      gt\n        /* \"danpresale.sol\":6152:6196  require(balance > 0, \"No MATIC to withdraw\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"danpresale.sol\":6280:6289  bool sent */\n      0x00\n        /* \"danpresale.sol\":6302:6309  owner() */\n      tag_118\n        /* \"danpresale.sol\":6302:6307  owner */\n      tag_66\n        /* \"danpresale.sol\":6302:6309  owner() */\n      jump\t// in\n    tag_118:\n        /* \"danpresale.sol\":6294:6315  payable(owner()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":6323:6330  balance */\n      dup3\n        /* \"danpresale.sol\":6294:6335  payable(owner()).call{value: balance}(\"\") */\n      mload(0x40)\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_123\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_122)\n    tag_123:\n      0x60\n      swap2\n      pop\n    tag_122:\n      pop\n        /* \"danpresale.sol\":6279:6335  (bool sent,) = payable(owner()).call{value: balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"danpresale.sol\":6354:6358  sent */\n      dup1\n        /* \"danpresale.sol\":6346:6387  require(sent, \"Failed to withdraw MATIC\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"danpresale.sol\":6418:6425  owner() */\n      tag_127\n        /* \"danpresale.sol\":6418:6423  owner */\n      tag_66\n        /* \"danpresale.sol\":6418:6425  owner() */\n      jump\t// in\n    tag_127:\n        /* \"danpresale.sol\":6403:6435  MaticWithdrawn(owner(), balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4e5abb9fe9c3cb072c5f05c90db4208588b64cedbfa36e6643e38f40cd82104c\n        /* \"danpresale.sol\":6427:6434  balance */\n      dup4\n        /* \"danpresale.sol\":6403:6435  MaticWithdrawn(owner(), balance) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"danpresale.sol\":6091:6443  {... */\n      pop\n      pop\n        /* \"danpresale.sol\":6047:6443  function withdrawFunds() external onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":1500:1547  mapping(address => uint256) public tokensSoldTo */\n    tag_49:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":5226:5376  function setTokenPrice(uint256 _newPrice) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"danpresale.sol\":5315:5324  _newPrice */\n      dup1\n        /* \"danpresale.sol\":5298:5312  tokensPerMatic */\n      0x02\n        /* \"danpresale.sol\":5298:5324  tokensPerMatic = _newPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":5340:5368  TokenPriceUpdated(_newPrice) */\n      0x6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e93976890\n        /* \"danpresale.sol\":5358:5367  _newPrice */\n      dup2\n        /* \"danpresale.sol\":5340:5368  TokenPriceUpdated(_newPrice) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":5226:5376  function setTokenPrice(uint256 _newPrice) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":1299:1324  bool public preSaleActive */\n    tag_61:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"danpresale.sol\":1658:1684  uint256 public maxMaticBuy */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":6602:6925  function withdrawUnsoldTokens() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"danpresale.sol\":6664:6684  uint256 tokenBalance */\n      0x00\n        /* \"danpresale.sol\":6702:6707  token */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"danpresale.sol\":6687:6719  IERC20(address(token)).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"danpresale.sol\":6728:6732  this */\n      address\n        /* \"danpresale.sol\":6687:6734  IERC20(address(token)).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"danpresale.sol\":6664:6734  uint256 tokenBalance = IERC20(address(token)).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"danpresale.sol\":6768:6769  0 */\n      0x00\n        /* \"danpresale.sol\":6753:6765  tokenBalance */\n      dup2\n        /* \"danpresale.sol\":6753:6769  tokenBalance > 0 */\n      gt\n        /* \"danpresale.sol\":6745:6795  require(tokenBalance > 0, \"No tokens to withdraw\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"danpresale.sol\":6808:6866  IERC20(address(token)).safeTransfer(owner(), tokenBalance) */\n      tag_150\n        /* \"danpresale.sol\":6844:6851  owner() */\n      tag_151\n        /* \"danpresale.sol\":6844:6849  owner */\n      tag_66\n        /* \"danpresale.sol\":6844:6851  owner() */\n      jump\t// in\n    tag_151:\n        /* \"danpresale.sol\":6853:6865  tokenBalance */\n      dup3\n        /* \"danpresale.sol\":6823:6828  token */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"danpresale.sol\":6808:6843  IERC20(address(token)).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_152\n      swap1\n        /* \"danpresale.sol\":6808:6866  IERC20(address(token)).safeTransfer(owner(), tokenBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"danpresale.sol\":6882:6917  UnsoldTokensWithdrawn(tokenBalance) */\n      0x7c885dc2bd1a0b45fe4cf249833d28907319b5b702b3496d49dd231cee285025\n        /* \"danpresale.sol\":6904:6916  tokenBalance */\n      dup2\n        /* \"danpresale.sol\":6882:6917  UnsoldTokensWithdrawn(tokenBalance) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":6653:6925  {... */\n      pop\n        /* \"danpresale.sol\":6602:6925  function withdrawUnsoldTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":1193:1222  uint256 public tokensPerMatic */\n    tag_78:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":3218:4421  function buyTokens() external payable nonReentrant {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_155:\n        /* \"danpresale.sol\":3329:3342  preSaleActive */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"danpresale.sol\":3321:3368  require(preSaleActive, \"Presale is not active\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_111\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"danpresale.sol\":3433:3444  minMaticBuy */\n      sload(0x06)\n        /* \"danpresale.sol\":3420:3429  msg.value */\n      callvalue\n        /* \"danpresale.sol\":3420:3444  msg.value >= minMaticBuy */\n      lt\n      iszero\n        /* \"danpresale.sol\":3412:3492  require(msg.value >= minMaticBuy, \"MATIC amount is below the minimum buy limit\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"danpresale.sol\":3524:3535  maxMaticBuy */\n      sload(0x07)\n        /* \"danpresale.sol\":3511:3520  msg.value */\n      callvalue\n        /* \"danpresale.sol\":3511:3535  msg.value <= maxMaticBuy */\n      gt\n      iszero\n        /* \"danpresale.sol\":3503:3582  require(msg.value <= maxMaticBuy, \"MATIC amount exceeds the maximum buy limit\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"danpresale.sol\":3748:3767  uint256 tokenAmount */\n      0x00\n        /* \"danpresale.sol\":3829:3837  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"danpresale.sol\":3807:3812  token */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"danpresale.sol\":3807:3821  token.decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"danpresale.sol\":3807:3823  token.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"danpresale.sol\":3801:3803  10 */\n      0x0a\n        /* \"danpresale.sol\":3801:3823  10 ** token.decimals() */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"danpresale.sol\":3783:3797  tokensPerMatic */\n      sload(0x02)\n        /* \"danpresale.sol\":3771:3780  msg.value */\n      callvalue\n        /* \"danpresale.sol\":3771:3797  msg.value * tokensPerMatic */\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"danpresale.sol\":3771:3824  msg.value * tokensPerMatic * (10 ** token.decimals()) */\n      tag_174\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_174:\n        /* \"danpresale.sol\":3770:3838  (msg.value * tokensPerMatic * (10 ** token.decimals())) / (10 ** 18) */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"danpresale.sol\":3748:3838  uint256 tokenAmount = (msg.value * tokensPerMatic * (10 ** token.decimals())) / (10 ** 18) */\n      swap1\n      pop\n        /* \"danpresale.sol\":3982:3993  tokenAmount */\n      dup1\n        /* \"danpresale.sol\":3946:3951  token */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"danpresale.sol\":3931:3963  IERC20(address(token)).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"danpresale.sol\":3972:3976  this */\n      address\n        /* \"danpresale.sol\":3931:3978  IERC20(address(token)).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_177:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_180:\n        /* \"danpresale.sol\":3931:3993  IERC20(address(token)).balanceOf(address(this)) >= tokenAmount */\n      lt\n      iszero\n        /* \"danpresale.sol\":3923:4034  require(IERC20(address(token)).balanceOf(address(this)) >= tokenAmount, \"Not enough tokens available for sale\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"danpresale.sol\":4119:4128  msg.value */\n      callvalue\n        /* \"danpresale.sol\":4099:4115  totalMaticRaised */\n      0x04\n      0x00\n        /* \"danpresale.sol\":4099:4128  totalMaticRaised += msg.value */\n      dup3\n      dup3\n      sload\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":4167:4178  tokenAmount */\n      dup1\n        /* \"danpresale.sol\":4139:4151  tokensSoldTo */\n      0x05\n        /* \"danpresale.sol\":4139:4163  tokensSoldTo[msg.sender] */\n      0x00\n        /* \"danpresale.sol\":4152:4162  msg.sender */\n      caller\n        /* \"danpresale.sol\":4139:4163  tokensSoldTo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"danpresale.sol\":4139:4178  tokensSoldTo[msg.sender] += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_186\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_186:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":4237:4297  IERC20(address(token)).safeTransfer(msg.sender, tokenAmount) */\n      tag_187\n        /* \"danpresale.sol\":4273:4283  msg.sender */\n      caller\n        /* \"danpresale.sol\":4285:4296  tokenAmount */\n      dup3\n        /* \"danpresale.sol\":4252:4257  token */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"danpresale.sol\":4237:4272  IERC20(address(token)).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_152\n      swap1\n        /* \"danpresale.sol\":4237:4297  IERC20(address(token)).safeTransfer(msg.sender, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"danpresale.sol\":4378:4388  msg.sender */\n      caller\n        /* \"danpresale.sol\":4362:4413  TokensPurchased(msg.sender, msg.value, tokenAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33\n        /* \"danpresale.sol\":4390:4399  msg.value */\n      callvalue\n        /* \"danpresale.sol\":4401:4412  tokenAmount */\n      dup4\n        /* \"danpresale.sol\":4362:4413  TokensPurchased(msg.sender, msg.value, tokenAmount) */\n      mload(0x40)\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"danpresale.sol\":3269:4421  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_190\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_189:\n        /* \"danpresale.sol\":3218:4421  function buyTokens() external payable nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"danpresale.sol\":1042:1079  IERC20Metadata public immutable token */\n    tag_88:\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_207\n      swap3\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_219)\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_223:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_225:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_226:\n        /* \"#utility.yul\":490:514   */\n      tag_280\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_225\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_281:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_227:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_283\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_226\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_28:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      0x00\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_286\n      tag_223\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":783:902   */\n    tag_285:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_287\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_227\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_288\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_227\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1288   */\n    tag_228:\n        /* \"#utility.yul\":1257:1281   */\n      tag_290\n        /* \"#utility.yul\":1275:1280   */\n      dup2\n        /* \"#utility.yul\":1257:1281   */\n      tag_225\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1252:1255   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      mstore\n        /* \"#utility.yul\":1170:1288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1516   */\n    tag_34:\n        /* \"#utility.yul\":1387:1391   */\n      0x00\n        /* \"#utility.yul\":1425:1427   */\n      0x20\n        /* \"#utility.yul\":1414:1423   */\n      dup3\n        /* \"#utility.yul\":1410:1428   */\n      add\n        /* \"#utility.yul\":1402:1428   */\n      swap1\n      pop\n        /* \"#utility.yul\":1438:1509   */\n      tag_292\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1495:1504   */\n      dup4\n        /* \"#utility.yul\":1491:1508   */\n      add\n        /* \"#utility.yul\":1482:1488   */\n      dup5\n        /* \"#utility.yul\":1438:1509   */\n      tag_228\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":1294:1516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1648   */\n    tag_229:\n        /* \"#utility.yul\":1559:1566   */\n      0x00\n        /* \"#utility.yul\":1599:1641   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1592:1597   */\n      dup3\n        /* \"#utility.yul\":1588:1642   */\n      and\n        /* \"#utility.yul\":1577:1642   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1750   */\n    tag_230:\n        /* \"#utility.yul\":1691:1698   */\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_295\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_229\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1709:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1654:1750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1878   */\n    tag_231:\n        /* \"#utility.yul\":1829:1853   */\n      tag_297\n        /* \"#utility.yul\":1847:1852   */\n      dup2\n        /* \"#utility.yul\":1829:1853   */\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1822:1827   */\n      dup2\n        /* \"#utility.yul\":1819:1854   */\n      eq\n        /* \"#utility.yul\":1809:1872   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1868:1869   */\n      0x00\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1858:1870   */\n      revert\n        /* \"#utility.yul\":1809:1872   */\n    tag_298:\n        /* \"#utility.yul\":1756:1878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2023   */\n    tag_232:\n        /* \"#utility.yul\":1930:1935   */\n      0x00\n        /* \"#utility.yul\":1968:1974   */\n      dup2\n        /* \"#utility.yul\":1955:1975   */\n      calldataload\n        /* \"#utility.yul\":1946:1975   */\n      swap1\n      pop\n        /* \"#utility.yul\":1984:2017   */\n      tag_300\n        /* \"#utility.yul\":2011:2016   */\n      dup2\n        /* \"#utility.yul\":1984:2017   */\n      tag_231\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1884:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_48:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_303\n      tag_223\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2105:2224   */\n    tag_302:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_304\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_232\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_54:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_307\n      tag_223\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2440:2559   */\n    tag_306:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_308\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_227\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2789   */\n    tag_233:\n        /* \"#utility.yul\":2733:2740   */\n      0x00\n        /* \"#utility.yul\":2776:2781   */\n      dup2\n        /* \"#utility.yul\":2769:2782   */\n      iszero\n        /* \"#utility.yul\":2762:2783   */\n      iszero\n        /* \"#utility.yul\":2751:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2904   */\n    tag_234:\n        /* \"#utility.yul\":2876:2897   */\n      tag_311\n        /* \"#utility.yul\":2891:2896   */\n      dup2\n        /* \"#utility.yul\":2876:2897   */\n      tag_233\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2871:2874   */\n      dup3\n        /* \"#utility.yul\":2864:2898   */\n      mstore\n        /* \"#utility.yul\":2795:2904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2910:3120   */\n    tag_63:\n        /* \"#utility.yul\":2997:3001   */\n      0x00\n        /* \"#utility.yul\":3035:3037   */\n      0x20\n        /* \"#utility.yul\":3024:3033   */\n      dup3\n        /* \"#utility.yul\":3020:3038   */\n      add\n        /* \"#utility.yul\":3012:3038   */\n      swap1\n      pop\n        /* \"#utility.yul\":3048:3113   */\n      tag_313\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3099:3108   */\n      dup4\n        /* \"#utility.yul\":3095:3112   */\n      add\n        /* \"#utility.yul\":3086:3092   */\n      dup5\n        /* \"#utility.yul\":3048:3113   */\n      tag_234\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2910:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3244   */\n    tag_235:\n        /* \"#utility.yul\":3213:3237   */\n      tag_315\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3213:3237   */\n      tag_230\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3201:3238   */\n      mstore\n        /* \"#utility.yul\":3126:3244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3250:3472   */\n    tag_68:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3383   */\n      0x20\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3384   */\n      add\n        /* \"#utility.yul\":3358:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3465   */\n      tag_317\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3394:3465   */\n      tag_235\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3250:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3538   */\n    tag_236:\n        /* \"#utility.yul\":3506:3509   */\n      0x00\n        /* \"#utility.yul\":3527:3532   */\n      dup2\n        /* \"#utility.yul\":3520:3532   */\n      swap1\n      pop\n        /* \"#utility.yul\":3478:3538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3544:3686   */\n    tag_237:\n        /* \"#utility.yul\":3594:3603   */\n      0x00\n        /* \"#utility.yul\":3627:3680   */\n      tag_320\n        /* \"#utility.yul\":3645:3679   */\n      tag_321\n        /* \"#utility.yul\":3654:3678   */\n      tag_322\n        /* \"#utility.yul\":3672:3677   */\n      dup5\n        /* \"#utility.yul\":3654:3678   */\n      tag_229\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3645:3679   */\n      tag_236\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3627:3680   */\n      tag_229\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3614:3680   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3692:3818   */\n    tag_238:\n        /* \"#utility.yul\":3742:3751   */\n      0x00\n        /* \"#utility.yul\":3775:3812   */\n      tag_324\n        /* \"#utility.yul\":3806:3811   */\n      dup3\n        /* \"#utility.yul\":3775:3812   */\n      tag_237\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3762:3812   */\n      swap1\n      pop\n        /* \"#utility.yul\":3692:3818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3824:3972   */\n    tag_239:\n        /* \"#utility.yul\":3896:3905   */\n      0x00\n        /* \"#utility.yul\":3929:3966   */\n      tag_326\n        /* \"#utility.yul\":3960:3965   */\n      dup3\n        /* \"#utility.yul\":3929:3966   */\n      tag_238\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3916:3966   */\n      swap1\n      pop\n        /* \"#utility.yul\":3824:3972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3978:4153   */\n    tag_240:\n        /* \"#utility.yul\":4087:4146   */\n      tag_328\n        /* \"#utility.yul\":4140:4145   */\n      dup2\n        /* \"#utility.yul\":4087:4146   */\n      tag_239\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4082:4085   */\n      dup3\n        /* \"#utility.yul\":4075:4147   */\n      mstore\n        /* \"#utility.yul\":3978:4153   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4159:4425   */\n    tag_90:\n        /* \"#utility.yul\":4274:4278   */\n      0x00\n        /* \"#utility.yul\":4312:4314   */\n      0x20\n        /* \"#utility.yul\":4301:4310   */\n      dup3\n        /* \"#utility.yul\":4297:4315   */\n      add\n        /* \"#utility.yul\":4289:4315   */\n      swap1\n      pop\n        /* \"#utility.yul\":4325:4418   */\n      tag_330\n        /* \"#utility.yul\":4415:4416   */\n      0x00\n        /* \"#utility.yul\":4404:4413   */\n      dup4\n        /* \"#utility.yul\":4400:4417   */\n      add\n        /* \"#utility.yul\":4391:4397   */\n      dup5\n        /* \"#utility.yul\":4325:4418   */\n      tag_240\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4159:4425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4431:4600   */\n    tag_241:\n        /* \"#utility.yul\":4515:4526   */\n      0x00\n        /* \"#utility.yul\":4549:4555   */\n      dup3\n        /* \"#utility.yul\":4544:4547   */\n      dup3\n        /* \"#utility.yul\":4537:4556   */\n      mstore\n        /* \"#utility.yul\":4589:4593   */\n      0x20\n        /* \"#utility.yul\":4584:4587   */\n      dup3\n        /* \"#utility.yul\":4580:4594   */\n      add\n        /* \"#utility.yul\":4565:4594   */\n      swap1\n      pop\n        /* \"#utility.yul\":4431:4600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4606:4781   */\n    tag_242:\n        /* \"#utility.yul\":4746:4773   */\n      0x50726573616c6520697320616c72656164792061637469766500000000000000\n        /* \"#utility.yul\":4742:4743   */\n      0x00\n        /* \"#utility.yul\":4734:4740   */\n      dup3\n        /* \"#utility.yul\":4730:4744   */\n      add\n        /* \"#utility.yul\":4723:4774   */\n      mstore\n        /* \"#utility.yul\":4606:4781   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4787:5153   */\n    tag_243:\n        /* \"#utility.yul\":4929:4932   */\n      0x00\n        /* \"#utility.yul\":4950:5017   */\n      tag_334\n        /* \"#utility.yul\":5014:5016   */\n      0x19\n        /* \"#utility.yul\":5009:5012   */\n      dup4\n        /* \"#utility.yul\":4950:5017   */\n      tag_241\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4943:5017   */\n      swap2\n      pop\n        /* \"#utility.yul\":5026:5119   */\n      tag_335\n        /* \"#utility.yul\":5115:5118   */\n      dup3\n        /* \"#utility.yul\":5026:5119   */\n      tag_242\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5144:5146   */\n      0x20\n        /* \"#utility.yul\":5139:5142   */\n      dup3\n        /* \"#utility.yul\":5135:5147   */\n      add\n        /* \"#utility.yul\":5128:5147   */\n      swap1\n      pop\n        /* \"#utility.yul\":4787:5153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5159:5578   */\n    tag_97:\n        /* \"#utility.yul\":5325:5329   */\n      0x00\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"#utility.yul\":5352:5361   */\n      dup3\n        /* \"#utility.yul\":5348:5366   */\n      add\n        /* \"#utility.yul\":5340:5366   */\n      swap1\n      pop\n        /* \"#utility.yul\":5412:5421   */\n      dup2\n        /* \"#utility.yul\":5406:5410   */\n      dup2\n        /* \"#utility.yul\":5402:5422   */\n      sub\n        /* \"#utility.yul\":5398:5399   */\n      0x00\n        /* \"#utility.yul\":5387:5396   */\n      dup4\n        /* \"#utility.yul\":5383:5400   */\n      add\n        /* \"#utility.yul\":5376:5423   */\n      mstore\n        /* \"#utility.yul\":5440:5571   */\n      tag_337\n        /* \"#utility.yul\":5566:5570   */\n      dup2\n        /* \"#utility.yul\":5440:5571   */\n      tag_243\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5432:5571   */\n      swap1\n      pop\n        /* \"#utility.yul\":5159:5578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5584:5816   */\n    tag_244:\n        /* \"#utility.yul\":5724:5758   */\n      0x4d696e20627579206d757374206265206c657373207468616e206f7220657175\n        /* \"#utility.yul\":5720:5721   */\n      0x00\n        /* \"#utility.yul\":5712:5718   */\n      dup3\n        /* \"#utility.yul\":5708:5722   */\n      add\n        /* \"#utility.yul\":5701:5759   */\n      mstore\n        /* \"#utility.yul\":5793:5808   */\n      0x616c20746f206d61782062757900000000000000000000000000000000000000\n        /* \"#utility.yul\":5788:5790   */\n      0x20\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5776:5791   */\n      add\n        /* \"#utility.yul\":5769:5809   */\n      mstore\n        /* \"#utility.yul\":5584:5816   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5822:6188   */\n    tag_245:\n        /* \"#utility.yul\":5964:5967   */\n      0x00\n        /* \"#utility.yul\":5985:6052   */\n      tag_340\n        /* \"#utility.yul\":6049:6051   */\n      0x2d\n        /* \"#utility.yul\":6044:6047   */\n      dup4\n        /* \"#utility.yul\":5985:6052   */\n      tag_241\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5978:6052   */\n      swap2\n      pop\n        /* \"#utility.yul\":6061:6154   */\n      tag_341\n        /* \"#utility.yul\":6150:6153   */\n      dup3\n        /* \"#utility.yul\":6061:6154   */\n      tag_244\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6179:6181   */\n      0x40\n        /* \"#utility.yul\":6174:6177   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      add\n        /* \"#utility.yul\":6163:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":5822:6188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6194:6613   */\n    tag_103:\n        /* \"#utility.yul\":6360:6364   */\n      0x00\n        /* \"#utility.yul\":6398:6400   */\n      0x20\n        /* \"#utility.yul\":6387:6396   */\n      dup3\n        /* \"#utility.yul\":6383:6401   */\n      add\n        /* \"#utility.yul\":6375:6401   */\n      swap1\n      pop\n        /* \"#utility.yul\":6447:6456   */\n      dup2\n        /* \"#utility.yul\":6441:6445   */\n      dup2\n        /* \"#utility.yul\":6437:6457   */\n      sub\n        /* \"#utility.yul\":6433:6434   */\n      0x00\n        /* \"#utility.yul\":6422:6431   */\n      dup4\n        /* \"#utility.yul\":6418:6435   */\n      add\n        /* \"#utility.yul\":6411:6458   */\n      mstore\n        /* \"#utility.yul\":6475:6606   */\n      tag_343\n        /* \"#utility.yul\":6601:6605   */\n      dup2\n        /* \"#utility.yul\":6475:6606   */\n      tag_245\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6467:6606   */\n      swap1\n      pop\n        /* \"#utility.yul\":6194:6613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6619:6951   */\n    tag_105:\n        /* \"#utility.yul\":6740:6744   */\n      0x00\n        /* \"#utility.yul\":6778:6780   */\n      0x40\n        /* \"#utility.yul\":6767:6776   */\n      dup3\n        /* \"#utility.yul\":6763:6781   */\n      add\n        /* \"#utility.yul\":6755:6781   */\n      swap1\n      pop\n        /* \"#utility.yul\":6791:6862   */\n      tag_345\n        /* \"#utility.yul\":6859:6860   */\n      0x00\n        /* \"#utility.yul\":6848:6857   */\n      dup4\n        /* \"#utility.yul\":6844:6861   */\n      add\n        /* \"#utility.yul\":6835:6841   */\n      dup6\n        /* \"#utility.yul\":6791:6862   */\n      tag_228\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6872:6944   */\n      tag_346\n        /* \"#utility.yul\":6940:6942   */\n      0x20\n        /* \"#utility.yul\":6929:6938   */\n      dup4\n        /* \"#utility.yul\":6925:6943   */\n      add\n        /* \"#utility.yul\":6916:6922   */\n      dup5\n        /* \"#utility.yul\":6872:6944   */\n      tag_228\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6619:6951   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6957:7128   */\n    tag_246:\n        /* \"#utility.yul\":7097:7120   */\n      0x50726573616c65206973206e6f74206163746976650000000000000000000000\n        /* \"#utility.yul\":7093:7094   */\n      0x00\n        /* \"#utility.yul\":7085:7091   */\n      dup3\n        /* \"#utility.yul\":7081:7095   */\n      add\n        /* \"#utility.yul\":7074:7121   */\n      mstore\n        /* \"#utility.yul\":6957:7128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7134:7500   */\n    tag_247:\n        /* \"#utility.yul\":7276:7279   */\n      0x00\n        /* \"#utility.yul\":7297:7364   */\n      tag_349\n        /* \"#utility.yul\":7361:7363   */\n      0x15\n        /* \"#utility.yul\":7356:7359   */\n      dup4\n        /* \"#utility.yul\":7297:7364   */\n      tag_241\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7290:7364   */\n      swap2\n      pop\n        /* \"#utility.yul\":7373:7466   */\n      tag_350\n        /* \"#utility.yul\":7462:7465   */\n      dup3\n        /* \"#utility.yul\":7373:7466   */\n      tag_246\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7491:7493   */\n      0x20\n        /* \"#utility.yul\":7486:7489   */\n      dup3\n        /* \"#utility.yul\":7482:7494   */\n      add\n        /* \"#utility.yul\":7475:7494   */\n      swap1\n      pop\n        /* \"#utility.yul\":7134:7500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7506:7925   */\n    tag_111:\n        /* \"#utility.yul\":7672:7676   */\n      0x00\n        /* \"#utility.yul\":7710:7712   */\n      0x20\n        /* \"#utility.yul\":7699:7708   */\n      dup3\n        /* \"#utility.yul\":7695:7713   */\n      add\n        /* \"#utility.yul\":7687:7713   */\n      swap1\n      pop\n        /* \"#utility.yul\":7759:7768   */\n      dup2\n        /* \"#utility.yul\":7753:7757   */\n      dup2\n        /* \"#utility.yul\":7749:7769   */\n      sub\n        /* \"#utility.yul\":7745:7746   */\n      0x00\n        /* \"#utility.yul\":7734:7743   */\n      dup4\n        /* \"#utility.yul\":7730:7747   */\n      add\n        /* \"#utility.yul\":7723:7770   */\n      mstore\n        /* \"#utility.yul\":7787:7918   */\n      tag_352\n        /* \"#utility.yul\":7913:7917   */\n      dup2\n        /* \"#utility.yul\":7787:7918   */\n      tag_247\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7779:7918   */\n      swap1\n      pop\n        /* \"#utility.yul\":7506:7925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7931:8101   */\n    tag_248:\n        /* \"#utility.yul\":8071:8093   */\n      0x4e6f204d4154494320746f207769746864726177000000000000000000000000\n        /* \"#utility.yul\":8067:8068   */\n      0x00\n        /* \"#utility.yul\":8059:8065   */\n      dup3\n        /* \"#utility.yul\":8055:8069   */\n      add\n        /* \"#utility.yul\":8048:8094   */\n      mstore\n        /* \"#utility.yul\":7931:8101   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8107:8473   */\n    tag_249:\n        /* \"#utility.yul\":8249:8252   */\n      0x00\n        /* \"#utility.yul\":8270:8337   */\n      tag_355\n        /* \"#utility.yul\":8334:8336   */\n      0x14\n        /* \"#utility.yul\":8329:8332   */\n      dup4\n        /* \"#utility.yul\":8270:8337   */\n      tag_241\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8263:8337   */\n      swap2\n      pop\n        /* \"#utility.yul\":8346:8439   */\n      tag_356\n        /* \"#utility.yul\":8435:8438   */\n      dup3\n        /* \"#utility.yul\":8346:8439   */\n      tag_248\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8464:8466   */\n      0x20\n        /* \"#utility.yul\":8459:8462   */\n      dup3\n        /* \"#utility.yul\":8455:8467   */\n      add\n        /* \"#utility.yul\":8448:8467   */\n      swap1\n      pop\n        /* \"#utility.yul\":8107:8473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8479:8898   */\n    tag_117:\n        /* \"#utility.yul\":8645:8649   */\n      0x00\n        /* \"#utility.yul\":8683:8685   */\n      0x20\n        /* \"#utility.yul\":8672:8681   */\n      dup3\n        /* \"#utility.yul\":8668:8686   */\n      add\n        /* \"#utility.yul\":8660:8686   */\n      swap1\n      pop\n        /* \"#utility.yul\":8732:8741   */\n      dup2\n        /* \"#utility.yul\":8726:8730   */\n      dup2\n        /* \"#utility.yul\":8722:8742   */\n      sub\n        /* \"#utility.yul\":8718:8719   */\n      0x00\n        /* \"#utility.yul\":8707:8716   */\n      dup4\n        /* \"#utility.yul\":8703:8720   */\n      add\n        /* \"#utility.yul\":8696:8743   */\n      mstore\n        /* \"#utility.yul\":8760:8891   */\n      tag_358\n        /* \"#utility.yul\":8886:8890   */\n      dup2\n        /* \"#utility.yul\":8760:8891   */\n      tag_249\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8752:8891   */\n      swap1\n      pop\n        /* \"#utility.yul\":8479:8898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8904:9051   */\n    tag_250:\n        /* \"#utility.yul\":9005:9016   */\n      0x00\n        /* \"#utility.yul\":9042:9045   */\n      dup2\n        /* \"#utility.yul\":9027:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8904:9051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9057:9171   */\n    tag_251:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9177:9575   */\n    tag_252:\n        /* \"#utility.yul\":9336:9339   */\n      0x00\n        /* \"#utility.yul\":9357:9440   */\n      tag_362\n        /* \"#utility.yul\":9438:9439   */\n      0x00\n        /* \"#utility.yul\":9433:9436   */\n      dup4\n        /* \"#utility.yul\":9357:9440   */\n      tag_250\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9350:9440   */\n      swap2\n      pop\n        /* \"#utility.yul\":9449:9542   */\n      tag_363\n        /* \"#utility.yul\":9538:9541   */\n      dup3\n        /* \"#utility.yul\":9449:9542   */\n      tag_251\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9567:9568   */\n      0x00\n        /* \"#utility.yul\":9562:9565   */\n      dup3\n        /* \"#utility.yul\":9558:9569   */\n      add\n        /* \"#utility.yul\":9551:9569   */\n      swap1\n      pop\n        /* \"#utility.yul\":9177:9575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9581:9960   */\n    tag_120:\n        /* \"#utility.yul\":9765:9768   */\n      0x00\n        /* \"#utility.yul\":9787:9934   */\n      tag_365\n        /* \"#utility.yul\":9930:9933   */\n      dup3\n        /* \"#utility.yul\":9787:9934   */\n      tag_252\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9780:9934   */\n      swap2\n      pop\n        /* \"#utility.yul\":9951:9954   */\n      dup2\n        /* \"#utility.yul\":9944:9954   */\n      swap1\n      pop\n        /* \"#utility.yul\":9581:9960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9966:10140   */\n    tag_253:\n        /* \"#utility.yul\":10106:10132   */\n      0x4661696c656420746f207769746864726177204d415449430000000000000000\n        /* \"#utility.yul\":10102:10103   */\n      0x00\n        /* \"#utility.yul\":10094:10100   */\n      dup3\n        /* \"#utility.yul\":10090:10104   */\n      add\n        /* \"#utility.yul\":10083:10133   */\n      mstore\n        /* \"#utility.yul\":9966:10140   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10146:10512   */\n    tag_254:\n        /* \"#utility.yul\":10288:10291   */\n      0x00\n        /* \"#utility.yul\":10309:10376   */\n      tag_368\n        /* \"#utility.yul\":10373:10375   */\n      0x18\n        /* \"#utility.yul\":10368:10371   */\n      dup4\n        /* \"#utility.yul\":10309:10376   */\n      tag_241\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10302:10376   */\n      swap2\n      pop\n        /* \"#utility.yul\":10385:10478   */\n      tag_369\n        /* \"#utility.yul\":10474:10477   */\n      dup3\n        /* \"#utility.yul\":10385:10478   */\n      tag_253\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10503:10505   */\n      0x20\n        /* \"#utility.yul\":10498:10501   */\n      dup3\n        /* \"#utility.yul\":10494:10506   */\n      add\n        /* \"#utility.yul\":10487:10506   */\n      swap1\n      pop\n        /* \"#utility.yul\":10146:10512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10518:10937   */\n    tag_126:\n        /* \"#utility.yul\":10684:10688   */\n      0x00\n        /* \"#utility.yul\":10722:10724   */\n      0x20\n        /* \"#utility.yul\":10711:10720   */\n      dup3\n        /* \"#utility.yul\":10707:10725   */\n      add\n        /* \"#utility.yul\":10699:10725   */\n      swap1\n      pop\n        /* \"#utility.yul\":10771:10780   */\n      dup2\n        /* \"#utility.yul\":10765:10769   */\n      dup2\n        /* \"#utility.yul\":10761:10781   */\n      sub\n        /* \"#utility.yul\":10757:10758   */\n      0x00\n        /* \"#utility.yul\":10746:10755   */\n      dup4\n        /* \"#utility.yul\":10742:10759   */\n      add\n        /* \"#utility.yul\":10735:10782   */\n      mstore\n        /* \"#utility.yul\":10799:10930   */\n      tag_371\n        /* \"#utility.yul\":10925:10929   */\n      dup2\n        /* \"#utility.yul\":10799:10930   */\n      tag_254\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10791:10930   */\n      swap1\n      pop\n        /* \"#utility.yul\":10518:10937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10943:11086   */\n    tag_255:\n        /* \"#utility.yul\":11000:11005   */\n      0x00\n        /* \"#utility.yul\":11031:11037   */\n      dup2\n        /* \"#utility.yul\":11025:11038   */\n      mload\n        /* \"#utility.yul\":11016:11038   */\n      swap1\n      pop\n        /* \"#utility.yul\":11047:11080   */\n      tag_373\n        /* \"#utility.yul\":11074:11079   */\n      dup2\n        /* \"#utility.yul\":11047:11080   */\n      tag_226\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10943:11086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11092:11443   */\n    tag_146:\n        /* \"#utility.yul\":11162:11168   */\n      0x00\n        /* \"#utility.yul\":11211:11213   */\n      0x20\n        /* \"#utility.yul\":11199:11208   */\n      dup3\n        /* \"#utility.yul\":11190:11197   */\n      dup5\n        /* \"#utility.yul\":11186:11209   */\n      sub\n        /* \"#utility.yul\":11182:11214   */\n      slt\n        /* \"#utility.yul\":11179:11298   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":11217:11296   */\n      tag_376\n      tag_223\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11179:11298   */\n    tag_375:\n        /* \"#utility.yul\":11337:11338   */\n      0x00\n        /* \"#utility.yul\":11362:11426   */\n      tag_377\n        /* \"#utility.yul\":11418:11425   */\n      dup5\n        /* \"#utility.yul\":11409:11415   */\n      dup3\n        /* \"#utility.yul\":11398:11407   */\n      dup6\n        /* \"#utility.yul\":11394:11416   */\n      add\n        /* \"#utility.yul\":11362:11426   */\n      tag_255\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11352:11426   */\n      swap2\n      pop\n        /* \"#utility.yul\":11308:11436   */\n      pop\n        /* \"#utility.yul\":11092:11443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11449:11620   */\n    tag_256:\n        /* \"#utility.yul\":11589:11612   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":11585:11586   */\n      0x00\n        /* \"#utility.yul\":11577:11583   */\n      dup3\n        /* \"#utility.yul\":11573:11587   */\n      add\n        /* \"#utility.yul\":11566:11613   */\n      mstore\n        /* \"#utility.yul\":11449:11620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11626:11992   */\n    tag_257:\n        /* \"#utility.yul\":11768:11771   */\n      0x00\n        /* \"#utility.yul\":11789:11856   */\n      tag_380\n        /* \"#utility.yul\":11853:11855   */\n      0x15\n        /* \"#utility.yul\":11848:11851   */\n      dup4\n        /* \"#utility.yul\":11789:11856   */\n      tag_241\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":11782:11856   */\n      swap2\n      pop\n        /* \"#utility.yul\":11865:11958   */\n      tag_381\n        /* \"#utility.yul\":11954:11957   */\n      dup3\n        /* \"#utility.yul\":11865:11958   */\n      tag_256\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11983:11985   */\n      0x20\n        /* \"#utility.yul\":11978:11981   */\n      dup3\n        /* \"#utility.yul\":11974:11986   */\n      add\n        /* \"#utility.yul\":11967:11986   */\n      swap1\n      pop\n        /* \"#utility.yul\":11626:11992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11998:12417   */\n    tag_149:\n        /* \"#utility.yul\":12164:12168   */\n      0x00\n        /* \"#utility.yul\":12202:12204   */\n      0x20\n        /* \"#utility.yul\":12191:12200   */\n      dup3\n        /* \"#utility.yul\":12187:12205   */\n      add\n        /* \"#utility.yul\":12179:12205   */\n      swap1\n      pop\n        /* \"#utility.yul\":12251:12260   */\n      dup2\n        /* \"#utility.yul\":12245:12249   */\n      dup2\n        /* \"#utility.yul\":12241:12261   */\n      sub\n        /* \"#utility.yul\":12237:12238   */\n      0x00\n        /* \"#utility.yul\":12226:12235   */\n      dup4\n        /* \"#utility.yul\":12222:12239   */\n      add\n        /* \"#utility.yul\":12215:12262   */\n      mstore\n        /* \"#utility.yul\":12279:12410   */\n      tag_383\n        /* \"#utility.yul\":12405:12409   */\n      dup2\n        /* \"#utility.yul\":12279:12410   */\n      tag_257\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12271:12410   */\n      swap1\n      pop\n        /* \"#utility.yul\":11998:12417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12423:12653   */\n    tag_258:\n        /* \"#utility.yul\":12563:12597   */\n      0x4d4154494320616d6f756e742069732062656c6f7720746865206d696e696d75\n        /* \"#utility.yul\":12559:12560   */\n      0x00\n        /* \"#utility.yul\":12551:12557   */\n      dup3\n        /* \"#utility.yul\":12547:12561   */\n      add\n        /* \"#utility.yul\":12540:12598   */\n      mstore\n        /* \"#utility.yul\":12632:12645   */\n      0x6d20627579206c696d6974000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12627:12629   */\n      0x20\n        /* \"#utility.yul\":12619:12625   */\n      dup3\n        /* \"#utility.yul\":12615:12630   */\n      add\n        /* \"#utility.yul\":12608:12646   */\n      mstore\n        /* \"#utility.yul\":12423:12653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12659:13025   */\n    tag_259:\n        /* \"#utility.yul\":12801:12804   */\n      0x00\n        /* \"#utility.yul\":12822:12889   */\n      tag_386\n        /* \"#utility.yul\":12886:12888   */\n      0x2b\n        /* \"#utility.yul\":12881:12884   */\n      dup4\n        /* \"#utility.yul\":12822:12889   */\n      tag_241\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12815:12889   */\n      swap2\n      pop\n        /* \"#utility.yul\":12898:12991   */\n      tag_387\n        /* \"#utility.yul\":12987:12990   */\n      dup3\n        /* \"#utility.yul\":12898:12991   */\n      tag_258\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13016:13018   */\n      0x40\n        /* \"#utility.yul\":13011:13014   */\n      dup3\n        /* \"#utility.yul\":13007:13019   */\n      add\n        /* \"#utility.yul\":13000:13019   */\n      swap1\n      pop\n        /* \"#utility.yul\":12659:13025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13031:13450   */\n    tag_162:\n        /* \"#utility.yul\":13197:13201   */\n      0x00\n        /* \"#utility.yul\":13235:13237   */\n      0x20\n        /* \"#utility.yul\":13224:13233   */\n      dup3\n        /* \"#utility.yul\":13220:13238   */\n      add\n        /* \"#utility.yul\":13212:13238   */\n      swap1\n      pop\n        /* \"#utility.yul\":13284:13293   */\n      dup2\n        /* \"#utility.yul\":13278:13282   */\n      dup2\n        /* \"#utility.yul\":13274:13294   */\n      sub\n        /* \"#utility.yul\":13270:13271   */\n      0x00\n        /* \"#utility.yul\":13259:13268   */\n      dup4\n        /* \"#utility.yul\":13255:13272   */\n      add\n        /* \"#utility.yul\":13248:13295   */\n      mstore\n        /* \"#utility.yul\":13312:13443   */\n      tag_389\n        /* \"#utility.yul\":13438:13442   */\n      dup2\n        /* \"#utility.yul\":13312:13443   */\n      tag_259\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13304:13443   */\n      swap1\n      pop\n        /* \"#utility.yul\":13031:13450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13456:13685   */\n    tag_260:\n        /* \"#utility.yul\":13596:13630   */\n      0x4d4154494320616d6f756e74206578636565647320746865206d6178696d756d\n        /* \"#utility.yul\":13592:13593   */\n      0x00\n        /* \"#utility.yul\":13584:13590   */\n      dup3\n        /* \"#utility.yul\":13580:13594   */\n      add\n        /* \"#utility.yul\":13573:13631   */\n      mstore\n        /* \"#utility.yul\":13665:13677   */\n      0x20627579206c696d697400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13660:13662   */\n      0x20\n        /* \"#utility.yul\":13652:13658   */\n      dup3\n        /* \"#utility.yul\":13648:13663   */\n      add\n        /* \"#utility.yul\":13641:13678   */\n      mstore\n        /* \"#utility.yul\":13456:13685   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13691:14057   */\n    tag_261:\n        /* \"#utility.yul\":13833:13836   */\n      0x00\n        /* \"#utility.yul\":13854:13921   */\n      tag_392\n        /* \"#utility.yul\":13918:13920   */\n      0x2a\n        /* \"#utility.yul\":13913:13916   */\n      dup4\n        /* \"#utility.yul\":13854:13921   */\n      tag_241\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13847:13921   */\n      swap2\n      pop\n        /* \"#utility.yul\":13930:14023   */\n      tag_393\n        /* \"#utility.yul\":14019:14022   */\n      dup3\n        /* \"#utility.yul\":13930:14023   */\n      tag_260\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":14048:14050   */\n      0x40\n        /* \"#utility.yul\":14043:14046   */\n      dup3\n        /* \"#utility.yul\":14039:14051   */\n      add\n        /* \"#utility.yul\":14032:14051   */\n      swap1\n      pop\n        /* \"#utility.yul\":13691:14057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14063:14482   */\n    tag_165:\n        /* \"#utility.yul\":14229:14233   */\n      0x00\n        /* \"#utility.yul\":14267:14269   */\n      0x20\n        /* \"#utility.yul\":14256:14265   */\n      dup3\n        /* \"#utility.yul\":14252:14270   */\n      add\n        /* \"#utility.yul\":14244:14270   */\n      swap1\n      pop\n        /* \"#utility.yul\":14316:14325   */\n      dup2\n        /* \"#utility.yul\":14310:14314   */\n      dup2\n        /* \"#utility.yul\":14306:14326   */\n      sub\n        /* \"#utility.yul\":14302:14303   */\n      0x00\n        /* \"#utility.yul\":14291:14300   */\n      dup4\n        /* \"#utility.yul\":14287:14304   */\n      add\n        /* \"#utility.yul\":14280:14327   */\n      mstore\n        /* \"#utility.yul\":14344:14475   */\n      tag_395\n        /* \"#utility.yul\":14470:14474   */\n      dup2\n        /* \"#utility.yul\":14344:14475   */\n      tag_261\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":14336:14475   */\n      swap1\n      pop\n        /* \"#utility.yul\":14063:14482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14488:14574   */\n    tag_262:\n        /* \"#utility.yul\":14523:14530   */\n      0x00\n        /* \"#utility.yul\":14563:14567   */\n      0xff\n        /* \"#utility.yul\":14556:14561   */\n      dup3\n        /* \"#utility.yul\":14552:14568   */\n      and\n        /* \"#utility.yul\":14541:14568   */\n      swap1\n      pop\n        /* \"#utility.yul\":14488:14574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14580:14698   */\n    tag_263:\n        /* \"#utility.yul\":14651:14673   */\n      tag_398\n        /* \"#utility.yul\":14667:14672   */\n      dup2\n        /* \"#utility.yul\":14651:14673   */\n      tag_262\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14644:14649   */\n      dup2\n        /* \"#utility.yul\":14641:14674   */\n      eq\n        /* \"#utility.yul\":14631:14692   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":14688:14689   */\n      0x00\n        /* \"#utility.yul\":14685:14686   */\n      0x00\n        /* \"#utility.yul\":14678:14690   */\n      revert\n        /* \"#utility.yul\":14631:14692   */\n    tag_399:\n        /* \"#utility.yul\":14580:14698   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14704:14843   */\n    tag_264:\n        /* \"#utility.yul\":14759:14764   */\n      0x00\n        /* \"#utility.yul\":14790:14796   */\n      dup2\n        /* \"#utility.yul\":14784:14797   */\n      mload\n        /* \"#utility.yul\":14775:14797   */\n      swap1\n      pop\n        /* \"#utility.yul\":14806:14837   */\n      tag_401\n        /* \"#utility.yul\":14831:14836   */\n      dup2\n        /* \"#utility.yul\":14806:14837   */\n      tag_263\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":14704:14843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14849:15196   */\n    tag_169:\n        /* \"#utility.yul\":14917:14923   */\n      0x00\n        /* \"#utility.yul\":14966:14968   */\n      0x20\n        /* \"#utility.yul\":14954:14963   */\n      dup3\n        /* \"#utility.yul\":14945:14952   */\n      dup5\n        /* \"#utility.yul\":14941:14964   */\n      sub\n        /* \"#utility.yul\":14937:14969   */\n      slt\n        /* \"#utility.yul\":14934:15053   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":14972:15051   */\n      tag_404\n      tag_223\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14934:15053   */\n    tag_403:\n        /* \"#utility.yul\":15092:15093   */\n      0x00\n        /* \"#utility.yul\":15117:15179   */\n      tag_405\n        /* \"#utility.yul\":15171:15178   */\n      dup5\n        /* \"#utility.yul\":15162:15168   */\n      dup3\n        /* \"#utility.yul\":15151:15160   */\n      dup6\n        /* \"#utility.yul\":15147:15169   */\n      add\n        /* \"#utility.yul\":15117:15179   */\n      tag_264\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15107:15179   */\n      swap2\n      pop\n        /* \"#utility.yul\":15063:15189   */\n      pop\n        /* \"#utility.yul\":14849:15196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15202:15382   */\n    tag_265:\n        /* \"#utility.yul\":15250:15327   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15247:15248   */\n      0x00\n        /* \"#utility.yul\":15240:15328   */\n      mstore\n        /* \"#utility.yul\":15347:15351   */\n      0x11\n        /* \"#utility.yul\":15344:15345   */\n      0x04\n        /* \"#utility.yul\":15337:15352   */\n      mstore\n        /* \"#utility.yul\":15371:15375   */\n      0x24\n        /* \"#utility.yul\":15368:15369   */\n      0x00\n        /* \"#utility.yul\":15361:15376   */\n      revert\n        /* \"#utility.yul\":15388:15490   */\n    tag_266:\n        /* \"#utility.yul\":15430:15438   */\n      0x00\n        /* \"#utility.yul\":15477:15482   */\n      dup2\n        /* \"#utility.yul\":15474:15475   */\n      0x01\n        /* \"#utility.yul\":15470:15483   */\n      shr\n        /* \"#utility.yul\":15449:15483   */\n      swap1\n      pop\n        /* \"#utility.yul\":15388:15490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15496:16344   */\n    tag_267:\n        /* \"#utility.yul\":15557:15562   */\n      0x00\n        /* \"#utility.yul\":15564:15568   */\n      0x00\n        /* \"#utility.yul\":15588:15594   */\n      dup3\n        /* \"#utility.yul\":15579:15594   */\n      swap2\n      pop\n        /* \"#utility.yul\":15612:15617   */\n      dup4\n        /* \"#utility.yul\":15603:15617   */\n      swap1\n      pop\n        /* \"#utility.yul\":15626:16338   */\n    tag_409:\n        /* \"#utility.yul\":15647:15648   */\n      0x01\n        /* \"#utility.yul\":15637:15645   */\n      dup6\n        /* \"#utility.yul\":15634:15649   */\n      gt\n        /* \"#utility.yul\":15626:16338   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":15742:15746   */\n      dup1\n        /* \"#utility.yul\":15737:15740   */\n      dup7\n        /* \"#utility.yul\":15733:15747   */\n      div\n        /* \"#utility.yul\":15727:15731   */\n      dup2\n        /* \"#utility.yul\":15724:15748   */\n      gt\n        /* \"#utility.yul\":15721:15771   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":15751:15769   */\n      tag_413\n      tag_265\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15721:15771   */\n    tag_412:\n        /* \"#utility.yul\":15801:15802   */\n      0x01\n        /* \"#utility.yul\":15791:15799   */\n      dup6\n        /* \"#utility.yul\":15787:15803   */\n      and\n        /* \"#utility.yul\":15784:16235   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":16216:16220   */\n      dup1\n        /* \"#utility.yul\":16209:16214   */\n      dup3\n        /* \"#utility.yul\":16205:16221   */\n      mul\n        /* \"#utility.yul\":16196:16221   */\n      swap2\n      pop\n        /* \"#utility.yul\":15784:16235   */\n    tag_414:\n        /* \"#utility.yul\":16266:16270   */\n      dup1\n        /* \"#utility.yul\":16260:16264   */\n      dup2\n        /* \"#utility.yul\":16256:16271   */\n      mul\n        /* \"#utility.yul\":16248:16271   */\n      swap1\n      pop\n        /* \"#utility.yul\":16296:16328   */\n      tag_415\n        /* \"#utility.yul\":16319:16327   */\n      dup6\n        /* \"#utility.yul\":16296:16328   */\n      tag_266\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":16284:16328   */\n      swap5\n      pop\n        /* \"#utility.yul\":15626:16338   */\n      jump(tag_409)\n    tag_411:\n        /* \"#utility.yul\":15496:16344   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16350:17423   */\n    tag_268:\n        /* \"#utility.yul\":16404:16409   */\n      0x00\n        /* \"#utility.yul\":16595:16603   */\n      dup3\n        /* \"#utility.yul\":16585:16625   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":16616:16617   */\n      0x01\n        /* \"#utility.yul\":16607:16617   */\n      swap1\n      pop\n        /* \"#utility.yul\":16618:16623   */\n      jump(tag_416)\n        /* \"#utility.yul\":16585:16625   */\n    tag_417:\n        /* \"#utility.yul\":16644:16648   */\n      dup2\n        /* \"#utility.yul\":16634:16670   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":16661:16662   */\n      0x00\n        /* \"#utility.yul\":16652:16662   */\n      swap1\n      pop\n        /* \"#utility.yul\":16663:16668   */\n      jump(tag_416)\n        /* \"#utility.yul\":16634:16670   */\n    tag_418:\n        /* \"#utility.yul\":16730:16734   */\n      dup2\n        /* \"#utility.yul\":16778:16779   */\n      0x01\n        /* \"#utility.yul\":16773:16800   */\n      dup2\n      eq\n      tag_420\n      jumpi\n        /* \"#utility.yul\":16814:16815   */\n      0x02\n        /* \"#utility.yul\":16809:17000   */\n      dup2\n      eq\n      tag_421\n      jumpi\n        /* \"#utility.yul\":16723:17000   */\n      jump(tag_419)\n        /* \"#utility.yul\":16773:16800   */\n    tag_420:\n        /* \"#utility.yul\":16791:16792   */\n      0x01\n        /* \"#utility.yul\":16782:16792   */\n      swap2\n      pop\n        /* \"#utility.yul\":16793:16798   */\n      pop\n      jump(tag_416)\n        /* \"#utility.yul\":16809:17000   */\n    tag_421:\n        /* \"#utility.yul\":16854:16857   */\n      0xff\n        /* \"#utility.yul\":16844:16852   */\n      dup5\n        /* \"#utility.yul\":16841:16858   */\n      gt\n        /* \"#utility.yul\":16838:16881   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":16861:16879   */\n      tag_423\n      tag_265\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":16838:16881   */\n    tag_422:\n        /* \"#utility.yul\":16910:16918   */\n      dup4\n        /* \"#utility.yul\":16907:16908   */\n      0x02\n        /* \"#utility.yul\":16903:16919   */\n      exp\n        /* \"#utility.yul\":16894:16919   */\n      swap2\n      pop\n        /* \"#utility.yul\":16945:16948   */\n      dup5\n        /* \"#utility.yul\":16938:16943   */\n      dup3\n        /* \"#utility.yul\":16935:16949   */\n      gt\n        /* \"#utility.yul\":16932:16972   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":16952:16970   */\n      tag_425\n      tag_265\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":16932:16972   */\n    tag_424:\n        /* \"#utility.yul\":16985:16990   */\n      pop\n      jump(tag_416)\n        /* \"#utility.yul\":16723:17000   */\n    tag_419:\n      pop\n        /* \"#utility.yul\":17109:17111   */\n      0x20\n        /* \"#utility.yul\":17099:17107   */\n      dup4\n        /* \"#utility.yul\":17096:17112   */\n      lt\n        /* \"#utility.yul\":17090:17093   */\n      0x0133\n        /* \"#utility.yul\":17084:17088   */\n      dup4\n        /* \"#utility.yul\":17081:17094   */\n      lt\n        /* \"#utility.yul\":17077:17113   */\n      and\n        /* \"#utility.yul\":17059:17061   */\n      0x4e\n        /* \"#utility.yul\":17049:17057   */\n      dup5\n        /* \"#utility.yul\":17046:17062   */\n      lt\n        /* \"#utility.yul\":17041:17043   */\n      0x0b\n        /* \"#utility.yul\":17035:17039   */\n      dup5\n        /* \"#utility.yul\":17032:17044   */\n      lt\n        /* \"#utility.yul\":17028:17063   */\n      and\n        /* \"#utility.yul\":17012:17123   */\n      or\n        /* \"#utility.yul\":17009:17255   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":17165:17173   */\n      dup3\n        /* \"#utility.yul\":17159:17163   */\n      dup3\n        /* \"#utility.yul\":17155:17174   */\n      exp\n        /* \"#utility.yul\":17146:17174   */\n      swap1\n      pop\n        /* \"#utility.yul\":17200:17203   */\n      dup4\n        /* \"#utility.yul\":17193:17198   */\n      dup2\n        /* \"#utility.yul\":17190:17204   */\n      gt\n        /* \"#utility.yul\":17187:17227   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":17207:17225   */\n      tag_428\n      tag_265\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":17187:17227   */\n    tag_427:\n        /* \"#utility.yul\":17240:17245   */\n      jump(tag_416)\n        /* \"#utility.yul\":17009:17255   */\n    tag_426:\n        /* \"#utility.yul\":17280:17322   */\n      tag_429\n        /* \"#utility.yul\":17318:17321   */\n      dup5\n        /* \"#utility.yul\":17308:17316   */\n      dup5\n        /* \"#utility.yul\":17302:17306   */\n      dup5\n        /* \"#utility.yul\":17299:17300   */\n      0x01\n        /* \"#utility.yul\":17280:17322   */\n      tag_267\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":17265:17322   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":17354:17358   */\n      dup2\n        /* \"#utility.yul\":17349:17352   */\n      dup5\n        /* \"#utility.yul\":17345:17359   */\n      div\n        /* \"#utility.yul\":17338:17343   */\n      dup2\n        /* \"#utility.yul\":17335:17360   */\n      gt\n        /* \"#utility.yul\":17332:17383   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":17363:17381   */\n      tag_431\n      tag_265\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":17332:17383   */\n    tag_430:\n        /* \"#utility.yul\":17412:17416   */\n      dup2\n        /* \"#utility.yul\":17405:17410   */\n      dup2\n        /* \"#utility.yul\":17401:17417   */\n      mul\n        /* \"#utility.yul\":17392:17417   */\n      swap1\n      pop\n        /* \"#utility.yul\":16350:17423   */\n    tag_416:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17429:17710   */\n    tag_171:\n        /* \"#utility.yul\":17487:17492   */\n      0x00\n        /* \"#utility.yul\":17511:17534   */\n      tag_433\n        /* \"#utility.yul\":17529:17533   */\n      dup3\n        /* \"#utility.yul\":17511:17534   */\n      tag_225\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":17503:17534   */\n      swap2\n      pop\n        /* \"#utility.yul\":17555:17580   */\n      tag_434\n        /* \"#utility.yul\":17571:17579   */\n      dup4\n        /* \"#utility.yul\":17555:17580   */\n      tag_262\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":17543:17580   */\n      swap3\n      pop\n        /* \"#utility.yul\":17599:17703   */\n      tag_435\n        /* \"#utility.yul\":17636:17702   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17626:17634   */\n      dup5\n        /* \"#utility.yul\":17620:17624   */\n      dup5\n        /* \"#utility.yul\":17599:17703   */\n      tag_268\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":17590:17703   */\n      swap1\n      pop\n        /* \"#utility.yul\":17429:17710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17716:18126   */\n    tag_173:\n        /* \"#utility.yul\":17756:17763   */\n      0x00\n        /* \"#utility.yul\":17779:17799   */\n      tag_437\n        /* \"#utility.yul\":17797:17798   */\n      dup3\n        /* \"#utility.yul\":17779:17799   */\n      tag_225\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":17774:17799   */\n      swap2\n      pop\n        /* \"#utility.yul\":17813:17833   */\n      tag_438\n        /* \"#utility.yul\":17831:17832   */\n      dup4\n        /* \"#utility.yul\":17813:17833   */\n      tag_225\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":17808:17833   */\n      swap3\n      pop\n        /* \"#utility.yul\":17868:17869   */\n      dup3\n        /* \"#utility.yul\":17865:17866   */\n      dup3\n        /* \"#utility.yul\":17861:17870   */\n      mul\n        /* \"#utility.yul\":17890:17920   */\n      tag_439\n        /* \"#utility.yul\":17908:17919   */\n      dup2\n        /* \"#utility.yul\":17890:17920   */\n      tag_225\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":17879:17920   */\n      swap2\n      pop\n        /* \"#utility.yul\":18069:18070   */\n      dup3\n        /* \"#utility.yul\":18060:18067   */\n      dup3\n        /* \"#utility.yul\":18056:18071   */\n      div\n        /* \"#utility.yul\":18053:18054   */\n      dup5\n        /* \"#utility.yul\":18050:18072   */\n      eq\n        /* \"#utility.yul\":18030:18031   */\n      dup4\n        /* \"#utility.yul\":18023:18032   */\n      iszero\n        /* \"#utility.yul\":18003:18086   */\n      or\n        /* \"#utility.yul\":17980:18119   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":18099:18117   */\n      tag_441\n      tag_265\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":17980:18119   */\n    tag_440:\n        /* \"#utility.yul\":17764:18126   */\n      pop\n        /* \"#utility.yul\":17716:18126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18132:18312   */\n    tag_269:\n        /* \"#utility.yul\":18180:18257   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18177:18178   */\n      0x00\n        /* \"#utility.yul\":18170:18258   */\n      mstore\n        /* \"#utility.yul\":18277:18281   */\n      0x12\n        /* \"#utility.yul\":18274:18275   */\n      0x04\n        /* \"#utility.yul\":18267:18282   */\n      mstore\n        /* \"#utility.yul\":18301:18305   */\n      0x24\n        /* \"#utility.yul\":18298:18299   */\n      0x00\n        /* \"#utility.yul\":18291:18306   */\n      revert\n        /* \"#utility.yul\":18318:18503   */\n    tag_176:\n        /* \"#utility.yul\":18358:18359   */\n      0x00\n        /* \"#utility.yul\":18375:18395   */\n      tag_444\n        /* \"#utility.yul\":18393:18394   */\n      dup3\n        /* \"#utility.yul\":18375:18395   */\n      tag_225\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":18370:18395   */\n      swap2\n      pop\n        /* \"#utility.yul\":18409:18429   */\n      tag_445\n        /* \"#utility.yul\":18427:18428   */\n      dup4\n        /* \"#utility.yul\":18409:18429   */\n      tag_225\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":18404:18429   */\n      swap3\n      pop\n        /* \"#utility.yul\":18448:18449   */\n      dup3\n        /* \"#utility.yul\":18438:18473   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":18453:18471   */\n      tag_447\n      tag_269\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":18438:18473   */\n    tag_446:\n        /* \"#utility.yul\":18495:18496   */\n      dup3\n        /* \"#utility.yul\":18492:18493   */\n      dup3\n        /* \"#utility.yul\":18488:18497   */\n      div\n        /* \"#utility.yul\":18483:18497   */\n      swap1\n      pop\n        /* \"#utility.yul\":18318:18503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18509:18732   */\n    tag_270:\n        /* \"#utility.yul\":18649:18683   */\n      0x4e6f7420656e6f75676820746f6b656e7320617661696c61626c6520666f7220\n        /* \"#utility.yul\":18645:18646   */\n      0x00\n        /* \"#utility.yul\":18637:18643   */\n      dup3\n        /* \"#utility.yul\":18633:18647   */\n      add\n        /* \"#utility.yul\":18626:18684   */\n      mstore\n        /* \"#utility.yul\":18718:18724   */\n      0x73616c6500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18713:18715   */\n      0x20\n        /* \"#utility.yul\":18705:18711   */\n      dup3\n        /* \"#utility.yul\":18701:18716   */\n      add\n        /* \"#utility.yul\":18694:18725   */\n      mstore\n        /* \"#utility.yul\":18509:18732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18738:19104   */\n    tag_271:\n        /* \"#utility.yul\":18880:18883   */\n      0x00\n        /* \"#utility.yul\":18901:18968   */\n      tag_450\n        /* \"#utility.yul\":18965:18967   */\n      0x24\n        /* \"#utility.yul\":18960:18963   */\n      dup4\n        /* \"#utility.yul\":18901:18968   */\n      tag_241\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":18894:18968   */\n      swap2\n      pop\n        /* \"#utility.yul\":18977:19070   */\n      tag_451\n        /* \"#utility.yul\":19066:19069   */\n      dup3\n        /* \"#utility.yul\":18977:19070   */\n      tag_270\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":19095:19097   */\n      0x40\n        /* \"#utility.yul\":19090:19093   */\n      dup3\n        /* \"#utility.yul\":19086:19098   */\n      add\n        /* \"#utility.yul\":19079:19098   */\n      swap1\n      pop\n        /* \"#utility.yul\":18738:19104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19110:19529   */\n    tag_183:\n        /* \"#utility.yul\":19276:19280   */\n      0x00\n        /* \"#utility.yul\":19314:19316   */\n      0x20\n        /* \"#utility.yul\":19303:19312   */\n      dup3\n        /* \"#utility.yul\":19299:19317   */\n      add\n        /* \"#utility.yul\":19291:19317   */\n      swap1\n      pop\n        /* \"#utility.yul\":19363:19372   */\n      dup2\n        /* \"#utility.yul\":19357:19361   */\n      dup2\n        /* \"#utility.yul\":19353:19373   */\n      sub\n        /* \"#utility.yul\":19349:19350   */\n      0x00\n        /* \"#utility.yul\":19338:19347   */\n      dup4\n        /* \"#utility.yul\":19334:19351   */\n      add\n        /* \"#utility.yul\":19327:19374   */\n      mstore\n        /* \"#utility.yul\":19391:19522   */\n      tag_453\n        /* \"#utility.yul\":19517:19521   */\n      dup2\n        /* \"#utility.yul\":19391:19522   */\n      tag_271\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":19383:19522   */\n      swap1\n      pop\n        /* \"#utility.yul\":19110:19529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19535:19726   */\n    tag_185:\n        /* \"#utility.yul\":19575:19578   */\n      0x00\n        /* \"#utility.yul\":19594:19614   */\n      tag_455\n        /* \"#utility.yul\":19612:19613   */\n      dup3\n        /* \"#utility.yul\":19594:19614   */\n      tag_225\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":19589:19614   */\n      swap2\n      pop\n        /* \"#utility.yul\":19628:19648   */\n      tag_456\n        /* \"#utility.yul\":19646:19647   */\n      dup4\n        /* \"#utility.yul\":19628:19648   */\n      tag_225\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":19623:19648   */\n      swap3\n      pop\n        /* \"#utility.yul\":19671:19672   */\n      dup3\n        /* \"#utility.yul\":19668:19669   */\n      dup3\n        /* \"#utility.yul\":19664:19673   */\n      add\n        /* \"#utility.yul\":19657:19673   */\n      swap1\n      pop\n        /* \"#utility.yul\":19692:19695   */\n      dup1\n        /* \"#utility.yul\":19689:19690   */\n      dup3\n        /* \"#utility.yul\":19686:19696   */\n      gt\n        /* \"#utility.yul\":19683:19719   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":19699:19717   */\n      tag_458\n      tag_265\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":19683:19719   */\n    tag_457:\n        /* \"#utility.yul\":19535:19726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19732:20064   */\n    tag_208:\n        /* \"#utility.yul\":19853:19857   */\n      0x00\n        /* \"#utility.yul\":19891:19893   */\n      0x40\n        /* \"#utility.yul\":19880:19889   */\n      dup3\n        /* \"#utility.yul\":19876:19894   */\n      add\n        /* \"#utility.yul\":19868:19894   */\n      swap1\n      pop\n        /* \"#utility.yul\":19904:19975   */\n      tag_460\n        /* \"#utility.yul\":19972:19973   */\n      0x00\n        /* \"#utility.yul\":19961:19970   */\n      dup4\n        /* \"#utility.yul\":19957:19974   */\n      add\n        /* \"#utility.yul\":19948:19954   */\n      dup6\n        /* \"#utility.yul\":19904:19975   */\n      tag_235\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":19985:20057   */\n      tag_461\n        /* \"#utility.yul\":20053:20055   */\n      0x20\n        /* \"#utility.yul\":20042:20051   */\n      dup4\n        /* \"#utility.yul\":20038:20056   */\n      add\n        /* \"#utility.yul\":20029:20035   */\n      dup5\n        /* \"#utility.yul\":19985:20057   */\n      tag_228\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":19732:20064   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20070:20251   */\n    tag_272:\n        /* \"#utility.yul\":20210:20243   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20206:20207   */\n      0x00\n        /* \"#utility.yul\":20198:20204   */\n      dup3\n        /* \"#utility.yul\":20194:20208   */\n      add\n        /* \"#utility.yul\":20187:20244   */\n      mstore\n        /* \"#utility.yul\":20070:20251   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20257:20623   */\n    tag_273:\n        /* \"#utility.yul\":20399:20402   */\n      0x00\n        /* \"#utility.yul\":20420:20487   */\n      tag_464\n        /* \"#utility.yul\":20484:20486   */\n      0x1f\n        /* \"#utility.yul\":20479:20482   */\n      dup4\n        /* \"#utility.yul\":20420:20487   */\n      tag_241\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":20413:20487   */\n      swap2\n      pop\n        /* \"#utility.yul\":20496:20589   */\n      tag_465\n        /* \"#utility.yul\":20585:20588   */\n      dup3\n        /* \"#utility.yul\":20496:20589   */\n      tag_272\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":20614:20616   */\n      0x20\n        /* \"#utility.yul\":20609:20612   */\n      dup3\n        /* \"#utility.yul\":20605:20617   */\n      add\n        /* \"#utility.yul\":20598:20617   */\n      swap1\n      pop\n        /* \"#utility.yul\":20257:20623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20629:21048   */\n    tag_213:\n        /* \"#utility.yul\":20795:20799   */\n      0x00\n        /* \"#utility.yul\":20833:20835   */\n      0x20\n        /* \"#utility.yul\":20822:20831   */\n      dup3\n        /* \"#utility.yul\":20818:20836   */\n      add\n        /* \"#utility.yul\":20810:20836   */\n      swap1\n      pop\n        /* \"#utility.yul\":20882:20891   */\n      dup2\n        /* \"#utility.yul\":20876:20880   */\n      dup2\n        /* \"#utility.yul\":20872:20892   */\n      sub\n        /* \"#utility.yul\":20868:20869   */\n      0x00\n        /* \"#utility.yul\":20857:20866   */\n      dup4\n        /* \"#utility.yul\":20853:20870   */\n      add\n        /* \"#utility.yul\":20846:20893   */\n      mstore\n        /* \"#utility.yul\":20910:21041   */\n      tag_467\n        /* \"#utility.yul\":21036:21040   */\n      dup2\n        /* \"#utility.yul\":20910:21041   */\n      tag_273\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":20902:21041   */\n      swap1\n      pop\n        /* \"#utility.yul\":20629:21048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122027347553206a5c9eae3823ee8d75a247690b0ab7aec454a5afd005961089204e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1016": {
									"entryPoint": null,
									"id": 1016,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 292,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2380:11",
										"nodeType": "YulBlock",
										"src": "0:2380:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "890:32:11",
													"nodeType": "YulBlock",
													"src": "890:32:11",
													"statements": [
														{
															"nativeSrc": "900:16:11",
															"nodeType": "YulAssignment",
															"src": "900:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:11",
																"nodeType": "YulIdentifier",
																"src": "911:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:11",
														"nodeType": "YulTypedName",
														"src": "872:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:11",
														"nodeType": "YulTypedName",
														"src": "882:7:11",
														"type": ""
													}
												],
												"src": "845:77:11"
											},
											{
												"body": {
													"nativeSrc": "971:79:11",
													"nodeType": "YulBlock",
													"src": "971:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:11",
																"nodeType": "YulBlock",
																"src": "1028:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:11"
																			},
																			"nativeSrc": "1030:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:11"
																		},
																		"nativeSrc": "1030:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:11"
																				},
																				"nativeSrc": "1001:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:11"
																		},
																		"nativeSrc": "991:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:11"
																},
																"nativeSrc": "984:43:11",
																"nodeType": "YulFunctionCall",
																"src": "984:43:11"
															},
															"nativeSrc": "981:63:11",
															"nodeType": "YulIf",
															"src": "981:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:11",
														"nodeType": "YulTypedName",
														"src": "964:5:11",
														"type": ""
													}
												],
												"src": "928:122:11"
											},
											{
												"body": {
													"nativeSrc": "1119:80:11",
													"nodeType": "YulBlock",
													"src": "1119:80:11",
													"statements": [
														{
															"nativeSrc": "1129:22:11",
															"nodeType": "YulAssignment",
															"src": "1129:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:11"
																},
																"nativeSrc": "1138:13:11",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:11"
																},
																"nativeSrc": "1160:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:11"
															},
															"nativeSrc": "1160:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:11",
														"nodeType": "YulTypedName",
														"src": "1097:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:11",
														"nodeType": "YulTypedName",
														"src": "1105:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:11",
														"nodeType": "YulTypedName",
														"src": "1113:5:11",
														"type": ""
													}
												],
												"src": "1056:143:11"
											},
											{
												"body": {
													"nativeSrc": "1333:692:11",
													"nodeType": "YulBlock",
													"src": "1333:692:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:83:11",
																"nodeType": "YulBlock",
																"src": "1380:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1382:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:11"
																			},
																			"nativeSrc": "1382:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:11"
																		},
																		"nativeSrc": "1382:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1354:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1363:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1350:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:11"
																		},
																		"nativeSrc": "1350:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1375:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1346:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:11"
																},
																"nativeSrc": "1346:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1346:33:11"
															},
															"nativeSrc": "1343:120:11",
															"nodeType": "YulIf",
															"src": "1343:120:11"
														},
														{
															"nativeSrc": "1473:128:11",
															"nodeType": "YulBlock",
															"src": "1473:128:11",
															"statements": [
																{
																	"nativeSrc": "1488:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1502:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1492:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1517:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1517:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1563:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1574:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1559:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:11"
																				},
																				"nativeSrc": "1559:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1583:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1527:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:11"
																		},
																		"nativeSrc": "1527:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1517:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1611:129:11",
															"nodeType": "YulBlock",
															"src": "1611:129:11",
															"statements": [
																{
																	"nativeSrc": "1626:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1640:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1630:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1656:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1656:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1702:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1713:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1698:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:11"
																				},
																				"nativeSrc": "1698:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1666:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:11"
																		},
																		"nativeSrc": "1666:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1656:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1750:129:11",
															"nodeType": "YulBlock",
															"src": "1750:129:11",
															"statements": [
																{
																	"nativeSrc": "1765:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1779:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1769:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1795:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1795:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1841:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1852:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1837:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:11"
																				},
																				"nativeSrc": "1837:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1805:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:11"
																		},
																		"nativeSrc": "1805:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1795:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1889:129:11",
															"nodeType": "YulBlock",
															"src": "1889:129:11",
															"statements": [
																{
																	"nativeSrc": "1904:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1918:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1908:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1934:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1934:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1980:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1991:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1976:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:11"
																				},
																				"nativeSrc": "1976:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2000:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1944:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:11"
																		},
																		"nativeSrc": "1944:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1934:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:820:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1279:9:11",
														"nodeType": "YulTypedName",
														"src": "1279:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1290:7:11",
														"nodeType": "YulTypedName",
														"src": "1290:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1302:6:11",
														"nodeType": "YulTypedName",
														"src": "1302:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1310:6:11",
														"nodeType": "YulTypedName",
														"src": "1310:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1318:6:11",
														"nodeType": "YulTypedName",
														"src": "1318:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1326:6:11",
														"nodeType": "YulTypedName",
														"src": "1326:6:11",
														"type": ""
													}
												],
												"src": "1205:820:11"
											},
											{
												"body": {
													"nativeSrc": "2096:53:11",
													"nodeType": "YulBlock",
													"src": "2096:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2113:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2113:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2136:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2136:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2118:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2118:17:11"
																		},
																		"nativeSrc": "2118:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2118:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2106:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:11"
																},
																"nativeSrc": "2106:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2106:37:11"
															},
															"nativeSrc": "2106:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2106:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2031:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2084:5:11",
														"nodeType": "YulTypedName",
														"src": "2084:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2091:3:11",
														"nodeType": "YulTypedName",
														"src": "2091:3:11",
														"type": ""
													}
												],
												"src": "2031:118:11"
											},
											{
												"body": {
													"nativeSrc": "2253:124:11",
													"nodeType": "YulBlock",
													"src": "2253:124:11",
													"statements": [
														{
															"nativeSrc": "2263:26:11",
															"nodeType": "YulAssignment",
															"src": "2263:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2275:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2286:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2271:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:11"
																},
																"nativeSrc": "2271:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2271:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2263:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2263:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2343:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2343:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2356:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2367:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2367:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2352:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:11"
																		},
																		"nativeSrc": "2352:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2299:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2299:43:11"
																},
																"nativeSrc": "2299:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2299:71:11"
															},
															"nativeSrc": "2299:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2299:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2155:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2225:9:11",
														"nodeType": "YulTypedName",
														"src": "2225:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2237:6:11",
														"nodeType": "YulTypedName",
														"src": "2237:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2248:4:11",
														"nodeType": "YulTypedName",
														"src": "2248:4:11",
														"type": ""
													}
												],
												"src": "2155:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051611d96380380611d9683398181016040528101906100319190610276565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102e9565b60405180910390fd5b6100b18161012460201b60201c565b50600180819055508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508260028190555081600681905550806007819055505f60035f6101000a81548160ff02191690831515021790555050505050610302565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610212826101e9565b9050919050565b61022281610208565b811461022c575f5ffd5b50565b5f8151905061023d81610219565b92915050565b5f819050919050565b61025581610243565b811461025f575f5ffd5b50565b5f815190506102708161024c565b92915050565b5f5f5f5f6080858703121561028e5761028d6101e5565b5b5f61029b8782880161022f565b94505060206102ac87828801610262565b93505060406102bd87828801610262565b92505060606102ce87828801610262565b91505092959194509250565b6102e381610208565b82525050565b5f6020820190506102fc5f8301846102da565b92915050565b608051611a5961033d5f395f81816107420152818161082a0152818161099a01528181610a5801528181610ba10152610cc60152611a595ff3fe6080604052600436106100fd575f3560e01c8063715018a611610094578063c8bdbfb611610063578063c8bdbfb6146102b7578063d076c608146102cd578063d0febe4c146102f7578063f2fde38b14610301578063fc0c546a14610329576100fd565b8063715018a61461022357806384494708146102395780638da5cb5b14610263578063c43a01351461028d576100fd565b806322c6baf6116100d057806322c6baf61461017f57806324600fc3146101a9578063464695b3146101bf5780636a61e5fc146101fb576100fd565b806304c98b2b146101015780630da2c5f014610117578063125b8b781461013f5780631ad2ad1a14610169575b5f5ffd5b34801561010c575f5ffd5b50610115610353565b005b348015610122575f5ffd5b5061013d60048036038101906101389190610fe0565b6103f2565b005b34801561014a575f5ffd5b50610153610488565b604051610160919061102d565b60405180910390f35b348015610174575f5ffd5b5061017d61048e565b005b34801561018a575f5ffd5b5061019361052b565b6040516101a0919061102d565b60405180910390f35b3480156101b4575f5ffd5b506101bd610531565b005b3480156101ca575f5ffd5b506101e560048036038101906101e091906110a0565b610687565b6040516101f2919061102d565b60405180910390f35b348015610206575f5ffd5b50610221600480360381019061021c91906110cb565b61069c565b005b34801561022e575f5ffd5b506102376106e5565b005b348015610244575f5ffd5b5061024d6106f8565b60405161025a9190611110565b60405180910390f35b34801561026e575f5ffd5b5061027761070a565b6040516102849190611138565b60405180910390f35b348015610298575f5ffd5b506102a1610731565b6040516102ae919061102d565b60405180910390f35b3480156102c2575f5ffd5b506102cb610737565b005b3480156102d8575f5ffd5b506102e16108a8565b6040516102ee919061102d565b60405180910390f35b6102ff6108ae565b005b34801561030c575f5ffd5b50610327600480360381019061032291906110a0565b610c40565b005b348015610334575f5ffd5b5061033d610cc4565b60405161034a91906111ac565b60405180910390f35b61035b610ce8565b60035f9054906101000a900460ff16156103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a19061121f565b60405180910390fd5b600160035f6101000a81548160ff0219169083151502179055507f17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c60405160405180910390a1565b6103fa610ce8565b8082111561043d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610434906112ad565b60405180910390fd5b81600681905550806007819055507f7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b828260405161047c9291906112cb565b60405180910390a15050565b60045481565b610496610ce8565b60035f9054906101000a900460ff166104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061133c565b60405180910390fd5b5f60035f6101000a81548160ff0219169083151502179055507f1eb1561f8507eb9bc6988331f66f369e75710f2b4b678ad5b4a52454b6636f5f60405160405180910390a1565b60065481565b610539610ce8565b5f4790505f811161057f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610576906113a4565b60405180910390fd5b5f61058861070a565b73ffffffffffffffffffffffffffffffffffffffff16826040516105ab906113ef565b5f6040518083038185875af1925050503d805f81146105e5576040519150601f19603f3d011682016040523d82523d5f602084013e6105ea565b606091505b505090508061062e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106259061144d565b60405180910390fd5b61063661070a565b73ffffffffffffffffffffffffffffffffffffffff167f4e5abb9fe9c3cb072c5f05c90db4208588b64cedbfa36e6643e38f40cd82104c8360405161067b919061102d565b60405180910390a25050565b6005602052805f5260405f205f915090505481565b6106a4610ce8565b806002819055507f6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e93976890816040516106da919061102d565b60405180910390a150565b6106ed610ce8565b6106f65f610d6f565b565b60035f9054906101000a900460ff1681565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b61073f610ce8565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107999190611138565b602060405180830381865afa1580156107b4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d8919061147f565b90505f811161081c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610813906114f4565b60405180910390fd5b61086e61082761070a565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610e309092919063ffffffff16565b7f7c885dc2bd1a0b45fe4cf249833d28907319b5b702b3496d49dd231cee2850258160405161089d919061102d565b60405180910390a150565b60025481565b6108b6610eaf565b60035f9054906101000a900460ff16610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb9061133c565b60405180910390fd5b600654341015610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090611582565b60405180910390fd5b60075434111561098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098590611610565b60405180910390fd5b5f670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a01573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a259190611664565b600a610a3191906117eb565b60025434610a3f9190611835565b610a499190611835565b610a5391906118a3565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610aaf9190611138565b602060405180830381865afa158015610aca573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aee919061147f565b1015610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2690611943565b60405180910390fd5b3460045f828254610b409190611961565b925050819055508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b939190611961565b92505081905550610be533827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610e309092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f333483604051610c2d9291906112cb565b60405180910390a250610c3e610efe565b565b610c48610ce8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610caf9190611138565b60405180910390fd5b610cc181610d6f565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610cf0610f07565b73ffffffffffffffffffffffffffffffffffffffff16610d0e61070a565b73ffffffffffffffffffffffffffffffffffffffff1614610d6d57610d31610f07565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d649190611138565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610eaa838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e63929190611994565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f0e565b505050565b600260015403610ef4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eeb90611a05565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f5f60205f8451602086015f885af180610f2d576040513d5f823e3d81fd5b3d92505f519150505f8214610f46576001811415610f61565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fa357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f9a9190611138565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b610fbf81610fad565b8114610fc9575f5ffd5b50565b5f81359050610fda81610fb6565b92915050565b5f5f60408385031215610ff657610ff5610fa9565b5b5f61100385828601610fcc565b925050602061101485828601610fcc565b9150509250929050565b61102781610fad565b82525050565b5f6020820190506110405f83018461101e565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61106f82611046565b9050919050565b61107f81611065565b8114611089575f5ffd5b50565b5f8135905061109a81611076565b92915050565b5f602082840312156110b5576110b4610fa9565b5b5f6110c28482850161108c565b91505092915050565b5f602082840312156110e0576110df610fa9565b5b5f6110ed84828501610fcc565b91505092915050565b5f8115159050919050565b61110a816110f6565b82525050565b5f6020820190506111235f830184611101565b92915050565b61113281611065565b82525050565b5f60208201905061114b5f830184611129565b92915050565b5f819050919050565b5f61117461116f61116a84611046565b611151565b611046565b9050919050565b5f6111858261115a565b9050919050565b5f6111968261117b565b9050919050565b6111a68161118c565b82525050565b5f6020820190506111bf5f83018461119d565b92915050565b5f82825260208201905092915050565b7f50726573616c6520697320616c726561647920616374697665000000000000005f82015250565b5f6112096019836111c5565b9150611214826111d5565b602082019050919050565b5f6020820190508181035f830152611236816111fd565b9050919050565b7f4d696e20627579206d757374206265206c657373207468616e206f72206571755f8201527f616c20746f206d61782062757900000000000000000000000000000000000000602082015250565b5f611297602d836111c5565b91506112a28261123d565b604082019050919050565b5f6020820190508181035f8301526112c48161128b565b9050919050565b5f6040820190506112de5f83018561101e565b6112eb602083018461101e565b9392505050565b7f50726573616c65206973206e6f742061637469766500000000000000000000005f82015250565b5f6113266015836111c5565b9150611331826112f2565b602082019050919050565b5f6020820190508181035f8301526113538161131a565b9050919050565b7f4e6f204d4154494320746f2077697468647261770000000000000000000000005f82015250565b5f61138e6014836111c5565b91506113998261135a565b602082019050919050565b5f6020820190508181035f8301526113bb81611382565b9050919050565b5f81905092915050565b50565b5f6113da5f836113c2565b91506113e5826113cc565b5f82019050919050565b5f6113f9826113cf565b9150819050919050565b7f4661696c656420746f207769746864726177204d4154494300000000000000005f82015250565b5f6114376018836111c5565b915061144282611403565b602082019050919050565b5f6020820190508181035f8301526114648161142b565b9050919050565b5f8151905061147981610fb6565b92915050565b5f6020828403121561149457611493610fa9565b5b5f6114a18482850161146b565b91505092915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6114de6015836111c5565b91506114e9826114aa565b602082019050919050565b5f6020820190508181035f83015261150b816114d2565b9050919050565b7f4d4154494320616d6f756e742069732062656c6f7720746865206d696e696d755f8201527f6d20627579206c696d6974000000000000000000000000000000000000000000602082015250565b5f61156c602b836111c5565b915061157782611512565b604082019050919050565b5f6020820190508181035f83015261159981611560565b9050919050565b7f4d4154494320616d6f756e74206578636565647320746865206d6178696d756d5f8201527f20627579206c696d697400000000000000000000000000000000000000000000602082015250565b5f6115fa602a836111c5565b9150611605826115a0565b604082019050919050565b5f6020820190508181035f830152611627816115ee565b9050919050565b5f60ff82169050919050565b6116438161162e565b811461164d575f5ffd5b50565b5f8151905061165e8161163a565b92915050565b5f6020828403121561167957611678610fa9565b5b5f61168684828501611650565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115611711578086048111156116ed576116ec61168f565b5b60018516156116fc5780820291505b808102905061170a856116bc565b94506116d1565b94509492505050565b5f8261172957600190506117e4565b81611736575f90506117e4565b816001811461174c576002811461175657611785565b60019150506117e4565b60ff8411156117685761176761168f565b5b8360020a91508482111561177f5761177e61168f565b5b506117e4565b5060208310610133831016604e8410600b84101617156117ba5782820a9050838111156117b5576117b461168f565b5b6117e4565b6117c784848460016116c8565b925090508184048111156117de576117dd61168f565b5b81810290505b9392505050565b5f6117f582610fad565b91506118008361162e565b925061182d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461171a565b905092915050565b5f61183f82610fad565b915061184a83610fad565b925082820261185881610fad565b9150828204841483151761186f5761186e61168f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6118ad82610fad565b91506118b883610fad565b9250826118c8576118c7611876565b5b828204905092915050565b7f4e6f7420656e6f75676820746f6b656e7320617661696c61626c6520666f72205f8201527f73616c6500000000000000000000000000000000000000000000000000000000602082015250565b5f61192d6024836111c5565b9150611938826118d3565b604082019050919050565b5f6020820190508181035f83015261195a81611921565b9050919050565b5f61196b82610fad565b915061197683610fad565b925082820190508082111561198e5761198d61168f565b5b92915050565b5f6040820190506119a75f830185611129565b6119b4602083018461101e565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6119ef601f836111c5565b91506119fa826119bb565b602082019050919050565b5f6020820190508181035f830152611a1c816119e3565b905091905056fea264697066735822122027347553206a5c9eae3823ee8d75a247690b0ab7aec454a5afd005961089204e64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D96 CODESIZE SUB DUP1 PUSH2 0x1D96 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x276 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x124 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x302 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212 DUP3 PUSH2 0x1E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x208 JUMP JUMPDEST DUP2 EQ PUSH2 0x22C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23D DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255 DUP2 PUSH2 0x243 JUMP JUMPDEST DUP2 EQ PUSH2 0x25F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x270 DUP2 PUSH2 0x24C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0x1E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0x22F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x262 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2BD DUP8 DUP3 DUP9 ADD PUSH2 0x262 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2CE DUP8 DUP3 DUP9 ADD PUSH2 0x262 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x208 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FC PUSH0 DUP4 ADD DUP5 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1A59 PUSH2 0x33D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x742 ADD MSTORE DUP2 DUP2 PUSH2 0x82A ADD MSTORE DUP2 DUP2 PUSH2 0x99A ADD MSTORE DUP2 DUP2 PUSH2 0xA58 ADD MSTORE DUP2 DUP2 PUSH2 0xBA1 ADD MSTORE PUSH2 0xCC6 ADD MSTORE PUSH2 0x1A59 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xC8BDBFB6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC8BDBFB6 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xD076C608 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x329 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x84494708 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC43A0135 EQ PUSH2 0x28D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x22C6BAF6 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x22C6BAF6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x464695B3 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x6A61E5FC EQ PUSH2 0x1FB JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xDA2C5F0 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x125B8B78 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x1AD2AD1A EQ PUSH2 0x169 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xFE0 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x153 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x237 PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x277 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x737 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x17C3338141363AAB2512C08F8A7764328CA95979F7057663EB93F7E250139B4C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3FA PUSH2 0xCE8 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x7C821B4DCC7C9BFB2D37C50FB125278CF9699532C206A3699CAB994AB149519B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x47C SWAP3 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x496 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x1EB1561F8507EB9BC6988331F66F369E75710F2B4B678AD5B4A52454B6636F5F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x539 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x588 PUSH2 0x70A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 PUSH2 0x70A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E5ABB9FE9C3CB072C5F05C90DB4208588B64CEDBFA36E6643E38F40CD82104C DUP4 PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6A4 PUSH2 0xCE8 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x6B361C807733CC94A3B7BDA39C1C94DCC0511E91AA47B0F7F918068E93976890 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6ED PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x6F6 PUSH0 PUSH2 0xD6F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x73F PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x813 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86E PUSH2 0x827 PUSH2 0x70A JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE30 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x7C885DC2BD1A0B45FE4CF249833D28907319B5B702B3496D49DD231CEE285025 DUP2 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8B6 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLVALUE GT ISZERO PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x985 SWAP1 PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA01 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0xA PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST LT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBE5 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE30 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2D SWAP3 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC3E PUSH2 0xEFE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC48 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xD6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xCF0 PUSH2 0xF07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0E PUSH2 0x70A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD6D JUMPI PUSH2 0xD31 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEAA DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE63 SWAP3 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEB SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF46 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF61 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFA3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBF DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP2 EQ PUSH2 0xFC9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDA DUP2 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF6 JUMPI PUSH2 0xFF5 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1003 DUP6 DUP3 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1014 DUP6 DUP3 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1027 DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1040 PUSH0 DUP4 ADD DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x106F DUP3 PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x107F DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP2 EQ PUSH2 0x1089 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109A DUP2 PUSH2 0x1076 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH2 0x10B4 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C2 DUP5 DUP3 DUP6 ADD PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10ED DUP5 DUP3 DUP6 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110A DUP2 PUSH2 0x10F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1123 PUSH0 DUP4 ADD DUP5 PUSH2 0x1101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1132 DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114B PUSH0 DUP4 ADD DUP5 PUSH2 0x1129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1174 PUSH2 0x116F PUSH2 0x116A DUP5 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1185 DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1196 DUP3 PUSH2 0x117B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A6 DUP2 PUSH2 0x118C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BF PUSH0 DUP4 ADD DUP5 PUSH2 0x119D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520697320616C72656164792061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1209 PUSH1 0x19 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E20627579206D757374206265206C657373207468616E206F7220657175 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C20746F206D61782062757900000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 PUSH1 0x2D DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C4 DUP2 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DE PUSH0 DUP4 ADD DUP6 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x12EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C65206973206E6F74206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1326 PUSH1 0x15 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1331 DUP3 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1353 DUP2 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204D4154494320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x138E PUSH1 0x14 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1399 DUP3 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13BB DUP2 PUSH2 0x1382 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x13DA PUSH0 DUP4 PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E5 DUP3 PUSH2 0x13CC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13F9 DUP3 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207769746864726177204D415449430000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1437 PUSH1 0x18 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1442 DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1464 DUP2 PUSH2 0x142B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1479 DUP2 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1494 JUMPI PUSH2 0x1493 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A1 DUP5 DUP3 DUP6 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14DE PUSH1 0x15 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E9 DUP3 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x150B DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D4154494320616D6F756E742069732062656C6F7720746865206D696E696D75 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D20627579206C696D6974000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156C PUSH1 0x2B DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1577 DUP3 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1599 DUP2 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D4154494320616D6F756E74206578636565647320746865206D6178696D756D PUSH0 DUP3 ADD MSTORE PUSH32 0x20627579206C696D697400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15FA PUSH1 0x2A DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1605 DUP3 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1627 DUP2 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1643 DUP2 PUSH2 0x162E JUMP JUMPDEST DUP2 EQ PUSH2 0x164D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x165E DUP2 PUSH2 0x163A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1679 JUMPI PUSH2 0x1678 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1686 DUP5 DUP3 DUP6 ADD PUSH2 0x1650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1711 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x16ED JUMPI PUSH2 0x16EC PUSH2 0x168F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x16FC JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x170A DUP6 PUSH2 0x16BC JUMP JUMPDEST SWAP5 POP PUSH2 0x16D1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1729 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x17E4 JUMP JUMPDEST DUP2 PUSH2 0x1736 JUMPI PUSH0 SWAP1 POP PUSH2 0x17E4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x174C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1756 JUMPI PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1767 PUSH2 0x168F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x168F JUMP JUMPDEST JUMPDEST POP PUSH2 0x17E4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x17BA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x168F JUMP JUMPDEST JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x17C7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x168F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17F5 DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1800 DUP4 PUSH2 0x162E JUMP JUMPDEST SWAP3 POP PUSH2 0x182D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x171A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183F DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x184A DUP4 PUSH2 0xFAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1858 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x168F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18AD DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x18B8 DUP4 PUSH2 0xFAD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x1876 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C6520666F7220 PUSH0 DUP3 ADD MSTORE PUSH32 0x73616C6500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192D PUSH1 0x24 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1938 DUP3 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x195A DUP2 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196B DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1976 DUP4 PUSH2 0xFAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x168F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19A7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x19B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19EF PUSH1 0x1F DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FA DUP3 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1C DUP2 PUSH2 0x19E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 CALLVALUE PUSH22 0x53206A5C9EAE3823EE8D75A247690B0AB7AEC454A5AF 0xD0 SDIV SWAP7 LT DUP10 KECCAK256 0x4E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "778:6150:10:-:0;;;2516:372;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2671:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;2717:13:10::1;2694:37;;;;;;;;::::0;::::1;2759:15;2742:14;:32;;;;2799:12;2785:11;:26;;;;2836:12;2822:11;:26;;;;2875:5;2859:13;;:21;;;;;;;;;;;;;;;;;;2516:372:::0;;;;778:6150;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2031:118::-;2118:24;2136:5;2118:24;:::i;:::-;2113:3;2106:37;2031:118;;:::o;2155:222::-;2248:4;2286:2;2275:9;2271:18;2263:26;;2299:71;2367:1;2356:9;2352:17;2343:6;2299:71;:::i;:::-;2155:222;;;;:::o;778:6150:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_828": {
									"entryPoint": 3854,
									"id": 828,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3304,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_882": {
									"entryPoint": 3847,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 3838,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 3759,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3439,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokens_1114": {
									"entryPoint": 2222,
									"id": 1114,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxMaticBuy_945": {
									"entryPoint": 1841,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minMaticBuy_943": {
									"entryPoint": 1323,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1802,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleActive_935": {
									"entryPoint": 1784,
									"id": 935,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1765,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_451": {
									"entryPoint": 3632,
									"id": 451,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBuyLimits_1201": {
									"entryPoint": 1010,
									"id": 1201,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTokenPrice_1170": {
									"entryPoint": 1692,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startPresale_1134": {
									"entryPoint": 851,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopPresale_1153": {
									"entryPoint": 1166,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_931": {
									"entryPoint": 3268,
									"id": 931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensPerMatic_933": {
									"entryPoint": 2216,
									"id": 933,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensSoldTo_941": {
									"entryPoint": 1671,
									"id": 941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalMaticRaised_937": {
									"entryPoint": 1160,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3136,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFunds_1247": {
									"entryPoint": 1329,
									"id": 1247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUnsoldTokens_1292": {
									"entryPoint": 1847,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20Metadata_$406_to_t_address_fromStack": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Metadata_$406__to_t_address__fromStack_reversed": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5914,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20Metadata_$406_to_t_address": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b": {
									"entryPoint": 6355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21051:11",
										"nodeType": "YulBlock",
										"src": "0:21051:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:32:11",
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nativeSrc": "389:16:11",
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:11",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nativeSrc": "460:79:11",
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:11",
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:11",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:11",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nativeSrc": "519:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nativeSrc": "519:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nativeSrc": "490:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nativeSrc": "480:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nativeSrc": "473:43:11",
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nativeSrc": "470:63:11",
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:11",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nativeSrc": "597:87:11",
													"nodeType": "YulBlock",
													"src": "597:87:11",
													"statements": [
														{
															"nativeSrc": "607:29:11",
															"nodeType": "YulAssignment",
															"src": "607:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:11"
																},
																"nativeSrc": "616:20:11",
																"nodeType": "YulFunctionCall",
																"src": "616:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:11"
																},
																"nativeSrc": "645:33:11",
																"nodeType": "YulFunctionCall",
																"src": "645:33:11"
															},
															"nativeSrc": "645:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:11",
														"nodeType": "YulTypedName",
														"src": "575:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:11",
														"nodeType": "YulTypedName",
														"src": "583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:11",
														"nodeType": "YulTypedName",
														"src": "591:5:11",
														"type": ""
													}
												],
												"src": "545:139:11"
											},
											{
												"body": {
													"nativeSrc": "773:391:11",
													"nodeType": "YulBlock",
													"src": "773:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "819:83:11",
																"nodeType": "YulBlock",
																"src": "819:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "821:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:11"
																			},
																			"nativeSrc": "821:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:11"
																		},
																		"nativeSrc": "821:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "794:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "803:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "790:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:11"
																		},
																		"nativeSrc": "790:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "815:2:11",
																		"nodeType": "YulLiteral",
																		"src": "815:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "786:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:11"
																},
																"nativeSrc": "786:32:11",
																"nodeType": "YulFunctionCall",
																"src": "786:32:11"
															},
															"nativeSrc": "783:119:11",
															"nodeType": "YulIf",
															"src": "783:119:11"
														},
														{
															"nativeSrc": "912:117:11",
															"nodeType": "YulBlock",
															"src": "912:117:11",
															"statements": [
																{
																	"nativeSrc": "927:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "941:1:11",
																		"nodeType": "YulLiteral",
																		"src": "941:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "931:6:11",
																			"nodeType": "YulTypedName",
																			"src": "931:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "956:63:11",
																	"nodeType": "YulAssignment",
																	"src": "956:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "991:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1002:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "987:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:11"
																				},
																				"nativeSrc": "987:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1011:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "966:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:11"
																		},
																		"nativeSrc": "966:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "956:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1039:118:11",
															"nodeType": "YulBlock",
															"src": "1039:118:11",
															"statements": [
																{
																	"nativeSrc": "1054:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1068:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1058:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1084:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1084:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1119:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1130:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1115:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:11"
																				},
																				"nativeSrc": "1115:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1139:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1094:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:11"
																		},
																		"nativeSrc": "1094:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1084:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "690:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "735:9:11",
														"nodeType": "YulTypedName",
														"src": "735:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "746:7:11",
														"nodeType": "YulTypedName",
														"src": "746:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "758:6:11",
														"nodeType": "YulTypedName",
														"src": "758:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "766:6:11",
														"nodeType": "YulTypedName",
														"src": "766:6:11",
														"type": ""
													}
												],
												"src": "690:474:11"
											},
											{
												"body": {
													"nativeSrc": "1235:53:11",
													"nodeType": "YulBlock",
													"src": "1235:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1252:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1275:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1275:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1257:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1257:17:11"
																		},
																		"nativeSrc": "1257:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1245:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:11"
																},
																"nativeSrc": "1245:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1245:37:11"
															},
															"nativeSrc": "1245:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1245:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1170:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1223:5:11",
														"nodeType": "YulTypedName",
														"src": "1223:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1230:3:11",
														"nodeType": "YulTypedName",
														"src": "1230:3:11",
														"type": ""
													}
												],
												"src": "1170:118:11"
											},
											{
												"body": {
													"nativeSrc": "1392:124:11",
													"nodeType": "YulBlock",
													"src": "1392:124:11",
													"statements": [
														{
															"nativeSrc": "1402:26:11",
															"nodeType": "YulAssignment",
															"src": "1402:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1414:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1425:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1425:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1410:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:11"
																},
																"nativeSrc": "1410:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1410:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1402:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1402:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1482:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1495:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1495:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1506:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1506:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1491:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1491:3:11"
																		},
																		"nativeSrc": "1491:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1491:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1438:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1438:43:11"
																},
																"nativeSrc": "1438:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1438:71:11"
															},
															"nativeSrc": "1438:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1438:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1294:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1364:9:11",
														"nodeType": "YulTypedName",
														"src": "1364:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1376:6:11",
														"nodeType": "YulTypedName",
														"src": "1376:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1387:4:11",
														"nodeType": "YulTypedName",
														"src": "1387:4:11",
														"type": ""
													}
												],
												"src": "1294:222:11"
											},
											{
												"body": {
													"nativeSrc": "1567:81:11",
													"nodeType": "YulBlock",
													"src": "1567:81:11",
													"statements": [
														{
															"nativeSrc": "1577:65:11",
															"nodeType": "YulAssignment",
															"src": "1577:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1592:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1592:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1599:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1588:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:3:11"
																},
																"nativeSrc": "1588:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1588:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1577:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1577:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1522:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1549:5:11",
														"nodeType": "YulTypedName",
														"src": "1549:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1559:7:11",
														"nodeType": "YulTypedName",
														"src": "1559:7:11",
														"type": ""
													}
												],
												"src": "1522:126:11"
											},
											{
												"body": {
													"nativeSrc": "1699:51:11",
													"nodeType": "YulBlock",
													"src": "1699:51:11",
													"statements": [
														{
															"nativeSrc": "1709:35:11",
															"nodeType": "YulAssignment",
															"src": "1709:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1738:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1720:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:11"
																},
																"nativeSrc": "1720:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1720:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1709:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1709:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1654:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1681:5:11",
														"nodeType": "YulTypedName",
														"src": "1681:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1691:7:11",
														"nodeType": "YulTypedName",
														"src": "1691:7:11",
														"type": ""
													}
												],
												"src": "1654:96:11"
											},
											{
												"body": {
													"nativeSrc": "1799:79:11",
													"nodeType": "YulBlock",
													"src": "1799:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1856:16:11",
																"nodeType": "YulBlock",
																"src": "1856:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1865:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1865:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1868:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1868:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1858:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1858:6:11"
																			},
																			"nativeSrc": "1858:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1858:12:11"
																		},
																		"nativeSrc": "1858:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1858:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1822:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1822:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1847:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1847:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1829:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1829:17:11"
																				},
																				"nativeSrc": "1829:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1829:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1819:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1819:2:11"
																		},
																		"nativeSrc": "1819:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1819:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1812:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:11"
																},
																"nativeSrc": "1812:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1812:43:11"
															},
															"nativeSrc": "1809:63:11",
															"nodeType": "YulIf",
															"src": "1809:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1756:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1792:5:11",
														"nodeType": "YulTypedName",
														"src": "1792:5:11",
														"type": ""
													}
												],
												"src": "1756:122:11"
											},
											{
												"body": {
													"nativeSrc": "1936:87:11",
													"nodeType": "YulBlock",
													"src": "1936:87:11",
													"statements": [
														{
															"nativeSrc": "1946:29:11",
															"nodeType": "YulAssignment",
															"src": "1946:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1968:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1968:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1955:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1955:12:11"
																},
																"nativeSrc": "1955:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1955:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1946:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1946:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2011:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2011:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1984:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1984:26:11"
																},
																"nativeSrc": "1984:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1984:33:11"
															},
															"nativeSrc": "1984:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1984:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1884:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1914:6:11",
														"nodeType": "YulTypedName",
														"src": "1914:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1922:3:11",
														"nodeType": "YulTypedName",
														"src": "1922:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1930:5:11",
														"nodeType": "YulTypedName",
														"src": "1930:5:11",
														"type": ""
													}
												],
												"src": "1884:139:11"
											},
											{
												"body": {
													"nativeSrc": "2095:263:11",
													"nodeType": "YulBlock",
													"src": "2095:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:11",
																"nodeType": "YulBlock",
																"src": "2141:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:11"
																			},
																			"nativeSrc": "2143:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:11"
																		},
																		"nativeSrc": "2143:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:11"
																		},
																		"nativeSrc": "2112:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:11"
																},
																"nativeSrc": "2108:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:11"
															},
															"nativeSrc": "2105:119:11",
															"nodeType": "YulIf",
															"src": "2105:119:11"
														},
														{
															"nativeSrc": "2234:117:11",
															"nodeType": "YulBlock",
															"src": "2234:117:11",
															"statements": [
																{
																	"nativeSrc": "2249:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:11"
																				},
																				"nativeSrc": "2309:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:11"
																		},
																		"nativeSrc": "2288:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2029:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:11",
														"nodeType": "YulTypedName",
														"src": "2065:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:11",
														"nodeType": "YulTypedName",
														"src": "2076:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:11",
														"nodeType": "YulTypedName",
														"src": "2088:6:11",
														"type": ""
													}
												],
												"src": "2029:329:11"
											},
											{
												"body": {
													"nativeSrc": "2430:263:11",
													"nodeType": "YulBlock",
													"src": "2430:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:83:11",
																"nodeType": "YulBlock",
																"src": "2476:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2478:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:11"
																			},
																			"nativeSrc": "2478:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:11"
																		},
																		"nativeSrc": "2478:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:11"
																		},
																		"nativeSrc": "2447:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:11"
																},
																"nativeSrc": "2443:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:11"
															},
															"nativeSrc": "2440:119:11",
															"nodeType": "YulIf",
															"src": "2440:119:11"
														},
														{
															"nativeSrc": "2569:117:11",
															"nodeType": "YulBlock",
															"src": "2569:117:11",
															"statements": [
																{
																	"nativeSrc": "2584:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2598:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2588:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:11"
																				},
																				"nativeSrc": "2644:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2623:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:11"
																		},
																		"nativeSrc": "2623:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2613:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2364:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:11",
														"nodeType": "YulTypedName",
														"src": "2400:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2411:7:11",
														"nodeType": "YulTypedName",
														"src": "2411:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2423:6:11",
														"nodeType": "YulTypedName",
														"src": "2423:6:11",
														"type": ""
													}
												],
												"src": "2364:329:11"
											},
											{
												"body": {
													"nativeSrc": "2741:48:11",
													"nodeType": "YulBlock",
													"src": "2741:48:11",
													"statements": [
														{
															"nativeSrc": "2751:32:11",
															"nodeType": "YulAssignment",
															"src": "2751:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2776:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2776:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2769:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2769:6:11"
																		},
																		"nativeSrc": "2769:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2769:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2762:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:11"
																},
																"nativeSrc": "2762:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2762:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2751:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2751:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2699:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2723:5:11",
														"nodeType": "YulTypedName",
														"src": "2723:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2733:7:11",
														"nodeType": "YulTypedName",
														"src": "2733:7:11",
														"type": ""
													}
												],
												"src": "2699:90:11"
											},
											{
												"body": {
													"nativeSrc": "2854:50:11",
													"nodeType": "YulBlock",
													"src": "2854:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2871:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2871:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2891:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2891:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2876:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "2876:14:11"
																		},
																		"nativeSrc": "2876:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2864:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2864:6:11"
																},
																"nativeSrc": "2864:34:11",
																"nodeType": "YulFunctionCall",
																"src": "2864:34:11"
															},
															"nativeSrc": "2864:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "2864:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2795:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2842:5:11",
														"nodeType": "YulTypedName",
														"src": "2842:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2849:3:11",
														"nodeType": "YulTypedName",
														"src": "2849:3:11",
														"type": ""
													}
												],
												"src": "2795:109:11"
											},
											{
												"body": {
													"nativeSrc": "3002:118:11",
													"nodeType": "YulBlock",
													"src": "3002:118:11",
													"statements": [
														{
															"nativeSrc": "3012:26:11",
															"nodeType": "YulAssignment",
															"src": "3012:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3024:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3024:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3035:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3035:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3020:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:11"
																},
																"nativeSrc": "3020:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3020:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3012:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3012:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3086:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3086:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3099:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3110:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3110:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3095:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:11"
																		},
																		"nativeSrc": "3095:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3048:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3048:37:11"
																},
																"nativeSrc": "3048:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3048:65:11"
															},
															"nativeSrc": "3048:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3048:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2910:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2974:9:11",
														"nodeType": "YulTypedName",
														"src": "2974:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2986:6:11",
														"nodeType": "YulTypedName",
														"src": "2986:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2997:4:11",
														"nodeType": "YulTypedName",
														"src": "2997:4:11",
														"type": ""
													}
												],
												"src": "2910:210:11"
											},
											{
												"body": {
													"nativeSrc": "3191:53:11",
													"nodeType": "YulBlock",
													"src": "3191:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3208:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3231:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3231:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3213:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3213:17:11"
																		},
																		"nativeSrc": "3213:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3213:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3201:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:11"
																},
																"nativeSrc": "3201:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3201:37:11"
															},
															"nativeSrc": "3201:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3201:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3126:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3179:5:11",
														"nodeType": "YulTypedName",
														"src": "3179:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3186:3:11",
														"nodeType": "YulTypedName",
														"src": "3186:3:11",
														"type": ""
													}
												],
												"src": "3126:118:11"
											},
											{
												"body": {
													"nativeSrc": "3348:124:11",
													"nodeType": "YulBlock",
													"src": "3348:124:11",
													"statements": [
														{
															"nativeSrc": "3358:26:11",
															"nodeType": "YulAssignment",
															"src": "3358:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3370:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3381:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3366:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:11"
																},
																"nativeSrc": "3366:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3366:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3358:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3438:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:11"
																		},
																		"nativeSrc": "3447:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3394:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3394:43:11"
																},
																"nativeSrc": "3394:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3394:71:11"
															},
															"nativeSrc": "3394:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3394:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3250:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3320:9:11",
														"nodeType": "YulTypedName",
														"src": "3320:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3332:6:11",
														"nodeType": "YulTypedName",
														"src": "3332:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3343:4:11",
														"nodeType": "YulTypedName",
														"src": "3343:4:11",
														"type": ""
													}
												],
												"src": "3250:222:11"
											},
											{
												"body": {
													"nativeSrc": "3510:28:11",
													"nodeType": "YulBlock",
													"src": "3510:28:11",
													"statements": [
														{
															"nativeSrc": "3520:12:11",
															"nodeType": "YulAssignment",
															"src": "3520:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3527:5:11",
																"nodeType": "YulIdentifier",
																"src": "3527:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3520:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3520:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3478:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3496:5:11",
														"nodeType": "YulTypedName",
														"src": "3496:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3506:3:11",
														"nodeType": "YulTypedName",
														"src": "3506:3:11",
														"type": ""
													}
												],
												"src": "3478:60:11"
											},
											{
												"body": {
													"nativeSrc": "3604:82:11",
													"nodeType": "YulBlock",
													"src": "3604:82:11",
													"statements": [
														{
															"nativeSrc": "3614:66:11",
															"nodeType": "YulAssignment",
															"src": "3614:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3672:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3672:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3654:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3654:17:11"
																				},
																				"nativeSrc": "3654:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3654:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3645:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "3645:8:11"
																		},
																		"nativeSrc": "3645:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3645:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3627:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3627:17:11"
																},
																"nativeSrc": "3627:53:11",
																"nodeType": "YulFunctionCall",
																"src": "3627:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3614:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3614:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3544:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3584:5:11",
														"nodeType": "YulTypedName",
														"src": "3584:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3594:9:11",
														"nodeType": "YulTypedName",
														"src": "3594:9:11",
														"type": ""
													}
												],
												"src": "3544:142:11"
											},
											{
												"body": {
													"nativeSrc": "3752:66:11",
													"nodeType": "YulBlock",
													"src": "3752:66:11",
													"statements": [
														{
															"nativeSrc": "3762:50:11",
															"nodeType": "YulAssignment",
															"src": "3762:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3806:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3806:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3775:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3775:30:11"
																},
																"nativeSrc": "3775:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3775:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3762:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3762:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3692:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3732:5:11",
														"nodeType": "YulTypedName",
														"src": "3732:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3742:9:11",
														"nodeType": "YulTypedName",
														"src": "3742:9:11",
														"type": ""
													}
												],
												"src": "3692:126:11"
											},
											{
												"body": {
													"nativeSrc": "3906:66:11",
													"nodeType": "YulBlock",
													"src": "3906:66:11",
													"statements": [
														{
															"nativeSrc": "3916:50:11",
															"nodeType": "YulAssignment",
															"src": "3916:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3960:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3960:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3929:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3929:30:11"
																},
																"nativeSrc": "3929:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3929:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3916:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3916:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20Metadata_$406_to_t_address",
												"nativeSrc": "3824:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3886:5:11",
														"nodeType": "YulTypedName",
														"src": "3886:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3896:9:11",
														"nodeType": "YulTypedName",
														"src": "3896:9:11",
														"type": ""
													}
												],
												"src": "3824:148:11"
											},
											{
												"body": {
													"nativeSrc": "4065:88:11",
													"nodeType": "YulBlock",
													"src": "4065:88:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4082:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4082:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4140:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4140:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20Metadata_$406_to_t_address",
																			"nativeSrc": "4087:52:11",
																			"nodeType": "YulIdentifier",
																			"src": "4087:52:11"
																		},
																		"nativeSrc": "4087:59:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4087:59:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4075:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4075:6:11"
																},
																"nativeSrc": "4075:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4075:72:11"
															},
															"nativeSrc": "4075:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4075:72:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20Metadata_$406_to_t_address_fromStack",
												"nativeSrc": "3978:175:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4053:5:11",
														"nodeType": "YulTypedName",
														"src": "4053:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4060:3:11",
														"nodeType": "YulTypedName",
														"src": "4060:3:11",
														"type": ""
													}
												],
												"src": "3978:175:11"
											},
											{
												"body": {
													"nativeSrc": "4279:146:11",
													"nodeType": "YulBlock",
													"src": "4279:146:11",
													"statements": [
														{
															"nativeSrc": "4289:26:11",
															"nodeType": "YulAssignment",
															"src": "4289:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4301:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4301:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4312:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4297:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4297:3:11"
																},
																"nativeSrc": "4297:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4297:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4289:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4289:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4391:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4391:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4404:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4415:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4415:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4400:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:11"
																		},
																		"nativeSrc": "4400:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4400:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20Metadata_$406_to_t_address_fromStack",
																	"nativeSrc": "4325:65:11",
																	"nodeType": "YulIdentifier",
																	"src": "4325:65:11"
																},
																"nativeSrc": "4325:93:11",
																"nodeType": "YulFunctionCall",
																"src": "4325:93:11"
															},
															"nativeSrc": "4325:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "4325:93:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Metadata_$406__to_t_address__fromStack_reversed",
												"nativeSrc": "4159:266:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4251:9:11",
														"nodeType": "YulTypedName",
														"src": "4251:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4263:6:11",
														"nodeType": "YulTypedName",
														"src": "4263:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4274:4:11",
														"nodeType": "YulTypedName",
														"src": "4274:4:11",
														"type": ""
													}
												],
												"src": "4159:266:11"
											},
											{
												"body": {
													"nativeSrc": "4527:73:11",
													"nodeType": "YulBlock",
													"src": "4527:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4544:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4544:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4549:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4549:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4537:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:11"
																},
																"nativeSrc": "4537:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4537:19:11"
															},
															"nativeSrc": "4537:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "4537:19:11"
														},
														{
															"nativeSrc": "4565:29:11",
															"nodeType": "YulAssignment",
															"src": "4565:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4584:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4584:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4589:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4589:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4580:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4580:3:11"
																},
																"nativeSrc": "4580:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4580:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4565:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "4565:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4431:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4499:3:11",
														"nodeType": "YulTypedName",
														"src": "4499:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4504:6:11",
														"nodeType": "YulTypedName",
														"src": "4504:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4515:11:11",
														"nodeType": "YulTypedName",
														"src": "4515:11:11",
														"type": ""
													}
												],
												"src": "4431:169:11"
											},
											{
												"body": {
													"nativeSrc": "4712:69:11",
													"nodeType": "YulBlock",
													"src": "4712:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4734:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4734:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4742:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4742:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4730:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4730:3:11"
																		},
																		"nativeSrc": "4730:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4730:14:11"
																	},
																	{
																		"hexValue": "50726573616c6520697320616c726561647920616374697665",
																		"kind": "string",
																		"nativeSrc": "4746:27:11",
																		"nodeType": "YulLiteral",
																		"src": "4746:27:11",
																		"type": "",
																		"value": "Presale is already active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4723:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:11"
																},
																"nativeSrc": "4723:51:11",
																"nodeType": "YulFunctionCall",
																"src": "4723:51:11"
															},
															"nativeSrc": "4723:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "4723:51:11"
														}
													]
												},
												"name": "store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
												"nativeSrc": "4606:175:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4704:6:11",
														"nodeType": "YulTypedName",
														"src": "4704:6:11",
														"type": ""
													}
												],
												"src": "4606:175:11"
											},
											{
												"body": {
													"nativeSrc": "4933:220:11",
													"nodeType": "YulBlock",
													"src": "4933:220:11",
													"statements": [
														{
															"nativeSrc": "4943:74:11",
															"nodeType": "YulAssignment",
															"src": "4943:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5009:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5009:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5014:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5014:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4950:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "4950:58:11"
																},
																"nativeSrc": "4950:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4950:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4943:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4943:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5115:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5115:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
																	"nativeSrc": "5026:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "5026:88:11"
																},
																"nativeSrc": "5026:93:11",
																"nodeType": "YulFunctionCall",
																"src": "5026:93:11"
															},
															"nativeSrc": "5026:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "5026:93:11"
														},
														{
															"nativeSrc": "5128:19:11",
															"nodeType": "YulAssignment",
															"src": "5128:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5139:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5139:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5144:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5144:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5135:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:11"
																},
																"nativeSrc": "5135:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5135:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5128:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5128:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4787:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4921:3:11",
														"nodeType": "YulTypedName",
														"src": "4921:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4929:3:11",
														"nodeType": "YulTypedName",
														"src": "4929:3:11",
														"type": ""
													}
												],
												"src": "4787:366:11"
											},
											{
												"body": {
													"nativeSrc": "5330:248:11",
													"nodeType": "YulBlock",
													"src": "5330:248:11",
													"statements": [
														{
															"nativeSrc": "5340:26:11",
															"nodeType": "YulAssignment",
															"src": "5340:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5352:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5363:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5348:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5348:3:11"
																},
																"nativeSrc": "5348:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5348:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5340:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5387:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5387:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5398:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5398:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5383:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:11"
																		},
																		"nativeSrc": "5383:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5383:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5406:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5406:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5412:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5412:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5402:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:11"
																		},
																		"nativeSrc": "5402:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5376:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:11"
																},
																"nativeSrc": "5376:47:11",
																"nodeType": "YulFunctionCall",
																"src": "5376:47:11"
															},
															"nativeSrc": "5376:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "5376:47:11"
														},
														{
															"nativeSrc": "5432:139:11",
															"nodeType": "YulAssignment",
															"src": "5432:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5566:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5566:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5440:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "5440:124:11"
																},
																"nativeSrc": "5440:131:11",
																"nodeType": "YulFunctionCall",
																"src": "5440:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5432:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5432:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5159:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5310:9:11",
														"nodeType": "YulTypedName",
														"src": "5310:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5325:4:11",
														"nodeType": "YulTypedName",
														"src": "5325:4:11",
														"type": ""
													}
												],
												"src": "5159:419:11"
											},
											{
												"body": {
													"nativeSrc": "5690:126:11",
													"nodeType": "YulBlock",
													"src": "5690:126:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5712:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5712:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5720:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5720:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5708:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5708:3:11"
																		},
																		"nativeSrc": "5708:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5708:14:11"
																	},
																	{
																		"hexValue": "4d696e20627579206d757374206265206c657373207468616e206f7220657175",
																		"kind": "string",
																		"nativeSrc": "5724:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5724:34:11",
																		"type": "",
																		"value": "Min buy must be less than or equ"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5701:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5701:6:11"
																},
																"nativeSrc": "5701:58:11",
																"nodeType": "YulFunctionCall",
																"src": "5701:58:11"
															},
															"nativeSrc": "5701:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "5701:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5780:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5780:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5788:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5788:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5776:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:11"
																		},
																		"nativeSrc": "5776:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5776:15:11"
																	},
																	{
																		"hexValue": "616c20746f206d617820627579",
																		"kind": "string",
																		"nativeSrc": "5793:15:11",
																		"nodeType": "YulLiteral",
																		"src": "5793:15:11",
																		"type": "",
																		"value": "al to max buy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5769:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5769:6:11"
																},
																"nativeSrc": "5769:40:11",
																"nodeType": "YulFunctionCall",
																"src": "5769:40:11"
															},
															"nativeSrc": "5769:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "5769:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894",
												"nativeSrc": "5584:232:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5682:6:11",
														"nodeType": "YulTypedName",
														"src": "5682:6:11",
														"type": ""
													}
												],
												"src": "5584:232:11"
											},
											{
												"body": {
													"nativeSrc": "5968:220:11",
													"nodeType": "YulBlock",
													"src": "5968:220:11",
													"statements": [
														{
															"nativeSrc": "5978:74:11",
															"nodeType": "YulAssignment",
															"src": "5978:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6044:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6044:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6049:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6049:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5985:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "5985:58:11"
																},
																"nativeSrc": "5985:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5985:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5978:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6150:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6150:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894",
																	"nativeSrc": "6061:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6061:88:11"
																},
																"nativeSrc": "6061:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6061:93:11"
															},
															"nativeSrc": "6061:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6061:93:11"
														},
														{
															"nativeSrc": "6163:19:11",
															"nodeType": "YulAssignment",
															"src": "6163:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6174:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6174:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6179:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6179:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6170:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:11"
																},
																"nativeSrc": "6170:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6163:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6163:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5822:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5956:3:11",
														"nodeType": "YulTypedName",
														"src": "5956:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5964:3:11",
														"nodeType": "YulTypedName",
														"src": "5964:3:11",
														"type": ""
													}
												],
												"src": "5822:366:11"
											},
											{
												"body": {
													"nativeSrc": "6365:248:11",
													"nodeType": "YulBlock",
													"src": "6365:248:11",
													"statements": [
														{
															"nativeSrc": "6375:26:11",
															"nodeType": "YulAssignment",
															"src": "6375:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6387:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6387:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6398:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6398:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6383:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6383:3:11"
																},
																"nativeSrc": "6383:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6383:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6375:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6375:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6422:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6422:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6433:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6433:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6418:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6418:3:11"
																		},
																		"nativeSrc": "6418:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6418:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6441:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6441:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6447:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6447:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6437:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6437:3:11"
																		},
																		"nativeSrc": "6437:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6437:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6411:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6411:6:11"
																},
																"nativeSrc": "6411:47:11",
																"nodeType": "YulFunctionCall",
																"src": "6411:47:11"
															},
															"nativeSrc": "6411:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "6411:47:11"
														},
														{
															"nativeSrc": "6467:139:11",
															"nodeType": "YulAssignment",
															"src": "6467:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6601:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6601:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6475:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "6475:124:11"
																},
																"nativeSrc": "6475:131:11",
																"nodeType": "YulFunctionCall",
																"src": "6475:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6467:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6467:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6194:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6345:9:11",
														"nodeType": "YulTypedName",
														"src": "6345:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6360:4:11",
														"nodeType": "YulTypedName",
														"src": "6360:4:11",
														"type": ""
													}
												],
												"src": "6194:419:11"
											},
											{
												"body": {
													"nativeSrc": "6745:206:11",
													"nodeType": "YulBlock",
													"src": "6745:206:11",
													"statements": [
														{
															"nativeSrc": "6755:26:11",
															"nodeType": "YulAssignment",
															"src": "6755:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6767:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6767:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6778:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6763:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6763:3:11"
																},
																"nativeSrc": "6763:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6763:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6755:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6755:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6835:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6835:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6848:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6848:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6859:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6859:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6844:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6844:3:11"
																		},
																		"nativeSrc": "6844:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6844:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6791:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6791:43:11"
																},
																"nativeSrc": "6791:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6791:71:11"
															},
															"nativeSrc": "6791:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6791:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6916:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6916:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6929:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6940:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6925:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:11"
																		},
																		"nativeSrc": "6925:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6872:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6872:43:11"
																},
																"nativeSrc": "6872:72:11",
																"nodeType": "YulFunctionCall",
																"src": "6872:72:11"
															},
															"nativeSrc": "6872:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "6872:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6619:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6709:9:11",
														"nodeType": "YulTypedName",
														"src": "6709:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6721:6:11",
														"nodeType": "YulTypedName",
														"src": "6721:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6729:6:11",
														"nodeType": "YulTypedName",
														"src": "6729:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6740:4:11",
														"nodeType": "YulTypedName",
														"src": "6740:4:11",
														"type": ""
													}
												],
												"src": "6619:332:11"
											},
											{
												"body": {
													"nativeSrc": "7063:65:11",
													"nodeType": "YulBlock",
													"src": "7063:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7085:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7085:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7093:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7093:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7081:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:11"
																		},
																		"nativeSrc": "7081:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7081:14:11"
																	},
																	{
																		"hexValue": "50726573616c65206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "7097:23:11",
																		"nodeType": "YulLiteral",
																		"src": "7097:23:11",
																		"type": "",
																		"value": "Presale is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7074:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:11"
																},
																"nativeSrc": "7074:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7074:47:11"
															},
															"nativeSrc": "7074:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7074:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
												"nativeSrc": "6957:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7055:6:11",
														"nodeType": "YulTypedName",
														"src": "7055:6:11",
														"type": ""
													}
												],
												"src": "6957:171:11"
											},
											{
												"body": {
													"nativeSrc": "7280:220:11",
													"nodeType": "YulBlock",
													"src": "7280:220:11",
													"statements": [
														{
															"nativeSrc": "7290:74:11",
															"nodeType": "YulAssignment",
															"src": "7290:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7356:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7356:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7361:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7361:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7297:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "7297:58:11"
																},
																"nativeSrc": "7297:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7297:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7290:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7290:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7462:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7462:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																	"nativeSrc": "7373:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7373:88:11"
																},
																"nativeSrc": "7373:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7373:93:11"
															},
															"nativeSrc": "7373:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7373:93:11"
														},
														{
															"nativeSrc": "7475:19:11",
															"nodeType": "YulAssignment",
															"src": "7475:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7486:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7486:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7491:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7491:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7482:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7482:3:11"
																},
																"nativeSrc": "7482:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7482:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7475:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7134:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7268:3:11",
														"nodeType": "YulTypedName",
														"src": "7268:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7276:3:11",
														"nodeType": "YulTypedName",
														"src": "7276:3:11",
														"type": ""
													}
												],
												"src": "7134:366:11"
											},
											{
												"body": {
													"nativeSrc": "7677:248:11",
													"nodeType": "YulBlock",
													"src": "7677:248:11",
													"statements": [
														{
															"nativeSrc": "7687:26:11",
															"nodeType": "YulAssignment",
															"src": "7687:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7699:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7699:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7710:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7710:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7695:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7695:3:11"
																},
																"nativeSrc": "7695:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7695:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7687:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7687:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7734:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7734:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7745:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7745:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7730:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7730:3:11"
																		},
																		"nativeSrc": "7730:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7730:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7753:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7753:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7759:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7759:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7749:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7749:3:11"
																		},
																		"nativeSrc": "7749:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7749:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7723:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7723:6:11"
																},
																"nativeSrc": "7723:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7723:47:11"
															},
															"nativeSrc": "7723:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7723:47:11"
														},
														{
															"nativeSrc": "7779:139:11",
															"nodeType": "YulAssignment",
															"src": "7779:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7913:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7913:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7787:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7787:124:11"
																},
																"nativeSrc": "7787:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7787:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7779:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7779:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7506:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7657:9:11",
														"nodeType": "YulTypedName",
														"src": "7657:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7672:4:11",
														"nodeType": "YulTypedName",
														"src": "7672:4:11",
														"type": ""
													}
												],
												"src": "7506:419:11"
											},
											{
												"body": {
													"nativeSrc": "8037:64:11",
													"nodeType": "YulBlock",
													"src": "8037:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8059:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8059:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8067:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8067:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:11"
																		},
																		"nativeSrc": "8055:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:14:11"
																	},
																	{
																		"hexValue": "4e6f204d4154494320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "8071:22:11",
																		"nodeType": "YulLiteral",
																		"src": "8071:22:11",
																		"type": "",
																		"value": "No MATIC to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8048:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:11"
																},
																"nativeSrc": "8048:46:11",
																"nodeType": "YulFunctionCall",
																"src": "8048:46:11"
															},
															"nativeSrc": "8048:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "8048:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
												"nativeSrc": "7931:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8029:6:11",
														"nodeType": "YulTypedName",
														"src": "8029:6:11",
														"type": ""
													}
												],
												"src": "7931:170:11"
											},
											{
												"body": {
													"nativeSrc": "8253:220:11",
													"nodeType": "YulBlock",
													"src": "8253:220:11",
													"statements": [
														{
															"nativeSrc": "8263:74:11",
															"nodeType": "YulAssignment",
															"src": "8263:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8329:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8329:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8334:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8334:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8270:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8270:58:11"
																},
																"nativeSrc": "8270:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8270:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8263:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8263:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8435:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8435:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
																	"nativeSrc": "8346:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8346:88:11"
																},
																"nativeSrc": "8346:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8346:93:11"
															},
															"nativeSrc": "8346:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8346:93:11"
														},
														{
															"nativeSrc": "8448:19:11",
															"nodeType": "YulAssignment",
															"src": "8448:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8459:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8459:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8464:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8464:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8455:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8455:3:11"
																},
																"nativeSrc": "8455:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8455:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8448:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8448:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8107:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8241:3:11",
														"nodeType": "YulTypedName",
														"src": "8241:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8249:3:11",
														"nodeType": "YulTypedName",
														"src": "8249:3:11",
														"type": ""
													}
												],
												"src": "8107:366:11"
											},
											{
												"body": {
													"nativeSrc": "8650:248:11",
													"nodeType": "YulBlock",
													"src": "8650:248:11",
													"statements": [
														{
															"nativeSrc": "8660:26:11",
															"nodeType": "YulAssignment",
															"src": "8660:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8672:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8672:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8683:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8683:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8668:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8668:3:11"
																},
																"nativeSrc": "8668:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8668:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8660:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8660:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8707:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8718:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8718:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8703:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:11"
																		},
																		"nativeSrc": "8703:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8703:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8726:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8726:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8732:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8732:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8722:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8722:3:11"
																		},
																		"nativeSrc": "8722:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8722:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8696:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:11"
																},
																"nativeSrc": "8696:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8696:47:11"
															},
															"nativeSrc": "8696:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8696:47:11"
														},
														{
															"nativeSrc": "8752:139:11",
															"nodeType": "YulAssignment",
															"src": "8752:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8886:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8886:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8760:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8760:124:11"
																},
																"nativeSrc": "8760:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8760:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8752:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8752:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8479:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8630:9:11",
														"nodeType": "YulTypedName",
														"src": "8630:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8645:4:11",
														"nodeType": "YulTypedName",
														"src": "8645:4:11",
														"type": ""
													}
												],
												"src": "8479:419:11"
											},
											{
												"body": {
													"nativeSrc": "9017:34:11",
													"nodeType": "YulBlock",
													"src": "9017:34:11",
													"statements": [
														{
															"nativeSrc": "9027:18:11",
															"nodeType": "YulAssignment",
															"src": "9027:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "9042:3:11",
																"nodeType": "YulIdentifier",
																"src": "9042:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9027:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "9027:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8904:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8989:3:11",
														"nodeType": "YulTypedName",
														"src": "8989:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8994:6:11",
														"nodeType": "YulTypedName",
														"src": "8994:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9005:11:11",
														"nodeType": "YulTypedName",
														"src": "9005:11:11",
														"type": ""
													}
												],
												"src": "8904:147:11"
											},
											{
												"body": {
													"nativeSrc": "9163:8:11",
													"nodeType": "YulBlock",
													"src": "9163:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "9057:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9155:6:11",
														"nodeType": "YulTypedName",
														"src": "9155:6:11",
														"type": ""
													}
												],
												"src": "9057:114:11"
											},
											{
												"body": {
													"nativeSrc": "9340:235:11",
													"nodeType": "YulBlock",
													"src": "9340:235:11",
													"statements": [
														{
															"nativeSrc": "9350:90:11",
															"nodeType": "YulAssignment",
															"src": "9350:90:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9433:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9433:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9438:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9438:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9357:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "9357:75:11"
																},
																"nativeSrc": "9357:83:11",
																"nodeType": "YulFunctionCall",
																"src": "9357:83:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9350:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9350:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9538:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9538:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "9449:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9449:88:11"
																},
																"nativeSrc": "9449:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9449:93:11"
															},
															"nativeSrc": "9449:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9449:93:11"
														},
														{
															"nativeSrc": "9551:18:11",
															"nodeType": "YulAssignment",
															"src": "9551:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9562:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9562:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9567:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9567:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9558:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9558:3:11"
																},
																"nativeSrc": "9558:11:11",
																"nodeType": "YulFunctionCall",
																"src": "9558:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9551:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9551:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9177:398:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9328:3:11",
														"nodeType": "YulTypedName",
														"src": "9328:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9336:3:11",
														"nodeType": "YulTypedName",
														"src": "9336:3:11",
														"type": ""
													}
												],
												"src": "9177:398:11"
											},
											{
												"body": {
													"nativeSrc": "9769:191:11",
													"nodeType": "YulBlock",
													"src": "9769:191:11",
													"statements": [
														{
															"nativeSrc": "9780:154:11",
															"nodeType": "YulAssignment",
															"src": "9780:154:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9930:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9930:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9787:141:11",
																	"nodeType": "YulIdentifier",
																	"src": "9787:141:11"
																},
																"nativeSrc": "9787:147:11",
																"nodeType": "YulFunctionCall",
																"src": "9787:147:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9780:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9780:3:11"
																}
															]
														},
														{
															"nativeSrc": "9944:10:11",
															"nodeType": "YulAssignment",
															"src": "9944:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "9951:3:11",
																"nodeType": "YulIdentifier",
																"src": "9951:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9944:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9944:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9581:379:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9756:3:11",
														"nodeType": "YulTypedName",
														"src": "9756:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9765:3:11",
														"nodeType": "YulTypedName",
														"src": "9765:3:11",
														"type": ""
													}
												],
												"src": "9581:379:11"
											},
											{
												"body": {
													"nativeSrc": "10072:68:11",
													"nodeType": "YulBlock",
													"src": "10072:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10094:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10094:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10102:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10102:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10090:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10090:3:11"
																		},
																		"nativeSrc": "10090:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10090:14:11"
																	},
																	{
																		"hexValue": "4661696c656420746f207769746864726177204d41544943",
																		"kind": "string",
																		"nativeSrc": "10106:26:11",
																		"nodeType": "YulLiteral",
																		"src": "10106:26:11",
																		"type": "",
																		"value": "Failed to withdraw MATIC"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10083:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10083:6:11"
																},
																"nativeSrc": "10083:50:11",
																"nodeType": "YulFunctionCall",
																"src": "10083:50:11"
															},
															"nativeSrc": "10083:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "10083:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
												"nativeSrc": "9966:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10064:6:11",
														"nodeType": "YulTypedName",
														"src": "10064:6:11",
														"type": ""
													}
												],
												"src": "9966:174:11"
											},
											{
												"body": {
													"nativeSrc": "10292:220:11",
													"nodeType": "YulBlock",
													"src": "10292:220:11",
													"statements": [
														{
															"nativeSrc": "10302:74:11",
															"nodeType": "YulAssignment",
															"src": "10302:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10368:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10368:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10373:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10373:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10309:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10309:58:11"
																},
																"nativeSrc": "10309:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10309:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10302:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10302:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10474:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10474:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
																	"nativeSrc": "10385:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10385:88:11"
																},
																"nativeSrc": "10385:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10385:93:11"
															},
															"nativeSrc": "10385:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10385:93:11"
														},
														{
															"nativeSrc": "10487:19:11",
															"nodeType": "YulAssignment",
															"src": "10487:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10498:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10498:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10503:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10503:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10494:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10494:3:11"
																},
																"nativeSrc": "10494:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10494:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10487:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10487:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10146:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10280:3:11",
														"nodeType": "YulTypedName",
														"src": "10280:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10288:3:11",
														"nodeType": "YulTypedName",
														"src": "10288:3:11",
														"type": ""
													}
												],
												"src": "10146:366:11"
											},
											{
												"body": {
													"nativeSrc": "10689:248:11",
													"nodeType": "YulBlock",
													"src": "10689:248:11",
													"statements": [
														{
															"nativeSrc": "10699:26:11",
															"nodeType": "YulAssignment",
															"src": "10699:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10711:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10711:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10722:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10722:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10707:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10707:3:11"
																},
																"nativeSrc": "10707:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10707:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10699:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10699:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10746:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10746:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10757:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10757:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10742:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10742:3:11"
																		},
																		"nativeSrc": "10742:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10742:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10765:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10765:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10771:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10771:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10761:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10761:3:11"
																		},
																		"nativeSrc": "10761:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10761:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10735:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10735:6:11"
																},
																"nativeSrc": "10735:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10735:47:11"
															},
															"nativeSrc": "10735:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10735:47:11"
														},
														{
															"nativeSrc": "10791:139:11",
															"nodeType": "YulAssignment",
															"src": "10791:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10925:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10925:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10799:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10799:124:11"
																},
																"nativeSrc": "10799:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10799:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10791:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10791:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10518:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10669:9:11",
														"nodeType": "YulTypedName",
														"src": "10669:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10684:4:11",
														"nodeType": "YulTypedName",
														"src": "10684:4:11",
														"type": ""
													}
												],
												"src": "10518:419:11"
											},
											{
												"body": {
													"nativeSrc": "11006:80:11",
													"nodeType": "YulBlock",
													"src": "11006:80:11",
													"statements": [
														{
															"nativeSrc": "11016:22:11",
															"nodeType": "YulAssignment",
															"src": "11016:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11031:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11031:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11025:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "11025:5:11"
																},
																"nativeSrc": "11025:13:11",
																"nodeType": "YulFunctionCall",
																"src": "11025:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11016:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "11016:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11074:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "11074:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11047:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "11047:26:11"
																},
																"nativeSrc": "11047:33:11",
																"nodeType": "YulFunctionCall",
																"src": "11047:33:11"
															},
															"nativeSrc": "11047:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "11047:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10943:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10984:6:11",
														"nodeType": "YulTypedName",
														"src": "10984:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10992:3:11",
														"nodeType": "YulTypedName",
														"src": "10992:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11000:5:11",
														"nodeType": "YulTypedName",
														"src": "11000:5:11",
														"type": ""
													}
												],
												"src": "10943:143:11"
											},
											{
												"body": {
													"nativeSrc": "11169:274:11",
													"nodeType": "YulBlock",
													"src": "11169:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11215:83:11",
																"nodeType": "YulBlock",
																"src": "11215:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11217:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "11217:77:11"
																			},
																			"nativeSrc": "11217:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11217:79:11"
																		},
																		"nativeSrc": "11217:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11217:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11190:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11190:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11199:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11199:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11186:3:11"
																		},
																		"nativeSrc": "11186:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11186:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11211:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11211:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11182:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11182:3:11"
																},
																"nativeSrc": "11182:32:11",
																"nodeType": "YulFunctionCall",
																"src": "11182:32:11"
															},
															"nativeSrc": "11179:119:11",
															"nodeType": "YulIf",
															"src": "11179:119:11"
														},
														{
															"nativeSrc": "11308:128:11",
															"nodeType": "YulBlock",
															"src": "11308:128:11",
															"statements": [
																{
																	"nativeSrc": "11323:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11323:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11337:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11337:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11327:6:11",
																			"nodeType": "YulTypedName",
																			"src": "11327:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11352:74:11",
																	"nodeType": "YulAssignment",
																	"src": "11352:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11398:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "11398:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11409:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11409:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11394:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11394:3:11"
																				},
																				"nativeSrc": "11394:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11394:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11418:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11418:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11362:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "11362:31:11"
																		},
																		"nativeSrc": "11362:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11362:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11352:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "11352:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11092:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11139:9:11",
														"nodeType": "YulTypedName",
														"src": "11139:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11150:7:11",
														"nodeType": "YulTypedName",
														"src": "11150:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11162:6:11",
														"nodeType": "YulTypedName",
														"src": "11162:6:11",
														"type": ""
													}
												],
												"src": "11092:351:11"
											},
											{
												"body": {
													"nativeSrc": "11555:65:11",
													"nodeType": "YulBlock",
													"src": "11555:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11577:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11577:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11585:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11585:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11573:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11573:3:11"
																		},
																		"nativeSrc": "11573:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11573:14:11"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "11589:23:11",
																		"nodeType": "YulLiteral",
																		"src": "11589:23:11",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11566:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11566:6:11"
																},
																"nativeSrc": "11566:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11566:47:11"
															},
															"nativeSrc": "11566:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11566:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "11449:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11547:6:11",
														"nodeType": "YulTypedName",
														"src": "11547:6:11",
														"type": ""
													}
												],
												"src": "11449:171:11"
											},
											{
												"body": {
													"nativeSrc": "11772:220:11",
													"nodeType": "YulBlock",
													"src": "11772:220:11",
													"statements": [
														{
															"nativeSrc": "11782:74:11",
															"nodeType": "YulAssignment",
															"src": "11782:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11848:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11848:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11853:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11853:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11789:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11789:58:11"
																},
																"nativeSrc": "11789:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11789:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11782:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11782:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11954:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11954:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "11865:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11865:88:11"
																},
																"nativeSrc": "11865:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11865:93:11"
															},
															"nativeSrc": "11865:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11865:93:11"
														},
														{
															"nativeSrc": "11967:19:11",
															"nodeType": "YulAssignment",
															"src": "11967:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11978:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11978:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11983:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11974:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11974:3:11"
																},
																"nativeSrc": "11974:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11974:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11967:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11967:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11626:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11760:3:11",
														"nodeType": "YulTypedName",
														"src": "11760:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11768:3:11",
														"nodeType": "YulTypedName",
														"src": "11768:3:11",
														"type": ""
													}
												],
												"src": "11626:366:11"
											},
											{
												"body": {
													"nativeSrc": "12169:248:11",
													"nodeType": "YulBlock",
													"src": "12169:248:11",
													"statements": [
														{
															"nativeSrc": "12179:26:11",
															"nodeType": "YulAssignment",
															"src": "12179:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12191:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12191:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12202:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12202:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12187:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12187:3:11"
																},
																"nativeSrc": "12187:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12187:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12179:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12179:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12226:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12226:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12237:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12237:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12222:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12222:3:11"
																		},
																		"nativeSrc": "12222:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12222:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12245:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12245:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12251:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12251:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12241:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12241:3:11"
																		},
																		"nativeSrc": "12241:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12241:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12215:6:11"
																},
																"nativeSrc": "12215:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12215:47:11"
															},
															"nativeSrc": "12215:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12215:47:11"
														},
														{
															"nativeSrc": "12271:139:11",
															"nodeType": "YulAssignment",
															"src": "12271:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12405:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12405:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12279:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12279:124:11"
																},
																"nativeSrc": "12279:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12279:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12271:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12271:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11998:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12149:9:11",
														"nodeType": "YulTypedName",
														"src": "12149:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12164:4:11",
														"nodeType": "YulTypedName",
														"src": "12164:4:11",
														"type": ""
													}
												],
												"src": "11998:419:11"
											},
											{
												"body": {
													"nativeSrc": "12529:124:11",
													"nodeType": "YulBlock",
													"src": "12529:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12551:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12551:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12559:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12559:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12547:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12547:3:11"
																		},
																		"nativeSrc": "12547:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12547:14:11"
																	},
																	{
																		"hexValue": "4d4154494320616d6f756e742069732062656c6f7720746865206d696e696d75",
																		"kind": "string",
																		"nativeSrc": "12563:34:11",
																		"nodeType": "YulLiteral",
																		"src": "12563:34:11",
																		"type": "",
																		"value": "MATIC amount is below the minimu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12540:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12540:6:11"
																},
																"nativeSrc": "12540:58:11",
																"nodeType": "YulFunctionCall",
																"src": "12540:58:11"
															},
															"nativeSrc": "12540:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "12540:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12619:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12619:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12627:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12627:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12615:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12615:3:11"
																		},
																		"nativeSrc": "12615:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12615:15:11"
																	},
																	{
																		"hexValue": "6d20627579206c696d6974",
																		"kind": "string",
																		"nativeSrc": "12632:13:11",
																		"nodeType": "YulLiteral",
																		"src": "12632:13:11",
																		"type": "",
																		"value": "m buy limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12608:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12608:6:11"
																},
																"nativeSrc": "12608:38:11",
																"nodeType": "YulFunctionCall",
																"src": "12608:38:11"
															},
															"nativeSrc": "12608:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "12608:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4",
												"nativeSrc": "12423:230:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12521:6:11",
														"nodeType": "YulTypedName",
														"src": "12521:6:11",
														"type": ""
													}
												],
												"src": "12423:230:11"
											},
											{
												"body": {
													"nativeSrc": "12805:220:11",
													"nodeType": "YulBlock",
													"src": "12805:220:11",
													"statements": [
														{
															"nativeSrc": "12815:74:11",
															"nodeType": "YulAssignment",
															"src": "12815:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12881:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12881:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12886:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12886:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12822:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12822:58:11"
																},
																"nativeSrc": "12822:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12822:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12815:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12815:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12987:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12987:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4",
																	"nativeSrc": "12898:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12898:88:11"
																},
																"nativeSrc": "12898:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12898:93:11"
															},
															"nativeSrc": "12898:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12898:93:11"
														},
														{
															"nativeSrc": "13000:19:11",
															"nodeType": "YulAssignment",
															"src": "13000:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13011:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13011:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13016:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13016:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13007:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13007:3:11"
																},
																"nativeSrc": "13007:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13007:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13000:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13000:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12659:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12793:3:11",
														"nodeType": "YulTypedName",
														"src": "12793:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12801:3:11",
														"nodeType": "YulTypedName",
														"src": "12801:3:11",
														"type": ""
													}
												],
												"src": "12659:366:11"
											},
											{
												"body": {
													"nativeSrc": "13202:248:11",
													"nodeType": "YulBlock",
													"src": "13202:248:11",
													"statements": [
														{
															"nativeSrc": "13212:26:11",
															"nodeType": "YulAssignment",
															"src": "13212:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13224:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13224:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13235:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13235:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13220:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13220:3:11"
																},
																"nativeSrc": "13220:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13220:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13212:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13212:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13259:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13259:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13270:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13270:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13255:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13255:3:11"
																		},
																		"nativeSrc": "13255:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13255:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13278:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13278:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13284:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13284:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13274:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13274:3:11"
																		},
																		"nativeSrc": "13274:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13274:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13248:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13248:6:11"
																},
																"nativeSrc": "13248:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13248:47:11"
															},
															"nativeSrc": "13248:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13248:47:11"
														},
														{
															"nativeSrc": "13304:139:11",
															"nodeType": "YulAssignment",
															"src": "13304:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13438:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13438:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13312:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "13312:124:11"
																},
																"nativeSrc": "13312:131:11",
																"nodeType": "YulFunctionCall",
																"src": "13312:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13304:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13304:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13031:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13182:9:11",
														"nodeType": "YulTypedName",
														"src": "13182:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13197:4:11",
														"nodeType": "YulTypedName",
														"src": "13197:4:11",
														"type": ""
													}
												],
												"src": "13031:419:11"
											},
											{
												"body": {
													"nativeSrc": "13562:123:11",
													"nodeType": "YulBlock",
													"src": "13562:123:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13584:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13584:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13592:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13592:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13580:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13580:3:11"
																		},
																		"nativeSrc": "13580:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13580:14:11"
																	},
																	{
																		"hexValue": "4d4154494320616d6f756e74206578636565647320746865206d6178696d756d",
																		"kind": "string",
																		"nativeSrc": "13596:34:11",
																		"nodeType": "YulLiteral",
																		"src": "13596:34:11",
																		"type": "",
																		"value": "MATIC amount exceeds the maximum"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13573:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13573:6:11"
																},
																"nativeSrc": "13573:58:11",
																"nodeType": "YulFunctionCall",
																"src": "13573:58:11"
															},
															"nativeSrc": "13573:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "13573:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13652:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13652:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13660:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13660:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13648:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13648:3:11"
																		},
																		"nativeSrc": "13648:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13648:15:11"
																	},
																	{
																		"hexValue": "20627579206c696d6974",
																		"kind": "string",
																		"nativeSrc": "13665:12:11",
																		"nodeType": "YulLiteral",
																		"src": "13665:12:11",
																		"type": "",
																		"value": " buy limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13641:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13641:6:11"
																},
																"nativeSrc": "13641:37:11",
																"nodeType": "YulFunctionCall",
																"src": "13641:37:11"
															},
															"nativeSrc": "13641:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "13641:37:11"
														}
													]
												},
												"name": "store_literal_in_memory_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0",
												"nativeSrc": "13456:229:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13554:6:11",
														"nodeType": "YulTypedName",
														"src": "13554:6:11",
														"type": ""
													}
												],
												"src": "13456:229:11"
											},
											{
												"body": {
													"nativeSrc": "13837:220:11",
													"nodeType": "YulBlock",
													"src": "13837:220:11",
													"statements": [
														{
															"nativeSrc": "13847:74:11",
															"nodeType": "YulAssignment",
															"src": "13847:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13913:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13913:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13918:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13918:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13854:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13854:58:11"
																},
																"nativeSrc": "13854:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13854:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13847:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13847:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14019:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14019:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0",
																	"nativeSrc": "13930:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13930:88:11"
																},
																"nativeSrc": "13930:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13930:93:11"
															},
															"nativeSrc": "13930:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13930:93:11"
														},
														{
															"nativeSrc": "14032:19:11",
															"nodeType": "YulAssignment",
															"src": "14032:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14043:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14043:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14048:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14048:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14039:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14039:3:11"
																},
																"nativeSrc": "14039:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14039:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14032:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14032:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13691:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13825:3:11",
														"nodeType": "YulTypedName",
														"src": "13825:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13833:3:11",
														"nodeType": "YulTypedName",
														"src": "13833:3:11",
														"type": ""
													}
												],
												"src": "13691:366:11"
											},
											{
												"body": {
													"nativeSrc": "14234:248:11",
													"nodeType": "YulBlock",
													"src": "14234:248:11",
													"statements": [
														{
															"nativeSrc": "14244:26:11",
															"nodeType": "YulAssignment",
															"src": "14244:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14256:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14256:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14267:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14267:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14252:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14252:3:11"
																},
																"nativeSrc": "14252:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14252:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14244:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14244:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14291:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14291:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14302:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14302:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14287:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14287:3:11"
																		},
																		"nativeSrc": "14287:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14287:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14310:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14310:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14316:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14316:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14306:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14306:3:11"
																		},
																		"nativeSrc": "14306:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14306:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14280:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14280:6:11"
																},
																"nativeSrc": "14280:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14280:47:11"
															},
															"nativeSrc": "14280:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14280:47:11"
														},
														{
															"nativeSrc": "14336:139:11",
															"nodeType": "YulAssignment",
															"src": "14336:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14470:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14470:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14344:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14344:124:11"
																},
																"nativeSrc": "14344:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14344:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14336:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14336:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14063:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14214:9:11",
														"nodeType": "YulTypedName",
														"src": "14214:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14229:4:11",
														"nodeType": "YulTypedName",
														"src": "14229:4:11",
														"type": ""
													}
												],
												"src": "14063:419:11"
											},
											{
												"body": {
													"nativeSrc": "14531:43:11",
													"nodeType": "YulBlock",
													"src": "14531:43:11",
													"statements": [
														{
															"nativeSrc": "14541:27:11",
															"nodeType": "YulAssignment",
															"src": "14541:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14556:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "14556:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14563:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14563:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14552:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14552:3:11"
																},
																"nativeSrc": "14552:16:11",
																"nodeType": "YulFunctionCall",
																"src": "14552:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14541:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "14541:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "14488:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14513:5:11",
														"nodeType": "YulTypedName",
														"src": "14513:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14523:7:11",
														"nodeType": "YulTypedName",
														"src": "14523:7:11",
														"type": ""
													}
												],
												"src": "14488:86:11"
											},
											{
												"body": {
													"nativeSrc": "14621:77:11",
													"nodeType": "YulBlock",
													"src": "14621:77:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "14676:16:11",
																"nodeType": "YulBlock",
																"src": "14676:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14685:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14685:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14688:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14688:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14678:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14678:6:11"
																			},
																			"nativeSrc": "14678:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14678:12:11"
																		},
																		"nativeSrc": "14678:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14678:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14644:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "14644:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "14667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "14651:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "14651:15:11"
																				},
																				"nativeSrc": "14651:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14651:22:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14641:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "14641:2:11"
																		},
																		"nativeSrc": "14641:33:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14641:33:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14634:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14634:6:11"
																},
																"nativeSrc": "14634:41:11",
																"nodeType": "YulFunctionCall",
																"src": "14634:41:11"
															},
															"nativeSrc": "14631:61:11",
															"nodeType": "YulIf",
															"src": "14631:61:11"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "14580:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14614:5:11",
														"nodeType": "YulTypedName",
														"src": "14614:5:11",
														"type": ""
													}
												],
												"src": "14580:118:11"
											},
											{
												"body": {
													"nativeSrc": "14765:78:11",
													"nodeType": "YulBlock",
													"src": "14765:78:11",
													"statements": [
														{
															"nativeSrc": "14775:22:11",
															"nodeType": "YulAssignment",
															"src": "14775:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14790:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14790:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14784:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14784:5:11"
																},
																"nativeSrc": "14784:13:11",
																"nodeType": "YulFunctionCall",
																"src": "14784:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14775:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14775:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14831:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "14831:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "14806:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "14806:24:11"
																},
																"nativeSrc": "14806:31:11",
																"nodeType": "YulFunctionCall",
																"src": "14806:31:11"
															},
															"nativeSrc": "14806:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "14806:31:11"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "14704:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14743:6:11",
														"nodeType": "YulTypedName",
														"src": "14743:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14751:3:11",
														"nodeType": "YulTypedName",
														"src": "14751:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14759:5:11",
														"nodeType": "YulTypedName",
														"src": "14759:5:11",
														"type": ""
													}
												],
												"src": "14704:139:11"
											},
											{
												"body": {
													"nativeSrc": "14924:272:11",
													"nodeType": "YulBlock",
													"src": "14924:272:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "14970:83:11",
																"nodeType": "YulBlock",
																"src": "14970:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14972:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "14972:77:11"
																			},
																			"nativeSrc": "14972:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14972:79:11"
																		},
																		"nativeSrc": "14972:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14972:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14945:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "14945:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14954:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14954:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14941:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14941:3:11"
																		},
																		"nativeSrc": "14941:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14941:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14966:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14966:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14937:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14937:3:11"
																},
																"nativeSrc": "14937:32:11",
																"nodeType": "YulFunctionCall",
																"src": "14937:32:11"
															},
															"nativeSrc": "14934:119:11",
															"nodeType": "YulIf",
															"src": "14934:119:11"
														},
														{
															"nativeSrc": "15063:126:11",
															"nodeType": "YulBlock",
															"src": "15063:126:11",
															"statements": [
																{
																	"nativeSrc": "15078:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15078:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15092:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15092:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15082:6:11",
																			"nodeType": "YulTypedName",
																			"src": "15082:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15107:72:11",
																	"nodeType": "YulAssignment",
																	"src": "15107:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15151:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "15151:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15162:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "15162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15147:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "15147:3:11"
																				},
																				"nativeSrc": "15147:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15171:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "15171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "15117:29:11",
																			"nodeType": "YulIdentifier",
																			"src": "15117:29:11"
																		},
																		"nativeSrc": "15117:62:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15117:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15107:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "15107:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "14849:347:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14894:9:11",
														"nodeType": "YulTypedName",
														"src": "14894:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14905:7:11",
														"nodeType": "YulTypedName",
														"src": "14905:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14917:6:11",
														"nodeType": "YulTypedName",
														"src": "14917:6:11",
														"type": ""
													}
												],
												"src": "14849:347:11"
											},
											{
												"body": {
													"nativeSrc": "15230:152:11",
													"nodeType": "YulBlock",
													"src": "15230:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15247:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15247:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15250:77:11",
																		"nodeType": "YulLiteral",
																		"src": "15250:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15240:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15240:6:11"
																},
																"nativeSrc": "15240:88:11",
																"nodeType": "YulFunctionCall",
																"src": "15240:88:11"
															},
															"nativeSrc": "15240:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "15240:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15344:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15344:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15347:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15347:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15337:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15337:6:11"
																},
																"nativeSrc": "15337:15:11",
																"nodeType": "YulFunctionCall",
																"src": "15337:15:11"
															},
															"nativeSrc": "15337:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "15337:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15368:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15368:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15371:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15371:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15361:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15361:6:11"
																},
																"nativeSrc": "15361:15:11",
																"nodeType": "YulFunctionCall",
																"src": "15361:15:11"
															},
															"nativeSrc": "15361:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "15361:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15202:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "15202:180:11"
											},
											{
												"body": {
													"nativeSrc": "15439:51:11",
													"nodeType": "YulBlock",
													"src": "15439:51:11",
													"statements": [
														{
															"nativeSrc": "15449:34:11",
															"nodeType": "YulAssignment",
															"src": "15449:34:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15474:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15474:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15477:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15477:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "15470:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15470:3:11"
																},
																"nativeSrc": "15470:13:11",
																"nodeType": "YulFunctionCall",
																"src": "15470:13:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15449:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "15449:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "15388:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15420:5:11",
														"nodeType": "YulTypedName",
														"src": "15420:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15430:8:11",
														"nodeType": "YulTypedName",
														"src": "15430:8:11",
														"type": ""
													}
												],
												"src": "15388:102:11"
											},
											{
												"body": {
													"nativeSrc": "15569:775:11",
													"nodeType": "YulBlock",
													"src": "15569:775:11",
													"statements": [
														{
															"nativeSrc": "15579:15:11",
															"nodeType": "YulAssignment",
															"src": "15579:15:11",
															"value": {
																"name": "_power",
																"nativeSrc": "15588:6:11",
																"nodeType": "YulIdentifier",
																"src": "15588:6:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15579:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15579:5:11"
																}
															]
														},
														{
															"nativeSrc": "15603:14:11",
															"nodeType": "YulAssignment",
															"src": "15603:14:11",
															"value": {
																"name": "_base",
																"nativeSrc": "15612:5:11",
																"nodeType": "YulIdentifier",
																"src": "15612:5:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15603:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15603:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15661:677:11",
																"nodeType": "YulBlock",
																"src": "15661:677:11",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "15749:22:11",
																			"nodeType": "YulBlock",
																			"src": "15749:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "15751:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "15751:16:11"
																						},
																						"nativeSrc": "15751:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "15751:18:11"
																					},
																					"nativeSrc": "15751:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "15751:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15727:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "15727:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "15737:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "15737:3:11"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "15742:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "15742:4:11"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "15733:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "15733:3:11"
																					},
																					"nativeSrc": "15733:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "15733:14:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "15724:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "15724:2:11"
																			},
																			"nativeSrc": "15724:24:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15724:24:11"
																		},
																		"nativeSrc": "15721:50:11",
																		"nodeType": "YulIf",
																		"src": "15721:50:11"
																	},
																	{
																		"body": {
																			"nativeSrc": "15816:419:11",
																			"nodeType": "YulBlock",
																			"src": "15816:419:11",
																			"statements": [
																				{
																					"nativeSrc": "16196:25:11",
																					"nodeType": "YulAssignment",
																					"src": "16196:25:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "16209:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "16209:5:11"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "16216:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "16216:4:11"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "16205:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "16205:3:11"
																						},
																						"nativeSrc": "16205:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "16205:16:11"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "16196:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "16196:5:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "15791:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "15791:8:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15801:1:11",
																					"nodeType": "YulLiteral",
																					"src": "15801:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15787:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15787:3:11"
																			},
																			"nativeSrc": "15787:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15787:16:11"
																		},
																		"nativeSrc": "15784:451:11",
																		"nodeType": "YulIf",
																		"src": "15784:451:11"
																	},
																	{
																		"nativeSrc": "16248:23:11",
																		"nodeType": "YulAssignment",
																		"src": "16248:23:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "16260:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "16260:4:11"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "16266:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "16266:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "16256:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "16256:3:11"
																			},
																			"nativeSrc": "16256:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16256:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "16248:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16248:4:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16284:44:11",
																		"nodeType": "YulAssignment",
																		"src": "16284:44:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "16319:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "16319:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "16296:22:11",
																				"nodeType": "YulIdentifier",
																				"src": "16296:22:11"
																			},
																			"nativeSrc": "16296:32:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16296:32:11"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "16284:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "16284:8:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15637:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "15637:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15647:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15647:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15634:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "15634:2:11"
																},
																"nativeSrc": "15634:15:11",
																"nodeType": "YulFunctionCall",
																"src": "15634:15:11"
															},
															"nativeSrc": "15626:712:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15650:2:11",
																"nodeType": "YulBlock",
																"src": "15650:2:11",
																"statements": []
															},
															"pre": {
																"nativeSrc": "15630:3:11",
																"nodeType": "YulBlock",
																"src": "15630:3:11",
																"statements": []
															},
															"src": "15626:712:11"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "15496:848:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "15524:6:11",
														"nodeType": "YulTypedName",
														"src": "15524:6:11",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "15532:5:11",
														"nodeType": "YulTypedName",
														"src": "15532:5:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15539:8:11",
														"nodeType": "YulTypedName",
														"src": "15539:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "15549:3:11",
														"nodeType": "YulTypedName",
														"src": "15549:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15557:5:11",
														"nodeType": "YulTypedName",
														"src": "15557:5:11",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "15564:4:11",
														"nodeType": "YulTypedName",
														"src": "15564:4:11",
														"type": ""
													}
												],
												"src": "15496:848:11"
											},
											{
												"body": {
													"nativeSrc": "16410:1013:11",
													"nodeType": "YulBlock",
													"src": "16410:1013:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "16605:20:11",
																"nodeType": "YulBlock",
																"src": "16605:20:11",
																"statements": [
																	{
																		"nativeSrc": "16607:10:11",
																		"nodeType": "YulAssignment",
																		"src": "16607:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16616:1:11",
																			"nodeType": "YulLiteral",
																			"src": "16616:1:11",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "16607:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "16607:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16618:5:11",
																		"nodeType": "YulLeave",
																		"src": "16618:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "16595:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "16595:8:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16588:6:11"
																},
																"nativeSrc": "16588:16:11",
																"nodeType": "YulFunctionCall",
																"src": "16588:16:11"
															},
															"nativeSrc": "16585:40:11",
															"nodeType": "YulIf",
															"src": "16585:40:11"
														},
														{
															"body": {
																"nativeSrc": "16650:20:11",
																"nodeType": "YulBlock",
																"src": "16650:20:11",
																"statements": [
																	{
																		"nativeSrc": "16652:10:11",
																		"nodeType": "YulAssignment",
																		"src": "16652:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16661:1:11",
																			"nodeType": "YulLiteral",
																			"src": "16661:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "16652:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "16652:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16663:5:11",
																		"nodeType": "YulLeave",
																		"src": "16663:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "16644:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16644:4:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16637:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16637:6:11"
																},
																"nativeSrc": "16637:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16637:12:11"
															},
															"nativeSrc": "16634:36:11",
															"nodeType": "YulIf",
															"src": "16634:36:11"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16780:20:11",
																		"nodeType": "YulBlock",
																		"src": "16780:20:11",
																		"statements": [
																			{
																				"nativeSrc": "16782:10:11",
																				"nodeType": "YulAssignment",
																				"src": "16782:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16791:1:11",
																					"nodeType": "YulLiteral",
																					"src": "16791:1:11",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "16782:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "16782:5:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "16793:5:11",
																				"nodeType": "YulLeave",
																				"src": "16793:5:11"
																			}
																		]
																	},
																	"nativeSrc": "16773:27:11",
																	"nodeType": "YulCase",
																	"src": "16773:27:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16778:1:11",
																		"nodeType": "YulLiteral",
																		"src": "16778:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "16824:176:11",
																		"nodeType": "YulBlock",
																		"src": "16824:176:11",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "16859:22:11",
																					"nodeType": "YulBlock",
																					"src": "16859:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "16861:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "16861:16:11"
																								},
																								"nativeSrc": "16861:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "16861:18:11"
																							},
																							"nativeSrc": "16861:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "16861:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "16844:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "16844:8:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "16854:3:11",
																							"nodeType": "YulLiteral",
																							"src": "16854:3:11",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "16841:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "16841:2:11"
																					},
																					"nativeSrc": "16841:17:11",
																					"nodeType": "YulFunctionCall",
																					"src": "16841:17:11"
																				},
																				"nativeSrc": "16838:43:11",
																				"nodeType": "YulIf",
																				"src": "16838:43:11"
																			},
																			{
																				"nativeSrc": "16894:25:11",
																				"nodeType": "YulAssignment",
																				"src": "16894:25:11",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "16907:1:11",
																							"nodeType": "YulLiteral",
																							"src": "16907:1:11",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "16910:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "16910:8:11"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "16903:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "16903:3:11"
																					},
																					"nativeSrc": "16903:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "16903:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "16894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "16894:5:11"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16950:22:11",
																					"nodeType": "YulBlock",
																					"src": "16950:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "16952:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "16952:16:11"
																								},
																								"nativeSrc": "16952:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "16952:18:11"
																							},
																							"nativeSrc": "16952:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "16952:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "16938:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "16938:5:11"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "16945:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "16945:3:11"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "16935:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "16935:2:11"
																					},
																					"nativeSrc": "16935:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "16935:14:11"
																				},
																				"nativeSrc": "16932:40:11",
																				"nodeType": "YulIf",
																				"src": "16932:40:11"
																			},
																			{
																				"nativeSrc": "16985:5:11",
																				"nodeType": "YulLeave",
																				"src": "16985:5:11"
																			}
																		]
																	},
																	"nativeSrc": "16809:191:11",
																	"nodeType": "YulCase",
																	"src": "16809:191:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16814:1:11",
																		"nodeType": "YulLiteral",
																		"src": "16814:1:11",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "16730:4:11",
																"nodeType": "YulIdentifier",
																"src": "16730:4:11"
															},
															"nativeSrc": "16723:277:11",
															"nodeType": "YulSwitch",
															"src": "16723:277:11"
														},
														{
															"body": {
																"nativeSrc": "17132:123:11",
																"nodeType": "YulBlock",
																"src": "17132:123:11",
																"statements": [
																	{
																		"nativeSrc": "17146:28:11",
																		"nodeType": "YulAssignment",
																		"src": "17146:28:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17159:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "17159:4:11"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "17165:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "17165:8:11"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "17155:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "17155:3:11"
																			},
																			"nativeSrc": "17155:19:11",
																			"nodeType": "YulFunctionCall",
																			"src": "17155:19:11"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17146:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "17146:5:11"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17205:22:11",
																			"nodeType": "YulBlock",
																			"src": "17205:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "17207:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "17207:16:11"
																						},
																						"nativeSrc": "17207:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "17207:18:11"
																					},
																					"nativeSrc": "17207:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "17207:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "17193:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "17193:5:11"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "17200:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "17200:3:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "17190:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "17190:2:11"
																			},
																			"nativeSrc": "17190:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "17190:14:11"
																		},
																		"nativeSrc": "17187:40:11",
																		"nodeType": "YulIf",
																		"src": "17187:40:11"
																	},
																	{
																		"nativeSrc": "17240:5:11",
																		"nodeType": "YulLeave",
																		"src": "17240:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "17035:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "17035:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17041:2:11",
																						"nodeType": "YulLiteral",
																						"src": "17041:2:11",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17032:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "17032:2:11"
																				},
																				"nativeSrc": "17032:12:11",
																				"nodeType": "YulFunctionCall",
																				"src": "17032:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "17049:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "17049:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17059:2:11",
																						"nodeType": "YulLiteral",
																						"src": "17059:2:11",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17046:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "17046:2:11"
																				},
																				"nativeSrc": "17046:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "17046:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17028:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17028:3:11"
																		},
																		"nativeSrc": "17028:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17028:35:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "17084:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "17084:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17090:3:11",
																						"nodeType": "YulLiteral",
																						"src": "17090:3:11",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17081:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "17081:2:11"
																				},
																				"nativeSrc": "17081:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "17081:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "17099:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "17099:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17109:2:11",
																						"nodeType": "YulLiteral",
																						"src": "17109:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17096:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "17096:2:11"
																				},
																				"nativeSrc": "17096:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "17096:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17077:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17077:3:11"
																		},
																		"nativeSrc": "17077:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17077:36:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17012:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "17012:2:11"
																},
																"nativeSrc": "17012:111:11",
																"nodeType": "YulFunctionCall",
																"src": "17012:111:11"
															},
															"nativeSrc": "17009:246:11",
															"nodeType": "YulIf",
															"src": "17009:246:11"
														},
														{
															"nativeSrc": "17265:57:11",
															"nodeType": "YulAssignment",
															"src": "17265:57:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17299:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17299:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "17302:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17302:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "17308:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "17308:8:11"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "17318:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17318:3:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "17280:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "17280:18:11"
																},
																"nativeSrc": "17280:42:11",
																"nodeType": "YulFunctionCall",
																"src": "17280:42:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17265:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "17265:5:11"
																},
																{
																	"name": "base",
																	"nativeSrc": "17272:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17272:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17361:22:11",
																"nodeType": "YulBlock",
																"src": "17361:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17363:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "17363:16:11"
																			},
																			"nativeSrc": "17363:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "17363:18:11"
																		},
																		"nativeSrc": "17363:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "17363:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "17338:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "17338:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "17349:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "17349:3:11"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "17354:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17354:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "17345:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17345:3:11"
																		},
																		"nativeSrc": "17345:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17345:14:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17335:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "17335:2:11"
																},
																"nativeSrc": "17335:25:11",
																"nodeType": "YulFunctionCall",
																"src": "17335:25:11"
															},
															"nativeSrc": "17332:51:11",
															"nodeType": "YulIf",
															"src": "17332:51:11"
														},
														{
															"nativeSrc": "17392:25:11",
															"nodeType": "YulAssignment",
															"src": "17392:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "17405:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "17405:5:11"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "17412:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17412:4:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17401:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17401:3:11"
																},
																"nativeSrc": "17401:16:11",
																"nodeType": "YulFunctionCall",
																"src": "17401:16:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17392:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "17392:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "16350:1073:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "16380:4:11",
														"nodeType": "YulTypedName",
														"src": "16380:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "16386:8:11",
														"nodeType": "YulTypedName",
														"src": "16386:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "16396:3:11",
														"nodeType": "YulTypedName",
														"src": "16396:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "16404:5:11",
														"nodeType": "YulTypedName",
														"src": "16404:5:11",
														"type": ""
													}
												],
												"src": "16350:1073:11"
											},
											{
												"body": {
													"nativeSrc": "17493:217:11",
													"nodeType": "YulBlock",
													"src": "17493:217:11",
													"statements": [
														{
															"nativeSrc": "17503:31:11",
															"nodeType": "YulAssignment",
															"src": "17503:31:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "17529:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17529:4:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17511:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "17511:17:11"
																},
																"nativeSrc": "17511:23:11",
																"nodeType": "YulFunctionCall",
																"src": "17511:23:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "17503:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17503:4:11"
																}
															]
														},
														{
															"nativeSrc": "17543:37:11",
															"nodeType": "YulAssignment",
															"src": "17543:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17571:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "17571:8:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "17555:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "17555:15:11"
																},
																"nativeSrc": "17555:25:11",
																"nodeType": "YulFunctionCall",
																"src": "17555:25:11"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "17543:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "17543:8:11"
																}
															]
														},
														{
															"nativeSrc": "17590:113:11",
															"nodeType": "YulAssignment",
															"src": "17590:113:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "17620:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17620:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "17626:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "17626:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17636:66:11",
																		"nodeType": "YulLiteral",
																		"src": "17636:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "17599:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "17599:20:11"
																},
																"nativeSrc": "17599:104:11",
																"nodeType": "YulFunctionCall",
																"src": "17599:104:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17590:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "17590:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "17429:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "17468:4:11",
														"nodeType": "YulTypedName",
														"src": "17468:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17474:8:11",
														"nodeType": "YulTypedName",
														"src": "17474:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17487:5:11",
														"nodeType": "YulTypedName",
														"src": "17487:5:11",
														"type": ""
													}
												],
												"src": "17429:281:11"
											},
											{
												"body": {
													"nativeSrc": "17764:362:11",
													"nodeType": "YulBlock",
													"src": "17764:362:11",
													"statements": [
														{
															"nativeSrc": "17774:25:11",
															"nodeType": "YulAssignment",
															"src": "17774:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17797:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17797:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17779:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "17779:17:11"
																},
																"nativeSrc": "17779:20:11",
																"nodeType": "YulFunctionCall",
																"src": "17779:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17774:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "17774:1:11"
																}
															]
														},
														{
															"nativeSrc": "17808:25:11",
															"nodeType": "YulAssignment",
															"src": "17808:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17831:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17831:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17813:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "17813:17:11"
																},
																"nativeSrc": "17813:20:11",
																"nodeType": "YulFunctionCall",
																"src": "17813:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17808:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "17808:1:11"
																}
															]
														},
														{
															"nativeSrc": "17842:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "17842:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17865:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17865:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17868:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17868:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17861:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17861:3:11"
																},
																"nativeSrc": "17861:9:11",
																"nodeType": "YulFunctionCall",
																"src": "17861:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17846:11:11",
																	"nodeType": "YulTypedName",
																	"src": "17846:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17879:41:11",
															"nodeType": "YulAssignment",
															"src": "17879:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17908:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "17908:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17890:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "17890:17:11"
																},
																"nativeSrc": "17890:30:11",
																"nodeType": "YulFunctionCall",
																"src": "17890:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17879:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "17879:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18097:22:11",
																"nodeType": "YulBlock",
																"src": "18097:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18099:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "18099:16:11"
																			},
																			"nativeSrc": "18099:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18099:18:11"
																		},
																		"nativeSrc": "18099:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18099:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18030:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "18030:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18023:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "18023:6:11"
																				},
																				"nativeSrc": "18023:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "18023:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18053:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "18053:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18060:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "18060:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18069:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "18069:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18056:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "18056:3:11"
																						},
																						"nativeSrc": "18056:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "18056:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18050:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "18050:2:11"
																				},
																				"nativeSrc": "18050:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "18050:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "18003:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "18003:2:11"
																		},
																		"nativeSrc": "18003:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18003:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17983:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17983:6:11"
																},
																"nativeSrc": "17983:113:11",
																"nodeType": "YulFunctionCall",
																"src": "17983:113:11"
															},
															"nativeSrc": "17980:139:11",
															"nodeType": "YulIf",
															"src": "17980:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17716:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17747:1:11",
														"nodeType": "YulTypedName",
														"src": "17747:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17750:1:11",
														"nodeType": "YulTypedName",
														"src": "17750:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17756:7:11",
														"nodeType": "YulTypedName",
														"src": "17756:7:11",
														"type": ""
													}
												],
												"src": "17716:410:11"
											},
											{
												"body": {
													"nativeSrc": "18160:152:11",
													"nodeType": "YulBlock",
													"src": "18160:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18177:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18177:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18180:77:11",
																		"nodeType": "YulLiteral",
																		"src": "18180:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18170:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18170:6:11"
																},
																"nativeSrc": "18170:88:11",
																"nodeType": "YulFunctionCall",
																"src": "18170:88:11"
															},
															"nativeSrc": "18170:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "18170:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18274:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18274:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18277:4:11",
																		"nodeType": "YulLiteral",
																		"src": "18277:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18267:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18267:6:11"
																},
																"nativeSrc": "18267:15:11",
																"nodeType": "YulFunctionCall",
																"src": "18267:15:11"
															},
															"nativeSrc": "18267:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "18267:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18298:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18298:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18301:4:11",
																		"nodeType": "YulLiteral",
																		"src": "18301:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18291:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18291:6:11"
																},
																"nativeSrc": "18291:15:11",
																"nodeType": "YulFunctionCall",
																"src": "18291:15:11"
															},
															"nativeSrc": "18291:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "18291:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "18132:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "18132:180:11"
											},
											{
												"body": {
													"nativeSrc": "18360:143:11",
													"nodeType": "YulBlock",
													"src": "18360:143:11",
													"statements": [
														{
															"nativeSrc": "18370:25:11",
															"nodeType": "YulAssignment",
															"src": "18370:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18393:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "18393:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18375:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "18375:17:11"
																},
																"nativeSrc": "18375:20:11",
																"nodeType": "YulFunctionCall",
																"src": "18375:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18370:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "18370:1:11"
																}
															]
														},
														{
															"nativeSrc": "18404:25:11",
															"nodeType": "YulAssignment",
															"src": "18404:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18427:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "18427:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18409:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "18409:17:11"
																},
																"nativeSrc": "18409:20:11",
																"nodeType": "YulFunctionCall",
																"src": "18409:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18404:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "18404:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18451:22:11",
																"nodeType": "YulBlock",
																"src": "18451:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18453:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "18453:16:11"
																			},
																			"nativeSrc": "18453:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18453:18:11"
																		},
																		"nativeSrc": "18453:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18453:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18448:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "18448:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18441:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18441:6:11"
																},
																"nativeSrc": "18441:9:11",
																"nodeType": "YulFunctionCall",
																"src": "18441:9:11"
															},
															"nativeSrc": "18438:35:11",
															"nodeType": "YulIf",
															"src": "18438:35:11"
														},
														{
															"nativeSrc": "18483:14:11",
															"nodeType": "YulAssignment",
															"src": "18483:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18492:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "18492:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18495:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "18495:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18488:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18488:3:11"
																},
																"nativeSrc": "18488:9:11",
																"nodeType": "YulFunctionCall",
																"src": "18488:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18483:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "18483:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "18318:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18349:1:11",
														"nodeType": "YulTypedName",
														"src": "18349:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18352:1:11",
														"nodeType": "YulTypedName",
														"src": "18352:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18358:1:11",
														"nodeType": "YulTypedName",
														"src": "18358:1:11",
														"type": ""
													}
												],
												"src": "18318:185:11"
											},
											{
												"body": {
													"nativeSrc": "18615:117:11",
													"nodeType": "YulBlock",
													"src": "18615:117:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18637:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18637:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18645:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18645:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18633:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18633:3:11"
																		},
																		"nativeSrc": "18633:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18633:14:11"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c6520666f7220",
																		"kind": "string",
																		"nativeSrc": "18649:34:11",
																		"nodeType": "YulLiteral",
																		"src": "18649:34:11",
																		"type": "",
																		"value": "Not enough tokens available for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18626:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18626:6:11"
																},
																"nativeSrc": "18626:58:11",
																"nodeType": "YulFunctionCall",
																"src": "18626:58:11"
															},
															"nativeSrc": "18626:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "18626:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18705:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18705:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18713:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18713:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18701:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18701:3:11"
																		},
																		"nativeSrc": "18701:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18701:15:11"
																	},
																	{
																		"hexValue": "73616c65",
																		"kind": "string",
																		"nativeSrc": "18718:6:11",
																		"nodeType": "YulLiteral",
																		"src": "18718:6:11",
																		"type": "",
																		"value": "sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18694:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18694:6:11"
																},
																"nativeSrc": "18694:31:11",
																"nodeType": "YulFunctionCall",
																"src": "18694:31:11"
															},
															"nativeSrc": "18694:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "18694:31:11"
														}
													]
												},
												"name": "store_literal_in_memory_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b",
												"nativeSrc": "18509:223:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18607:6:11",
														"nodeType": "YulTypedName",
														"src": "18607:6:11",
														"type": ""
													}
												],
												"src": "18509:223:11"
											},
											{
												"body": {
													"nativeSrc": "18884:220:11",
													"nodeType": "YulBlock",
													"src": "18884:220:11",
													"statements": [
														{
															"nativeSrc": "18894:74:11",
															"nodeType": "YulAssignment",
															"src": "18894:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18960:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18960:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18965:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18965:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18901:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "18901:58:11"
																},
																"nativeSrc": "18901:67:11",
																"nodeType": "YulFunctionCall",
																"src": "18901:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18894:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18894:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19066:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19066:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b",
																	"nativeSrc": "18977:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "18977:88:11"
																},
																"nativeSrc": "18977:93:11",
																"nodeType": "YulFunctionCall",
																"src": "18977:93:11"
															},
															"nativeSrc": "18977:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "18977:93:11"
														},
														{
															"nativeSrc": "19079:19:11",
															"nodeType": "YulAssignment",
															"src": "19079:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19090:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19090:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19095:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19095:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19086:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19086:3:11"
																},
																"nativeSrc": "19086:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19086:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19079:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19079:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18738:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18872:3:11",
														"nodeType": "YulTypedName",
														"src": "18872:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18880:3:11",
														"nodeType": "YulTypedName",
														"src": "18880:3:11",
														"type": ""
													}
												],
												"src": "18738:366:11"
											},
											{
												"body": {
													"nativeSrc": "19281:248:11",
													"nodeType": "YulBlock",
													"src": "19281:248:11",
													"statements": [
														{
															"nativeSrc": "19291:26:11",
															"nodeType": "YulAssignment",
															"src": "19291:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19303:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19303:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19314:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19314:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19299:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19299:3:11"
																},
																"nativeSrc": "19299:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19299:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19291:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19291:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19338:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19338:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19349:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19349:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19334:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19334:3:11"
																		},
																		"nativeSrc": "19334:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19334:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19357:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "19357:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19363:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19363:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19353:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19353:3:11"
																		},
																		"nativeSrc": "19353:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19353:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19327:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19327:6:11"
																},
																"nativeSrc": "19327:47:11",
																"nodeType": "YulFunctionCall",
																"src": "19327:47:11"
															},
															"nativeSrc": "19327:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "19327:47:11"
														},
														{
															"nativeSrc": "19383:139:11",
															"nodeType": "YulAssignment",
															"src": "19383:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19517:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "19517:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19391:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "19391:124:11"
																},
																"nativeSrc": "19391:131:11",
																"nodeType": "YulFunctionCall",
																"src": "19391:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19383:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19383:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19110:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19261:9:11",
														"nodeType": "YulTypedName",
														"src": "19261:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19276:4:11",
														"nodeType": "YulTypedName",
														"src": "19276:4:11",
														"type": ""
													}
												],
												"src": "19110:419:11"
											},
											{
												"body": {
													"nativeSrc": "19579:147:11",
													"nodeType": "YulBlock",
													"src": "19579:147:11",
													"statements": [
														{
															"nativeSrc": "19589:25:11",
															"nodeType": "YulAssignment",
															"src": "19589:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19612:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "19612:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19594:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "19594:17:11"
																},
																"nativeSrc": "19594:20:11",
																"nodeType": "YulFunctionCall",
																"src": "19594:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19589:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "19589:1:11"
																}
															]
														},
														{
															"nativeSrc": "19623:25:11",
															"nodeType": "YulAssignment",
															"src": "19623:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19646:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "19646:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19628:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "19628:17:11"
																},
																"nativeSrc": "19628:20:11",
																"nodeType": "YulFunctionCall",
																"src": "19628:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19623:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "19623:1:11"
																}
															]
														},
														{
															"nativeSrc": "19657:16:11",
															"nodeType": "YulAssignment",
															"src": "19657:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19668:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "19668:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19671:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "19671:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19664:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19664:3:11"
																},
																"nativeSrc": "19664:9:11",
																"nodeType": "YulFunctionCall",
																"src": "19664:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19657:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19657:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19697:22:11",
																"nodeType": "YulBlock",
																"src": "19697:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19699:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "19699:16:11"
																			},
																			"nativeSrc": "19699:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "19699:18:11"
																		},
																		"nativeSrc": "19699:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "19699:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19689:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "19689:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19692:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19692:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19686:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "19686:2:11"
																},
																"nativeSrc": "19686:10:11",
																"nodeType": "YulFunctionCall",
																"src": "19686:10:11"
															},
															"nativeSrc": "19683:36:11",
															"nodeType": "YulIf",
															"src": "19683:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19535:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19566:1:11",
														"nodeType": "YulTypedName",
														"src": "19566:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19569:1:11",
														"nodeType": "YulTypedName",
														"src": "19569:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19575:3:11",
														"nodeType": "YulTypedName",
														"src": "19575:3:11",
														"type": ""
													}
												],
												"src": "19535:191:11"
											},
											{
												"body": {
													"nativeSrc": "19858:206:11",
													"nodeType": "YulBlock",
													"src": "19858:206:11",
													"statements": [
														{
															"nativeSrc": "19868:26:11",
															"nodeType": "YulAssignment",
															"src": "19868:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19880:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19880:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19891:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19891:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19876:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19876:3:11"
																},
																"nativeSrc": "19876:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19876:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19868:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19868:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19948:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19948:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19961:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19961:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19972:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19972:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19957:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19957:3:11"
																		},
																		"nativeSrc": "19957:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19957:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19904:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19904:43:11"
																},
																"nativeSrc": "19904:71:11",
																"nodeType": "YulFunctionCall",
																"src": "19904:71:11"
															},
															"nativeSrc": "19904:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "19904:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20029:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20029:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20042:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20042:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20053:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20053:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20038:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20038:3:11"
																		},
																		"nativeSrc": "20038:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20038:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19985:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19985:43:11"
																},
																"nativeSrc": "19985:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19985:72:11"
															},
															"nativeSrc": "19985:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19985:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19732:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19822:9:11",
														"nodeType": "YulTypedName",
														"src": "19822:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19834:6:11",
														"nodeType": "YulTypedName",
														"src": "19834:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19842:6:11",
														"nodeType": "YulTypedName",
														"src": "19842:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19853:4:11",
														"nodeType": "YulTypedName",
														"src": "19853:4:11",
														"type": ""
													}
												],
												"src": "19732:332:11"
											},
											{
												"body": {
													"nativeSrc": "20176:75:11",
													"nodeType": "YulBlock",
													"src": "20176:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20198:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20198:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20206:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20206:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20194:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20194:3:11"
																		},
																		"nativeSrc": "20194:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20194:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "20210:33:11",
																		"nodeType": "YulLiteral",
																		"src": "20210:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20187:6:11"
																},
																"nativeSrc": "20187:57:11",
																"nodeType": "YulFunctionCall",
																"src": "20187:57:11"
															},
															"nativeSrc": "20187:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "20187:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "20070:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20168:6:11",
														"nodeType": "YulTypedName",
														"src": "20168:6:11",
														"type": ""
													}
												],
												"src": "20070:181:11"
											},
											{
												"body": {
													"nativeSrc": "20403:220:11",
													"nodeType": "YulBlock",
													"src": "20403:220:11",
													"statements": [
														{
															"nativeSrc": "20413:74:11",
															"nodeType": "YulAssignment",
															"src": "20413:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20479:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20479:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20484:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20484:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20420:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "20420:58:11"
																},
																"nativeSrc": "20420:67:11",
																"nodeType": "YulFunctionCall",
																"src": "20420:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20413:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20413:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20585:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20585:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "20496:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "20496:88:11"
																},
																"nativeSrc": "20496:93:11",
																"nodeType": "YulFunctionCall",
																"src": "20496:93:11"
															},
															"nativeSrc": "20496:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "20496:93:11"
														},
														{
															"nativeSrc": "20598:19:11",
															"nodeType": "YulAssignment",
															"src": "20598:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20609:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20609:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20614:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20614:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20605:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20605:3:11"
																},
																"nativeSrc": "20605:12:11",
																"nodeType": "YulFunctionCall",
																"src": "20605:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20598:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20598:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20257:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20391:3:11",
														"nodeType": "YulTypedName",
														"src": "20391:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20399:3:11",
														"nodeType": "YulTypedName",
														"src": "20399:3:11",
														"type": ""
													}
												],
												"src": "20257:366:11"
											},
											{
												"body": {
													"nativeSrc": "20800:248:11",
													"nodeType": "YulBlock",
													"src": "20800:248:11",
													"statements": [
														{
															"nativeSrc": "20810:26:11",
															"nodeType": "YulAssignment",
															"src": "20810:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20822:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20822:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20833:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20833:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20818:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20818:3:11"
																},
																"nativeSrc": "20818:18:11",
																"nodeType": "YulFunctionCall",
																"src": "20818:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20810:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20810:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20857:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20857:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20868:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20868:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20853:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20853:3:11"
																		},
																		"nativeSrc": "20853:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20853:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20876:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "20876:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20882:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20882:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20872:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20872:3:11"
																		},
																		"nativeSrc": "20872:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20872:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20846:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20846:6:11"
																},
																"nativeSrc": "20846:47:11",
																"nodeType": "YulFunctionCall",
																"src": "20846:47:11"
															},
															"nativeSrc": "20846:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "20846:47:11"
														},
														{
															"nativeSrc": "20902:139:11",
															"nodeType": "YulAssignment",
															"src": "20902:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21036:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "21036:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20910:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "20910:124:11"
																},
																"nativeSrc": "20910:131:11",
																"nodeType": "YulFunctionCall",
																"src": "20910:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20902:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20902:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20629:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20780:9:11",
														"nodeType": "YulTypedName",
														"src": "20780:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20795:4:11",
														"nodeType": "YulTypedName",
														"src": "20795:4:11",
														"type": ""
													}
												],
												"src": "20629:419:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20Metadata_$406_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20Metadata_$406_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20Metadata_$406_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20Metadata_$406__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20Metadata_$406_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale is already active\")\n\n    }\n\n    function abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894(memPtr) {\n\n        mstore(add(memPtr, 0), \"Min buy must be less than or equ\")\n\n        mstore(add(memPtr, 32), \"al to max buy\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82(memPtr) {\n\n        mstore(add(memPtr, 0), \"No MATIC to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to withdraw MATIC\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"MATIC amount is below the minimu\")\n\n        mstore(add(memPtr, 32), \"m buy limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"MATIC amount exceeds the maximum\")\n\n        mstore(add(memPtr, 32), \" buy limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens available for \")\n\n        mstore(add(memPtr, 32), \"sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"931": [
									{
										"length": 32,
										"start": 1858
									},
									{
										"length": 32,
										"start": 2090
									},
									{
										"length": 32,
										"start": 2458
									},
									{
										"length": 32,
										"start": 2648
									},
									{
										"length": 32,
										"start": 2977
									},
									{
										"length": 32,
										"start": 3270
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100fd575f3560e01c8063715018a611610094578063c8bdbfb611610063578063c8bdbfb6146102b7578063d076c608146102cd578063d0febe4c146102f7578063f2fde38b14610301578063fc0c546a14610329576100fd565b8063715018a61461022357806384494708146102395780638da5cb5b14610263578063c43a01351461028d576100fd565b806322c6baf6116100d057806322c6baf61461017f57806324600fc3146101a9578063464695b3146101bf5780636a61e5fc146101fb576100fd565b806304c98b2b146101015780630da2c5f014610117578063125b8b781461013f5780631ad2ad1a14610169575b5f5ffd5b34801561010c575f5ffd5b50610115610353565b005b348015610122575f5ffd5b5061013d60048036038101906101389190610fe0565b6103f2565b005b34801561014a575f5ffd5b50610153610488565b604051610160919061102d565b60405180910390f35b348015610174575f5ffd5b5061017d61048e565b005b34801561018a575f5ffd5b5061019361052b565b6040516101a0919061102d565b60405180910390f35b3480156101b4575f5ffd5b506101bd610531565b005b3480156101ca575f5ffd5b506101e560048036038101906101e091906110a0565b610687565b6040516101f2919061102d565b60405180910390f35b348015610206575f5ffd5b50610221600480360381019061021c91906110cb565b61069c565b005b34801561022e575f5ffd5b506102376106e5565b005b348015610244575f5ffd5b5061024d6106f8565b60405161025a9190611110565b60405180910390f35b34801561026e575f5ffd5b5061027761070a565b6040516102849190611138565b60405180910390f35b348015610298575f5ffd5b506102a1610731565b6040516102ae919061102d565b60405180910390f35b3480156102c2575f5ffd5b506102cb610737565b005b3480156102d8575f5ffd5b506102e16108a8565b6040516102ee919061102d565b60405180910390f35b6102ff6108ae565b005b34801561030c575f5ffd5b50610327600480360381019061032291906110a0565b610c40565b005b348015610334575f5ffd5b5061033d610cc4565b60405161034a91906111ac565b60405180910390f35b61035b610ce8565b60035f9054906101000a900460ff16156103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a19061121f565b60405180910390fd5b600160035f6101000a81548160ff0219169083151502179055507f17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c60405160405180910390a1565b6103fa610ce8565b8082111561043d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610434906112ad565b60405180910390fd5b81600681905550806007819055507f7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b828260405161047c9291906112cb565b60405180910390a15050565b60045481565b610496610ce8565b60035f9054906101000a900460ff166104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061133c565b60405180910390fd5b5f60035f6101000a81548160ff0219169083151502179055507f1eb1561f8507eb9bc6988331f66f369e75710f2b4b678ad5b4a52454b6636f5f60405160405180910390a1565b60065481565b610539610ce8565b5f4790505f811161057f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610576906113a4565b60405180910390fd5b5f61058861070a565b73ffffffffffffffffffffffffffffffffffffffff16826040516105ab906113ef565b5f6040518083038185875af1925050503d805f81146105e5576040519150601f19603f3d011682016040523d82523d5f602084013e6105ea565b606091505b505090508061062e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106259061144d565b60405180910390fd5b61063661070a565b73ffffffffffffffffffffffffffffffffffffffff167f4e5abb9fe9c3cb072c5f05c90db4208588b64cedbfa36e6643e38f40cd82104c8360405161067b919061102d565b60405180910390a25050565b6005602052805f5260405f205f915090505481565b6106a4610ce8565b806002819055507f6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e93976890816040516106da919061102d565b60405180910390a150565b6106ed610ce8565b6106f65f610d6f565b565b60035f9054906101000a900460ff1681565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b61073f610ce8565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107999190611138565b602060405180830381865afa1580156107b4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d8919061147f565b90505f811161081c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610813906114f4565b60405180910390fd5b61086e61082761070a565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610e309092919063ffffffff16565b7f7c885dc2bd1a0b45fe4cf249833d28907319b5b702b3496d49dd231cee2850258160405161089d919061102d565b60405180910390a150565b60025481565b6108b6610eaf565b60035f9054906101000a900460ff16610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb9061133c565b60405180910390fd5b600654341015610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090611582565b60405180910390fd5b60075434111561098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098590611610565b60405180910390fd5b5f670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a01573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a259190611664565b600a610a3191906117eb565b60025434610a3f9190611835565b610a499190611835565b610a5391906118a3565b9050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610aaf9190611138565b602060405180830381865afa158015610aca573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aee919061147f565b1015610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2690611943565b60405180910390fd5b3460045f828254610b409190611961565b925050819055508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b939190611961565b92505081905550610be533827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610e309092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f333483604051610c2d9291906112cb565b60405180910390a250610c3e610efe565b565b610c48610ce8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610caf9190611138565b60405180910390fd5b610cc181610d6f565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610cf0610f07565b73ffffffffffffffffffffffffffffffffffffffff16610d0e61070a565b73ffffffffffffffffffffffffffffffffffffffff1614610d6d57610d31610f07565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d649190611138565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610eaa838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e63929190611994565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f0e565b505050565b600260015403610ef4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eeb90611a05565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f5f60205f8451602086015f885af180610f2d576040513d5f823e3d81fd5b3d92505f519150505f8214610f46576001811415610f61565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fa357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f9a9190611138565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b610fbf81610fad565b8114610fc9575f5ffd5b50565b5f81359050610fda81610fb6565b92915050565b5f5f60408385031215610ff657610ff5610fa9565b5b5f61100385828601610fcc565b925050602061101485828601610fcc565b9150509250929050565b61102781610fad565b82525050565b5f6020820190506110405f83018461101e565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61106f82611046565b9050919050565b61107f81611065565b8114611089575f5ffd5b50565b5f8135905061109a81611076565b92915050565b5f602082840312156110b5576110b4610fa9565b5b5f6110c28482850161108c565b91505092915050565b5f602082840312156110e0576110df610fa9565b5b5f6110ed84828501610fcc565b91505092915050565b5f8115159050919050565b61110a816110f6565b82525050565b5f6020820190506111235f830184611101565b92915050565b61113281611065565b82525050565b5f60208201905061114b5f830184611129565b92915050565b5f819050919050565b5f61117461116f61116a84611046565b611151565b611046565b9050919050565b5f6111858261115a565b9050919050565b5f6111968261117b565b9050919050565b6111a68161118c565b82525050565b5f6020820190506111bf5f83018461119d565b92915050565b5f82825260208201905092915050565b7f50726573616c6520697320616c726561647920616374697665000000000000005f82015250565b5f6112096019836111c5565b9150611214826111d5565b602082019050919050565b5f6020820190508181035f830152611236816111fd565b9050919050565b7f4d696e20627579206d757374206265206c657373207468616e206f72206571755f8201527f616c20746f206d61782062757900000000000000000000000000000000000000602082015250565b5f611297602d836111c5565b91506112a28261123d565b604082019050919050565b5f6020820190508181035f8301526112c48161128b565b9050919050565b5f6040820190506112de5f83018561101e565b6112eb602083018461101e565b9392505050565b7f50726573616c65206973206e6f742061637469766500000000000000000000005f82015250565b5f6113266015836111c5565b9150611331826112f2565b602082019050919050565b5f6020820190508181035f8301526113538161131a565b9050919050565b7f4e6f204d4154494320746f2077697468647261770000000000000000000000005f82015250565b5f61138e6014836111c5565b91506113998261135a565b602082019050919050565b5f6020820190508181035f8301526113bb81611382565b9050919050565b5f81905092915050565b50565b5f6113da5f836113c2565b91506113e5826113cc565b5f82019050919050565b5f6113f9826113cf565b9150819050919050565b7f4661696c656420746f207769746864726177204d4154494300000000000000005f82015250565b5f6114376018836111c5565b915061144282611403565b602082019050919050565b5f6020820190508181035f8301526114648161142b565b9050919050565b5f8151905061147981610fb6565b92915050565b5f6020828403121561149457611493610fa9565b5b5f6114a18482850161146b565b91505092915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6114de6015836111c5565b91506114e9826114aa565b602082019050919050565b5f6020820190508181035f83015261150b816114d2565b9050919050565b7f4d4154494320616d6f756e742069732062656c6f7720746865206d696e696d755f8201527f6d20627579206c696d6974000000000000000000000000000000000000000000602082015250565b5f61156c602b836111c5565b915061157782611512565b604082019050919050565b5f6020820190508181035f83015261159981611560565b9050919050565b7f4d4154494320616d6f756e74206578636565647320746865206d6178696d756d5f8201527f20627579206c696d697400000000000000000000000000000000000000000000602082015250565b5f6115fa602a836111c5565b9150611605826115a0565b604082019050919050565b5f6020820190508181035f830152611627816115ee565b9050919050565b5f60ff82169050919050565b6116438161162e565b811461164d575f5ffd5b50565b5f8151905061165e8161163a565b92915050565b5f6020828403121561167957611678610fa9565b5b5f61168684828501611650565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115611711578086048111156116ed576116ec61168f565b5b60018516156116fc5780820291505b808102905061170a856116bc565b94506116d1565b94509492505050565b5f8261172957600190506117e4565b81611736575f90506117e4565b816001811461174c576002811461175657611785565b60019150506117e4565b60ff8411156117685761176761168f565b5b8360020a91508482111561177f5761177e61168f565b5b506117e4565b5060208310610133831016604e8410600b84101617156117ba5782820a9050838111156117b5576117b461168f565b5b6117e4565b6117c784848460016116c8565b925090508184048111156117de576117dd61168f565b5b81810290505b9392505050565b5f6117f582610fad565b91506118008361162e565b925061182d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461171a565b905092915050565b5f61183f82610fad565b915061184a83610fad565b925082820261185881610fad565b9150828204841483151761186f5761186e61168f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6118ad82610fad565b91506118b883610fad565b9250826118c8576118c7611876565b5b828204905092915050565b7f4e6f7420656e6f75676820746f6b656e7320617661696c61626c6520666f72205f8201527f73616c6500000000000000000000000000000000000000000000000000000000602082015250565b5f61192d6024836111c5565b9150611938826118d3565b604082019050919050565b5f6020820190508181035f83015261195a81611921565b9050919050565b5f61196b82610fad565b915061197683610fad565b925082820190508082111561198e5761198d61168f565b5b92915050565b5f6040820190506119a75f830185611129565b6119b4602083018461101e565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6119ef601f836111c5565b91506119fa826119bb565b602082019050919050565b5f6020820190508181035f830152611a1c816119e3565b905091905056fea264697066735822122027347553206a5c9eae3823ee8d75a247690b0ab7aec454a5afd005961089204e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xC8BDBFB6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC8BDBFB6 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xD076C608 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x329 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x84494708 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC43A0135 EQ PUSH2 0x28D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x22C6BAF6 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x22C6BAF6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x464695B3 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x6A61E5FC EQ PUSH2 0x1FB JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xDA2C5F0 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x125B8B78 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x1AD2AD1A EQ PUSH2 0x169 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xFE0 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x153 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x237 PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x277 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x737 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x17C3338141363AAB2512C08F8A7764328CA95979F7057663EB93F7E250139B4C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3FA PUSH2 0xCE8 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x7C821B4DCC7C9BFB2D37C50FB125278CF9699532C206A3699CAB994AB149519B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x47C SWAP3 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x496 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x1EB1561F8507EB9BC6988331F66F369E75710F2B4B678AD5B4A52454B6636F5F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x539 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x588 PUSH2 0x70A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 PUSH2 0x70A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E5ABB9FE9C3CB072C5F05C90DB4208588B64CEDBFA36E6643E38F40CD82104C DUP4 PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6A4 PUSH2 0xCE8 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x6B361C807733CC94A3B7BDA39C1C94DCC0511E91AA47B0F7F918068E93976890 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6ED PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x6F6 PUSH0 PUSH2 0xD6F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x73F PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x813 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86E PUSH2 0x827 PUSH2 0x70A JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE30 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x7C885DC2BD1A0B45FE4CF249833D28907319B5B702B3496D49DD231CEE285025 DUP2 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8B6 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLVALUE GT ISZERO PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x985 SWAP1 PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA01 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0xA PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST LT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBE5 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE30 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2D SWAP3 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC3E PUSH2 0xEFE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC48 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xD6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xCF0 PUSH2 0xF07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0E PUSH2 0x70A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD6D JUMPI PUSH2 0xD31 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEAA DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE63 SWAP3 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEB SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF46 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF61 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFA3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBF DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP2 EQ PUSH2 0xFC9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDA DUP2 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF6 JUMPI PUSH2 0xFF5 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1003 DUP6 DUP3 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1014 DUP6 DUP3 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1027 DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1040 PUSH0 DUP4 ADD DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x106F DUP3 PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x107F DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP2 EQ PUSH2 0x1089 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109A DUP2 PUSH2 0x1076 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH2 0x10B4 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C2 DUP5 DUP3 DUP6 ADD PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10ED DUP5 DUP3 DUP6 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110A DUP2 PUSH2 0x10F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1123 PUSH0 DUP4 ADD DUP5 PUSH2 0x1101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1132 DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114B PUSH0 DUP4 ADD DUP5 PUSH2 0x1129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1174 PUSH2 0x116F PUSH2 0x116A DUP5 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1185 DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1196 DUP3 PUSH2 0x117B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A6 DUP2 PUSH2 0x118C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BF PUSH0 DUP4 ADD DUP5 PUSH2 0x119D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520697320616C72656164792061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1209 PUSH1 0x19 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E20627579206D757374206265206C657373207468616E206F7220657175 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C20746F206D61782062757900000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 PUSH1 0x2D DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C4 DUP2 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DE PUSH0 DUP4 ADD DUP6 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x12EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C65206973206E6F74206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1326 PUSH1 0x15 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1331 DUP3 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1353 DUP2 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204D4154494320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x138E PUSH1 0x14 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1399 DUP3 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13BB DUP2 PUSH2 0x1382 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x13DA PUSH0 DUP4 PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E5 DUP3 PUSH2 0x13CC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13F9 DUP3 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207769746864726177204D415449430000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1437 PUSH1 0x18 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1442 DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1464 DUP2 PUSH2 0x142B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1479 DUP2 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1494 JUMPI PUSH2 0x1493 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A1 DUP5 DUP3 DUP6 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14DE PUSH1 0x15 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E9 DUP3 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x150B DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D4154494320616D6F756E742069732062656C6F7720746865206D696E696D75 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D20627579206C696D6974000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156C PUSH1 0x2B DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1577 DUP3 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1599 DUP2 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D4154494320616D6F756E74206578636565647320746865206D6178696D756D PUSH0 DUP3 ADD MSTORE PUSH32 0x20627579206C696D697400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15FA PUSH1 0x2A DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1605 DUP3 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1627 DUP2 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1643 DUP2 PUSH2 0x162E JUMP JUMPDEST DUP2 EQ PUSH2 0x164D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x165E DUP2 PUSH2 0x163A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1679 JUMPI PUSH2 0x1678 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1686 DUP5 DUP3 DUP6 ADD PUSH2 0x1650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1711 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x16ED JUMPI PUSH2 0x16EC PUSH2 0x168F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x16FC JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x170A DUP6 PUSH2 0x16BC JUMP JUMPDEST SWAP5 POP PUSH2 0x16D1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1729 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x17E4 JUMP JUMPDEST DUP2 PUSH2 0x1736 JUMPI PUSH0 SWAP1 POP PUSH2 0x17E4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x174C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1756 JUMPI PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1767 PUSH2 0x168F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x168F JUMP JUMPDEST JUMPDEST POP PUSH2 0x17E4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x17BA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x168F JUMP JUMPDEST JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x17C7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x168F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17F5 DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1800 DUP4 PUSH2 0x162E JUMP JUMPDEST SWAP3 POP PUSH2 0x182D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x171A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183F DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x184A DUP4 PUSH2 0xFAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1858 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x168F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18AD DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x18B8 DUP4 PUSH2 0xFAD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x1876 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C6520666F7220 PUSH0 DUP3 ADD MSTORE PUSH32 0x73616C6500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192D PUSH1 0x24 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1938 DUP3 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x195A DUP2 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196B DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1976 DUP4 PUSH2 0xFAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x168F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19A7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x19B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19EF PUSH1 0x1F DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FA DUP3 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1C DUP2 PUSH2 0x19E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 CALLVALUE PUSH22 0x53206A5C9EAE3823EE8D75A247690B0AB7AEC454A5AF 0xD0 SDIV SWAP7 LT DUP10 KECCAK256 0x4E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "778:6150:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4598:177;;;;;;;;;;;;;:::i;:::-;;5587:284;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1390:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4900:170;;;;;;;;;;;;;:::i;:::-;;1625:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6047:396;;;;;;;;;;;;;:::i;:::-;;1500:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5226:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1299:25:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1658:26:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6602:323;;;;;;;;;;;;;:::i;:::-;;1193:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3218:1203;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1042:37:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4598:177;1531:13:0;:11;:13::i;:::-;4661::10::1;;;;;;;;;;;4660:14;4652:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4731:4;4715:13;;:20;;;;;;;;;;;;;;;;;;4751:16;;;;;;;;;;4598:177::o:0;5587:284::-;1531:13:0;:11;:13::i;:::-;5692:7:10::1;5681;:18;;5673:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5774:7;5760:11;:21;;;;5806:7;5792:11;:21;;;;5829:34;5846:7;5855;5829:34;;;;;;;:::i;:::-;;;;;;;;5587:284:::0;;:::o;1390:31::-;;;;:::o;4900:170::-;1531:13:0;:11;:13::i;:::-;4961::10::1;;;;;;;;;;;4953:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;5027:5;5011:13;;:21;;;;;;;;;;;;;;;;;;5048:14;;;;;;;;;;4900:170::o:0;1625:26::-;;;;:::o;6047:396::-;1531:13:0;:11;:13::i;:::-;6102:15:10::1;6120:21;6102:39;;6170:1;6160:7;:11;6152:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6280:9;6302:7;:5;:7::i;:::-;6294:21;;6323:7;6294:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6279:56;;;6354:4;6346:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6418:7;:5;:7::i;:::-;6403:32;;;6427:7;6403:32;;;;;;:::i;:::-;;;;;;;;6091:352;;6047:396::o:0;1500:47::-;;;;;;;;;;;;;;;;;:::o;5226:150::-;1531:13:0;:11;:13::i;:::-;5315:9:10::1;5298:14;:26;;;;5340:28;5358:9;5340:28;;;;;;:::i;:::-;;;;;;;;5226:150:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1299:25:10:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1658:26:10:-;;;;:::o;6602:323::-;1531:13:0;:11;:13::i;:::-;6664:20:10::1;6702:5;6687:32;;;6728:4;6687:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6664:70;;6768:1;6753:12;:16;6745:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6808:58;6844:7;:5;:7::i;:::-;6853:12;6823:5;6808:35;;;;:58;;;;;:::i;:::-;6882:35;6904:12;6882:35;;;;;;:::i;:::-;;;;;;;;6653:272;6602:323::o:0;1193:29::-;;;;:::o;3218:1203::-;2261:21:4;:19;:21::i;:::-;3329:13:10::1;;;;;;;;;;;3321:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3433:11;;3420:9;:24;;3412:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3524:11;;3511:9;:24;;3503:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3748:19;3829:8;3807:5;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3801:2;:22;;;;:::i;:::-;3783:14;;3771:9;:26;;;;:::i;:::-;:53;;;;:::i;:::-;3770:68;;;;:::i;:::-;3748:90;;3982:11;3946:5;3931:32;;;3972:4;3931:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;3923:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;4119:9;4099:16;;:29;;;;;;;:::i;:::-;;;;;;;;4167:11;4139:12;:24;4152:10;4139:24;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;4237:60;4273:10;4285:11;4252:5;4237:35;;;;:60;;;;;:::i;:::-;4378:10;4362:51;;;4390:9;4401:11;4362:51;;;;;;;:::i;:::-;;;;;;;;3269:1152;2303:20:4::0;:18;:20::i;:::-;3218:1203:10:o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1042:37:10:-;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:122::-;1829:24;1847:5;1829:24;:::i;:::-;1822:5;1819:35;1809:63;;1868:1;1865;1858:12;1809:63;1756:122;:::o;1884:139::-;1930:5;1968:6;1955:20;1946:29;;1984:33;2011:5;1984:33;:::i;:::-;1884:139;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:90::-;2733:7;2776:5;2769:13;2762:21;2751:32;;2699:90;;;:::o;2795:109::-;2876:21;2891:5;2876:21;:::i;:::-;2871:3;2864:34;2795:109;;:::o;2910:210::-;2997:4;3035:2;3024:9;3020:18;3012:26;;3048:65;3110:1;3099:9;3095:17;3086:6;3048:65;:::i;:::-;2910:210;;;;:::o;3126:118::-;3213:24;3231:5;3213:24;:::i;:::-;3208:3;3201:37;3126:118;;:::o;3250:222::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3394:71;3462:1;3451:9;3447:17;3438:6;3394:71;:::i;:::-;3250:222;;;;:::o;3478:60::-;3506:3;3527:5;3520:12;;3478:60;;;:::o;3544:142::-;3594:9;3627:53;3645:34;3654:24;3672:5;3654:24;:::i;:::-;3645:34;:::i;:::-;3627:53;:::i;:::-;3614:66;;3544:142;;;:::o;3692:126::-;3742:9;3775:37;3806:5;3775:37;:::i;:::-;3762:50;;3692:126;;;:::o;3824:148::-;3896:9;3929:37;3960:5;3929:37;:::i;:::-;3916:50;;3824:148;;;:::o;3978:175::-;4087:59;4140:5;4087:59;:::i;:::-;4082:3;4075:72;3978:175;;:::o;4159:266::-;4274:4;4312:2;4301:9;4297:18;4289:26;;4325:93;4415:1;4404:9;4400:17;4391:6;4325:93;:::i;:::-;4159:266;;;;:::o;4431:169::-;4515:11;4549:6;4544:3;4537:19;4589:4;4584:3;4580:14;4565:29;;4431:169;;;;:::o;4606:175::-;4746:27;4742:1;4734:6;4730:14;4723:51;4606:175;:::o;4787:366::-;4929:3;4950:67;5014:2;5009:3;4950:67;:::i;:::-;4943:74;;5026:93;5115:3;5026:93;:::i;:::-;5144:2;5139:3;5135:12;5128:19;;4787:366;;;:::o;5159:419::-;5325:4;5363:2;5352:9;5348:18;5340:26;;5412:9;5406:4;5402:20;5398:1;5387:9;5383:17;5376:47;5440:131;5566:4;5440:131;:::i;:::-;5432:139;;5159:419;;;:::o;5584:232::-;5724:34;5720:1;5712:6;5708:14;5701:58;5793:15;5788:2;5780:6;5776:15;5769:40;5584:232;:::o;5822:366::-;5964:3;5985:67;6049:2;6044:3;5985:67;:::i;:::-;5978:74;;6061:93;6150:3;6061:93;:::i;:::-;6179:2;6174:3;6170:12;6163:19;;5822:366;;;:::o;6194:419::-;6360:4;6398:2;6387:9;6383:18;6375:26;;6447:9;6441:4;6437:20;6433:1;6422:9;6418:17;6411:47;6475:131;6601:4;6475:131;:::i;:::-;6467:139;;6194:419;;;:::o;6619:332::-;6740:4;6778:2;6767:9;6763:18;6755:26;;6791:71;6859:1;6848:9;6844:17;6835:6;6791:71;:::i;:::-;6872:72;6940:2;6929:9;6925:18;6916:6;6872:72;:::i;:::-;6619:332;;;;;:::o;6957:171::-;7097:23;7093:1;7085:6;7081:14;7074:47;6957:171;:::o;7134:366::-;7276:3;7297:67;7361:2;7356:3;7297:67;:::i;:::-;7290:74;;7373:93;7462:3;7373:93;:::i;:::-;7491:2;7486:3;7482:12;7475:19;;7134:366;;;:::o;7506:419::-;7672:4;7710:2;7699:9;7695:18;7687:26;;7759:9;7753:4;7749:20;7745:1;7734:9;7730:17;7723:47;7787:131;7913:4;7787:131;:::i;:::-;7779:139;;7506:419;;;:::o;7931:170::-;8071:22;8067:1;8059:6;8055:14;8048:46;7931:170;:::o;8107:366::-;8249:3;8270:67;8334:2;8329:3;8270:67;:::i;:::-;8263:74;;8346:93;8435:3;8346:93;:::i;:::-;8464:2;8459:3;8455:12;8448:19;;8107:366;;;:::o;8479:419::-;8645:4;8683:2;8672:9;8668:18;8660:26;;8732:9;8726:4;8722:20;8718:1;8707:9;8703:17;8696:47;8760:131;8886:4;8760:131;:::i;:::-;8752:139;;8479:419;;;:::o;8904:147::-;9005:11;9042:3;9027:18;;8904:147;;;;:::o;9057:114::-;;:::o;9177:398::-;9336:3;9357:83;9438:1;9433:3;9357:83;:::i;:::-;9350:90;;9449:93;9538:3;9449:93;:::i;:::-;9567:1;9562:3;9558:11;9551:18;;9177:398;;;:::o;9581:379::-;9765:3;9787:147;9930:3;9787:147;:::i;:::-;9780:154;;9951:3;9944:10;;9581:379;;;:::o;9966:174::-;10106:26;10102:1;10094:6;10090:14;10083:50;9966:174;:::o;10146:366::-;10288:3;10309:67;10373:2;10368:3;10309:67;:::i;:::-;10302:74;;10385:93;10474:3;10385:93;:::i;:::-;10503:2;10498:3;10494:12;10487:19;;10146:366;;;:::o;10518:419::-;10684:4;10722:2;10711:9;10707:18;10699:26;;10771:9;10765:4;10761:20;10757:1;10746:9;10742:17;10735:47;10799:131;10925:4;10799:131;:::i;:::-;10791:139;;10518:419;;;:::o;10943:143::-;11000:5;11031:6;11025:13;11016:22;;11047:33;11074:5;11047:33;:::i;:::-;10943:143;;;;:::o;11092:351::-;11162:6;11211:2;11199:9;11190:7;11186:23;11182:32;11179:119;;;11217:79;;:::i;:::-;11179:119;11337:1;11362:64;11418:7;11409:6;11398:9;11394:22;11362:64;:::i;:::-;11352:74;;11308:128;11092:351;;;;:::o;11449:171::-;11589:23;11585:1;11577:6;11573:14;11566:47;11449:171;:::o;11626:366::-;11768:3;11789:67;11853:2;11848:3;11789:67;:::i;:::-;11782:74;;11865:93;11954:3;11865:93;:::i;:::-;11983:2;11978:3;11974:12;11967:19;;11626:366;;;:::o;11998:419::-;12164:4;12202:2;12191:9;12187:18;12179:26;;12251:9;12245:4;12241:20;12237:1;12226:9;12222:17;12215:47;12279:131;12405:4;12279:131;:::i;:::-;12271:139;;11998:419;;;:::o;12423:230::-;12563:34;12559:1;12551:6;12547:14;12540:58;12632:13;12627:2;12619:6;12615:15;12608:38;12423:230;:::o;12659:366::-;12801:3;12822:67;12886:2;12881:3;12822:67;:::i;:::-;12815:74;;12898:93;12987:3;12898:93;:::i;:::-;13016:2;13011:3;13007:12;13000:19;;12659:366;;;:::o;13031:419::-;13197:4;13235:2;13224:9;13220:18;13212:26;;13284:9;13278:4;13274:20;13270:1;13259:9;13255:17;13248:47;13312:131;13438:4;13312:131;:::i;:::-;13304:139;;13031:419;;;:::o;13456:229::-;13596:34;13592:1;13584:6;13580:14;13573:58;13665:12;13660:2;13652:6;13648:15;13641:37;13456:229;:::o;13691:366::-;13833:3;13854:67;13918:2;13913:3;13854:67;:::i;:::-;13847:74;;13930:93;14019:3;13930:93;:::i;:::-;14048:2;14043:3;14039:12;14032:19;;13691:366;;;:::o;14063:419::-;14229:4;14267:2;14256:9;14252:18;14244:26;;14316:9;14310:4;14306:20;14302:1;14291:9;14287:17;14280:47;14344:131;14470:4;14344:131;:::i;:::-;14336:139;;14063:419;;;:::o;14488:86::-;14523:7;14563:4;14556:5;14552:16;14541:27;;14488:86;;;:::o;14580:118::-;14651:22;14667:5;14651:22;:::i;:::-;14644:5;14641:33;14631:61;;14688:1;14685;14678:12;14631:61;14580:118;:::o;14704:139::-;14759:5;14790:6;14784:13;14775:22;;14806:31;14831:5;14806:31;:::i;:::-;14704:139;;;;:::o;14849:347::-;14917:6;14966:2;14954:9;14945:7;14941:23;14937:32;14934:119;;;14972:79;;:::i;:::-;14934:119;15092:1;15117:62;15171:7;15162:6;15151:9;15147:22;15117:62;:::i;:::-;15107:72;;15063:126;14849:347;;;;:::o;15202:180::-;15250:77;15247:1;15240:88;15347:4;15344:1;15337:15;15371:4;15368:1;15361:15;15388:102;15430:8;15477:5;15474:1;15470:13;15449:34;;15388:102;;;:::o;15496:848::-;15557:5;15564:4;15588:6;15579:15;;15612:5;15603:14;;15626:712;15647:1;15637:8;15634:15;15626:712;;;15742:4;15737:3;15733:14;15727:4;15724:24;15721:50;;;15751:18;;:::i;:::-;15721:50;15801:1;15791:8;15787:16;15784:451;;;16216:4;16209:5;16205:16;16196:25;;15784:451;16266:4;16260;16256:15;16248:23;;16296:32;16319:8;16296:32;:::i;:::-;16284:44;;15626:712;;;15496:848;;;;;;;:::o;16350:1073::-;16404:5;16595:8;16585:40;;16616:1;16607:10;;16618:5;;16585:40;16644:4;16634:36;;16661:1;16652:10;;16663:5;;16634:36;16730:4;16778:1;16773:27;;;;16814:1;16809:191;;;;16723:277;;16773:27;16791:1;16782:10;;16793:5;;;16809:191;16854:3;16844:8;16841:17;16838:43;;;16861:18;;:::i;:::-;16838:43;16910:8;16907:1;16903:16;16894:25;;16945:3;16938:5;16935:14;16932:40;;;16952:18;;:::i;:::-;16932:40;16985:5;;;16723:277;;17109:2;17099:8;17096:16;17090:3;17084:4;17081:13;17077:36;17059:2;17049:8;17046:16;17041:2;17035:4;17032:12;17028:35;17012:111;17009:246;;;17165:8;17159:4;17155:19;17146:28;;17200:3;17193:5;17190:14;17187:40;;;17207:18;;:::i;:::-;17187:40;17240:5;;17009:246;17280:42;17318:3;17308:8;17302:4;17299:1;17280:42;:::i;:::-;17265:57;;;;17354:4;17349:3;17345:14;17338:5;17335:25;17332:51;;;17363:18;;:::i;:::-;17332:51;17412:4;17405:5;17401:16;17392:25;;16350:1073;;;;;;:::o;17429:281::-;17487:5;17511:23;17529:4;17511:23;:::i;:::-;17503:31;;17555:25;17571:8;17555:25;:::i;:::-;17543:37;;17599:104;17636:66;17626:8;17620:4;17599:104;:::i;:::-;17590:113;;17429:281;;;;:::o;17716:410::-;17756:7;17779:20;17797:1;17779:20;:::i;:::-;17774:25;;17813:20;17831:1;17813:20;:::i;:::-;17808:25;;17868:1;17865;17861:9;17890:30;17908:11;17890:30;:::i;:::-;17879:41;;18069:1;18060:7;18056:15;18053:1;18050:22;18030:1;18023:9;18003:83;17980:139;;18099:18;;:::i;:::-;17980:139;17764:362;17716:410;;;;:::o;18132:180::-;18180:77;18177:1;18170:88;18277:4;18274:1;18267:15;18301:4;18298:1;18291:15;18318:185;18358:1;18375:20;18393:1;18375:20;:::i;:::-;18370:25;;18409:20;18427:1;18409:20;:::i;:::-;18404:25;;18448:1;18438:35;;18453:18;;:::i;:::-;18438:35;18495:1;18492;18488:9;18483:14;;18318:185;;;;:::o;18509:223::-;18649:34;18645:1;18637:6;18633:14;18626:58;18718:6;18713:2;18705:6;18701:15;18694:31;18509:223;:::o;18738:366::-;18880:3;18901:67;18965:2;18960:3;18901:67;:::i;:::-;18894:74;;18977:93;19066:3;18977:93;:::i;:::-;19095:2;19090:3;19086:12;19079:19;;18738:366;;;:::o;19110:419::-;19276:4;19314:2;19303:9;19299:18;19291:26;;19363:9;19357:4;19353:20;19349:1;19338:9;19334:17;19327:47;19391:131;19517:4;19391:131;:::i;:::-;19383:139;;19110:419;;;:::o;19535:191::-;19575:3;19594:20;19612:1;19594:20;:::i;:::-;19589:25;;19628:20;19646:1;19628:20;:::i;:::-;19623:25;;19671:1;19668;19664:9;19657:16;;19692:3;19689:1;19686:10;19683:36;;;19699:18;;:::i;:::-;19683:36;19535:191;;;;:::o;19732:332::-;19853:4;19891:2;19880:9;19876:18;19868:26;;19904:71;19972:1;19961:9;19957:17;19948:6;19904:71;:::i;:::-;19985:72;20053:2;20042:9;20038:18;20029:6;19985:72;:::i;:::-;19732:332;;;;;:::o;20070:181::-;20210:33;20206:1;20198:6;20194:14;20187:57;20070:181;:::o;20257:366::-;20399:3;20420:67;20484:2;20479:3;20420:67;:::i;:::-;20413:74;;20496:93;20585:3;20496:93;:::i;:::-;20614:2;20609:3;20605:12;20598:19;;20257:366;;;:::o;20629:419::-;20795:4;20833:2;20822:9;20818:18;20810:26;;20882:9;20876:4;20872:20;20868:1;20857:9;20853:17;20846:47;20910:131;21036:4;20910:131;:::i;:::-;20902:139;;20629:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1349000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyTokens()": "infinite",
								"maxMaticBuy()": "2514",
								"minMaticBuy()": "2448",
								"owner()": "2581",
								"preSaleActive()": "2511",
								"renounceOwnership()": "infinite",
								"setBuyLimits(uint256,uint256)": "infinite",
								"setTokenPrice(uint256)": "infinite",
								"startPresale()": "infinite",
								"stopPresale()": "infinite",
								"token()": "infinite",
								"tokensPerMatic()": "2469",
								"tokensSoldTo(address)": "2869",
								"totalMaticRaised()": "2493",
								"transferOwnership(address)": "infinite",
								"withdrawFunds()": "infinite",
								"withdrawUnsoldTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2516,
									"end": 2888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2671,
									"end": 2681,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2717,
									"end": 2730,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2731,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2731,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2759,
									"end": 2774,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2742,
									"end": 2756,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2742,
									"end": 2774,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2742,
									"end": 2774,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2742,
									"end": 2774,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2742,
									"end": 2774,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2799,
									"end": 2811,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2796,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2785,
									"end": 2811,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2811,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2811,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2811,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2836,
									"end": 2848,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2822,
									"end": 2848,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2848,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2848,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2848,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2875,
									"end": 2880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2859,
									"end": 2872,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2859,
									"end": 2872,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2880,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2136,
									"end": 2141,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2118,
									"end": 2142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2116,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2106,
									"end": 2143,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2031,
									"end": 2149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2286,
									"end": 2288,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2275,
									"end": 2284,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2271,
									"end": 2289,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2367,
									"end": 2368,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2356,
									"end": 2365,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2352,
									"end": 2369,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2343,
									"end": 2349,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 2299,
									"end": 2370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2155,
									"end": 2377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "931"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 6928,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122027347553206a5c9eae3823ee8d75a247690b0ab7aec454a5afd005961089204e64736f6c634300081e0033",
									".code": [
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "C8BDBFB6"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "C8BDBFB6"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "D076C608"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "D0FEBE4C"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "FC0C546A"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "84494708"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "C43A0135"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "22C6BAF6"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "22C6BAF6"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "24600FC3"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "464695B3"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "6A61E5FC"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "4C98B2B"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "DA2C5F0"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "125B8B78"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "1AD2AD1A"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 6928,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4598,
											"end": 4775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 5587,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 5587,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1390,
											"end": 1421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1390,
											"end": 1421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4900,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1625,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6047,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1500,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1500,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1500,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5226,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 5226,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1299,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1299,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1658,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1658,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 6602,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1193,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1193,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3218,
											"end": 4421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1042,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1042,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4598,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4661,
											"end": 4674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4660,
											"end": 4674,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4652,
											"end": 4704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4652,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4715,
											"end": 4728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4715,
											"end": 4728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "17C3338141363AAB2512C08F8A7764328CA95979F7057663EB93F7E250139B4C"
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4767,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5699,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5688,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5699,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5699,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5673,
											"end": 5749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5673,
											"end": 5749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5781,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5760,
											"end": 5781,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5781,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5813,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5792,
											"end": 5813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5813,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7C821B4DCC7C9BFB2D37C50FB125278CF9699532C206A3699CAB994AB149519B"
										},
										{
											"begin": 5846,
											"end": 5853,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5855,
											"end": 5862,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 5829,
											"end": 5863,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5863,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4900,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4961,
											"end": 4974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 4953,
											"end": 5000,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 4953,
											"end": 5000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5011,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1EB1561F8507EB9BC6988331F66F369E75710F2B4B678AD5B4A52454B6636F5F"
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 5070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6047,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6141,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6170,
											"end": 6171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6171,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 6152,
											"end": 6196,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 6152,
											"end": 6196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6280,
											"end": 6289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 6302,
											"end": 6307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6302,
											"end": 6309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 6302,
											"end": 6309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6294,
											"end": 6315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6330,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 6294,
											"end": 6335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6335,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6358,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 6346,
											"end": 6387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 6346,
											"end": 6387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6418,
											"end": 6423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6418,
											"end": 6425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6418,
											"end": 6425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4E5ABB9FE9C3CB072C5F05C90DB4208588B64CEDBFA36E6643E38F40CD82104C"
										},
										{
											"begin": 6427,
											"end": 6434,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 6403,
											"end": 6435,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6435,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5315,
											"end": 5324,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5298,
											"end": 5324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5324,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5324,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6B361C807733CC94A3B7BDA39C1C94DCC0511E91AA47B0F7F918068E93976890"
										},
										{
											"begin": 5358,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 5340,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5368,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 6602,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6707,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 6687,
											"end": 6719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6719,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 6728,
											"end": 6732,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6687,
											"end": 6734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6687,
											"end": 6734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6734,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6765,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6753,
											"end": 6769,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6745,
											"end": 6795,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6745,
											"end": 6795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6844,
											"end": 6851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6844,
											"end": 6849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6844,
											"end": 6851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6844,
											"end": 6851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6844,
											"end": 6851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6865,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6828,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 6808,
											"end": 6843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6808,
											"end": 6843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6808,
											"end": 6843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6808,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7C885DC2BD1A0B45FE4CF249833D28907319B5B702B3496D49DD231CEE285025"
										},
										{
											"begin": 6904,
											"end": 6916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 6882,
											"end": 6917,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6917,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 6653,
											"end": 6925,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3218,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3329,
											"end": 3342,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3321,
											"end": 3368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3321,
											"end": 3368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3433,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3429,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3444,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3444,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3412,
											"end": 3492,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3412,
											"end": 3492,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3524,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 3520,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 3535,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3503,
											"end": 3582,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3503,
											"end": 3582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3807,
											"end": 3812,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 3807,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3807,
											"end": 3821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3807,
											"end": 3823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3807,
											"end": 3823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3801,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3801,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3801,
											"end": 3823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3801,
											"end": 3823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3783,
											"end": 3797,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3780,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3771,
											"end": 3797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3771,
											"end": 3797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3771,
											"end": 3797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3771,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3771,
											"end": 3824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3771,
											"end": 3824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3770,
											"end": 3838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3770,
											"end": 3838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3770,
											"end": 3838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 3951,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 3931,
											"end": 3963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3931,
											"end": 3963,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 3972,
											"end": 3976,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3931,
											"end": 3978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3931,
											"end": 3978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3931,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3993,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3923,
											"end": 4034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3923,
											"end": 4034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4128,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4099,
											"end": 4128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4128,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4167,
											"end": 4178,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4162,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4139,
											"end": 4178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4273,
											"end": 4283,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4285,
											"end": 4296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4257,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 4237,
											"end": 4272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4272,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4237,
											"end": 4272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4237,
											"end": 4297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4388,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33"
										},
										{
											"begin": 4390,
											"end": 4399,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 4362,
											"end": 4413,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4413,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3269,
											"end": 4421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 4421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 1257,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1391,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1438,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1641,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1642,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1720,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1829,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1854,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1868,
											"end": 1869,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1870,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1955,
											"end": 1975,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2011,
											"end": 2016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 1984,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2782,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2876,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2871,
											"end": 2874,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2864,
											"end": 2898,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3037,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3020,
											"end": 3038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3012,
											"end": 3038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3012,
											"end": 3038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3048,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3213,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3201,
											"end": 3238,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3394,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3509,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 3654,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3645,
											"end": 3679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 3627,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3614,
											"end": 3680,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3614,
											"end": 3680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3806,
											"end": 3811,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3775,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3812,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3824,
											"end": 3972,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 3824,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3960,
											"end": 3965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3929,
											"end": 3966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3966,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3929,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3966,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3824,
											"end": 3972,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3824,
											"end": 3972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3824,
											"end": 3972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3824,
											"end": 3972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4153,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3978,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4140,
											"end": 4145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4087,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4147,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4425,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4159,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4274,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4315,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4415,
											"end": 4416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4325,
											"end": 4418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4418,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4325,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4425,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4600,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4431,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4526,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4544,
											"end": 4547,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4537,
											"end": 4556,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4593,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4587,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4580,
											"end": 4594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4600,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4600,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4781,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4606,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "PUSH",
											"source": 11,
											"value": "50726573616C6520697320616C72656164792061637469766500000000000000"
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4744,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 5153,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4787,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 5014,
											"end": 5016,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 5009,
											"end": 5012,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4950,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5017,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4950,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 5017,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 5017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 5026,
											"end": 5119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5119,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 5026,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 5153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 5153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 5153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 5153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5578,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 5159,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5352,
											"end": 5361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5406,
											"end": 5410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5396,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5423,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5440,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5571,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 5440,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5578,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5584,
											"end": 5816,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5584,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "PUSH",
											"source": 11,
											"value": "4D696E20627579206D757374206265206C657373207468616E206F7220657175"
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5718,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5722,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5701,
											"end": 5759,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5793,
											"end": 5808,
											"name": "PUSH",
											"source": 11,
											"value": "616C20746F206D61782062757900000000000000000000000000000000000000"
										},
										{
											"begin": 5788,
											"end": 5790,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5769,
											"end": 5809,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5584,
											"end": 5816,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5584,
											"end": 5816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 6188,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5822,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5964,
											"end": 5967,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 6049,
											"end": 6051,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 6044,
											"end": 6047,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 5985,
											"end": 6052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6052,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 5985,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5978,
											"end": 6052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5978,
											"end": 6052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6061,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6150,
											"end": 6153,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6061,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6061,
											"end": 6154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6061,
											"end": 6154,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6061,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6179,
											"end": 6181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6174,
											"end": 6177,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 6188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 6188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 6188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 6188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6613,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 6194,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6400,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6387,
											"end": 6396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6447,
											"end": 6456,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6437,
											"end": 6457,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6433,
											"end": 6434,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6418,
											"end": 6435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6411,
											"end": 6458,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6475,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6606,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 6475,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6467,
											"end": 6606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6467,
											"end": 6606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6951,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 6619,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6780,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6767,
											"end": 6776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6763,
											"end": 6781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 6859,
											"end": 6860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6857,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 6861,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6841,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6791,
											"end": 6862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 6940,
											"end": 6942,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6872,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6951,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6951,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6957,
											"end": 7128,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6957,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7097,
											"end": 7120,
											"name": "PUSH",
											"source": 11,
											"value": "50726573616C65206973206E6F74206163746976650000000000000000000000"
										},
										{
											"begin": 7093,
											"end": 7094,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7081,
											"end": 7095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7074,
											"end": 7121,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6957,
											"end": 7128,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6957,
											"end": 7128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7134,
											"end": 7500,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 7134,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7276,
											"end": 7279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 7356,
											"end": 7359,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 7297,
											"end": 7364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7364,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7462,
											"end": 7465,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 7373,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7466,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7373,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7493,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7482,
											"end": 7494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7494,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7134,
											"end": 7500,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7134,
											"end": 7500,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7134,
											"end": 7500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7134,
											"end": 7500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7506,
											"end": 7925,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 7506,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7672,
											"end": 7676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7712,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7699,
											"end": 7708,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7713,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7759,
											"end": 7768,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7757,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7749,
											"end": 7769,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7745,
											"end": 7746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7734,
											"end": 7743,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7723,
											"end": 7770,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 7913,
											"end": 7917,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 7787,
											"end": 7918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7918,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 7787,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7779,
											"end": 7918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7779,
											"end": 7918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7506,
											"end": 7925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7506,
											"end": 7925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7506,
											"end": 7925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7506,
											"end": 7925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 8101,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 7931,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8071,
											"end": 8093,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F204D4154494320746F207769746864726177000000000000000000000000"
										},
										{
											"begin": 8067,
											"end": 8068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8065,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8055,
											"end": 8069,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8048,
											"end": 8094,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 8101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 8101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8473,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 8107,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8270,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 8334,
											"end": 8336,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 8270,
											"end": 8337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8337,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 8270,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8263,
											"end": 8337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8263,
											"end": 8337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8346,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8435,
											"end": 8438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8346,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 8346,
											"end": 8439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8346,
											"end": 8439,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8346,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8464,
											"end": 8466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8459,
											"end": 8462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8448,
											"end": 8467,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8448,
											"end": 8467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8473,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8898,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 8479,
											"end": 8898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8645,
											"end": 8649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8683,
											"end": 8685,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8668,
											"end": 8686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8660,
											"end": 8686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8660,
											"end": 8686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8726,
											"end": 8730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8722,
											"end": 8742,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8716,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8720,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8696,
											"end": 8743,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8760,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 8886,
											"end": 8890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8760,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 8760,
											"end": 8891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8760,
											"end": 8891,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 8760,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8752,
											"end": 8891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8752,
											"end": 8891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8904,
											"end": 9051,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 8904,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9005,
											"end": 9016,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9042,
											"end": 9045,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8904,
											"end": 9051,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8904,
											"end": 9051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8904,
											"end": 9051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8904,
											"end": 9051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8904,
											"end": 9051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9057,
											"end": 9171,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 9057,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9057,
											"end": 9171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9057,
											"end": 9171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9177,
											"end": 9575,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 9177,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9336,
											"end": 9339,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 9438,
											"end": 9439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9436,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9357,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 9357,
											"end": 9440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9357,
											"end": 9440,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 9357,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9350,
											"end": 9440,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9350,
											"end": 9440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9449,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 9538,
											"end": 9541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9449,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 9449,
											"end": 9542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9449,
											"end": 9542,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 9449,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9567,
											"end": 9568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9562,
											"end": 9565,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9558,
											"end": 9569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9177,
											"end": 9575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9177,
											"end": 9575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9177,
											"end": 9575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9177,
											"end": 9575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9581,
											"end": 9960,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 9581,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9768,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 9930,
											"end": 9933,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9787,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 9787,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9787,
											"end": 9934,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 9787,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 9934,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 9934,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 9954,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 9954,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 9954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9581,
											"end": 9960,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9581,
											"end": 9960,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9581,
											"end": 9960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9581,
											"end": 9960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9966,
											"end": 10140,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 9966,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10106,
											"end": 10132,
											"name": "PUSH",
											"source": 11,
											"value": "4661696C656420746F207769746864726177204D415449430000000000000000"
										},
										{
											"begin": 10102,
											"end": 10103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10094,
											"end": 10100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10090,
											"end": 10104,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10083,
											"end": 10133,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9966,
											"end": 10140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9966,
											"end": 10140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10146,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 10146,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10288,
											"end": 10291,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10309,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 10373,
											"end": 10375,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 10368,
											"end": 10371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10309,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 10309,
											"end": 10376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10309,
											"end": 10376,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 10309,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10302,
											"end": 10376,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10302,
											"end": 10376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 10474,
											"end": 10477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 10385,
											"end": 10478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10478,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 10385,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10503,
											"end": 10505,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10498,
											"end": 10501,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10494,
											"end": 10506,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10487,
											"end": 10506,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10487,
											"end": 10506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10146,
											"end": 10512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10146,
											"end": 10512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10146,
											"end": 10512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10146,
											"end": 10512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10518,
											"end": 10937,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 10518,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10684,
											"end": 10688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10722,
											"end": 10724,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10711,
											"end": 10720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10771,
											"end": 10780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10765,
											"end": 10769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10781,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10757,
											"end": 10758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 10755,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10742,
											"end": 10759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10735,
											"end": 10782,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10799,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 10925,
											"end": 10929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10799,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 10799,
											"end": 10930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10799,
											"end": 10930,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 10799,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10791,
											"end": 10930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10791,
											"end": 10930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10518,
											"end": 10937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10518,
											"end": 10937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10518,
											"end": 10937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10518,
											"end": 10937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 11086,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 10943,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11000,
											"end": 11005,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11038,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11016,
											"end": 11038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11016,
											"end": 11038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11047,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 11074,
											"end": 11079,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11047,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 11047,
											"end": 11080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11047,
											"end": 11080,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 11047,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 11086,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 11086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 11086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 11086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 11086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11443,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 11092,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11168,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11211,
											"end": 11213,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11199,
											"end": 11208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11190,
											"end": 11197,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11209,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11182,
											"end": 11214,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11179,
											"end": 11298,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11179,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 11179,
											"end": 11298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 11217,
											"end": 11296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11179,
											"end": 11298,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 11179,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11337,
											"end": 11338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 11418,
											"end": 11425,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11409,
											"end": 11415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11398,
											"end": 11407,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11394,
											"end": 11416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 11362,
											"end": 11426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11352,
											"end": 11426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11352,
											"end": 11426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11308,
											"end": 11436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11443,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11443,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11449,
											"end": 11620,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 11449,
											"end": 11620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11589,
											"end": 11612,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 11585,
											"end": 11586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11573,
											"end": 11587,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11449,
											"end": 11620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11449,
											"end": 11620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11992,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 11626,
											"end": 11992,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11768,
											"end": 11771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11789,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11789,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 11789,
											"end": 11856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11789,
											"end": 11856,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 11789,
											"end": 11856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11782,
											"end": 11856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11782,
											"end": 11856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11865,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 11954,
											"end": 11957,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11865,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 11865,
											"end": 11958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11865,
											"end": 11958,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 11865,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 11985,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11978,
											"end": 11981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11974,
											"end": 11986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11967,
											"end": 11986,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11967,
											"end": 11986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11992,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11992,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11998,
											"end": 12417,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 11998,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12164,
											"end": 12168,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12202,
											"end": 12204,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12205,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12251,
											"end": 12260,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12245,
											"end": 12249,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12241,
											"end": 12261,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12237,
											"end": 12238,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12226,
											"end": 12235,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12222,
											"end": 12239,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12279,
											"end": 12410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12279,
											"end": 12410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 12279,
											"end": 12410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12279,
											"end": 12410,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 12279,
											"end": 12410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12271,
											"end": 12410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12271,
											"end": 12410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11998,
											"end": 12417,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11998,
											"end": 12417,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11998,
											"end": 12417,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11998,
											"end": 12417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12653,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 12423,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12563,
											"end": 12597,
											"name": "PUSH",
											"source": 11,
											"value": "4D4154494320616D6F756E742069732062656C6F7720746865206D696E696D75"
										},
										{
											"begin": 12559,
											"end": 12560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12557,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12547,
											"end": 12561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 12645,
											"name": "PUSH",
											"source": 11,
											"value": "6D20627579206C696D6974000000000000000000000000000000000000000000"
										},
										{
											"begin": 12627,
											"end": 12629,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 12625,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12615,
											"end": 12630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12646,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 13025,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12659,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12801,
											"end": 12804,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12822,
											"end": 12889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 12886,
											"end": 12888,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 12881,
											"end": 12884,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12822,
											"end": 12889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 12822,
											"end": 12889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12822,
											"end": 12889,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 12822,
											"end": 12889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12898,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 12987,
											"end": 12990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12898,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 12898,
											"end": 12991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12898,
											"end": 12991,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 12898,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13018,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13011,
											"end": 13014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13007,
											"end": 13019,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13000,
											"end": 13019,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13000,
											"end": 13019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 13025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 13025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 13025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 13025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13031,
											"end": 13450,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 13031,
											"end": 13450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13197,
											"end": 13201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13237,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13224,
											"end": 13233,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13212,
											"end": 13238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13212,
											"end": 13238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13284,
											"end": 13293,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13278,
											"end": 13282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13274,
											"end": 13294,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13270,
											"end": 13271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13259,
											"end": 13268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13255,
											"end": 13272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13295,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13312,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 13438,
											"end": 13442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13312,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 13312,
											"end": 13443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13312,
											"end": 13443,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 13312,
											"end": 13443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13304,
											"end": 13443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13304,
											"end": 13443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13031,
											"end": 13450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13031,
											"end": 13450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13031,
											"end": 13450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13031,
											"end": 13450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13456,
											"end": 13685,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 13456,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13596,
											"end": 13630,
											"name": "PUSH",
											"source": 11,
											"value": "4D4154494320616D6F756E74206578636565647320746865206D6178696D756D"
										},
										{
											"begin": 13592,
											"end": 13593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13584,
											"end": 13590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13580,
											"end": 13594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13573,
											"end": 13631,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13665,
											"end": 13677,
											"name": "PUSH",
											"source": 11,
											"value": "20627579206C696D697400000000000000000000000000000000000000000000"
										},
										{
											"begin": 13660,
											"end": 13662,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13648,
											"end": 13663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13641,
											"end": 13678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13456,
											"end": 13685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13456,
											"end": 13685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14057,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 13691,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13833,
											"end": 13836,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 13918,
											"end": 13920,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 13913,
											"end": 13916,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13854,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 13854,
											"end": 13921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13854,
											"end": 13921,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 13854,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13847,
											"end": 13921,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13847,
											"end": 13921,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 14019,
											"end": 14022,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 13930,
											"end": 14023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 14023,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 13930,
											"end": 14023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14048,
											"end": 14050,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14043,
											"end": 14046,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14039,
											"end": 14051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14032,
											"end": 14051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14032,
											"end": 14051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14057,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14057,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14057,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14482,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 14063,
											"end": 14482,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14229,
											"end": 14233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14267,
											"end": 14269,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14256,
											"end": 14265,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14252,
											"end": 14270,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14244,
											"end": 14270,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14244,
											"end": 14270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14316,
											"end": 14325,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14310,
											"end": 14314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14306,
											"end": 14326,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14291,
											"end": 14300,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14280,
											"end": 14327,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14344,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 14470,
											"end": 14474,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14344,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 14344,
											"end": 14475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14344,
											"end": 14475,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 14344,
											"end": 14475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14336,
											"end": 14475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14336,
											"end": 14475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14482,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14482,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14482,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14488,
											"end": 14574,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 14488,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14523,
											"end": 14530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14563,
											"end": 14567,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14556,
											"end": 14561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14552,
											"end": 14568,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14541,
											"end": 14568,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14541,
											"end": 14568,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14488,
											"end": 14574,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14488,
											"end": 14574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14488,
											"end": 14574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14488,
											"end": 14574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14580,
											"end": 14698,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 14580,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14651,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 14667,
											"end": 14672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14651,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 14651,
											"end": 14673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14651,
											"end": 14673,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 14651,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 14649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14641,
											"end": 14674,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14631,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 14631,
											"end": 14692,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14688,
											"end": 14689,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14685,
											"end": 14686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14690,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14631,
											"end": 14692,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 14631,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14580,
											"end": 14698,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14580,
											"end": 14698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14843,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 14704,
											"end": 14843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14790,
											"end": 14796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14784,
											"end": 14797,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14806,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14806,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 14806,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14806,
											"end": 14837,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 14806,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14843,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14843,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14849,
											"end": 15196,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 14849,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14917,
											"end": 14923,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14966,
											"end": 14968,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14954,
											"end": 14963,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14945,
											"end": 14952,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14941,
											"end": 14964,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14937,
											"end": 14969,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 14934,
											"end": 15053,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14934,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 14934,
											"end": 15053,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14972,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 14972,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 14972,
											"end": 15051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14972,
											"end": 15051,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 14972,
											"end": 15051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14934,
											"end": 15053,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 14934,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15092,
											"end": 15093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15117,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 15171,
											"end": 15178,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15162,
											"end": 15168,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15151,
											"end": 15160,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15147,
											"end": 15169,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15117,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 15117,
											"end": 15179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15117,
											"end": 15179,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 15117,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15107,
											"end": 15179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15107,
											"end": 15179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15063,
											"end": 15189,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14849,
											"end": 15196,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14849,
											"end": 15196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14849,
											"end": 15196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14849,
											"end": 15196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14849,
											"end": 15196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15202,
											"end": 15382,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 15202,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15250,
											"end": 15327,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15247,
											"end": 15248,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15240,
											"end": 15328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15347,
											"end": 15351,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 15344,
											"end": 15345,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15337,
											"end": 15352,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15371,
											"end": 15375,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 15368,
											"end": 15369,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15376,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15388,
											"end": 15490,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 15388,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15430,
											"end": 15438,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15477,
											"end": 15482,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15474,
											"end": 15475,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15470,
											"end": 15483,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 15449,
											"end": 15483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15449,
											"end": 15483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15388,
											"end": 15490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15388,
											"end": 15490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15388,
											"end": 15490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15388,
											"end": 15490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15557,
											"end": 15562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15564,
											"end": 15568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15579,
											"end": 15594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15579,
											"end": 15594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15612,
											"end": 15617,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15603,
											"end": 15617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15603,
											"end": 15617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15647,
											"end": 15648,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15637,
											"end": 15645,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15634,
											"end": 15649,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15742,
											"end": 15746,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15737,
											"end": 15740,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15733,
											"end": 15747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15727,
											"end": 15731,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15724,
											"end": 15748,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15721,
											"end": 15771,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15721,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 15721,
											"end": 15771,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 15751,
											"end": 15769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15721,
											"end": 15771,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 15721,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15802,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15791,
											"end": 15799,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15787,
											"end": 15803,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15784,
											"end": 16235,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15784,
											"end": 16235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 15784,
											"end": 16235,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16216,
											"end": 16220,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16209,
											"end": 16214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16205,
											"end": 16221,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 16196,
											"end": 16221,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16196,
											"end": 16221,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15784,
											"end": 16235,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 15784,
											"end": 16235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16266,
											"end": 16270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16260,
											"end": 16264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16256,
											"end": 16271,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 16248,
											"end": 16271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16248,
											"end": 16271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 16319,
											"end": 16327,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 16296,
											"end": 16328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16284,
											"end": 16328,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 16284,
											"end": 16328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 15626,
											"end": 16338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 16344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16404,
											"end": 16409,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16595,
											"end": 16603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16585,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 16585,
											"end": 16625,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16616,
											"end": 16617,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16607,
											"end": 16617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16618,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16618,
											"end": 16623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16585,
											"end": 16625,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 16585,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16644,
											"end": 16648,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16634,
											"end": 16670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 16634,
											"end": 16670,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16661,
											"end": 16662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16652,
											"end": 16662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16652,
											"end": 16662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16663,
											"end": 16668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16663,
											"end": 16668,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16634,
											"end": 16670,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 16634,
											"end": 16670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16730,
											"end": 16734,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16778,
											"end": 16779,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16773,
											"end": 16800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16773,
											"end": 16800,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 16773,
											"end": 16800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 16773,
											"end": 16800,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16814,
											"end": 16815,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 16809,
											"end": 17000,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16809,
											"end": 17000,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 16809,
											"end": 17000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 16809,
											"end": 17000,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16723,
											"end": 17000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 16723,
											"end": 17000,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16773,
											"end": 16800,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 16773,
											"end": 16800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16791,
											"end": 16792,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16782,
											"end": 16792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16782,
											"end": 16792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16793,
											"end": 16798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16793,
											"end": 16798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16793,
											"end": 16798,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16809,
											"end": 17000,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 16809,
											"end": 17000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16854,
											"end": 16857,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16844,
											"end": 16852,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16841,
											"end": 16858,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16838,
											"end": 16881,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16838,
											"end": 16881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 16838,
											"end": 16881,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 16861,
											"end": 16879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16838,
											"end": 16881,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 16838,
											"end": 16881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16910,
											"end": 16918,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16907,
											"end": 16908,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 16903,
											"end": 16919,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 16894,
											"end": 16919,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16894,
											"end": 16919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16945,
											"end": 16948,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16938,
											"end": 16943,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16935,
											"end": 16949,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16932,
											"end": 16972,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16932,
											"end": 16972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 16932,
											"end": 16972,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 16952,
											"end": 16970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16932,
											"end": 16972,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 16932,
											"end": 16972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16985,
											"end": 16990,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16985,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16985,
											"end": 16990,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16723,
											"end": 17000,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 16723,
											"end": 17000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16723,
											"end": 17000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17109,
											"end": 17111,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17099,
											"end": 17107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17096,
											"end": 17112,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17090,
											"end": 17093,
											"name": "PUSH",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 17084,
											"end": 17088,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17081,
											"end": 17094,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17077,
											"end": 17113,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17059,
											"end": 17061,
											"name": "PUSH",
											"source": 11,
											"value": "4E"
										},
										{
											"begin": 17049,
											"end": 17057,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17046,
											"end": 17062,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17041,
											"end": 17043,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 17035,
											"end": 17039,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17032,
											"end": 17044,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17012,
											"end": 17123,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 17009,
											"end": 17255,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17009,
											"end": 17255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 17009,
											"end": 17255,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17165,
											"end": 17173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17159,
											"end": 17163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17155,
											"end": 17174,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 17146,
											"end": 17174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17146,
											"end": 17174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17200,
											"end": 17203,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17193,
											"end": 17198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17190,
											"end": 17204,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17207,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 17207,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 17207,
											"end": 17225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17207,
											"end": 17225,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 17207,
											"end": 17225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17240,
											"end": 17245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 17240,
											"end": 17245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17009,
											"end": 17255,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 17009,
											"end": 17255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17280,
											"end": 17322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 17318,
											"end": 17321,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17308,
											"end": 17316,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17302,
											"end": 17306,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17299,
											"end": 17300,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 17280,
											"end": 17322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 17280,
											"end": 17322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17280,
											"end": 17322,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 17280,
											"end": 17322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17265,
											"end": 17322,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17265,
											"end": 17322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17265,
											"end": 17322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17265,
											"end": 17322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17354,
											"end": 17358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17349,
											"end": 17352,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17345,
											"end": 17359,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 17338,
											"end": 17343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17335,
											"end": 17360,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 17332,
											"end": 17383,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17332,
											"end": 17383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 17332,
											"end": 17383,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17363,
											"end": 17381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 17363,
											"end": 17381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 17363,
											"end": 17381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17363,
											"end": 17381,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 17363,
											"end": 17381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17332,
											"end": 17383,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 17332,
											"end": 17383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17412,
											"end": 17416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17405,
											"end": 17410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17401,
											"end": 17417,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 17392,
											"end": 17417,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17392,
											"end": 17417,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 17423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17710,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 17429,
											"end": 17710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17487,
											"end": 17492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17511,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 17529,
											"end": 17533,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17511,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 17511,
											"end": 17534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17511,
											"end": 17534,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 17511,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17503,
											"end": 17534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17503,
											"end": 17534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17555,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 17571,
											"end": 17579,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17555,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 17555,
											"end": 17580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17555,
											"end": 17580,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 17555,
											"end": 17580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17543,
											"end": 17580,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17543,
											"end": 17580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17599,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 17636,
											"end": 17702,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17626,
											"end": 17634,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17620,
											"end": 17624,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17599,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 17599,
											"end": 17703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17599,
											"end": 17703,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 17599,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17590,
											"end": 17703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17590,
											"end": 17703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17710,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17710,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17716,
											"end": 18126,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 17716,
											"end": 18126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17756,
											"end": 17763,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17779,
											"end": 17799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 17797,
											"end": 17798,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17779,
											"end": 17799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 17779,
											"end": 17799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17779,
											"end": 17799,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 17779,
											"end": 17799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17774,
											"end": 17799,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17774,
											"end": 17799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 17831,
											"end": 17832,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 17813,
											"end": 17833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17808,
											"end": 17833,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17808,
											"end": 17833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17868,
											"end": 17869,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17865,
											"end": 17866,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17861,
											"end": 17870,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 17890,
											"end": 17920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 17908,
											"end": 17919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17890,
											"end": 17920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 17890,
											"end": 17920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17890,
											"end": 17920,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 17890,
											"end": 17920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17879,
											"end": 17920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17879,
											"end": 17920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18069,
											"end": 18070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18060,
											"end": 18067,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18056,
											"end": 18071,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 18053,
											"end": 18054,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18050,
											"end": 18072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 18030,
											"end": 18031,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18023,
											"end": 18032,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18003,
											"end": 18086,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 17980,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 17980,
											"end": 18119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18099,
											"end": 18117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 18099,
											"end": 18117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 18099,
											"end": 18117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18099,
											"end": 18117,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 18099,
											"end": 18117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17980,
											"end": 18119,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 17980,
											"end": 18119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17764,
											"end": 18126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17716,
											"end": 18126,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17716,
											"end": 18126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17716,
											"end": 18126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17716,
											"end": 18126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17716,
											"end": 18126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18132,
											"end": 18312,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 18132,
											"end": 18312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18180,
											"end": 18257,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18177,
											"end": 18178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18170,
											"end": 18258,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18277,
											"end": 18281,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 18274,
											"end": 18275,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 18267,
											"end": 18282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18301,
											"end": 18305,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 18298,
											"end": 18299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18291,
											"end": 18306,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 18318,
											"end": 18503,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 18318,
											"end": 18503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18358,
											"end": 18359,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 18393,
											"end": 18394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 18375,
											"end": 18395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18370,
											"end": 18395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18370,
											"end": 18395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 18427,
											"end": 18428,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 18409,
											"end": 18429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18404,
											"end": 18429,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18404,
											"end": 18429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18448,
											"end": 18449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18438,
											"end": 18473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 18438,
											"end": 18473,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 18471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 18453,
											"end": 18471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 18453,
											"end": 18471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 18471,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 18453,
											"end": 18471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18438,
											"end": 18473,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 18438,
											"end": 18473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18495,
											"end": 18496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18488,
											"end": 18497,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 18483,
											"end": 18497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18483,
											"end": 18497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18318,
											"end": 18503,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18318,
											"end": 18503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18318,
											"end": 18503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18318,
											"end": 18503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18318,
											"end": 18503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18509,
											"end": 18732,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 18509,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18649,
											"end": 18683,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F7420656E6F75676820746F6B656E7320617661696C61626C6520666F7220"
										},
										{
											"begin": 18645,
											"end": 18646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18637,
											"end": 18643,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18633,
											"end": 18647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18626,
											"end": 18684,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18718,
											"end": 18724,
											"name": "PUSH",
											"source": 11,
											"value": "73616C6500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18713,
											"end": 18715,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18705,
											"end": 18711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18701,
											"end": 18716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18694,
											"end": 18725,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18509,
											"end": 18732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18509,
											"end": 18732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18738,
											"end": 19104,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 18738,
											"end": 19104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18880,
											"end": 18883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18901,
											"end": 18968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 18965,
											"end": 18967,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 18960,
											"end": 18963,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18901,
											"end": 18968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 18901,
											"end": 18968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18901,
											"end": 18968,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 18901,
											"end": 18968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18894,
											"end": 18968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18894,
											"end": 18968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 19066,
											"end": 19069,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 18977,
											"end": 19070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19070,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 18977,
											"end": 19070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19095,
											"end": 19097,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19090,
											"end": 19093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19086,
											"end": 19098,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19079,
											"end": 19098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19079,
											"end": 19098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18738,
											"end": 19104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18738,
											"end": 19104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18738,
											"end": 19104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18738,
											"end": 19104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19110,
											"end": 19529,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 19110,
											"end": 19529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19276,
											"end": 19280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19314,
											"end": 19316,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19303,
											"end": 19312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19299,
											"end": 19317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19291,
											"end": 19317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19291,
											"end": 19317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19363,
											"end": 19372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19357,
											"end": 19361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19353,
											"end": 19373,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19349,
											"end": 19350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19338,
											"end": 19347,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19334,
											"end": 19351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19327,
											"end": 19374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19391,
											"end": 19522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 19517,
											"end": 19521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19391,
											"end": 19522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 19391,
											"end": 19522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19391,
											"end": 19522,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 19391,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19383,
											"end": 19522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19383,
											"end": 19522,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19110,
											"end": 19529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19110,
											"end": 19529,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19110,
											"end": 19529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19110,
											"end": 19529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19535,
											"end": 19726,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 19535,
											"end": 19726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19575,
											"end": 19578,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 19612,
											"end": 19613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 19594,
											"end": 19614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19589,
											"end": 19614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19589,
											"end": 19614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19628,
											"end": 19648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 19646,
											"end": 19647,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19628,
											"end": 19648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 19628,
											"end": 19648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19628,
											"end": 19648,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 19628,
											"end": 19648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19623,
											"end": 19648,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19623,
											"end": 19648,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19671,
											"end": 19672,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19668,
											"end": 19669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19664,
											"end": 19673,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19657,
											"end": 19673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19657,
											"end": 19673,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19692,
											"end": 19695,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19689,
											"end": 19690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19686,
											"end": 19696,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 19683,
											"end": 19719,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19683,
											"end": 19719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 19683,
											"end": 19719,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19699,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 19699,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 19699,
											"end": 19717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19699,
											"end": 19717,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 19699,
											"end": 19717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19683,
											"end": 19719,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 19683,
											"end": 19719,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19535,
											"end": 19726,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19535,
											"end": 19726,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19535,
											"end": 19726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19535,
											"end": 19726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19535,
											"end": 19726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19732,
											"end": 20064,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 19732,
											"end": 20064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19853,
											"end": 19857,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19891,
											"end": 19893,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19880,
											"end": 19889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19876,
											"end": 19894,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19868,
											"end": 19894,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19868,
											"end": 19894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19904,
											"end": 19975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 19972,
											"end": 19973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19961,
											"end": 19970,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19957,
											"end": 19974,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19948,
											"end": 19954,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19904,
											"end": 19975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 19904,
											"end": 19975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19904,
											"end": 19975,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 19904,
											"end": 19975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19985,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 20053,
											"end": 20055,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20042,
											"end": 20051,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20038,
											"end": 20056,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20029,
											"end": 20035,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19985,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 19985,
											"end": 20057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19985,
											"end": 20057,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 19985,
											"end": 20057,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19732,
											"end": 20064,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19732,
											"end": 20064,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19732,
											"end": 20064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19732,
											"end": 20064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19732,
											"end": 20064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19732,
											"end": 20064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20070,
											"end": 20251,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 20070,
											"end": 20251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20210,
											"end": 20243,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20206,
											"end": 20207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20198,
											"end": 20204,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20194,
											"end": 20208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20187,
											"end": 20244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20070,
											"end": 20251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20070,
											"end": 20251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20623,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 20257,
											"end": 20623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20399,
											"end": 20402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20420,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 20484,
											"end": 20486,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 20479,
											"end": 20482,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20420,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 20420,
											"end": 20487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20420,
											"end": 20487,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 20420,
											"end": 20487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20413,
											"end": 20487,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20413,
											"end": 20487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20496,
											"end": 20589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 20585,
											"end": 20588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20496,
											"end": 20589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 20496,
											"end": 20589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20496,
											"end": 20589,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 20496,
											"end": 20589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20614,
											"end": 20616,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20609,
											"end": 20612,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20605,
											"end": 20617,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20623,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20629,
											"end": 21048,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 20629,
											"end": 21048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20795,
											"end": 20799,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20833,
											"end": 20835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20822,
											"end": 20831,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20818,
											"end": 20836,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20810,
											"end": 20836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20810,
											"end": 20836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20882,
											"end": 20891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20876,
											"end": 20880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20872,
											"end": 20892,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20868,
											"end": 20869,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20857,
											"end": 20866,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20853,
											"end": 20870,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20846,
											"end": 20893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20910,
											"end": 21041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 21036,
											"end": 21040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20910,
											"end": 21041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 20910,
											"end": 21041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20910,
											"end": 21041,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 20910,
											"end": 21041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20902,
											"end": 21041,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20902,
											"end": 21041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20629,
											"end": 21048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20629,
											"end": 21048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20629,
											"end": 21048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20629,
											"end": 21048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"danpresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens()": "d0febe4c",
							"maxMaticBuy()": "c43a0135",
							"minMaticBuy()": "22c6baf6",
							"owner()": "8da5cb5b",
							"preSaleActive()": "84494708",
							"renounceOwnership()": "715018a6",
							"setBuyLimits(uint256,uint256)": "0da2c5f0",
							"setTokenPrice(uint256)": "6a61e5fc",
							"startPresale()": "04c98b2b",
							"stopPresale()": "1ad2ad1a",
							"token()": "fc0c546a",
							"tokensPerMatic()": "d076c608",
							"tokensSoldTo(address)": "464695b3",
							"totalMaticRaised()": "125b8b78",
							"transferOwnership(address)": "f2fde38b",
							"withdrawFunds()": "24600fc3",
							"withdrawUnsoldTokens()": "c8bdbfb6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensPerMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minMaticBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMaticBuy\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMax\",\"type\":\"uint256\"}],\"name\":\"BuyLimitsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MaticWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"TokenPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maticAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnsoldTokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMaticBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMaticBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMax\",\"type\":\"uint256\"}],\"name\":\"setBuyLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerMatic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensSoldTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMaticRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUnsoldTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages a token presale on the Polygon network. It allows users to purchase a specified ERC20 token using MATIC. The contract owner has full control over the presale status, pricing, and fund management. It is highly recommended to test this contract on a testnet (like Polygon Mumbai) before deploying to the mainnet.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"buyTokens()\":{\"details\":\"Allows users to purchase tokens using MATIC. The `payable` modifier makes this function able to receive MATIC. The `nonReentrant` modifier prevents reentrancy attacks. Note: This function assumes the incoming MATIC has 18 decimals.\"},\"constructor\":{\"details\":\"The constructor initializes the contract with the token address, an initial price, and buy limits.\",\"params\":{\"_maxMaticBuy\":\"The maximum amount of MATIC for a purchase.\",\"_minMaticBuy\":\"The minimum amount of MATIC for a purchase.\",\"_tokenAddress\":\"The address of the ERC20 token to be sold.\",\"_tokensPerMatic\":\"The initial price (tokens per 1 MATIC).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBuyLimits(uint256,uint256)\":{\"details\":\"Allows the owner to set the minimum and maximum buy limits.\",\"params\":{\"_newMax\":\"The new maximum MATIC buy limit.\",\"_newMin\":\"The new minimum MATIC buy limit.\"}},\"setTokenPrice(uint256)\":{\"details\":\"Allows the owner to update the token price.\",\"params\":{\"_newPrice\":\"The new price, representing tokens per 1 MATIC.\"}},\"startPresale()\":{\"details\":\"Allows the owner to start the presale. Only callable if the presale is not already active.\"},\"stopPresale()\":{\"details\":\"Allows the owner to stop the presale. Only callable if the presale is active.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds()\":{\"details\":\"Allows the owner to withdraw the collected MATIC. This function transfers the entire MATIC balance of the contract to the owner.\"},\"withdrawUnsoldTokens()\":{\"details\":\"Allows the owner to withdraw any unsold tokens from the contract. This can be used after the presale has ended.\"}},\"title\":\"PreSale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"danpresale.sol\":\"PreSale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"danpresale.sol\":{\"keccak256\":\"0xd1aaa90b72816a7680d171744cbba140e19e5cc9821e629317a553dc1c92f6c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355af016e1fecb28b85222c5c0db6528c37f1496d3a9b5c1c1d8bcaf3305f558\",\"dweb:/ipfs/QmYCohhW7p6Wju1oyNVsquVGVeMB8KQf9k7F5CSD7JX1Ps\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "danpresale.sol:PreSale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "danpresale.sol:PreSale",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 933,
								"contract": "danpresale.sol:PreSale",
								"label": "tokensPerMatic",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 935,
								"contract": "danpresale.sol:PreSale",
								"label": "preSaleActive",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 937,
								"contract": "danpresale.sol:PreSale",
								"label": "totalMaticRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 941,
								"contract": "danpresale.sol:PreSale",
								"label": "tokensSoldTo",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 943,
								"contract": "danpresale.sol:PreSale",
								"label": "minMaticBuy",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 945,
								"contract": "danpresale.sol:PreSale",
								"label": "maxMaticBuy",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							900
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 901,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 900,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 900,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								900
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 882,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							912
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 912,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 912,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								912,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							912
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 913,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 912,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						],
						"IERC20Metadata": [
							406
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 381,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "306:6:6"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 406,
							"linearizedBaseContracts": [
								406,
								380
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 406,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 406,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 402,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 406,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 407,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							870
						]
					},
					"id": 871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 410,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 381,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 409,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 230,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 411,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 870,
							"linearizedBaseContracts": [
								870
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 418,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 427,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 446,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 870,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 468,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 470,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 461,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 466,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 464,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 454,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 453,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 870,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 492,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 495,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 497,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 498,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 499,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 493,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 491,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 490,
												"id": 502,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 870,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 523,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 525,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 526,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 512,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 521,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 519,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 518,
												"id": 531,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 507,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 506,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 870,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 550,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$870",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$870",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 546,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 557,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 558,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 559,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 535,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 870,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 605,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															576
														],
														"declarations": [
															{
																"constant": false,
																"id": 576,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 605,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 585,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 581,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$870",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$870",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 579,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 583,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 577,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 586,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 587,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 596,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 595,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 590,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 570,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 591,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 576,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 592,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 572,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 589,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 594,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 599,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 600,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 601,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 597,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 604,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 566,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 870,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 622,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 624,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 626,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 620,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 630,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 631,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 629,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 635,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 638,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 611,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 640,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 613,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 642,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 636,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 634,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 645,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 648,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 646,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 870,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 667,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 681,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 682,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 683,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 679,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 694,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 693,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 689,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 687,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 686,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 692,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 695,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 673,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 674,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 675,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 672,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 677,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 870,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 712,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 727,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 729,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 730,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 725,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 741,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 740,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 736,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 734,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 733,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 739,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 718,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 719,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 720,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 721,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 717,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 723,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 700,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 699,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 870,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 757,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 772,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 773,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 769,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 784,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 783,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 779,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 777,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 776,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 782,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 785,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 763,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 764,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 765,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 762,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 767,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 747,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 746,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 753,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 870,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 799,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 800,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 791,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 802,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 803,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 814,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 808,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 806,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 826,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 821,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 819,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 818,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 824,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 789,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 870,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 839,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 847,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 834,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 834,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 843,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 846,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 840,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 832,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 848,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 849,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 850,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 861,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 855,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 832,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 854,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 853,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 865,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 838,
												"id": 867,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 870,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 871,
							"src": "698:9376:7",
							"usedErrors": [
								418,
								427
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							900
						]
					},
					"id": 901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 872,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 873,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 900,
							"linearizedBaseContracts": [
								900
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 878,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 877,
												"id": 880,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 900,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 887,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 886,
												"id": 889,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 900,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 895,
												"id": 897,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 900,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 901,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 902,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 903,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IERC165",
							"nameLocation": "433:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "819:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 905,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:9"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "862:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 908,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:9"
									},
									"scope": 912,
									"src": "792:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 913,
							"src": "423:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:9"
				},
				"id": 9
			},
			"danpresale.sol": {
				"ast": {
					"absolutePath": "danpresale.sol",
					"exportedSymbols": {
						"Context": [
							900
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"IERC20Metadata": [
							406
						],
						"Ownable": [
							147
						],
						"PreSale": [
							1293
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							870
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 381,
							"src": "61:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 871,
							"src": "119:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 148,
							"src": "186:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 918,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 303,
							"src": "240:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 919,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 407,
							"src": "304:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 921,
										"name": "Ownable",
										"nameLocations": [
											"798:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "798:7:10"
									},
									"id": 922,
									"nodeType": "InheritanceSpecifier",
									"src": "798:7:10"
								},
								{
									"baseName": {
										"id": 923,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"807:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "807:15:10"
									},
									"id": 924,
									"nodeType": "InheritanceSpecifier",
									"src": "807:15:10"
								}
							],
							"canonicalName": "PreSale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 920,
								"nodeType": "StructuredDocumentation",
								"src": "383:393:10",
								"text": " @title PreSale\n @dev This contract manages a token presale on the Polygon network.\n It allows users to purchase a specified ERC20 token using MATIC.\n The contract owner has full control over the presale status, pricing,\n and fund management.\n It is highly recommended to test this contract on a testnet (like Polygon Mumbai)\n before deploying to the mainnet."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								302,
								147,
								900
							],
							"name": "PreSale",
							"nameLocation": "787:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 928,
									"libraryName": {
										"id": 925,
										"name": "SafeERC20",
										"nameLocations": [
											"836:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "836:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "830:27:10",
									"typeName": {
										"id": 927,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 926,
											"name": "IERC20",
											"nameLocations": [
												"850:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "850:6:10"
										},
										"referencedDeclaration": 380,
										"src": "850:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 931,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "1074:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1042:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Metadata_$406",
										"typeString": "contract IERC20Metadata"
									},
									"typeName": {
										"id": 930,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 929,
											"name": "IERC20Metadata",
											"nameLocations": [
												"1042:14:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 406,
											"src": "1042:14:10"
										},
										"referencedDeclaration": 406,
										"src": "1042:14:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$406",
											"typeString": "contract IERC20Metadata"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d076c608",
									"id": 933,
									"mutability": "mutable",
									"name": "tokensPerMatic",
									"nameLocation": "1208:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1193:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 932,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1193:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84494708",
									"id": 935,
									"mutability": "mutable",
									"name": "preSaleActive",
									"nameLocation": "1311:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1299:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 934,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1299:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "125b8b78",
									"id": 937,
									"mutability": "mutable",
									"name": "totalMaticRaised",
									"nameLocation": "1405:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1390:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 936,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1390:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "464695b3",
									"id": 941,
									"mutability": "mutable",
									"name": "tokensSoldTo",
									"nameLocation": "1535:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1500:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 940,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 938,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1508:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1500:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 939,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "22c6baf6",
									"id": 943,
									"mutability": "mutable",
									"name": "minMaticBuy",
									"nameLocation": "1640:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1625:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1625:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c43a0135",
									"id": 945,
									"mutability": "mutable",
									"name": "maxMaticBuy",
									"nameLocation": "1673:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1658:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1658:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c",
									"id": 947,
									"name": "PresaleStarted",
									"nameLocation": "1724:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:10"
									},
									"src": "1718:23:10"
								},
								{
									"anonymous": false,
									"eventSelector": "1eb1561f8507eb9bc6988331f66f369e75710f2b4b678ad5b4a52454b6636f5f",
									"id": 949,
									"name": "PresaleEnded",
									"nameLocation": "1753:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:10"
									},
									"src": "1747:21:10"
								},
								{
									"anonymous": false,
									"eventSelector": "6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e93976890",
									"id": 953,
									"name": "TokenPriceUpdated",
									"nameLocation": "1780:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "1806:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1798:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1797:18:10"
									},
									"src": "1774:42:10"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 961,
									"name": "TokensPurchased",
									"nameLocation": "1828:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1860:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1844:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": false,
												"mutability": "mutable",
												"name": "maticAmount",
												"nameLocation": "1875:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1867:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1896:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1888:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:65:10"
									},
									"src": "1822:87:10"
								},
								{
									"anonymous": false,
									"eventSelector": "4e5abb9fe9c3cb072c5f05c90db4208588b64cedbfa36e6643e38f40cd82104c",
									"id": 967,
									"name": "MaticWithdrawn",
									"nameLocation": "1921:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1952:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1936:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1964:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1956:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:36:10"
									},
									"src": "1915:57:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7c885dc2bd1a0b45fe4cf249833d28907319b5b702b3496d49dd231cee285025",
									"id": 971,
									"name": "UnsoldTokensWithdrawn",
									"nameLocation": "1984:21:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2014:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2006:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2006:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:16:10"
									},
									"src": "1978:44:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b",
									"id": 977,
									"name": "BuyLimitsUpdated",
									"nameLocation": "2034:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMin",
												"nameLocation": "2059:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2051:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMax",
												"nameLocation": "2075:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2067:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2050:32:10"
									},
									"src": "2028:55:10"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "2683:205:10",
										"statements": [
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "2694:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$406",
															"typeString": "contract IERC20Metadata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 995,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "2717:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 994,
															"name": "IERC20Metadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2702:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$406_$",
																"typeString": "type(contract IERC20Metadata)"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2702:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$406",
															"typeString": "contract IERC20Metadata"
														}
													},
													"src": "2694:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Metadata_$406",
														"typeString": "contract IERC20Metadata"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "2694:37:10"
											},
											{
												"expression": {
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "tokensPerMatic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "2742:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1000,
														"name": "_tokensPerMatic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2759:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2742:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "2742:32:10"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1003,
														"name": "minMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "2785:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1004,
														"name": "_minMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "2799:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2785:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2785:26:10"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1007,
														"name": "maxMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2822:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1008,
														"name": "_maxMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2836:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2822:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "2822:26:10"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1011,
														"name": "preSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "2859:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2875:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2859:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "2859:21:10"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "2091:419:10",
										"text": " @dev The constructor initializes the contract with the token address,\n an initial price, and buy limits.\n @param _tokenAddress The address of the ERC20 token to be sold.\n @param _tokensPerMatic The initial price (tokens per 1 MATIC).\n @param _minMaticBuy The minimum amount of MATIC for a purchase.\n @param _maxMaticBuy The maximum amount of MATIC for a purchase."
									},
									"id": 1016,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 989,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2671:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2675:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2671:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 991,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 988,
												"name": "Ownable",
												"nameLocations": [
													"2663:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2663:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2663:19:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "2546:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "2538:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "_tokensPerMatic",
												"nameLocation": "2578:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "2570:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_minMaticBuy",
												"nameLocation": "2612:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "2604:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "_maxMaticBuy",
												"nameLocation": "2643:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "2635:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2527:135:10"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:10"
									},
									"scope": 1293,
									"src": "2516:372:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "3269:1152:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "preSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "3329:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206973206e6f7420616374697665",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3344:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															},
															"value": "Presale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3321:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3321:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "3321:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1028,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3420:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3424:5:10",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3420:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1030,
																"name": "minMaticBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3433:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3420:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154494320616d6f756e742069732062656c6f7720746865206d696e696d756d20627579206c696d6974",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4",
																"typeString": "literal_string \"MATIC amount is below the minimum buy limit\""
															},
															"value": "MATIC amount is below the minimum buy limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c428d7e975fb6e43e19f812c61ff57049f03703626e03ef83e6801b4722004e4",
																"typeString": "literal_string \"MATIC amount is below the minimum buy limit\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3412:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:80:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "3412:80:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1036,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3511:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3515:5:10",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3511:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1038,
																"name": "maxMaticBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "3524:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3511:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154494320616d6f756e74206578636565647320746865206d6178696d756d20627579206c696d6974",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3537:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0",
																"typeString": "literal_string \"MATIC amount exceeds the maximum buy limit\""
															},
															"value": "MATIC amount exceeds the maximum buy limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94c875ab72dc5a7c590654ea2f058e05db2beb897d6826e7589ef1de6117f0a0",
																"typeString": "literal_string \"MATIC amount exceeds the maximum buy limit\""
															}
														],
														"id": 1035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3503:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "3503:79:10"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "3756:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1113,
														"src": "3748:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3748:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1045,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3771:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3775:5:10",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3771:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1047,
																		"name": "tokensPerMatic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "3783:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3771:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3801:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1050,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 931,
																						"src": "3807:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																							"typeString": "contract IERC20Metadata"
																						}
																					},
																					"id": 1051,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3813:8:10",
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 405,
																					"src": "3807:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																						"typeString": "function () view external returns (uint8)"
																					}
																				},
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3807:16:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "3801:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1054,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3800:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3771:53:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1056,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3770:55:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3829:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3835:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "3829:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															}
														],
														"id": 1060,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3828:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "3770:68:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3748:90:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1073,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3972:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PreSale_$1293",
																					"typeString": "contract PreSale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PreSale_$1293",
																					"typeString": "contract PreSale"
																				}
																			],
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3964:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1071,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3964:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3964:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1067,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 931,
																						"src": "3946:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																							"typeString": "contract IERC20Metadata"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																							"typeString": "contract IERC20Metadata"
																						}
																					],
																					"id": 1066,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3938:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1065,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3938:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3938:14:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1064,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "3931:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3931:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3954:9:10",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 337,
																	"src": "3931:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3931:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1076,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "3982:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3931:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c6520666f722073616c65",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3995:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b",
																"typeString": "literal_string \"Not enough tokens available for sale\""
															},
															"value": "Not enough tokens available for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_050f24cc625de11918284c611d3ad5958cd7109690b42cfdfa121e4f338afd5b",
																"typeString": "literal_string \"Not enough tokens available for sale\""
															}
														],
														"id": 1063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3923:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:111:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "3923:111:10"
											},
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1081,
														"name": "totalMaticRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "4099:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1082,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4119:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4123:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4119:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4099:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "4099:29:10"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1086,
															"name": "tokensSoldTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "4139:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1089,
														"indexExpression": {
															"expression": {
																"id": 1087,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4152:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4156:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4152:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4139:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1090,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "4167:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4139:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "4139:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4273:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4277:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4273:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "4285:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1096,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 931,
																			"src": "4252:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																				"typeString": "contract IERC20Metadata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																				"typeString": "contract IERC20Metadata"
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4244:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1094,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4244:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4244:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1093,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "4237:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4237:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4260:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 451,
														"src": "4237:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4237:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "4237:60:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1106,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4378:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4382:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4378:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4390:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4394:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4390:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1110,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "4401:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1105,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4362:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4362:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "EmitStatement",
												"src": "4357:56:10"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "2931:281:10",
										"text": " @dev Allows users to purchase tokens using MATIC.\n The `payable` modifier makes this function able to receive MATIC.\n The `nonReentrant` modifier prevents reentrancy attacks.\n Note: This function assumes the incoming MATIC has 18 decimals."
									},
									"functionSelector": "d0febe4c",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1020,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1019,
												"name": "nonReentrant",
												"nameLocations": [
													"3256:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3256:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3256:12:10"
										}
									],
									"name": "buyTokens",
									"nameLocation": "3227:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3236:2:10"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3269:0:10"
									},
									"scope": 1293,
									"src": "3218:1203:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "4641:134:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4660:14:10",
															"subExpression": {
																"id": 1121,
																"name": "preSaleActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "4661:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c6520697320616c726561647920616374697665",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4676:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
																"typeString": "literal_string \"Presale is already active\""
															},
															"value": "Presale is already active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
																"typeString": "literal_string \"Presale is already active\""
															}
														],
														"id": 1120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4652:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4652:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "4652:52:10"
											},
											{
												"expression": {
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1126,
														"name": "preSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4715:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4731:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4715:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "4715:20:10"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1130,
														"name": "PresaleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4751:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "EmitStatement",
												"src": "4746:21:10"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "4468:124:10",
										"text": " @dev Allows the owner to start the presale.\n Only callable if the presale is not already active."
									},
									"functionSelector": "04c98b2b",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1118,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1117,
												"name": "onlyOwner",
												"nameLocations": [
													"4631:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4631:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4631:9:10"
										}
									],
									"name": "startPresale",
									"nameLocation": "4607:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:10"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4641:0:10"
									},
									"scope": 1293,
									"src": "4598:177:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "4942:128:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "preSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4961:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206973206e6f7420616374697665",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4976:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															},
															"value": "Presale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															}
														],
														"id": 1140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4953:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4953:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "4953:47:10"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "preSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "5011:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5027:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5011:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "5011:21:10"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1149,
														"name": "PresaleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "5048:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5048:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "EmitStatement",
												"src": "5043:19:10"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "4783:111:10",
										"text": " @dev Allows the owner to stop the presale.\n Only callable if the presale is active."
									},
									"functionSelector": "1ad2ad1a",
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1138,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1137,
												"name": "onlyOwner",
												"nameLocations": [
													"4932:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4932:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4932:9:10"
										}
									],
									"name": "stopPresale",
									"nameLocation": "4909:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4920:2:10"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4942:0:10"
									},
									"scope": 1293,
									"src": "4900:170:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "5287:89:10",
										"statements": [
											{
												"expression": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1161,
														"name": "tokensPerMatic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "5298:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1162,
														"name": "_newPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "5315:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5298:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "5298:26:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1166,
															"name": "_newPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "5358:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "TokenPriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "5340:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5340:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "EmitStatement",
												"src": "5335:33:10"
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "5078:142:10",
										"text": " @dev Allows the owner to update the token price.\n @param _newPrice The new price, representing tokens per 1 MATIC."
									},
									"functionSelector": "6a61e5fc",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1158,
												"name": "onlyOwner",
												"nameLocations": [
													"5277:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5277:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5277:9:10"
										}
									],
									"name": "setTokenPrice",
									"nameLocation": "5235:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_newPrice",
												"nameLocation": "5257:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5249:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:19:10"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5287:0:10"
									},
									"scope": 1293,
									"src": "5226:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "5662:209:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "_newMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "5681:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1182,
																"name": "_newMax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "5692:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5681:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e20627579206d757374206265206c657373207468616e206f7220657175616c20746f206d617820627579",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5701:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894",
																"typeString": "literal_string \"Min buy must be less than or equal to max buy\""
															},
															"value": "Min buy must be less than or equal to max buy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dcf13aae130b05d4a4cc77716e1845190f70b99b5b5612b25752bcf94c46894",
																"typeString": "literal_string \"Min buy must be less than or equal to max buy\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5673:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5673:76:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "5673:76:10"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "minMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "5760:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_newMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "5774:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5760:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "5760:21:10"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1191,
														"name": "maxMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5792:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "_newMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "5806:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5792:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "5792:21:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1196,
															"name": "_newMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "5846:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1197,
															"name": "_newMax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "5855:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1195,
														"name": "BuyLimitsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "5829:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5829:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "EmitStatement",
												"src": "5824:39:10"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "5384:197:10",
										"text": " @dev Allows the owner to set the minimum and maximum buy limits.\n @param _newMin The new minimum MATIC buy limit.\n @param _newMax The new maximum MATIC buy limit."
									},
									"functionSelector": "0da2c5f0",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1177,
												"name": "onlyOwner",
												"nameLocations": [
													"5652:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5652:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5652:9:10"
										}
									],
									"name": "setBuyLimits",
									"nameLocation": "5596:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_newMin",
												"nameLocation": "5617:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "5609:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5609:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_newMax",
												"nameLocation": "5634:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "5626:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5608:34:10"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5662:0:10"
									},
									"scope": 1293,
									"src": "5587:284:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "6091:352:10",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "6110:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1246,
														"src": "6102:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6102:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1211,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6128:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PreSale_$1293",
																	"typeString": "contract PreSale"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_PreSale_$1293",
																	"typeString": "contract PreSale"
																}
															],
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6120:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1209,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6120:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6120:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6134:7:10",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6120:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6102:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "6160:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6160:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204d4154494320746f207769746864726177",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6173:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
																"typeString": "literal_string \"No MATIC to withdraw\""
															},
															"value": "No MATIC to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
																"typeString": "literal_string \"No MATIC to withdraw\""
															}
														],
														"id": 1215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6152:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6152:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "6152:44:10"
											},
											{
												"assignments": [
													1223,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "6285:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1246,
														"src": "6280:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1222,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6280:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1234,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6332:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1226,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "6302:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6302:7:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6294:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1224,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6294:8:10",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6294:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6311:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6294:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1230,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "6323:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6294:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6294:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6279:56:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "6354:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207769746864726177204d41544943",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6360:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
																"typeString": "literal_string \"Failed to withdraw MATIC\""
															},
															"value": "Failed to withdraw MATIC"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
																"typeString": "literal_string \"Failed to withdraw MATIC\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6346:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6346:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "6346:41:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1241,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "6418:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6418:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "6427:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1240,
														"name": "MaticWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "6403:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6403:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "EmitStatement",
												"src": "6398:37:10"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "5879:162:10",
										"text": " @dev Allows the owner to withdraw the collected MATIC.\n This function transfers the entire MATIC balance of the contract to the owner."
									},
									"functionSelector": "24600fc3",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1204,
												"name": "onlyOwner",
												"nameLocations": [
													"6081:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6081:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6081:9:10"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "6056:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6069:2:10"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6091:0:10"
									},
									"scope": 1293,
									"src": "6047:396:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "6653:272:10",
										"statements": [
											{
												"assignments": [
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "6672:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "6664:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6664:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1264,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6728:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PreSale_$1293",
																		"typeString": "contract PreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PreSale_$1293",
																		"typeString": "contract PreSale"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6720:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6720:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6720:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1258,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 931,
																			"src": "6702:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																				"typeString": "contract IERC20Metadata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																				"typeString": "contract IERC20Metadata"
																			}
																		],
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6694:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1256,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6694:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6694:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1255,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6687:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6687:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6710:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "6687:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6687:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6664:70:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "tokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "6753:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6768:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6753:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6771:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6745:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6745:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "6745:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1282,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "6844:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6844:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "6853:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1278,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 931,
																			"src": "6823:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																				"typeString": "contract IERC20Metadata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20Metadata_$406",
																				"typeString": "contract IERC20Metadata"
																			}
																		],
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6815:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1276,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6815:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6815:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1275,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6808:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6808:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6831:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 451,
														"src": "6808:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6808:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "6808:58:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1288,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "6904:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1287,
														"name": "UnsoldTokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "6882:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "EmitStatement",
												"src": "6877:40:10"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "6451:145:10",
										"text": " @dev Allows the owner to withdraw any unsold tokens from the contract.\n This can be used after the presale has ended."
									},
									"functionSelector": "c8bdbfb6",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1251,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1250,
												"name": "onlyOwner",
												"nameLocations": [
													"6643:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6643:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6643:9:10"
										}
									],
									"name": "withdrawUnsoldTokens",
									"nameLocation": "6611:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6631:2:10"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6653:0:10"
									},
									"scope": 1293,
									"src": "6602:323:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1294,
							"src": "778:6150:10",
							"usedErrors": [
								13,
								18,
								418
							],
							"usedEvents": [
								24,
								947,
								949,
								953,
								961,
								967,
								971,
								977
							]
						}
					],
					"src": "33:6897:10"
				},
				"id": 10
			}
		}
	}
}