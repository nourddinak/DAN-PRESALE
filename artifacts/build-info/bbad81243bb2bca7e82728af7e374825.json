{
	"id": "bbad81243bb2bca7e82728af7e374825",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"danpresale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.30;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n/**\r\n * @title TokenPresale\r\n * @dev A smart contract for conducting a token presale on the Polygon network using MATIC.\r\n * The contract owner can manage the presale, including starting/stopping it, updating the price,\r\n * and withdrawing funds and unsold tokens.\r\n */\r\ncontract TokenPresale is Ownable, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    \r\n    // The ERC20 token being sold in the presale\r\n    IERC20 public myToken;\r\n\r\n    // The price of one unit of the token for each tier, in a fixed-point representation\r\n    mapping(uint256 => uint256) public tierPrices;\r\n    \r\n    // The total tokens to be sold in each tier\r\n    mapping(uint256 => uint256) public tierTokenLimits;\r\n    \r\n    // Tracks tokens sold per tier to prevent front-running\r\n    mapping(uint256 => uint256) public tierTokensSold;\r\n    \r\n    // The current active presale tier\r\n    uint256 public currentTier;\r\n\r\n    // Total number of tokens sold during the presale\r\n    uint256 public totalTokensSold;\r\n\r\n    // Total MATIC raised from the presale\r\n    uint256 public totalMaticRaised;\r\n\r\n    // Boolean to control the state of the presale (active or not)\r\n    bool public presaleActive;\r\n\r\n    // Address of the token to be sold\r\n    address public immutable tokenAddress;\r\n    \r\n    // Minimum and maximum amount of MATIC a user can spend per purchase\r\n    uint256 public minMaticBuy;\r\n    uint256 public maxMaticBuy;\r\n\r\n    // Events to log important actions\r\n    event PresaleStarted();\r\n    event PresaleStopped();\r\n    event TiersUpdated();\r\n    event BuyLimitsUpdated(uint256 newMin, uint256 newMax);\r\n    event TokensPurchased(address indexed buyer, uint256 maticAmount, uint256 tokenAmount);\r\n    event TokensDeposited(address indexed owner, uint256 amount);\r\n    event RaisedMaticWithdrawn(address indexed owner, uint256 amount);\r\n    event RemainingTokensWithdrawn(address indexed owner, uint256 amount);\r\n\r\n    /**\r\n     * @dev The constructor initializes the contract with the address of the token to be sold.\r\n     * @param _tokenAddress The address of the ERC20 token.\r\n     */\r\n    constructor(address _tokenAddress) Ownable(msg.sender) {\r\n        require(_tokenAddress != address(0), \"Invalid token address\");\r\n        tokenAddress = _tokenAddress;\r\n        myToken = IERC20(tokenAddress);\r\n    }\r\n\r\n    // --- Owner-specific functions ---\r\n\r\n    /**\r\n     * @dev Allows the owner to set new prices and token limits for each tier instantly.\r\n     * This function replaces the two-step propose/commit process to allow for immediate changes.\r\n     * @param _prices An array of prices for each tier.\r\n     * @param _limits An array of token limits for each tier.\r\n     */\r\n    function setTiers(uint256[] calldata _prices, uint256[] calldata _limits) external onlyOwner {\r\n        require(_prices.length == _limits.length, \"Arrays must have the same length\");\r\n        require(_prices.length > 0, \"Tiers cannot be empty\");\r\n        \r\n        // Clear existing tiers\r\n        uint256 i = 1;\r\n        while (tierPrices[i] > 0) {\r\n            delete tierPrices[i];\r\n            delete tierTokenLimits[i];\r\n            i++;\r\n        }\r\n\r\n        // Set new tiers\r\n        for (uint j = 0; j < _prices.length; j++) {\r\n            tierPrices[j + 1] = _prices[j];\r\n            tierTokenLimits[j + 1] = _limits[j];\r\n        }\r\n        \r\n        emit TiersUpdated();\r\n    }\r\n    \r\n    /**\r\n     * @dev Allows the owner to manually set the current active presale tier.\r\n     * @param _tier The new tier number.\r\n     */\r\n    function setCurrentTier(uint256 _tier) external onlyOwner {\r\n        require(tierPrices[_tier] > 0, \"Tier does not exist\");\r\n        currentTier = _tier;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to start the presale.\r\n     * Requires the presale to not be active.\r\n     */\r\n    function startPresale() external onlyOwner {\r\n        require(!presaleActive, \"Presale is already active\");\r\n        require(tierPrices[1] > 0, \"Tiers must be configured before starting the presale\");\r\n        presaleActive = true;\r\n        emit PresaleStarted();\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to stop the presale manually.\r\n     * Requires the presale to be active.\r\n     */\r\n    function stopPresale() external onlyOwner {\r\n        require(presaleActive, \"Presale is not active\");\r\n        presaleActive = false;\r\n        emit PresaleStopped();\r\n    }\r\n    \r\n    /**\r\n     * @dev Allows the owner to update the minimum and maximum MATIC a user can spend.\r\n     * @param _minMaticBuy The new minimum MATIC buy amount.\r\n     * @param _maxMaticBuy The new maximum MATIC buy amount.\r\n     */\r\n    function setMinMaxMaticBuy(uint256 _minMaticBuy, uint256 _maxMaticBuy) external onlyOwner {\r\n        require(_minMaticBuy > 0, \"Minimum buy must be greater than zero\");\r\n        require(_maxMaticBuy >= _minMaticBuy, \"Maximum buy must be greater than or equal to minimum buy\");\r\n        minMaticBuy = _minMaticBuy;\r\n        maxMaticBuy = _maxMaticBuy;\r\n        emit BuyLimitsUpdated(_minMaticBuy, _maxMaticBuy);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to deposit tokens into the presale contract.\r\n     * The owner must have already approved this contract to spend their tokens.\r\n     * NOTE: Before calling this function, you MUST call the `approve` function on your ERC20 token contract\r\n     * to allow THIS contract to transfer the specified `amount` of tokens from your wallet.\r\n     * @param amount The number of tokens to deposit.\r\n     */\r\n    function depositTokensForSale(uint256 amount) external onlyOwner {\r\n        // Transfer the tokens from the owner's address to this contract\r\n        myToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit TokensDeposited(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to withdraw the MATIC raised from the presale.\r\n     * Requires the presale to be stopped.\r\n     */\r\n    function withdrawRaisedMatic() external onlyOwner {\r\n        require(!presaleActive, \"Presale must be stopped to withdraw funds\");\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"No MATIC to withdraw\");\r\n\r\n        // Transfer MATIC to the owner's address\r\n        (bool success, ) = payable(owner()).call{value: balance}(\"\");\r\n        require(success, \"Failed to withdraw MATIC\");\r\n\r\n        emit RaisedMaticWithdrawn(owner(), balance);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to withdraw any remaining unsold tokens.\r\n     * This can be done at any time.\r\n     */\r\n    function withdrawRemainingTokens() external onlyOwner {\r\n        uint256 remainingTokens = myToken.balanceOf(address(this));\r\n        require(remainingTokens > 0, \"No remaining tokens to withdraw\");\r\n\r\n        // Transfer the remaining tokens back to the owner's address\r\n        myToken.safeTransfer(owner(), remainingTokens);\r\n        emit RemainingTokensWithdrawn(owner(), remainingTokens);\r\n    }\r\n\r\n    // --- Public/User functions ---\r\n\r\n    /**\r\n     * @dev Allows a user to buy tokens with MATIC.\r\n     * This function is payable and can receive MATIC.\r\n     * @param minTokens The minimum number of tokens the buyer is willing to receive (slippage protection).\r\n     */\r\n    function buyTokens(uint256 minTokens) public payable nonReentrant {\r\n        // Checks\r\n        require(presaleActive, \"Presale is not active\");\r\n        require(tierPrices[currentTier] > 0, \"Presale is complete, no more tiers available\");\r\n        require(msg.value >= minMaticBuy, \"Amount must be greater than or equal to minimum purchase\");\r\n        require(msg.value <= maxMaticBuy, \"Amount must be less than or equal to maximum purchase\");\r\n\r\n        // Calculate the number of tokens to sell based on the MATIC sent and current tier price.\r\n        // This calculation is robust against integer division issues.\r\n        uint256 tokensToBuy = (msg.value * 1e18) / tierPrices[currentTier];\r\n        \r\n        // Slippage protection: ensure the buyer gets at least `minTokens`\r\n        require(tokensToBuy >= minTokens, \"Slippage protection triggered\");\r\n\r\n        // Ensure the purchase does not exceed the current tier's token limit\r\n        require(tierTokensSold[currentTier] + tokensToBuy <= tierTokenLimits[currentTier], \"Purchase exceeds current tier's limit\");\r\n\r\n        // Ensure the contract has enough tokens to sell\r\n        require(myToken.balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens in contract\");\r\n\r\n        // Effects\r\n        // All state changes happen before the external call\r\n        totalTokensSold += tokensToBuy;\r\n        totalMaticRaised += msg.value;\r\n        tierTokensSold[currentTier] += tokensToBuy;\r\n\r\n        // Check if the current tier is sold out and advance to the next tier\r\n        if (tierTokensSold[currentTier] >= tierTokenLimits[currentTier]) {\r\n            currentTier++;\r\n        }\r\n        \r\n        // Interactions\r\n        // Transfer tokens to the buyer using SafeERC20\r\n        myToken.safeTransfer(msg.sender, tokensToBuy);\r\n\r\n        // Emit the event to log the purchase\r\n        emit TokensPurchased(msg.sender, msg.value, tokensToBuy);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of MATIC raised during the presale.\r\n     */\r\n    function maticRaised() external view returns (uint256) {\r\n        return totalMaticRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of unsold tokens remaining in the contract.\r\n     */\r\n    function tokensRemaining() external view returns (uint256) {\r\n        return myToken.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current number of tokens per 1 MATIC.\r\n     */\r\n    function getCurrentPrice() external view returns (uint256) {\r\n        return (1e36) / tierPrices[currentTier];\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that reverts, forcing users to use the `buyTokens` function.\r\n     */\r\n    receive() external payable {\r\n        revert(\"Use buyTokens function\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"danpresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"danpresale.sol": {
				"TokenPresale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMin",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMax",
									"type": "uint256"
								}
							],
							"name": "BuyLimitsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresaleStopped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RaisedMaticWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RemainingTokensWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "TiersUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maticAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minTokens",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositTokensForSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maticRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxMaticBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minMaticBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tier",
									"type": "uint256"
								}
							],
							"name": "setCurrentTier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minMaticBuy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxMaticBuy",
									"type": "uint256"
								}
							],
							"name": "setMinMaxMaticBuy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_prices",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_limits",
									"type": "uint256[]"
								}
							],
							"name": "setTiers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tierPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tierTokenLimits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tierTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensRemaining",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalMaticRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRaisedMatic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRemainingTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "A smart contract for conducting a token presale on the Polygon network using MATIC. The contract owner can manage the presale, including starting/stopping it, updating the price, and withdrawing funds and unsold tokens.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"buyTokens(uint256)": {
								"details": "Allows a user to buy tokens with MATIC. This function is payable and can receive MATIC.",
								"params": {
									"minTokens": "The minimum number of tokens the buyer is willing to receive (slippage protection)."
								}
							},
							"constructor": {
								"details": "The constructor initializes the contract with the address of the token to be sold.",
								"params": {
									"_tokenAddress": "The address of the ERC20 token."
								}
							},
							"depositTokensForSale(uint256)": {
								"details": "Allows the owner to deposit tokens into the presale contract. The owner must have already approved this contract to spend their tokens. NOTE: Before calling this function, you MUST call the `approve` function on your ERC20 token contract to allow THIS contract to transfer the specified `amount` of tokens from your wallet.",
								"params": {
									"amount": "The number of tokens to deposit."
								}
							},
							"getCurrentPrice()": {
								"details": "Returns the current number of tokens per 1 MATIC."
							},
							"maticRaised()": {
								"details": "Returns the total amount of MATIC raised during the presale."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setCurrentTier(uint256)": {
								"details": "Allows the owner to manually set the current active presale tier.",
								"params": {
									"_tier": "The new tier number."
								}
							},
							"setMinMaxMaticBuy(uint256,uint256)": {
								"details": "Allows the owner to update the minimum and maximum MATIC a user can spend.",
								"params": {
									"_maxMaticBuy": "The new maximum MATIC buy amount.",
									"_minMaticBuy": "The new minimum MATIC buy amount."
								}
							},
							"setTiers(uint256[],uint256[])": {
								"details": "Allows the owner to set new prices and token limits for each tier instantly. This function replaces the two-step propose/commit process to allow for immediate changes.",
								"params": {
									"_limits": "An array of token limits for each tier.",
									"_prices": "An array of prices for each tier."
								}
							},
							"startPresale()": {
								"details": "Allows the owner to start the presale. Requires the presale to not be active."
							},
							"stopPresale()": {
								"details": "Allows the owner to stop the presale manually. Requires the presale to be active."
							},
							"tokensRemaining()": {
								"details": "Returns the number of unsold tokens remaining in the contract."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawRaisedMatic()": {
								"details": "Allows the owner to withdraw the MATIC raised from the presale. Requires the presale to be stopped."
							},
							"withdrawRemainingTokens()": {
								"details": "Allows the owner to withdraw any remaining unsold tokens. This can be done at any time."
							}
						},
						"title": "TokenPresale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"danpresale.sol\":576:10229  contract TokenPresale is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"danpresale.sol\":2393:2608  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"danpresale.sol\":2436:2446  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"danpresale.sol\":2492:2493  0 */\n  0x00\n    /* \"danpresale.sol\":2467:2494  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"danpresale.sol\":2467:2480  _tokenAddress */\n  dup2\n    /* \"danpresale.sol\":2467:2494  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"danpresale.sol\":2459:2520  require(_tokenAddress != address(0), \"Invalid token address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"danpresale.sol\":2546:2559  _tokenAddress */\n  dup1\n    /* \"danpresale.sol\":2531:2559  tokenAddress = _tokenAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"danpresale.sol\":2587:2599  tokenAddress */\n  mload(0x80)\n    /* \"danpresale.sol\":2570:2577  myToken */\n  0x02\n  0x00\n    /* \"danpresale.sol\":2570:2600  myToken = IERC20(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"danpresale.sol\":2393:2608  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"danpresale.sol\":576:10229  contract TokenPresale is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_45\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":932:1051   */\ntag_44:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_46\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_27:\n    /* \"#utility.yul\":1289:1313   */\n  tag_48\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_10:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_50\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1723   */\ntag_28:\n    /* \"#utility.yul\":1638:1649   */\n  0x00\n    /* \"#utility.yul\":1672:1678   */\n  dup3\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1660:1679   */\n  mstore\n    /* \"#utility.yul\":1712:1716   */\n  0x20\n    /* \"#utility.yul\":1707:1710   */\n  dup3\n    /* \"#utility.yul\":1703:1717   */\n  add\n    /* \"#utility.yul\":1688:1717   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1729:1900   */\ntag_29:\n    /* \"#utility.yul\":1869:1892   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1853:1867   */\n  add\n    /* \"#utility.yul\":1846:1893   */\n  mstore\n    /* \"#utility.yul\":1729:1900   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1906:2272   */\ntag_30:\n    /* \"#utility.yul\":2048:2051   */\n  0x00\n    /* \"#utility.yul\":2069:2136   */\n  tag_54\n    /* \"#utility.yul\":2133:2135   */\n  0x15\n    /* \"#utility.yul\":2128:2131   */\n  dup4\n    /* \"#utility.yul\":2069:2136   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2062:2136   */\n  swap2\n  pop\n    /* \"#utility.yul\":2145:2238   */\n  tag_55\n    /* \"#utility.yul\":2234:2237   */\n  dup3\n    /* \"#utility.yul\":2145:2238   */\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2263:2265   */\n  0x20\n    /* \"#utility.yul\":2258:2261   */\n  dup3\n    /* \"#utility.yul\":2254:2266   */\n  add\n    /* \"#utility.yul\":2247:2266   */\n  swap1\n  pop\n    /* \"#utility.yul\":1906:2272   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2278:2697   */\ntag_17:\n    /* \"#utility.yul\":2444:2448   */\n  0x00\n    /* \"#utility.yul\":2482:2484   */\n  0x20\n    /* \"#utility.yul\":2471:2480   */\n  dup3\n    /* \"#utility.yul\":2467:2485   */\n  add\n    /* \"#utility.yul\":2459:2485   */\n  swap1\n  pop\n    /* \"#utility.yul\":2531:2540   */\n  dup2\n    /* \"#utility.yul\":2525:2529   */\n  dup2\n    /* \"#utility.yul\":2521:2541   */\n  sub\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2506:2515   */\n  dup4\n    /* \"#utility.yul\":2502:2519   */\n  add\n    /* \"#utility.yul\":2495:2542   */\n  mstore\n    /* \"#utility.yul\":2559:2690   */\n  tag_57\n    /* \"#utility.yul\":2685:2689   */\n  dup2\n    /* \"#utility.yul\":2559:2690   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2551:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2278:2697   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"danpresale.sol\":576:10229  contract TokenPresale is Ownable, ReentrancyGuard {... */\ntag_18:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x915df03ad3d1adec3bd513726627a8fc7bf9ec81edb3bb322f7db8a8bc5664b4\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"danpresale.sol\":576:10229  contract TokenPresale is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8afbf669\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xc8b08125\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd679677a\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd679677a\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe7829cad\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xeb91d37e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xc8b08125\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc9881d86\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd2e8ecae\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x8afbf669\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa8c038c7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb8fcf937\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc43a0135\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x300eccab\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x53135ca0\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x53135ca0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x63b20117\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8a0a80af\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x300eccab\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3610724e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5276837c\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x04c98b2b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x125b8b78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1ad2ad1a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1b8ebc3c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x22c6baf6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x273f8974\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"danpresale.sol\":10186:10218  revert(\"Use buyTokens function\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"danpresale.sol\":576:10229  contract TokenPresale is Ownable, ReentrancyGuard {... */\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"danpresale.sol\":4109:4379  function startPresale() external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"danpresale.sol\":1348:1379  uint256 public totalMaticRaised */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":4508:4680  function stopPresale() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      revert(0x00, 0x00)\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"danpresale.sol\":2986:3673  function setTiers(uint256[] calldata _prices, uint256[] calldata _limits) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"danpresale.sol\":1654:1680  uint256 public minMaticBuy */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":4922:5339  function setMinMaxMaticBuy(uint256 _minMaticBuy, uint256 _maxMaticBuy) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"danpresale.sol\":842:887  mapping(uint256 => uint256) public tierPrices */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":7491:9408  function buyTokens(uint256 minTokens) public payable nonReentrant {... */\n    tag_10:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"danpresale.sol\":3824:3984  function setCurrentTier(uint256 _tier) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"danpresale.sol\":1456:1481  bool public presaleActive */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":1265:1295  uint256 public totalTokensSold */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      revert(0x00, 0x00)\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      stop\n        /* \"danpresale.sol\":5781:6049  function depositTokensForSale(uint256 amount) external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"danpresale.sol\":6807:7207  function withdrawRemainingTokens() external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":1530:1567  address public immutable tokenAddress */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      revert(0x00, 0x00)\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":1073:1122  mapping(uint256 => uint256) public tierTokensSold */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      revert(0x00, 0x00)\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":722:743  IERC20 public myToken */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      revert(0x00, 0x00)\n    tag_109:\n      pop\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":1687:1713  uint256 public maxMaticBuy */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      revert(0x00, 0x00)\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":9707:9824  function tokensRemaining() external view returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      revert(0x00, 0x00)\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":6196:6672  function withdrawRaisedMatic() external onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      revert(0x00, 0x00)\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      stop\n        /* \"danpresale.sol\":9508:9605  function maticRaised() external view returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      revert(0x00, 0x00)\n    tag_125:\n      pop\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":1175:1201  uint256 public currentTier */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      revert(0x00, 0x00)\n    tag_129:\n      pop\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":949:999  mapping(uint256 => uint256) public tierTokenLimits */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      revert(0x00, 0x00)\n    tag_133:\n      pop\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"danpresale.sol\":9913:10030  function getCurrentPrice() external view returns (uint256) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      revert(0x00, 0x00)\n    tag_138:\n      pop\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      revert(0x00, 0x00)\n    tag_142:\n      pop\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n    tag_143:\n      stop\n        /* \"danpresale.sol\":4109:4379  function startPresale() external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"danpresale.sol\":4172:4185  presaleActive */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"danpresale.sol\":4171:4185  !presaleActive */\n      iszero\n        /* \"danpresale.sol\":4163:4215  require(!presaleActive, \"Presale is already active\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"danpresale.sol\":4250:4251  0 */\n      0x00\n        /* \"danpresale.sol\":4234:4244  tierPrices */\n      0x03\n        /* \"danpresale.sol\":4234:4247  tierPrices[1] */\n      0x00\n        /* \"danpresale.sol\":4245:4246  1 */\n      0x01\n        /* \"danpresale.sol\":4234:4247  tierPrices[1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":4234:4251  tierPrices[1] > 0 */\n      gt\n        /* \"danpresale.sol\":4226:4308  require(tierPrices[1] > 0, \"Tiers must be configured before starting the presale\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"danpresale.sol\":4335:4339  true */\n      0x01\n        /* \"danpresale.sol\":4319:4332  presaleActive */\n      0x09\n      0x00\n        /* \"danpresale.sol\":4319:4339  presaleActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":4355:4371  PresaleStarted() */\n      0x17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":4109:4379  function startPresale() external onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":1348:1379  uint256 public totalMaticRaised */\n    tag_43:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":4508:4680  function stopPresale() external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"danpresale.sol\":4569:4582  presaleActive */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"danpresale.sol\":4561:4608  require(presaleActive, \"Presale is not active\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"danpresale.sol\":4635:4640  false */\n      0x00\n        /* \"danpresale.sol\":4619:4632  presaleActive */\n      0x09\n      0x00\n        /* \"danpresale.sol\":4619:4640  presaleActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":4656:4672  PresaleStopped() */\n      0xe60f0ccd81d0545e17cd40eaaf8b7c5d36e3a26372928be6a27d2f73f67d7593\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":4508:4680  function stopPresale() external onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":2986:3673  function setTiers(uint256[] calldata _prices, uint256[] calldata _limits) external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"danpresale.sol\":3116:3123  _limits */\n      dup2\n      dup2\n        /* \"danpresale.sol\":3116:3130  _limits.length */\n      swap1\n      pop\n        /* \"danpresale.sol\":3098:3105  _prices */\n      dup5\n      dup5\n        /* \"danpresale.sol\":3098:3112  _prices.length */\n      swap1\n      pop\n        /* \"danpresale.sol\":3098:3130  _prices.length == _limits.length */\n      eq\n        /* \"danpresale.sol\":3090:3167  require(_prices.length == _limits.length, \"Arrays must have the same length\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"danpresale.sol\":3203:3204  0 */\n      0x00\n        /* \"danpresale.sol\":3186:3193  _prices */\n      dup5\n      dup5\n        /* \"danpresale.sol\":3186:3200  _prices.length */\n      swap1\n      pop\n        /* \"danpresale.sol\":3186:3204  _prices.length > 0 */\n      gt\n        /* \"danpresale.sol\":3178:3230  require(_prices.length > 0, \"Tiers cannot be empty\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"danpresale.sol\":3284:3293  uint256 i */\n      0x00\n        /* \"danpresale.sol\":3296:3297  1 */\n      0x01\n        /* \"danpresale.sol\":3284:3297  uint256 i = 1 */\n      swap1\n      pop\n        /* \"danpresale.sol\":3308:3439  while (tierPrices[i] > 0) {... */\n    tag_172:\n        /* \"danpresale.sol\":3331:3332  0 */\n      0x00\n        /* \"danpresale.sol\":3315:3325  tierPrices */\n      0x03\n        /* \"danpresale.sol\":3315:3328  tierPrices[i] */\n      0x00\n        /* \"danpresale.sol\":3326:3327  i */\n      dup4\n        /* \"danpresale.sol\":3315:3328  tierPrices[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":3315:3332  tierPrices[i] > 0 */\n      gt\n        /* \"danpresale.sol\":3308:3439  while (tierPrices[i] > 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"danpresale.sol\":3356:3366  tierPrices */\n      0x03\n        /* \"danpresale.sol\":3356:3369  tierPrices[i] */\n      0x00\n        /* \"danpresale.sol\":3367:3368  i */\n      dup3\n        /* \"danpresale.sol\":3356:3369  tierPrices[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"danpresale.sol\":3349:3369  delete tierPrices[i] */\n      0x00\n      swap1\n      sstore\n        /* \"danpresale.sol\":3391:3406  tierTokenLimits */\n      0x04\n        /* \"danpresale.sol\":3391:3409  tierTokenLimits[i] */\n      0x00\n        /* \"danpresale.sol\":3407:3408  i */\n      dup3\n        /* \"danpresale.sol\":3391:3409  tierTokenLimits[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"danpresale.sol\":3384:3409  delete tierTokenLimits[i] */\n      0x00\n      swap1\n      sstore\n        /* \"danpresale.sol\":3424:3427  i++ */\n      dup1\n      dup1\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      swap2\n      pop\n      pop\n        /* \"danpresale.sol\":3308:3439  while (tierPrices[i] > 0) {... */\n      jump(tag_172)\n    tag_173:\n        /* \"danpresale.sol\":3482:3488  uint j */\n      0x00\n        /* \"danpresale.sol\":3491:3492  0 */\n      0x00\n        /* \"danpresale.sol\":3482:3492  uint j = 0 */\n      swap1\n      pop\n        /* \"danpresale.sol\":3477:3626  for (uint j = 0; j < _prices.length; j++) {... */\n    tag_176:\n        /* \"danpresale.sol\":3498:3505  _prices */\n      dup6\n      dup6\n        /* \"danpresale.sol\":3498:3512  _prices.length */\n      swap1\n      pop\n        /* \"danpresale.sol\":3494:3495  j */\n      dup2\n        /* \"danpresale.sol\":3494:3512  j < _prices.length */\n      lt\n        /* \"danpresale.sol\":3477:3626  for (uint j = 0; j < _prices.length; j++) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"danpresale.sol\":3554:3561  _prices */\n      dup6\n      dup6\n        /* \"danpresale.sol\":3562:3563  j */\n      dup3\n        /* \"danpresale.sol\":3554:3564  _prices[j] */\n      dup2\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n    tag_179:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"danpresale.sol\":3534:3544  tierPrices */\n      0x03\n        /* \"danpresale.sol\":3534:3551  tierPrices[j + 1] */\n      0x00\n        /* \"danpresale.sol\":3549:3550  1 */\n      0x01\n        /* \"danpresale.sol\":3545:3546  j */\n      dup5\n        /* \"danpresale.sol\":3545:3550  j + 1 */\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"danpresale.sol\":3534:3551  tierPrices[j + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"danpresale.sol\":3534:3564  tierPrices[j + 1] = _prices[j] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":3604:3611  _limits */\n      dup4\n      dup4\n        /* \"danpresale.sol\":3612:3613  j */\n      dup3\n        /* \"danpresale.sol\":3604:3614  _limits[j] */\n      dup2\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_181\n      jump\t// in\n    tag_185:\n    tag_184:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"danpresale.sol\":3579:3594  tierTokenLimits */\n      0x04\n        /* \"danpresale.sol\":3579:3601  tierTokenLimits[j + 1] */\n      0x00\n        /* \"danpresale.sol\":3599:3600  1 */\n      0x01\n        /* \"danpresale.sol\":3595:3596  j */\n      dup5\n        /* \"danpresale.sol\":3595:3600  j + 1 */\n      tag_186\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_186:\n        /* \"danpresale.sol\":3579:3601  tierTokenLimits[j + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"danpresale.sol\":3579:3614  tierTokenLimits[j + 1] = _limits[j] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":3514:3517  j++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"danpresale.sol\":3477:3626  for (uint j = 0; j < _prices.length; j++) {... */\n      jump(tag_176)\n    tag_177:\n      pop\n        /* \"danpresale.sol\":3651:3665  TiersUpdated() */\n      0x37740b69a1cce7c6b884ff59b1465c52017ffcb23b6e46249f50f3375b71eada\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":3079:3673  {... */\n      pop\n        /* \"danpresale.sol\":2986:3673  function setTiers(uint256[] calldata _prices, uint256[] calldata _limits) external onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"danpresale.sol\":1654:1680  uint256 public minMaticBuy */\n    tag_56:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":4922:5339  function setMinMaxMaticBuy(uint256 _minMaticBuy, uint256 _maxMaticBuy) external onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"danpresale.sol\":5046:5047  0 */\n      0x00\n        /* \"danpresale.sol\":5031:5043  _minMaticBuy */\n      dup3\n        /* \"danpresale.sol\":5031:5047  _minMaticBuy > 0 */\n      gt\n        /* \"danpresale.sol\":5023:5089  require(_minMaticBuy > 0, \"Minimum buy must be greater than zero\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"danpresale.sol\":5124:5136  _minMaticBuy */\n      dup2\n        /* \"danpresale.sol\":5108:5120  _maxMaticBuy */\n      dup2\n        /* \"danpresale.sol\":5108:5136  _maxMaticBuy >= _minMaticBuy */\n      lt\n      iszero\n        /* \"danpresale.sol\":5100:5197  require(_maxMaticBuy >= _minMaticBuy, \"Maximum buy must be greater than or equal to minimum buy\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"danpresale.sol\":5222:5234  _minMaticBuy */\n      dup2\n        /* \"danpresale.sol\":5208:5219  minMaticBuy */\n      0x0a\n        /* \"danpresale.sol\":5208:5234  minMaticBuy = _minMaticBuy */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":5259:5271  _maxMaticBuy */\n      dup1\n        /* \"danpresale.sol\":5245:5256  maxMaticBuy */\n      0x0b\n        /* \"danpresale.sol\":5245:5271  maxMaticBuy = _maxMaticBuy */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":5287:5331  BuyLimitsUpdated(_minMaticBuy, _maxMaticBuy) */\n      0x7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b\n        /* \"danpresale.sol\":5304:5316  _minMaticBuy */\n      dup3\n        /* \"danpresale.sol\":5318:5330  _maxMaticBuy */\n      dup3\n        /* \"danpresale.sol\":5287:5331  BuyLimitsUpdated(_minMaticBuy, _maxMaticBuy) */\n      mload(0x40)\n      tag_196\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"danpresale.sol\":4922:5339  function setMinMaxMaticBuy(uint256 _minMaticBuy, uint256 _maxMaticBuy) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"danpresale.sol\":842:887  mapping(uint256 => uint256) public tierPrices */\n    tag_67:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":7491:9408  function buyTokens(uint256 minTokens) public payable nonReentrant {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_199\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_199:\n        /* \"danpresale.sol\":7595:7608  presaleActive */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"danpresale.sol\":7587:7634  require(presaleActive, \"Presale is not active\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_162\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"danpresale.sol\":7679:7680  0 */\n      0x00\n        /* \"danpresale.sol\":7653:7663  tierPrices */\n      0x03\n        /* \"danpresale.sol\":7653:7676  tierPrices[currentTier] */\n      0x00\n        /* \"danpresale.sol\":7664:7675  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":7653:7676  tierPrices[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":7653:7680  tierPrices[currentTier] > 0 */\n      gt\n        /* \"danpresale.sol\":7645:7729  require(tierPrices[currentTier] > 0, \"Presale is complete, no more tiers available\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"danpresale.sol\":7761:7772  minMaticBuy */\n      sload(0x0a)\n        /* \"danpresale.sol\":7748:7757  msg.value */\n      callvalue\n        /* \"danpresale.sol\":7748:7772  msg.value >= minMaticBuy */\n      lt\n      iszero\n        /* \"danpresale.sol\":7740:7833  require(msg.value >= minMaticBuy, \"Amount must be greater than or equal to minimum purchase\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"danpresale.sol\":7865:7876  maxMaticBuy */\n      sload(0x0b)\n        /* \"danpresale.sol\":7852:7861  msg.value */\n      callvalue\n        /* \"danpresale.sol\":7852:7876  msg.value <= maxMaticBuy */\n      gt\n      iszero\n        /* \"danpresale.sol\":7844:7934  require(msg.value <= maxMaticBuy, \"Amount must be less than or equal to maximum purchase\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"danpresale.sol\":8118:8137  uint256 tokensToBuy */\n      0x00\n        /* \"danpresale.sol\":8161:8171  tierPrices */\n      0x03\n        /* \"danpresale.sol\":8161:8184  tierPrices[currentTier] */\n      0x00\n        /* \"danpresale.sol\":8172:8183  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":8161:8184  tierPrices[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":8153:8157  1e18 */\n      0x0de0b6b3a7640000\n        /* \"danpresale.sol\":8141:8150  msg.value */\n      callvalue\n        /* \"danpresale.sol\":8141:8157  msg.value * 1e18 */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"danpresale.sol\":8140:8184  (msg.value * 1e18) / tierPrices[currentTier] */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"danpresale.sol\":8118:8184  uint256 tokensToBuy = (msg.value * 1e18) / tierPrices[currentTier] */\n      swap1\n      pop\n        /* \"danpresale.sol\":8304:8313  minTokens */\n      dup2\n        /* \"danpresale.sol\":8289:8300  tokensToBuy */\n      dup2\n        /* \"danpresale.sol\":8289:8313  tokensToBuy >= minTokens */\n      lt\n      iszero\n        /* \"danpresale.sol\":8281:8347  require(tokensToBuy >= minTokens, \"Slippage protection triggered\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"danpresale.sol\":8492:8507  tierTokenLimits */\n      0x04\n        /* \"danpresale.sol\":8492:8520  tierTokenLimits[currentTier] */\n      0x00\n        /* \"danpresale.sol\":8508:8519  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":8492:8520  tierTokenLimits[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":8477:8488  tokensToBuy */\n      dup2\n        /* \"danpresale.sol\":8447:8461  tierTokensSold */\n      0x05\n        /* \"danpresale.sol\":8447:8474  tierTokensSold[currentTier] */\n      0x00\n        /* \"danpresale.sol\":8462:8473  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":8447:8474  tierTokensSold[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":8447:8488  tierTokensSold[currentTier] + tokensToBuy */\n      tag_220\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_220:\n        /* \"danpresale.sol\":8447:8520  tierTokensSold[currentTier] + tokensToBuy <= tierTokenLimits[currentTier] */\n      gt\n      iszero\n        /* \"danpresale.sol\":8439:8562  require(tierTokensSold[currentTier] + tokensToBuy <= tierTokenLimits[currentTier], \"Purchase exceeds current tier's limit\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"danpresale.sol\":8677:8688  tokensToBuy */\n      dup1\n        /* \"danpresale.sol\":8641:8648  myToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":8641:8658  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"danpresale.sol\":8667:8671  this */\n      address\n        /* \"danpresale.sol\":8641:8673  myToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_224:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"danpresale.sol\":8641:8688  myToken.balanceOf(address(this)) >= tokensToBuy */\n      lt\n      iszero\n        /* \"danpresale.sol\":8633:8722  require(myToken.balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens in contract\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"danpresale.sol\":8836:8847  tokensToBuy */\n      dup1\n        /* \"danpresale.sol\":8817:8832  totalTokensSold */\n      0x07\n      0x00\n        /* \"danpresale.sol\":8817:8847  totalTokensSold += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_232\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_232:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":8878:8887  msg.value */\n      callvalue\n        /* \"danpresale.sol\":8858:8874  totalMaticRaised */\n      0x08\n      0x00\n        /* \"danpresale.sol\":8858:8887  totalMaticRaised += msg.value */\n      dup3\n      dup3\n      sload\n      tag_233\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_233:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":8929:8940  tokensToBuy */\n      dup1\n        /* \"danpresale.sol\":8898:8912  tierTokensSold */\n      0x05\n        /* \"danpresale.sol\":8898:8925  tierTokensSold[currentTier] */\n      0x00\n        /* \"danpresale.sol\":8913:8924  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":8898:8925  tierTokensSold[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"danpresale.sol\":8898:8940  tierTokensSold[currentTier] += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_234\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_234:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":9067:9082  tierTokenLimits */\n      0x04\n        /* \"danpresale.sol\":9067:9095  tierTokenLimits[currentTier] */\n      0x00\n        /* \"danpresale.sol\":9083:9094  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":9067:9095  tierTokenLimits[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":9036:9050  tierTokensSold */\n      0x05\n        /* \"danpresale.sol\":9036:9063  tierTokensSold[currentTier] */\n      0x00\n        /* \"danpresale.sol\":9051:9062  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":9036:9063  tierTokensSold[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":9036:9095  tierTokensSold[currentTier] >= tierTokenLimits[currentTier] */\n      lt\n        /* \"danpresale.sol\":9032:9137  if (tierTokensSold[currentTier] >= tierTokenLimits[currentTier]) {... */\n      tag_235\n      jumpi\n        /* \"danpresale.sol\":9112:9123  currentTier */\n      0x06\n      0x00\n        /* \"danpresale.sol\":9112:9125  currentTier++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_236\n      swap1\n      tag_175\n      jump\t// in\n    tag_236:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"danpresale.sol\":9032:9137  if (tierTokensSold[currentTier] >= tierTokenLimits[currentTier]) {... */\n    tag_235:\n        /* \"danpresale.sol\":9239:9284  myToken.safeTransfer(msg.sender, tokensToBuy) */\n      tag_237\n        /* \"danpresale.sol\":9260:9270  msg.sender */\n      caller\n        /* \"danpresale.sol\":9272:9283  tokensToBuy */\n      dup3\n        /* \"danpresale.sol\":9239:9246  myToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":9239:9259  myToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"danpresale.sol\":9239:9284  myToken.safeTransfer(msg.sender, tokensToBuy) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"danpresale.sol\":9365:9375  msg.sender */\n      caller\n        /* \"danpresale.sol\":9349:9400  TokensPurchased(msg.sender, msg.value, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33\n        /* \"danpresale.sol\":9377:9386  msg.value */\n      callvalue\n        /* \"danpresale.sol\":9388:9399  tokensToBuy */\n      dup4\n        /* \"danpresale.sol\":9349:9400  TokensPurchased(msg.sender, msg.value, tokensToBuy) */\n      mload(0x40)\n      tag_239\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"danpresale.sol\":7557:9408  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_240\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_241\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_240:\n        /* \"danpresale.sol\":7491:9408  function buyTokens(uint256 minTokens) public payable nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"danpresale.sol\":3824:3984  function setCurrentTier(uint256 _tier) external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_243:\n        /* \"danpresale.sol\":3921:3922  0 */\n      0x00\n        /* \"danpresale.sol\":3901:3911  tierPrices */\n      0x03\n        /* \"danpresale.sol\":3901:3918  tierPrices[_tier] */\n      0x00\n        /* \"danpresale.sol\":3912:3917  _tier */\n      dup4\n        /* \"danpresale.sol\":3901:3918  tierPrices[_tier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":3901:3922  tierPrices[_tier] > 0 */\n      gt\n        /* \"danpresale.sol\":3893:3946  require(tierPrices[_tier] > 0, \"Tier does not exist\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"danpresale.sol\":3971:3976  _tier */\n      dup1\n        /* \"danpresale.sol\":3957:3968  currentTier */\n      0x06\n        /* \"danpresale.sol\":3957:3976  currentTier = _tier */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"danpresale.sol\":3824:3984  function setCurrentTier(uint256 _tier) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"danpresale.sol\":1456:1481  bool public presaleActive */\n    tag_78:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":1265:1295  uint256 public totalTokensSold */\n    tag_83:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":5781:6049  function depositTokensForSale(uint256 amount) external onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_254:\n        /* \"danpresale.sol\":5931:5990  myToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_256\n        /* \"danpresale.sol\":5956:5966  msg.sender */\n      caller\n        /* \"danpresale.sol\":5976:5980  this */\n      address\n        /* \"danpresale.sol\":5983:5989  amount */\n      dup4\n        /* \"danpresale.sol\":5931:5938  myToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":5931:5955  myToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_257\n      swap1\n        /* \"danpresale.sol\":5931:5990  myToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"danpresale.sol\":6022:6032  msg.sender */\n      caller\n        /* \"danpresale.sol\":6006:6041  TokensDeposited(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e\n        /* \"danpresale.sol\":6034:6040  amount */\n      dup3\n        /* \"danpresale.sol\":6006:6041  TokensDeposited(msg.sender, amount) */\n      mload(0x40)\n      tag_258\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"danpresale.sol\":5781:6049  function depositTokensForSale(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"danpresale.sol\":6807:7207  function withdrawRemainingTokens() external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_260:\n        /* \"danpresale.sol\":6872:6895  uint256 remainingTokens */\n      0x00\n        /* \"danpresale.sol\":6898:6905  myToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":6898:6915  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"danpresale.sol\":6924:6928  this */\n      address\n        /* \"danpresale.sol\":6898:6930  myToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_262:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_265:\n        /* \"danpresale.sol\":6872:6930  uint256 remainingTokens = myToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"danpresale.sol\":6967:6968  0 */\n      0x00\n        /* \"danpresale.sol\":6949:6964  remainingTokens */\n      dup2\n        /* \"danpresale.sol\":6949:6968  remainingTokens > 0 */\n      gt\n        /* \"danpresale.sol\":6941:7004  require(remainingTokens > 0, \"No remaining tokens to withdraw\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"danpresale.sol\":7087:7133  myToken.safeTransfer(owner(), remainingTokens) */\n      tag_269\n        /* \"danpresale.sol\":7108:7115  owner() */\n      tag_270\n        /* \"danpresale.sol\":7108:7113  owner */\n      tag_97\n        /* \"danpresale.sol\":7108:7115  owner() */\n      jump\t// in\n    tag_270:\n        /* \"danpresale.sol\":7117:7132  remainingTokens */\n      dup3\n        /* \"danpresale.sol\":7087:7094  myToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":7087:7107  myToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"danpresale.sol\":7087:7133  myToken.safeTransfer(owner(), remainingTokens) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"danpresale.sol\":7174:7181  owner() */\n      tag_271\n        /* \"danpresale.sol\":7174:7179  owner */\n      tag_97\n        /* \"danpresale.sol\":7174:7181  owner() */\n      jump\t// in\n    tag_271:\n        /* \"danpresale.sol\":7149:7199  RemainingTokensWithdrawn(owner(), remainingTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5eacf990d96c07de8e8e6c50faaf28160b2997575250a8aacfbb7f224791ff76\n        /* \"danpresale.sol\":7183:7198  remainingTokens */\n      dup3\n        /* \"danpresale.sol\":7149:7199  RemainingTokensWithdrawn(owner(), remainingTokens) */\n      mload(0x40)\n      tag_272\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"danpresale.sol\":6861:7207  {... */\n      pop\n        /* \"danpresale.sol\":6807:7207  function withdrawRemainingTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"danpresale.sol\":1530:1567  address public immutable tokenAddress */\n    tag_102:\n      immutable(\"0x915df03ad3d1adec3bd513726627a8fc7bf9ec81edb3bb322f7db8a8bc5664b4\")\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":1073:1122  mapping(uint256 => uint256) public tierTokensSold */\n    tag_107:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":722:743  IERC20 public myToken */\n    tag_111:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":1687:1713  uint256 public maxMaticBuy */\n    tag_116:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":9707:9824  function tokensRemaining() external view returns (uint256) {... */\n    tag_120:\n        /* \"danpresale.sol\":9757:9764  uint256 */\n      0x00\n        /* \"danpresale.sol\":9784:9791  myToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":9784:9801  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"danpresale.sol\":9810:9814  this */\n      address\n        /* \"danpresale.sol\":9784:9816  myToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_275:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_278:\n        /* \"danpresale.sol\":9777:9816  return myToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"danpresale.sol\":9707:9824  function tokensRemaining() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"danpresale.sol\":6196:6672  function withdrawRaisedMatic() external onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"danpresale.sol\":6266:6279  presaleActive */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"danpresale.sol\":6265:6279  !presaleActive */\n      iszero\n        /* \"danpresale.sol\":6257:6325  require(!presaleActive, \"Presale must be stopped to withdraw funds\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"danpresale.sol\":6336:6351  uint256 balance */\n      0x00\n        /* \"danpresale.sol\":6354:6375  address(this).balance */\n      selfbalance\n        /* \"danpresale.sol\":6336:6375  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"danpresale.sol\":6404:6405  0 */\n      0x00\n        /* \"danpresale.sol\":6394:6401  balance */\n      dup2\n        /* \"danpresale.sol\":6394:6405  balance > 0 */\n      gt\n        /* \"danpresale.sol\":6386:6430  require(balance > 0, \"No MATIC to withdraw\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"danpresale.sol\":6494:6506  bool success */\n      0x00\n        /* \"danpresale.sol\":6520:6527  owner() */\n      tag_288\n        /* \"danpresale.sol\":6520:6525  owner */\n      tag_97\n        /* \"danpresale.sol\":6520:6527  owner() */\n      jump\t// in\n    tag_288:\n        /* \"danpresale.sol\":6512:6533  payable(owner()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"danpresale.sol\":6541:6548  balance */\n      dup3\n        /* \"danpresale.sol\":6512:6553  payable(owner()).call{value: balance}(\"\") */\n      mload(0x40)\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_293\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_292)\n    tag_293:\n      0x60\n      swap2\n      pop\n    tag_292:\n      pop\n        /* \"danpresale.sol\":6493:6553  (bool success, ) = payable(owner()).call{value: balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"danpresale.sol\":6572:6579  success */\n      dup1\n        /* \"danpresale.sol\":6564:6608  require(success, \"Failed to withdraw MATIC\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"danpresale.sol\":6647:6654  owner() */\n      tag_297\n        /* \"danpresale.sol\":6647:6652  owner */\n      tag_97\n        /* \"danpresale.sol\":6647:6654  owner() */\n      jump\t// in\n    tag_297:\n        /* \"danpresale.sol\":6626:6664  RaisedMaticWithdrawn(owner(), balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1ffcaf17d7bfc1113fd8f6bc6f5454d1b5061c11409e4d52ede1f9799889e\n        /* \"danpresale.sol\":6656:6663  balance */\n      dup4\n        /* \"danpresale.sol\":6626:6664  RaisedMaticWithdrawn(owner(), balance) */\n      mload(0x40)\n      tag_298\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"danpresale.sol\":6246:6672  {... */\n      pop\n      pop\n        /* \"danpresale.sol\":6196:6672  function withdrawRaisedMatic() external onlyOwner {... */\n      jump\t// out\n        /* \"danpresale.sol\":9508:9605  function maticRaised() external view returns (uint256) {... */\n    tag_127:\n        /* \"danpresale.sol\":9554:9561  uint256 */\n      0x00\n        /* \"danpresale.sol\":9581:9597  totalMaticRaised */\n      sload(0x08)\n        /* \"danpresale.sol\":9574:9597  return totalMaticRaised */\n      swap1\n      pop\n        /* \"danpresale.sol\":9508:9605  function maticRaised() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"danpresale.sol\":1175:1201  uint256 public currentTier */\n    tag_131:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":949:999  mapping(uint256 => uint256) public tierTokenLimits */\n    tag_136:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"danpresale.sol\":9913:10030  function getCurrentPrice() external view returns (uint256) {... */\n    tag_140:\n        /* \"danpresale.sol\":9963:9970  uint256 */\n      0x00\n        /* \"danpresale.sol\":9999:10009  tierPrices */\n      0x03\n        /* \"danpresale.sol\":9999:10022  tierPrices[currentTier] */\n      0x00\n        /* \"danpresale.sol\":10010:10021  currentTier */\n      sload(0x06)\n        /* \"danpresale.sol\":9999:10022  tierPrices[currentTier] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"danpresale.sol\":9991:9995  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"danpresale.sol\":9990:10022  (1e36) / tierPrices[currentTier] */\n      tag_301\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_301:\n        /* \"danpresale.sol\":9983:10022  return (1e36) / tierPrices[currentTier] */\n      swap1\n      pop\n        /* \"danpresale.sol\":9913:10030  function getCurrentPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_303\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_307\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_309\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_310\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_310\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_320\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_321\n      swap3\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_328\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_334)\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_337:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:354   */\n    tag_338:\n        /* \"#utility.yul\":322:346   */\n      0x55736520627579546f6b656e732066756e6374696f6e00000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:347   */\n      mstore\n        /* \"#utility.yul\":182:354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":360:726   */\n    tag_339:\n        /* \"#utility.yul\":502:505   */\n      0x00\n        /* \"#utility.yul\":523:590   */\n      tag_411\n        /* \"#utility.yul\":587:589   */\n      0x16\n        /* \"#utility.yul\":582:585   */\n      dup4\n        /* \"#utility.yul\":523:590   */\n      tag_337\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":516:590   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:692   */\n      tag_412\n        /* \"#utility.yul\":688:691   */\n      dup3\n        /* \"#utility.yul\":599:692   */\n      tag_338\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":717:719   */\n      0x20\n        /* \"#utility.yul\":712:715   */\n      dup3\n        /* \"#utility.yul\":708:720   */\n      add\n        /* \"#utility.yul\":701:720   */\n      swap1\n      pop\n        /* \"#utility.yul\":360:726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":732:1151   */\n    tag_37:\n        /* \"#utility.yul\":898:902   */\n      0x00\n        /* \"#utility.yul\":936:938   */\n      0x20\n        /* \"#utility.yul\":925:934   */\n      dup3\n        /* \"#utility.yul\":921:939   */\n      add\n        /* \"#utility.yul\":913:939   */\n      swap1\n      pop\n        /* \"#utility.yul\":985:994   */\n      dup2\n        /* \"#utility.yul\":979:983   */\n      dup2\n        /* \"#utility.yul\":975:995   */\n      sub\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":960:969   */\n      dup4\n        /* \"#utility.yul\":956:973   */\n      add\n        /* \"#utility.yul\":949:996   */\n      mstore\n        /* \"#utility.yul\":1013:1144   */\n      tag_414\n        /* \"#utility.yul\":1139:1143   */\n      dup2\n        /* \"#utility.yul\":1013:1144   */\n      tag_339\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1005:1144   */\n      swap1\n      pop\n        /* \"#utility.yul\":732:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1234   */\n    tag_340:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1228   */\n      dup2\n        /* \"#utility.yul\":1212:1228   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1240:1358   */\n    tag_341:\n        /* \"#utility.yul\":1327:1351   */\n      tag_417\n        /* \"#utility.yul\":1345:1350   */\n      dup2\n        /* \"#utility.yul\":1327:1351   */\n      tag_340\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1322:1325   */\n      dup3\n        /* \"#utility.yul\":1315:1352   */\n      mstore\n        /* \"#utility.yul\":1240:1358   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1364:1586   */\n    tag_45:\n        /* \"#utility.yul\":1457:1461   */\n      0x00\n        /* \"#utility.yul\":1495:1497   */\n      0x20\n        /* \"#utility.yul\":1484:1493   */\n      dup3\n        /* \"#utility.yul\":1480:1498   */\n      add\n        /* \"#utility.yul\":1472:1498   */\n      swap1\n      pop\n        /* \"#utility.yul\":1508:1579   */\n      tag_419\n        /* \"#utility.yul\":1576:1577   */\n      0x00\n        /* \"#utility.yul\":1565:1574   */\n      dup4\n        /* \"#utility.yul\":1561:1578   */\n      add\n        /* \"#utility.yul\":1552:1558   */\n      dup5\n        /* \"#utility.yul\":1508:1579   */\n      tag_341\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1364:1586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1673:1790   */\n    tag_343:\n        /* \"#utility.yul\":1782:1783   */\n      0x00\n        /* \"#utility.yul\":1779:1780   */\n      0x00\n        /* \"#utility.yul\":1772:1784   */\n      revert\n        /* \"#utility.yul\":1796:1913   */\n    tag_344:\n        /* \"#utility.yul\":1905:1906   */\n      0x00\n        /* \"#utility.yul\":1902:1903   */\n      0x00\n        /* \"#utility.yul\":1895:1907   */\n      revert\n        /* \"#utility.yul\":1919:2036   */\n    tag_345:\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":2042:2159   */\n    tag_346:\n        /* \"#utility.yul\":2151:2152   */\n      0x00\n        /* \"#utility.yul\":2148:2149   */\n      0x00\n        /* \"#utility.yul\":2141:2153   */\n      revert\n        /* \"#utility.yul\":2165:2282   */\n    tag_347:\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2264:2276   */\n      revert\n        /* \"#utility.yul\":2305:2873   */\n    tag_348:\n        /* \"#utility.yul\":2378:2386   */\n      0x00\n        /* \"#utility.yul\":2388:2394   */\n      0x00\n        /* \"#utility.yul\":2438:2441   */\n      dup4\n        /* \"#utility.yul\":2431:2435   */\n      0x1f\n        /* \"#utility.yul\":2423:2429   */\n      dup5\n        /* \"#utility.yul\":2419:2436   */\n      add\n        /* \"#utility.yul\":2415:2442   */\n      slt\n        /* \"#utility.yul\":2405:2527   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":2446:2525   */\n      tag_428\n      tag_345\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2405:2527   */\n    tag_427:\n        /* \"#utility.yul\":2559:2565   */\n      dup3\n        /* \"#utility.yul\":2546:2566   */\n      calldataload\n        /* \"#utility.yul\":2536:2566   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2607   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2581:2587   */\n      dup2\n        /* \"#utility.yul\":2578:2608   */\n      gt\n        /* \"#utility.yul\":2575:2692   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2611:2690   */\n      tag_430\n      tag_346\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2575:2692   */\n    tag_429:\n        /* \"#utility.yul\":2725:2729   */\n      0x20\n        /* \"#utility.yul\":2717:2723   */\n      dup4\n        /* \"#utility.yul\":2713:2730   */\n      add\n        /* \"#utility.yul\":2701:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2779:2782   */\n      dup4\n        /* \"#utility.yul\":2771:2775   */\n      0x20\n        /* \"#utility.yul\":2763:2769   */\n      dup3\n        /* \"#utility.yul\":2759:2776   */\n      mul\n        /* \"#utility.yul\":2749:2757   */\n      dup4\n        /* \"#utility.yul\":2745:2777   */\n      add\n        /* \"#utility.yul\":2742:2783   */\n      gt\n        /* \"#utility.yul\":2739:2867   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":2786:2865   */\n      tag_432\n      tag_347\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2739:2867   */\n    tag_431:\n        /* \"#utility.yul\":2305:2873   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2879:3813   */\n    tag_52:\n        /* \"#utility.yul\":3001:3007   */\n      0x00\n        /* \"#utility.yul\":3009:3015   */\n      0x00\n        /* \"#utility.yul\":3017:3023   */\n      0x00\n        /* \"#utility.yul\":3025:3031   */\n      0x00\n        /* \"#utility.yul\":3074:3076   */\n      0x40\n        /* \"#utility.yul\":3062:3071   */\n      dup6\n        /* \"#utility.yul\":3053:3060   */\n      dup8\n        /* \"#utility.yul\":3049:3072   */\n      sub\n        /* \"#utility.yul\":3045:3077   */\n      slt\n        /* \"#utility.yul\":3042:3161   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3080:3159   */\n      tag_435\n      tag_343\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3042:3161   */\n    tag_434:\n        /* \"#utility.yul\":3228:3229   */\n      0x00\n        /* \"#utility.yul\":3217:3226   */\n      dup6\n        /* \"#utility.yul\":3213:3230   */\n      add\n        /* \"#utility.yul\":3200:3231   */\n      calldataload\n        /* \"#utility.yul\":3258:3276   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3250:3256   */\n      dup2\n        /* \"#utility.yul\":3247:3277   */\n      gt\n        /* \"#utility.yul\":3244:3361   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":3280:3359   */\n      tag_437\n      tag_344\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3244:3361   */\n    tag_436:\n        /* \"#utility.yul\":3393:3473   */\n      tag_438\n        /* \"#utility.yul\":3465:3472   */\n      dup8\n        /* \"#utility.yul\":3456:3462   */\n      dup3\n        /* \"#utility.yul\":3445:3454   */\n      dup9\n        /* \"#utility.yul\":3441:3463   */\n      add\n        /* \"#utility.yul\":3393:3473   */\n      tag_348\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3375:3473   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":3171:3483   */\n      pop\n        /* \"#utility.yul\":3550:3552   */\n      0x20\n        /* \"#utility.yul\":3539:3548   */\n      dup6\n        /* \"#utility.yul\":3535:3553   */\n      add\n        /* \"#utility.yul\":3522:3554   */\n      calldataload\n        /* \"#utility.yul\":3581:3599   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3573:3579   */\n      dup2\n        /* \"#utility.yul\":3570:3600   */\n      gt\n        /* \"#utility.yul\":3567:3684   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":3603:3682   */\n      tag_440\n      tag_344\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3567:3684   */\n    tag_439:\n        /* \"#utility.yul\":3716:3796   */\n      tag_441\n        /* \"#utility.yul\":3788:3795   */\n      dup8\n        /* \"#utility.yul\":3779:3785   */\n      dup3\n        /* \"#utility.yul\":3768:3777   */\n      dup9\n        /* \"#utility.yul\":3764:3786   */\n      add\n        /* \"#utility.yul\":3716:3796   */\n      tag_348\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3698:3796   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3493:3806   */\n      pop\n        /* \"#utility.yul\":2879:3813   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3819:3941   */\n    tag_349:\n        /* \"#utility.yul\":3892:3916   */\n      tag_443\n        /* \"#utility.yul\":3910:3915   */\n      dup2\n        /* \"#utility.yul\":3892:3916   */\n      tag_340\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":3885:3890   */\n      dup2\n        /* \"#utility.yul\":3882:3917   */\n      eq\n        /* \"#utility.yul\":3872:3935   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3931:3932   */\n      0x00\n        /* \"#utility.yul\":3928:3929   */\n      0x00\n        /* \"#utility.yul\":3921:3933   */\n      revert\n        /* \"#utility.yul\":3872:3935   */\n    tag_444:\n        /* \"#utility.yul\":3819:3941   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3947:4086   */\n    tag_350:\n        /* \"#utility.yul\":3993:3998   */\n      0x00\n        /* \"#utility.yul\":4031:4037   */\n      dup2\n        /* \"#utility.yul\":4018:4038   */\n      calldataload\n        /* \"#utility.yul\":4009:4038   */\n      swap1\n      pop\n        /* \"#utility.yul\":4047:4080   */\n      tag_446\n        /* \"#utility.yul\":4074:4079   */\n      dup2\n        /* \"#utility.yul\":4047:4080   */\n      tag_349\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3947:4086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4092:4566   */\n    tag_61:\n        /* \"#utility.yul\":4160:4166   */\n      0x00\n        /* \"#utility.yul\":4168:4174   */\n      0x00\n        /* \"#utility.yul\":4217:4219   */\n      0x40\n        /* \"#utility.yul\":4205:4214   */\n      dup4\n        /* \"#utility.yul\":4196:4203   */\n      dup6\n        /* \"#utility.yul\":4192:4215   */\n      sub\n        /* \"#utility.yul\":4188:4220   */\n      slt\n        /* \"#utility.yul\":4185:4304   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":4223:4302   */\n      tag_449\n      tag_343\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4185:4304   */\n    tag_448:\n        /* \"#utility.yul\":4343:4344   */\n      0x00\n        /* \"#utility.yul\":4368:4421   */\n      tag_450\n        /* \"#utility.yul\":4413:4420   */\n      dup6\n        /* \"#utility.yul\":4404:4410   */\n      dup3\n        /* \"#utility.yul\":4393:4402   */\n      dup7\n        /* \"#utility.yul\":4389:4411   */\n      add\n        /* \"#utility.yul\":4368:4421   */\n      tag_350\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4358:4421   */\n      swap3\n      pop\n        /* \"#utility.yul\":4314:4431   */\n      pop\n        /* \"#utility.yul\":4470:4472   */\n      0x20\n        /* \"#utility.yul\":4496:4549   */\n      tag_451\n        /* \"#utility.yul\":4541:4548   */\n      dup6\n        /* \"#utility.yul\":4532:4538   */\n      dup3\n        /* \"#utility.yul\":4521:4530   */\n      dup7\n        /* \"#utility.yul\":4517:4539   */\n      add\n        /* \"#utility.yul\":4496:4549   */\n      tag_350\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4486:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4441:4559   */\n      pop\n        /* \"#utility.yul\":4092:4566   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4572:4901   */\n    tag_66:\n        /* \"#utility.yul\":4631:4637   */\n      0x00\n        /* \"#utility.yul\":4680:4682   */\n      0x20\n        /* \"#utility.yul\":4668:4677   */\n      dup3\n        /* \"#utility.yul\":4659:4666   */\n      dup5\n        /* \"#utility.yul\":4655:4678   */\n      sub\n        /* \"#utility.yul\":4651:4683   */\n      slt\n        /* \"#utility.yul\":4648:4767   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":4686:4765   */\n      tag_454\n      tag_343\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4648:4767   */\n    tag_453:\n        /* \"#utility.yul\":4806:4807   */\n      0x00\n        /* \"#utility.yul\":4831:4884   */\n      tag_455\n        /* \"#utility.yul\":4876:4883   */\n      dup5\n        /* \"#utility.yul\":4867:4873   */\n      dup3\n        /* \"#utility.yul\":4856:4865   */\n      dup6\n        /* \"#utility.yul\":4852:4874   */\n      add\n        /* \"#utility.yul\":4831:4884   */\n      tag_350\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4821:4884   */\n      swap2\n      pop\n        /* \"#utility.yul\":4777:4894   */\n      pop\n        /* \"#utility.yul\":4572:4901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4907:4997   */\n    tag_351:\n        /* \"#utility.yul\":4941:4948   */\n      0x00\n        /* \"#utility.yul\":4984:4989   */\n      dup2\n        /* \"#utility.yul\":4977:4990   */\n      iszero\n        /* \"#utility.yul\":4970:4991   */\n      iszero\n        /* \"#utility.yul\":4959:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":4907:4997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5003:5112   */\n    tag_352:\n        /* \"#utility.yul\":5084:5105   */\n      tag_458\n        /* \"#utility.yul\":5099:5104   */\n      dup2\n        /* \"#utility.yul\":5084:5105   */\n      tag_351\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5079:5082   */\n      dup3\n        /* \"#utility.yul\":5072:5106   */\n      mstore\n        /* \"#utility.yul\":5003:5112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5118:5328   */\n    tag_80:\n        /* \"#utility.yul\":5205:5209   */\n      0x00\n        /* \"#utility.yul\":5243:5245   */\n      0x20\n        /* \"#utility.yul\":5232:5241   */\n      dup3\n        /* \"#utility.yul\":5228:5246   */\n      add\n        /* \"#utility.yul\":5220:5246   */\n      swap1\n      pop\n        /* \"#utility.yul\":5256:5321   */\n      tag_460\n        /* \"#utility.yul\":5318:5319   */\n      0x00\n        /* \"#utility.yul\":5307:5316   */\n      dup4\n        /* \"#utility.yul\":5303:5320   */\n      add\n        /* \"#utility.yul\":5294:5300   */\n      dup5\n        /* \"#utility.yul\":5256:5321   */\n      tag_352\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5118:5328   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5334:5460   */\n    tag_353:\n        /* \"#utility.yul\":5371:5378   */\n      0x00\n        /* \"#utility.yul\":5411:5453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5404:5409   */\n      dup3\n        /* \"#utility.yul\":5400:5454   */\n      and\n        /* \"#utility.yul\":5389:5454   */\n      swap1\n      pop\n        /* \"#utility.yul\":5334:5460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5466:5562   */\n    tag_354:\n        /* \"#utility.yul\":5503:5510   */\n      0x00\n        /* \"#utility.yul\":5532:5556   */\n      tag_463\n        /* \"#utility.yul\":5550:5555   */\n      dup3\n        /* \"#utility.yul\":5532:5556   */\n      tag_353\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5521:5556   */\n      swap1\n      pop\n        /* \"#utility.yul\":5466:5562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5568:5686   */\n    tag_355:\n        /* \"#utility.yul\":5655:5679   */\n      tag_465\n        /* \"#utility.yul\":5673:5678   */\n      dup2\n        /* \"#utility.yul\":5655:5679   */\n      tag_354\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5650:5653   */\n      dup3\n        /* \"#utility.yul\":5643:5680   */\n      mstore\n        /* \"#utility.yul\":5568:5686   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5692:5914   */\n    tag_99:\n        /* \"#utility.yul\":5785:5789   */\n      0x00\n        /* \"#utility.yul\":5823:5825   */\n      0x20\n        /* \"#utility.yul\":5812:5821   */\n      dup3\n        /* \"#utility.yul\":5808:5826   */\n      add\n        /* \"#utility.yul\":5800:5826   */\n      swap1\n      pop\n        /* \"#utility.yul\":5836:5907   */\n      tag_467\n        /* \"#utility.yul\":5904:5905   */\n      0x00\n        /* \"#utility.yul\":5893:5902   */\n      dup4\n        /* \"#utility.yul\":5889:5906   */\n      add\n        /* \"#utility.yul\":5880:5886   */\n      dup5\n        /* \"#utility.yul\":5836:5907   */\n      tag_355\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5692:5914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5920:5980   */\n    tag_356:\n        /* \"#utility.yul\":5948:5951   */\n      0x00\n        /* \"#utility.yul\":5969:5974   */\n      dup2\n        /* \"#utility.yul\":5962:5974   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6128   */\n    tag_357:\n        /* \"#utility.yul\":6036:6045   */\n      0x00\n        /* \"#utility.yul\":6069:6122   */\n      tag_470\n        /* \"#utility.yul\":6087:6121   */\n      tag_471\n        /* \"#utility.yul\":6096:6120   */\n      tag_472\n        /* \"#utility.yul\":6114:6119   */\n      dup5\n        /* \"#utility.yul\":6096:6120   */\n      tag_353\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6087:6121   */\n      tag_356\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6069:6122   */\n      tag_353\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6056:6122   */\n      swap1\n      pop\n        /* \"#utility.yul\":5986:6128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6134:6260   */\n    tag_358:\n        /* \"#utility.yul\":6184:6193   */\n      0x00\n        /* \"#utility.yul\":6217:6254   */\n      tag_474\n        /* \"#utility.yul\":6248:6253   */\n      dup3\n        /* \"#utility.yul\":6217:6254   */\n      tag_357\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6204:6254   */\n      swap1\n      pop\n        /* \"#utility.yul\":6134:6260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6266:6406   */\n    tag_359:\n        /* \"#utility.yul\":6330:6339   */\n      0x00\n        /* \"#utility.yul\":6363:6400   */\n      tag_476\n        /* \"#utility.yul\":6394:6399   */\n      dup3\n        /* \"#utility.yul\":6363:6400   */\n      tag_358\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6350:6400   */\n      swap1\n      pop\n        /* \"#utility.yul\":6266:6406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6412:6571   */\n    tag_360:\n        /* \"#utility.yul\":6513:6564   */\n      tag_478\n        /* \"#utility.yul\":6558:6563   */\n      dup2\n        /* \"#utility.yul\":6513:6564   */\n      tag_359\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":6508:6511   */\n      dup3\n        /* \"#utility.yul\":6501:6565   */\n      mstore\n        /* \"#utility.yul\":6412:6571   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6577:6827   */\n    tag_113:\n        /* \"#utility.yul\":6684:6688   */\n      0x00\n        /* \"#utility.yul\":6722:6724   */\n      0x20\n        /* \"#utility.yul\":6711:6720   */\n      dup3\n        /* \"#utility.yul\":6707:6725   */\n      add\n        /* \"#utility.yul\":6699:6725   */\n      swap1\n      pop\n        /* \"#utility.yul\":6735:6820   */\n      tag_480\n        /* \"#utility.yul\":6817:6818   */\n      0x00\n        /* \"#utility.yul\":6806:6815   */\n      dup4\n        /* \"#utility.yul\":6802:6819   */\n      add\n        /* \"#utility.yul\":6793:6799   */\n      dup5\n        /* \"#utility.yul\":6735:6820   */\n      tag_360\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6577:6827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:6955   */\n    tag_361:\n        /* \"#utility.yul\":6906:6930   */\n      tag_482\n        /* \"#utility.yul\":6924:6929   */\n      dup2\n        /* \"#utility.yul\":6906:6930   */\n      tag_354\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6899:6904   */\n      dup2\n        /* \"#utility.yul\":6896:6931   */\n      eq\n        /* \"#utility.yul\":6886:6949   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6945:6946   */\n      0x00\n        /* \"#utility.yul\":6942:6943   */\n      0x00\n        /* \"#utility.yul\":6935:6947   */\n      revert\n        /* \"#utility.yul\":6886:6949   */\n    tag_483:\n        /* \"#utility.yul\":6833:6955   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6961:7100   */\n    tag_362:\n        /* \"#utility.yul\":7007:7012   */\n      0x00\n        /* \"#utility.yul\":7045:7051   */\n      dup2\n        /* \"#utility.yul\":7032:7052   */\n      calldataload\n        /* \"#utility.yul\":7023:7052   */\n      swap1\n      pop\n        /* \"#utility.yul\":7061:7094   */\n      tag_485\n        /* \"#utility.yul\":7088:7093   */\n      dup2\n        /* \"#utility.yul\":7061:7094   */\n      tag_361\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6961:7100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7106:7435   */\n    tag_145:\n        /* \"#utility.yul\":7165:7171   */\n      0x00\n        /* \"#utility.yul\":7214:7216   */\n      0x20\n        /* \"#utility.yul\":7202:7211   */\n      dup3\n        /* \"#utility.yul\":7193:7200   */\n      dup5\n        /* \"#utility.yul\":7189:7212   */\n      sub\n        /* \"#utility.yul\":7185:7217   */\n      slt\n        /* \"#utility.yul\":7182:7301   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":7220:7299   */\n      tag_488\n      tag_343\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":7182:7301   */\n    tag_487:\n        /* \"#utility.yul\":7340:7341   */\n      0x00\n        /* \"#utility.yul\":7365:7418   */\n      tag_489\n        /* \"#utility.yul\":7410:7417   */\n      dup5\n        /* \"#utility.yul\":7401:7407   */\n      dup3\n        /* \"#utility.yul\":7390:7399   */\n      dup6\n        /* \"#utility.yul\":7386:7408   */\n      add\n        /* \"#utility.yul\":7365:7418   */\n      tag_362\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7355:7418   */\n      swap2\n      pop\n        /* \"#utility.yul\":7311:7428   */\n      pop\n        /* \"#utility.yul\":7106:7435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7441:7616   */\n    tag_363:\n        /* \"#utility.yul\":7581:7608   */\n      0x50726573616c6520697320616c72656164792061637469766500000000000000\n        /* \"#utility.yul\":7577:7578   */\n      0x00\n        /* \"#utility.yul\":7569:7575   */\n      dup3\n        /* \"#utility.yul\":7565:7579   */\n      add\n        /* \"#utility.yul\":7558:7609   */\n      mstore\n        /* \"#utility.yul\":7441:7616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7622:7988   */\n    tag_364:\n        /* \"#utility.yul\":7764:7767   */\n      0x00\n        /* \"#utility.yul\":7785:7852   */\n      tag_492\n        /* \"#utility.yul\":7849:7851   */\n      0x19\n        /* \"#utility.yul\":7844:7847   */\n      dup4\n        /* \"#utility.yul\":7785:7852   */\n      tag_337\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7778:7852   */\n      swap2\n      pop\n        /* \"#utility.yul\":7861:7954   */\n      tag_493\n        /* \"#utility.yul\":7950:7953   */\n      dup3\n        /* \"#utility.yul\":7861:7954   */\n      tag_363\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7979:7981   */\n      0x20\n        /* \"#utility.yul\":7974:7977   */\n      dup3\n        /* \"#utility.yul\":7970:7982   */\n      add\n        /* \"#utility.yul\":7963:7982   */\n      swap1\n      pop\n        /* \"#utility.yul\":7622:7988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7994:8413   */\n    tag_153:\n        /* \"#utility.yul\":8160:8164   */\n      0x00\n        /* \"#utility.yul\":8198:8200   */\n      0x20\n        /* \"#utility.yul\":8187:8196   */\n      dup3\n        /* \"#utility.yul\":8183:8201   */\n      add\n        /* \"#utility.yul\":8175:8201   */\n      swap1\n      pop\n        /* \"#utility.yul\":8247:8256   */\n      dup2\n        /* \"#utility.yul\":8241:8245   */\n      dup2\n        /* \"#utility.yul\":8237:8257   */\n      sub\n        /* \"#utility.yul\":8233:8234   */\n      0x00\n        /* \"#utility.yul\":8222:8231   */\n      dup4\n        /* \"#utility.yul\":8218:8235   */\n      add\n        /* \"#utility.yul\":8211:8258   */\n      mstore\n        /* \"#utility.yul\":8275:8406   */\n      tag_495\n        /* \"#utility.yul\":8401:8405   */\n      dup2\n        /* \"#utility.yul\":8275:8406   */\n      tag_364\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8267:8406   */\n      swap1\n      pop\n        /* \"#utility.yul\":7994:8413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8419:8658   */\n    tag_365:\n        /* \"#utility.yul\":8559:8593   */\n      0x5469657273206d75737420626520636f6e66696775726564206265666f726520\n        /* \"#utility.yul\":8555:8556   */\n      0x00\n        /* \"#utility.yul\":8547:8553   */\n      dup3\n        /* \"#utility.yul\":8543:8557   */\n      add\n        /* \"#utility.yul\":8536:8594   */\n      mstore\n        /* \"#utility.yul\":8628:8650   */\n      0x7374617274696e67207468652070726573616c65000000000000000000000000\n        /* \"#utility.yul\":8623:8625   */\n      0x20\n        /* \"#utility.yul\":8615:8621   */\n      dup3\n        /* \"#utility.yul\":8611:8626   */\n      add\n        /* \"#utility.yul\":8604:8651   */\n      mstore\n        /* \"#utility.yul\":8419:8658   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8664:9030   */\n    tag_366:\n        /* \"#utility.yul\":8806:8809   */\n      0x00\n        /* \"#utility.yul\":8827:8894   */\n      tag_498\n        /* \"#utility.yul\":8891:8893   */\n      0x34\n        /* \"#utility.yul\":8886:8889   */\n      dup4\n        /* \"#utility.yul\":8827:8894   */\n      tag_337\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":8820:8894   */\n      swap2\n      pop\n        /* \"#utility.yul\":8903:8996   */\n      tag_499\n        /* \"#utility.yul\":8992:8995   */\n      dup3\n        /* \"#utility.yul\":8903:8996   */\n      tag_365\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9021:9023   */\n      0x40\n        /* \"#utility.yul\":9016:9019   */\n      dup3\n        /* \"#utility.yul\":9012:9024   */\n      add\n        /* \"#utility.yul\":9005:9024   */\n      swap1\n      pop\n        /* \"#utility.yul\":8664:9030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9036:9455   */\n    tag_156:\n        /* \"#utility.yul\":9202:9206   */\n      0x00\n        /* \"#utility.yul\":9240:9242   */\n      0x20\n        /* \"#utility.yul\":9229:9238   */\n      dup3\n        /* \"#utility.yul\":9225:9243   */\n      add\n        /* \"#utility.yul\":9217:9243   */\n      swap1\n      pop\n        /* \"#utility.yul\":9289:9298   */\n      dup2\n        /* \"#utility.yul\":9283:9287   */\n      dup2\n        /* \"#utility.yul\":9279:9299   */\n      sub\n        /* \"#utility.yul\":9275:9276   */\n      0x00\n        /* \"#utility.yul\":9264:9273   */\n      dup4\n        /* \"#utility.yul\":9260:9277   */\n      add\n        /* \"#utility.yul\":9253:9300   */\n      mstore\n        /* \"#utility.yul\":9317:9448   */\n      tag_501\n        /* \"#utility.yul\":9443:9447   */\n      dup2\n        /* \"#utility.yul\":9317:9448   */\n      tag_366\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9309:9448   */\n      swap1\n      pop\n        /* \"#utility.yul\":9036:9455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9461:9632   */\n    tag_367:\n        /* \"#utility.yul\":9601:9624   */\n      0x50726573616c65206973206e6f74206163746976650000000000000000000000\n        /* \"#utility.yul\":9597:9598   */\n      0x00\n        /* \"#utility.yul\":9589:9595   */\n      dup3\n        /* \"#utility.yul\":9585:9599   */\n      add\n        /* \"#utility.yul\":9578:9625   */\n      mstore\n        /* \"#utility.yul\":9461:9632   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9638:10004   */\n    tag_368:\n        /* \"#utility.yul\":9780:9783   */\n      0x00\n        /* \"#utility.yul\":9801:9868   */\n      tag_504\n        /* \"#utility.yul\":9865:9867   */\n      0x15\n        /* \"#utility.yul\":9860:9863   */\n      dup4\n        /* \"#utility.yul\":9801:9868   */\n      tag_337\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9794:9868   */\n      swap2\n      pop\n        /* \"#utility.yul\":9877:9970   */\n      tag_505\n        /* \"#utility.yul\":9966:9969   */\n      dup3\n        /* \"#utility.yul\":9877:9970   */\n      tag_367\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9995:9997   */\n      0x20\n        /* \"#utility.yul\":9990:9993   */\n      dup3\n        /* \"#utility.yul\":9986:9998   */\n      add\n        /* \"#utility.yul\":9979:9998   */\n      swap1\n      pop\n        /* \"#utility.yul\":9638:10004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10010:10429   */\n    tag_162:\n        /* \"#utility.yul\":10176:10180   */\n      0x00\n        /* \"#utility.yul\":10214:10216   */\n      0x20\n        /* \"#utility.yul\":10203:10212   */\n      dup3\n        /* \"#utility.yul\":10199:10217   */\n      add\n        /* \"#utility.yul\":10191:10217   */\n      swap1\n      pop\n        /* \"#utility.yul\":10263:10272   */\n      dup2\n        /* \"#utility.yul\":10257:10261   */\n      dup2\n        /* \"#utility.yul\":10253:10273   */\n      sub\n        /* \"#utility.yul\":10249:10250   */\n      0x00\n        /* \"#utility.yul\":10238:10247   */\n      dup4\n        /* \"#utility.yul\":10234:10251   */\n      add\n        /* \"#utility.yul\":10227:10274   */\n      mstore\n        /* \"#utility.yul\":10291:10422   */\n      tag_507\n        /* \"#utility.yul\":10417:10421   */\n      dup2\n        /* \"#utility.yul\":10291:10422   */\n      tag_368\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10283:10422   */\n      swap1\n      pop\n        /* \"#utility.yul\":10010:10429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10435:10617   */\n    tag_369:\n        /* \"#utility.yul\":10575:10609   */\n      0x417272617973206d7573742068617665207468652073616d65206c656e677468\n        /* \"#utility.yul\":10571:10572   */\n      0x00\n        /* \"#utility.yul\":10563:10569   */\n      dup3\n        /* \"#utility.yul\":10559:10573   */\n      add\n        /* \"#utility.yul\":10552:10610   */\n      mstore\n        /* \"#utility.yul\":10435:10617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10623:10989   */\n    tag_370:\n        /* \"#utility.yul\":10765:10768   */\n      0x00\n        /* \"#utility.yul\":10786:10853   */\n      tag_510\n        /* \"#utility.yul\":10850:10852   */\n      0x20\n        /* \"#utility.yul\":10845:10848   */\n      dup4\n        /* \"#utility.yul\":10786:10853   */\n      tag_337\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10779:10853   */\n      swap2\n      pop\n        /* \"#utility.yul\":10862:10955   */\n      tag_511\n        /* \"#utility.yul\":10951:10954   */\n      dup3\n        /* \"#utility.yul\":10862:10955   */\n      tag_369\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10980:10982   */\n      0x20\n        /* \"#utility.yul\":10975:10978   */\n      dup3\n        /* \"#utility.yul\":10971:10983   */\n      add\n        /* \"#utility.yul\":10964:10983   */\n      swap1\n      pop\n        /* \"#utility.yul\":10623:10989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10995:11414   */\n    tag_168:\n        /* \"#utility.yul\":11161:11165   */\n      0x00\n        /* \"#utility.yul\":11199:11201   */\n      0x20\n        /* \"#utility.yul\":11188:11197   */\n      dup3\n        /* \"#utility.yul\":11184:11202   */\n      add\n        /* \"#utility.yul\":11176:11202   */\n      swap1\n      pop\n        /* \"#utility.yul\":11248:11257   */\n      dup2\n        /* \"#utility.yul\":11242:11246   */\n      dup2\n        /* \"#utility.yul\":11238:11258   */\n      sub\n        /* \"#utility.yul\":11234:11235   */\n      0x00\n        /* \"#utility.yul\":11223:11232   */\n      dup4\n        /* \"#utility.yul\":11219:11236   */\n      add\n        /* \"#utility.yul\":11212:11259   */\n      mstore\n        /* \"#utility.yul\":11276:11407   */\n      tag_513\n        /* \"#utility.yul\":11402:11406   */\n      dup2\n        /* \"#utility.yul\":11276:11407   */\n      tag_370\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":11268:11407   */\n      swap1\n      pop\n        /* \"#utility.yul\":10995:11414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11420:11591   */\n    tag_371:\n        /* \"#utility.yul\":11560:11583   */\n      0x54696572732063616e6e6f7420626520656d7074790000000000000000000000\n        /* \"#utility.yul\":11556:11557   */\n      0x00\n        /* \"#utility.yul\":11548:11554   */\n      dup3\n        /* \"#utility.yul\":11544:11558   */\n      add\n        /* \"#utility.yul\":11537:11584   */\n      mstore\n        /* \"#utility.yul\":11420:11591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11597:11963   */\n    tag_372:\n        /* \"#utility.yul\":11739:11742   */\n      0x00\n        /* \"#utility.yul\":11760:11827   */\n      tag_516\n        /* \"#utility.yul\":11824:11826   */\n      0x15\n        /* \"#utility.yul\":11819:11822   */\n      dup4\n        /* \"#utility.yul\":11760:11827   */\n      tag_337\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11753:11827   */\n      swap2\n      pop\n        /* \"#utility.yul\":11836:11929   */\n      tag_517\n        /* \"#utility.yul\":11925:11928   */\n      dup3\n        /* \"#utility.yul\":11836:11929   */\n      tag_371\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11954:11956   */\n      0x20\n        /* \"#utility.yul\":11949:11952   */\n      dup3\n        /* \"#utility.yul\":11945:11957   */\n      add\n        /* \"#utility.yul\":11938:11957   */\n      swap1\n      pop\n        /* \"#utility.yul\":11597:11963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11969:12388   */\n    tag_171:\n        /* \"#utility.yul\":12135:12139   */\n      0x00\n        /* \"#utility.yul\":12173:12175   */\n      0x20\n        /* \"#utility.yul\":12162:12171   */\n      dup3\n        /* \"#utility.yul\":12158:12176   */\n      add\n        /* \"#utility.yul\":12150:12176   */\n      swap1\n      pop\n        /* \"#utility.yul\":12222:12231   */\n      dup2\n        /* \"#utility.yul\":12216:12220   */\n      dup2\n        /* \"#utility.yul\":12212:12232   */\n      sub\n        /* \"#utility.yul\":12208:12209   */\n      0x00\n        /* \"#utility.yul\":12197:12206   */\n      dup4\n        /* \"#utility.yul\":12193:12210   */\n      add\n        /* \"#utility.yul\":12186:12233   */\n      mstore\n        /* \"#utility.yul\":12250:12381   */\n      tag_519\n        /* \"#utility.yul\":12376:12380   */\n      dup2\n        /* \"#utility.yul\":12250:12381   */\n      tag_372\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":12242:12381   */\n      swap1\n      pop\n        /* \"#utility.yul\":11969:12388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12394:12574   */\n    tag_373:\n        /* \"#utility.yul\":12442:12519   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12439:12440   */\n      0x00\n        /* \"#utility.yul\":12432:12520   */\n      mstore\n        /* \"#utility.yul\":12539:12543   */\n      0x11\n        /* \"#utility.yul\":12536:12537   */\n      0x04\n        /* \"#utility.yul\":12529:12544   */\n      mstore\n        /* \"#utility.yul\":12563:12567   */\n      0x24\n        /* \"#utility.yul\":12560:12561   */\n      0x00\n        /* \"#utility.yul\":12553:12568   */\n      revert\n        /* \"#utility.yul\":12580:12813   */\n    tag_175:\n        /* \"#utility.yul\":12619:12622   */\n      0x00\n        /* \"#utility.yul\":12642:12666   */\n      tag_522\n        /* \"#utility.yul\":12660:12665   */\n      dup3\n        /* \"#utility.yul\":12642:12666   */\n      tag_340\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":12633:12666   */\n      swap2\n      pop\n        /* \"#utility.yul\":12688:12754   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12681:12686   */\n      dup3\n        /* \"#utility.yul\":12678:12755   */\n      sub\n        /* \"#utility.yul\":12675:12778   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":12758:12776   */\n      tag_524\n      tag_373\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12675:12778   */\n    tag_523:\n        /* \"#utility.yul\":12805:12806   */\n      0x01\n        /* \"#utility.yul\":12798:12803   */\n      dup3\n        /* \"#utility.yul\":12794:12807   */\n      add\n        /* \"#utility.yul\":12787:12807   */\n      swap1\n      pop\n        /* \"#utility.yul\":12580:12813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12819:12999   */\n    tag_181:\n        /* \"#utility.yul\":12867:12944   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12864:12865   */\n      0x00\n        /* \"#utility.yul\":12857:12945   */\n      mstore\n        /* \"#utility.yul\":12964:12968   */\n      0x32\n        /* \"#utility.yul\":12961:12962   */\n      0x04\n        /* \"#utility.yul\":12954:12969   */\n      mstore\n        /* \"#utility.yul\":12988:12992   */\n      0x24\n        /* \"#utility.yul\":12985:12986   */\n      0x00\n        /* \"#utility.yul\":12978:12993   */\n      revert\n        /* \"#utility.yul\":13005:13196   */\n    tag_183:\n        /* \"#utility.yul\":13045:13048   */\n      0x00\n        /* \"#utility.yul\":13064:13084   */\n      tag_527\n        /* \"#utility.yul\":13082:13083   */\n      dup3\n        /* \"#utility.yul\":13064:13084   */\n      tag_340\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":13059:13084   */\n      swap2\n      pop\n        /* \"#utility.yul\":13098:13118   */\n      tag_528\n        /* \"#utility.yul\":13116:13117   */\n      dup4\n        /* \"#utility.yul\":13098:13118   */\n      tag_340\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13093:13118   */\n      swap3\n      pop\n        /* \"#utility.yul\":13141:13142   */\n      dup3\n        /* \"#utility.yul\":13138:13139   */\n      dup3\n        /* \"#utility.yul\":13134:13143   */\n      add\n        /* \"#utility.yul\":13127:13143   */\n      swap1\n      pop\n        /* \"#utility.yul\":13162:13165   */\n      dup1\n        /* \"#utility.yul\":13159:13160   */\n      dup3\n        /* \"#utility.yul\":13156:13166   */\n      gt\n        /* \"#utility.yul\":13153:13189   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":13169:13187   */\n      tag_530\n      tag_373\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":13153:13189   */\n    tag_529:\n        /* \"#utility.yul\":13005:13196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13202:13426   */\n    tag_374:\n        /* \"#utility.yul\":13342:13376   */\n      0x4d696e696d756d20627579206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":13338:13339   */\n      0x00\n        /* \"#utility.yul\":13330:13336   */\n      dup3\n        /* \"#utility.yul\":13326:13340   */\n      add\n        /* \"#utility.yul\":13319:13377   */\n      mstore\n        /* \"#utility.yul\":13411:13418   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13406:13408   */\n      0x20\n        /* \"#utility.yul\":13398:13404   */\n      dup3\n        /* \"#utility.yul\":13394:13409   */\n      add\n        /* \"#utility.yul\":13387:13419   */\n      mstore\n        /* \"#utility.yul\":13202:13426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13432:13798   */\n    tag_375:\n        /* \"#utility.yul\":13574:13577   */\n      0x00\n        /* \"#utility.yul\":13595:13662   */\n      tag_533\n        /* \"#utility.yul\":13659:13661   */\n      0x25\n        /* \"#utility.yul\":13654:13657   */\n      dup4\n        /* \"#utility.yul\":13595:13662   */\n      tag_337\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13588:13662   */\n      swap2\n      pop\n        /* \"#utility.yul\":13671:13764   */\n      tag_534\n        /* \"#utility.yul\":13760:13763   */\n      dup3\n        /* \"#utility.yul\":13671:13764   */\n      tag_374\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13789:13791   */\n      0x40\n        /* \"#utility.yul\":13784:13787   */\n      dup3\n        /* \"#utility.yul\":13780:13792   */\n      add\n        /* \"#utility.yul\":13773:13792   */\n      swap1\n      pop\n        /* \"#utility.yul\":13432:13798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13804:14223   */\n    tag_192:\n        /* \"#utility.yul\":13970:13974   */\n      0x00\n        /* \"#utility.yul\":14008:14010   */\n      0x20\n        /* \"#utility.yul\":13997:14006   */\n      dup3\n        /* \"#utility.yul\":13993:14011   */\n      add\n        /* \"#utility.yul\":13985:14011   */\n      swap1\n      pop\n        /* \"#utility.yul\":14057:14066   */\n      dup2\n        /* \"#utility.yul\":14051:14055   */\n      dup2\n        /* \"#utility.yul\":14047:14067   */\n      sub\n        /* \"#utility.yul\":14043:14044   */\n      0x00\n        /* \"#utility.yul\":14032:14041   */\n      dup4\n        /* \"#utility.yul\":14028:14045   */\n      add\n        /* \"#utility.yul\":14021:14068   */\n      mstore\n        /* \"#utility.yul\":14085:14216   */\n      tag_536\n        /* \"#utility.yul\":14211:14215   */\n      dup2\n        /* \"#utility.yul\":14085:14216   */\n      tag_375\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14077:14216   */\n      swap1\n      pop\n        /* \"#utility.yul\":13804:14223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14229:14472   */\n    tag_376:\n        /* \"#utility.yul\":14369:14403   */\n      0x4d6178696d756d20627579206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":14365:14366   */\n      0x00\n        /* \"#utility.yul\":14357:14363   */\n      dup3\n        /* \"#utility.yul\":14353:14367   */\n      add\n        /* \"#utility.yul\":14346:14404   */\n      mstore\n        /* \"#utility.yul\":14438:14464   */\n      0x206f7220657175616c20746f206d696e696d756d206275790000000000000000\n        /* \"#utility.yul\":14433:14435   */\n      0x20\n        /* \"#utility.yul\":14425:14431   */\n      dup3\n        /* \"#utility.yul\":14421:14436   */\n      add\n        /* \"#utility.yul\":14414:14465   */\n      mstore\n        /* \"#utility.yul\":14229:14472   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14478:14844   */\n    tag_377:\n        /* \"#utility.yul\":14620:14623   */\n      0x00\n        /* \"#utility.yul\":14641:14708   */\n      tag_539\n        /* \"#utility.yul\":14705:14707   */\n      0x38\n        /* \"#utility.yul\":14700:14703   */\n      dup4\n        /* \"#utility.yul\":14641:14708   */\n      tag_337\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":14634:14708   */\n      swap2\n      pop\n        /* \"#utility.yul\":14717:14810   */\n      tag_540\n        /* \"#utility.yul\":14806:14809   */\n      dup3\n        /* \"#utility.yul\":14717:14810   */\n      tag_376\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14835:14837   */\n      0x40\n        /* \"#utility.yul\":14830:14833   */\n      dup3\n        /* \"#utility.yul\":14826:14838   */\n      add\n        /* \"#utility.yul\":14819:14838   */\n      swap1\n      pop\n        /* \"#utility.yul\":14478:14844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14850:15269   */\n    tag_195:\n        /* \"#utility.yul\":15016:15020   */\n      0x00\n        /* \"#utility.yul\":15054:15056   */\n      0x20\n        /* \"#utility.yul\":15043:15052   */\n      dup3\n        /* \"#utility.yul\":15039:15057   */\n      add\n        /* \"#utility.yul\":15031:15057   */\n      swap1\n      pop\n        /* \"#utility.yul\":15103:15112   */\n      dup2\n        /* \"#utility.yul\":15097:15101   */\n      dup2\n        /* \"#utility.yul\":15093:15113   */\n      sub\n        /* \"#utility.yul\":15089:15090   */\n      0x00\n        /* \"#utility.yul\":15078:15087   */\n      dup4\n        /* \"#utility.yul\":15074:15091   */\n      add\n        /* \"#utility.yul\":15067:15114   */\n      mstore\n        /* \"#utility.yul\":15131:15262   */\n      tag_542\n        /* \"#utility.yul\":15257:15261   */\n      dup2\n        /* \"#utility.yul\":15131:15262   */\n      tag_377\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15123:15262   */\n      swap1\n      pop\n        /* \"#utility.yul\":14850:15269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15275:15607   */\n    tag_197:\n        /* \"#utility.yul\":15396:15400   */\n      0x00\n        /* \"#utility.yul\":15434:15436   */\n      0x40\n        /* \"#utility.yul\":15423:15432   */\n      dup3\n        /* \"#utility.yul\":15419:15437   */\n      add\n        /* \"#utility.yul\":15411:15437   */\n      swap1\n      pop\n        /* \"#utility.yul\":15447:15518   */\n      tag_544\n        /* \"#utility.yul\":15515:15516   */\n      0x00\n        /* \"#utility.yul\":15504:15513   */\n      dup4\n        /* \"#utility.yul\":15500:15517   */\n      add\n        /* \"#utility.yul\":15491:15497   */\n      dup6\n        /* \"#utility.yul\":15447:15518   */\n      tag_341\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15528:15600   */\n      tag_545\n        /* \"#utility.yul\":15596:15598   */\n      0x20\n        /* \"#utility.yul\":15585:15594   */\n      dup4\n        /* \"#utility.yul\":15581:15599   */\n      add\n        /* \"#utility.yul\":15572:15578   */\n      dup5\n        /* \"#utility.yul\":15528:15600   */\n      tag_341\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":15275:15607   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15613:15844   */\n    tag_378:\n        /* \"#utility.yul\":15753:15787   */\n      0x50726573616c6520697320636f6d706c6574652c206e6f206d6f726520746965\n        /* \"#utility.yul\":15749:15750   */\n      0x00\n        /* \"#utility.yul\":15741:15747   */\n      dup3\n        /* \"#utility.yul\":15737:15751   */\n      add\n        /* \"#utility.yul\":15730:15788   */\n      mstore\n        /* \"#utility.yul\":15822:15836   */\n      0x727320617661696c61626c650000000000000000000000000000000000000000\n        /* \"#utility.yul\":15817:15819   */\n      0x20\n        /* \"#utility.yul\":15809:15815   */\n      dup3\n        /* \"#utility.yul\":15805:15820   */\n      add\n        /* \"#utility.yul\":15798:15837   */\n      mstore\n        /* \"#utility.yul\":15613:15844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15850:16216   */\n    tag_379:\n        /* \"#utility.yul\":15992:15995   */\n      0x00\n        /* \"#utility.yul\":16013:16080   */\n      tag_548\n        /* \"#utility.yul\":16077:16079   */\n      0x2c\n        /* \"#utility.yul\":16072:16075   */\n      dup4\n        /* \"#utility.yul\":16013:16080   */\n      tag_337\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":16006:16080   */\n      swap2\n      pop\n        /* \"#utility.yul\":16089:16182   */\n      tag_549\n        /* \"#utility.yul\":16178:16181   */\n      dup3\n        /* \"#utility.yul\":16089:16182   */\n      tag_378\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":16207:16209   */\n      0x40\n        /* \"#utility.yul\":16202:16205   */\n      dup3\n        /* \"#utility.yul\":16198:16210   */\n      add\n        /* \"#utility.yul\":16191:16210   */\n      swap1\n      pop\n        /* \"#utility.yul\":15850:16216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16222:16641   */\n    tag_206:\n        /* \"#utility.yul\":16388:16392   */\n      0x00\n        /* \"#utility.yul\":16426:16428   */\n      0x20\n        /* \"#utility.yul\":16415:16424   */\n      dup3\n        /* \"#utility.yul\":16411:16429   */\n      add\n        /* \"#utility.yul\":16403:16429   */\n      swap1\n      pop\n        /* \"#utility.yul\":16475:16484   */\n      dup2\n        /* \"#utility.yul\":16469:16473   */\n      dup2\n        /* \"#utility.yul\":16465:16485   */\n      sub\n        /* \"#utility.yul\":16461:16462   */\n      0x00\n        /* \"#utility.yul\":16450:16459   */\n      dup4\n        /* \"#utility.yul\":16446:16463   */\n      add\n        /* \"#utility.yul\":16439:16486   */\n      mstore\n        /* \"#utility.yul\":16503:16634   */\n      tag_551\n        /* \"#utility.yul\":16629:16633   */\n      dup2\n        /* \"#utility.yul\":16503:16634   */\n      tag_379\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":16495:16634   */\n      swap1\n      pop\n        /* \"#utility.yul\":16222:16641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16647:16890   */\n    tag_380:\n        /* \"#utility.yul\":16787:16821   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e206f722065\n        /* \"#utility.yul\":16783:16784   */\n      0x00\n        /* \"#utility.yul\":16775:16781   */\n      dup3\n        /* \"#utility.yul\":16771:16785   */\n      add\n        /* \"#utility.yul\":16764:16822   */\n      mstore\n        /* \"#utility.yul\":16856:16882   */\n      0x7175616c20746f206d696e696d756d2070757263686173650000000000000000\n        /* \"#utility.yul\":16851:16853   */\n      0x20\n        /* \"#utility.yul\":16843:16849   */\n      dup3\n        /* \"#utility.yul\":16839:16854   */\n      add\n        /* \"#utility.yul\":16832:16883   */\n      mstore\n        /* \"#utility.yul\":16647:16890   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16896:17262   */\n    tag_381:\n        /* \"#utility.yul\":17038:17041   */\n      0x00\n        /* \"#utility.yul\":17059:17126   */\n      tag_554\n        /* \"#utility.yul\":17123:17125   */\n      0x38\n        /* \"#utility.yul\":17118:17121   */\n      dup4\n        /* \"#utility.yul\":17059:17126   */\n      tag_337\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":17052:17126   */\n      swap2\n      pop\n        /* \"#utility.yul\":17135:17228   */\n      tag_555\n        /* \"#utility.yul\":17224:17227   */\n      dup3\n        /* \"#utility.yul\":17135:17228   */\n      tag_380\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17253:17255   */\n      0x40\n        /* \"#utility.yul\":17248:17251   */\n      dup3\n        /* \"#utility.yul\":17244:17256   */\n      add\n        /* \"#utility.yul\":17237:17256   */\n      swap1\n      pop\n        /* \"#utility.yul\":16896:17262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17268:17687   */\n    tag_209:\n        /* \"#utility.yul\":17434:17438   */\n      0x00\n        /* \"#utility.yul\":17472:17474   */\n      0x20\n        /* \"#utility.yul\":17461:17470   */\n      dup3\n        /* \"#utility.yul\":17457:17475   */\n      add\n        /* \"#utility.yul\":17449:17475   */\n      swap1\n      pop\n        /* \"#utility.yul\":17521:17530   */\n      dup2\n        /* \"#utility.yul\":17515:17519   */\n      dup2\n        /* \"#utility.yul\":17511:17531   */\n      sub\n        /* \"#utility.yul\":17507:17508   */\n      0x00\n        /* \"#utility.yul\":17496:17505   */\n      dup4\n        /* \"#utility.yul\":17492:17509   */\n      add\n        /* \"#utility.yul\":17485:17532   */\n      mstore\n        /* \"#utility.yul\":17549:17680   */\n      tag_557\n        /* \"#utility.yul\":17675:17679   */\n      dup2\n        /* \"#utility.yul\":17549:17680   */\n      tag_381\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":17541:17680   */\n      swap1\n      pop\n        /* \"#utility.yul\":17268:17687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17693:17933   */\n    tag_382:\n        /* \"#utility.yul\":17833:17867   */\n      0x416d6f756e74206d757374206265206c657373207468616e206f722065717561\n        /* \"#utility.yul\":17829:17830   */\n      0x00\n        /* \"#utility.yul\":17821:17827   */\n      dup3\n        /* \"#utility.yul\":17817:17831   */\n      add\n        /* \"#utility.yul\":17810:17868   */\n      mstore\n        /* \"#utility.yul\":17902:17925   */\n      0x6c20746f206d6178696d756d2070757263686173650000000000000000000000\n        /* \"#utility.yul\":17897:17899   */\n      0x20\n        /* \"#utility.yul\":17889:17895   */\n      dup3\n        /* \"#utility.yul\":17885:17900   */\n      add\n        /* \"#utility.yul\":17878:17926   */\n      mstore\n        /* \"#utility.yul\":17693:17933   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17939:18305   */\n    tag_383:\n        /* \"#utility.yul\":18081:18084   */\n      0x00\n        /* \"#utility.yul\":18102:18169   */\n      tag_560\n        /* \"#utility.yul\":18166:18168   */\n      0x35\n        /* \"#utility.yul\":18161:18164   */\n      dup4\n        /* \"#utility.yul\":18102:18169   */\n      tag_337\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18095:18169   */\n      swap2\n      pop\n        /* \"#utility.yul\":18178:18271   */\n      tag_561\n        /* \"#utility.yul\":18267:18270   */\n      dup3\n        /* \"#utility.yul\":18178:18271   */\n      tag_382\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18296:18298   */\n      0x40\n        /* \"#utility.yul\":18291:18294   */\n      dup3\n        /* \"#utility.yul\":18287:18299   */\n      add\n        /* \"#utility.yul\":18280:18299   */\n      swap1\n      pop\n        /* \"#utility.yul\":17939:18305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18311:18730   */\n    tag_212:\n        /* \"#utility.yul\":18477:18481   */\n      0x00\n        /* \"#utility.yul\":18515:18517   */\n      0x20\n        /* \"#utility.yul\":18504:18513   */\n      dup3\n        /* \"#utility.yul\":18500:18518   */\n      add\n        /* \"#utility.yul\":18492:18518   */\n      swap1\n      pop\n        /* \"#utility.yul\":18564:18573   */\n      dup2\n        /* \"#utility.yul\":18558:18562   */\n      dup2\n        /* \"#utility.yul\":18554:18574   */\n      sub\n        /* \"#utility.yul\":18550:18551   */\n      0x00\n        /* \"#utility.yul\":18539:18548   */\n      dup4\n        /* \"#utility.yul\":18535:18552   */\n      add\n        /* \"#utility.yul\":18528:18575   */\n      mstore\n        /* \"#utility.yul\":18592:18723   */\n      tag_563\n        /* \"#utility.yul\":18718:18722   */\n      dup2\n        /* \"#utility.yul\":18592:18723   */\n      tag_383\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":18584:18723   */\n      swap1\n      pop\n        /* \"#utility.yul\":18311:18730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18736:19146   */\n    tag_214:\n        /* \"#utility.yul\":18776:18783   */\n      0x00\n        /* \"#utility.yul\":18799:18819   */\n      tag_565\n        /* \"#utility.yul\":18817:18818   */\n      dup3\n        /* \"#utility.yul\":18799:18819   */\n      tag_340\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18794:18819   */\n      swap2\n      pop\n        /* \"#utility.yul\":18833:18853   */\n      tag_566\n        /* \"#utility.yul\":18851:18852   */\n      dup4\n        /* \"#utility.yul\":18833:18853   */\n      tag_340\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":18828:18853   */\n      swap3\n      pop\n        /* \"#utility.yul\":18888:18889   */\n      dup3\n        /* \"#utility.yul\":18885:18886   */\n      dup3\n        /* \"#utility.yul\":18881:18890   */\n      mul\n        /* \"#utility.yul\":18910:18940   */\n      tag_567\n        /* \"#utility.yul\":18928:18939   */\n      dup2\n        /* \"#utility.yul\":18910:18940   */\n      tag_340\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":18899:18940   */\n      swap2\n      pop\n        /* \"#utility.yul\":19089:19090   */\n      dup3\n        /* \"#utility.yul\":19080:19087   */\n      dup3\n        /* \"#utility.yul\":19076:19091   */\n      div\n        /* \"#utility.yul\":19073:19074   */\n      dup5\n        /* \"#utility.yul\":19070:19092   */\n      eq\n        /* \"#utility.yul\":19050:19051   */\n      dup4\n        /* \"#utility.yul\":19043:19052   */\n      iszero\n        /* \"#utility.yul\":19023:19106   */\n      or\n        /* \"#utility.yul\":19000:19139   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":19119:19137   */\n      tag_569\n      tag_373\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19000:19139   */\n    tag_568:\n        /* \"#utility.yul\":18784:19146   */\n      pop\n        /* \"#utility.yul\":18736:19146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19152:19332   */\n    tag_384:\n        /* \"#utility.yul\":19200:19277   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19197:19198   */\n      0x00\n        /* \"#utility.yul\":19190:19278   */\n      mstore\n        /* \"#utility.yul\":19297:19301   */\n      0x12\n        /* \"#utility.yul\":19294:19295   */\n      0x04\n        /* \"#utility.yul\":19287:19302   */\n      mstore\n        /* \"#utility.yul\":19321:19325   */\n      0x24\n        /* \"#utility.yul\":19318:19319   */\n      0x00\n        /* \"#utility.yul\":19311:19326   */\n      revert\n        /* \"#utility.yul\":19338:19523   */\n    tag_216:\n        /* \"#utility.yul\":19378:19379   */\n      0x00\n        /* \"#utility.yul\":19395:19415   */\n      tag_572\n        /* \"#utility.yul\":19413:19414   */\n      dup3\n        /* \"#utility.yul\":19395:19415   */\n      tag_340\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":19390:19415   */\n      swap2\n      pop\n        /* \"#utility.yul\":19429:19449   */\n      tag_573\n        /* \"#utility.yul\":19447:19448   */\n      dup4\n        /* \"#utility.yul\":19429:19449   */\n      tag_340\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19424:19449   */\n      swap3\n      pop\n        /* \"#utility.yul\":19468:19469   */\n      dup3\n        /* \"#utility.yul\":19458:19493   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":19473:19491   */\n      tag_575\n      tag_384\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":19458:19493   */\n    tag_574:\n        /* \"#utility.yul\":19515:19516   */\n      dup3\n        /* \"#utility.yul\":19512:19513   */\n      dup3\n        /* \"#utility.yul\":19508:19517   */\n      div\n        /* \"#utility.yul\":19503:19517   */\n      swap1\n      pop\n        /* \"#utility.yul\":19338:19523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19529:19708   */\n    tag_385:\n        /* \"#utility.yul\":19669:19700   */\n      0x536c6970706167652070726f74656374696f6e20747269676765726564000000\n        /* \"#utility.yul\":19665:19666   */\n      0x00\n        /* \"#utility.yul\":19657:19663   */\n      dup3\n        /* \"#utility.yul\":19653:19667   */\n      add\n        /* \"#utility.yul\":19646:19701   */\n      mstore\n        /* \"#utility.yul\":19529:19708   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19714:20080   */\n    tag_386:\n        /* \"#utility.yul\":19856:19859   */\n      0x00\n        /* \"#utility.yul\":19877:19944   */\n      tag_578\n        /* \"#utility.yul\":19941:19943   */\n      0x1d\n        /* \"#utility.yul\":19936:19939   */\n      dup4\n        /* \"#utility.yul\":19877:19944   */\n      tag_337\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":19870:19944   */\n      swap2\n      pop\n        /* \"#utility.yul\":19953:20046   */\n      tag_579\n        /* \"#utility.yul\":20042:20045   */\n      dup3\n        /* \"#utility.yul\":19953:20046   */\n      tag_385\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":20071:20073   */\n      0x20\n        /* \"#utility.yul\":20066:20069   */\n      dup3\n        /* \"#utility.yul\":20062:20074   */\n      add\n        /* \"#utility.yul\":20055:20074   */\n      swap1\n      pop\n        /* \"#utility.yul\":19714:20080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20086:20505   */\n    tag_219:\n        /* \"#utility.yul\":20252:20256   */\n      0x00\n        /* \"#utility.yul\":20290:20292   */\n      0x20\n        /* \"#utility.yul\":20279:20288   */\n      dup3\n        /* \"#utility.yul\":20275:20293   */\n      add\n        /* \"#utility.yul\":20267:20293   */\n      swap1\n      pop\n        /* \"#utility.yul\":20339:20348   */\n      dup2\n        /* \"#utility.yul\":20333:20337   */\n      dup2\n        /* \"#utility.yul\":20329:20349   */\n      sub\n        /* \"#utility.yul\":20325:20326   */\n      0x00\n        /* \"#utility.yul\":20314:20323   */\n      dup4\n        /* \"#utility.yul\":20310:20327   */\n      add\n        /* \"#utility.yul\":20303:20350   */\n      mstore\n        /* \"#utility.yul\":20367:20498   */\n      tag_581\n        /* \"#utility.yul\":20493:20497   */\n      dup2\n        /* \"#utility.yul\":20367:20498   */\n      tag_386\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":20359:20498   */\n      swap1\n      pop\n        /* \"#utility.yul\":20086:20505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20511:20735   */\n    tag_387:\n        /* \"#utility.yul\":20651:20685   */\n      0x507572636861736520657863656564732063757272656e742074696572277320\n        /* \"#utility.yul\":20647:20648   */\n      0x00\n        /* \"#utility.yul\":20639:20645   */\n      dup3\n        /* \"#utility.yul\":20635:20649   */\n      add\n        /* \"#utility.yul\":20628:20686   */\n      mstore\n        /* \"#utility.yul\":20720:20727   */\n      0x6c696d6974000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20715:20717   */\n      0x20\n        /* \"#utility.yul\":20707:20713   */\n      dup3\n        /* \"#utility.yul\":20703:20718   */\n      add\n        /* \"#utility.yul\":20696:20728   */\n      mstore\n        /* \"#utility.yul\":20511:20735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20741:21107   */\n    tag_388:\n        /* \"#utility.yul\":20883:20886   */\n      0x00\n        /* \"#utility.yul\":20904:20971   */\n      tag_584\n        /* \"#utility.yul\":20968:20970   */\n      0x25\n        /* \"#utility.yul\":20963:20966   */\n      dup4\n        /* \"#utility.yul\":20904:20971   */\n      tag_337\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":20897:20971   */\n      swap2\n      pop\n        /* \"#utility.yul\":20980:21073   */\n      tag_585\n        /* \"#utility.yul\":21069:21072   */\n      dup3\n        /* \"#utility.yul\":20980:21073   */\n      tag_387\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":21098:21100   */\n      0x40\n        /* \"#utility.yul\":21093:21096   */\n      dup3\n        /* \"#utility.yul\":21089:21101   */\n      add\n        /* \"#utility.yul\":21082:21101   */\n      swap1\n      pop\n        /* \"#utility.yul\":20741:21107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21113:21532   */\n    tag_223:\n        /* \"#utility.yul\":21279:21283   */\n      0x00\n        /* \"#utility.yul\":21317:21319   */\n      0x20\n        /* \"#utility.yul\":21306:21315   */\n      dup3\n        /* \"#utility.yul\":21302:21320   */\n      add\n        /* \"#utility.yul\":21294:21320   */\n      swap1\n      pop\n        /* \"#utility.yul\":21366:21375   */\n      dup2\n        /* \"#utility.yul\":21360:21364   */\n      dup2\n        /* \"#utility.yul\":21356:21376   */\n      sub\n        /* \"#utility.yul\":21352:21353   */\n      0x00\n        /* \"#utility.yul\":21341:21350   */\n      dup4\n        /* \"#utility.yul\":21337:21354   */\n      add\n        /* \"#utility.yul\":21330:21377   */\n      mstore\n        /* \"#utility.yul\":21394:21525   */\n      tag_587\n        /* \"#utility.yul\":21520:21524   */\n      dup2\n        /* \"#utility.yul\":21394:21525   */\n      tag_388\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":21386:21525   */\n      swap1\n      pop\n        /* \"#utility.yul\":21113:21532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21538:21681   */\n    tag_389:\n        /* \"#utility.yul\":21595:21600   */\n      0x00\n        /* \"#utility.yul\":21626:21632   */\n      dup2\n        /* \"#utility.yul\":21620:21633   */\n      mload\n        /* \"#utility.yul\":21611:21633   */\n      swap1\n      pop\n        /* \"#utility.yul\":21642:21675   */\n      tag_589\n        /* \"#utility.yul\":21669:21674   */\n      dup2\n        /* \"#utility.yul\":21642:21675   */\n      tag_349\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":21538:21681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21687:22038   */\n    tag_228:\n        /* \"#utility.yul\":21757:21763   */\n      0x00\n        /* \"#utility.yul\":21806:21808   */\n      0x20\n        /* \"#utility.yul\":21794:21803   */\n      dup3\n        /* \"#utility.yul\":21785:21792   */\n      dup5\n        /* \"#utility.yul\":21781:21804   */\n      sub\n        /* \"#utility.yul\":21777:21809   */\n      slt\n        /* \"#utility.yul\":21774:21893   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":21812:21891   */\n      tag_592\n      tag_343\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":21774:21893   */\n    tag_591:\n        /* \"#utility.yul\":21932:21933   */\n      0x00\n        /* \"#utility.yul\":21957:22021   */\n      tag_593\n        /* \"#utility.yul\":22013:22020   */\n      dup5\n        /* \"#utility.yul\":22004:22010   */\n      dup3\n        /* \"#utility.yul\":21993:22002   */\n      dup6\n        /* \"#utility.yul\":21989:22011   */\n      add\n        /* \"#utility.yul\":21957:22021   */\n      tag_389\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":21947:22021   */\n      swap2\n      pop\n        /* \"#utility.yul\":21903:22031   */\n      pop\n        /* \"#utility.yul\":21687:22038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22044:22223   */\n    tag_390:\n        /* \"#utility.yul\":22184:22215   */\n      0x4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374000000\n        /* \"#utility.yul\":22180:22181   */\n      0x00\n        /* \"#utility.yul\":22172:22178   */\n      dup3\n        /* \"#utility.yul\":22168:22182   */\n      add\n        /* \"#utility.yul\":22161:22216   */\n      mstore\n        /* \"#utility.yul\":22044:22223   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22229:22595   */\n    tag_391:\n        /* \"#utility.yul\":22371:22374   */\n      0x00\n        /* \"#utility.yul\":22392:22459   */\n      tag_596\n        /* \"#utility.yul\":22456:22458   */\n      0x1d\n        /* \"#utility.yul\":22451:22454   */\n      dup4\n        /* \"#utility.yul\":22392:22459   */\n      tag_337\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":22385:22459   */\n      swap2\n      pop\n        /* \"#utility.yul\":22468:22561   */\n      tag_597\n        /* \"#utility.yul\":22557:22560   */\n      dup3\n        /* \"#utility.yul\":22468:22561   */\n      tag_390\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":22586:22588   */\n      0x20\n        /* \"#utility.yul\":22581:22584   */\n      dup3\n        /* \"#utility.yul\":22577:22589   */\n      add\n        /* \"#utility.yul\":22570:22589   */\n      swap1\n      pop\n        /* \"#utility.yul\":22229:22595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22601:23020   */\n    tag_231:\n        /* \"#utility.yul\":22767:22771   */\n      0x00\n        /* \"#utility.yul\":22805:22807   */\n      0x20\n        /* \"#utility.yul\":22794:22803   */\n      dup3\n        /* \"#utility.yul\":22790:22808   */\n      add\n        /* \"#utility.yul\":22782:22808   */\n      swap1\n      pop\n        /* \"#utility.yul\":22854:22863   */\n      dup2\n        /* \"#utility.yul\":22848:22852   */\n      dup2\n        /* \"#utility.yul\":22844:22864   */\n      sub\n        /* \"#utility.yul\":22840:22841   */\n      0x00\n        /* \"#utility.yul\":22829:22838   */\n      dup4\n        /* \"#utility.yul\":22825:22842   */\n      add\n        /* \"#utility.yul\":22818:22865   */\n      mstore\n        /* \"#utility.yul\":22882:23013   */\n      tag_599\n        /* \"#utility.yul\":23008:23012   */\n      dup2\n        /* \"#utility.yul\":22882:23013   */\n      tag_391\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":22874:23013   */\n      swap1\n      pop\n        /* \"#utility.yul\":22601:23020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23026:23195   */\n    tag_392:\n        /* \"#utility.yul\":23166:23187   */\n      0x5469657220646f6573206e6f7420657869737400000000000000000000000000\n        /* \"#utility.yul\":23162:23163   */\n      0x00\n        /* \"#utility.yul\":23154:23160   */\n      dup3\n        /* \"#utility.yul\":23150:23164   */\n      add\n        /* \"#utility.yul\":23143:23188   */\n      mstore\n        /* \"#utility.yul\":23026:23195   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23201:23567   */\n    tag_393:\n        /* \"#utility.yul\":23343:23346   */\n      0x00\n        /* \"#utility.yul\":23364:23431   */\n      tag_602\n        /* \"#utility.yul\":23428:23430   */\n      0x13\n        /* \"#utility.yul\":23423:23426   */\n      dup4\n        /* \"#utility.yul\":23364:23431   */\n      tag_337\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":23357:23431   */\n      swap2\n      pop\n        /* \"#utility.yul\":23440:23533   */\n      tag_603\n        /* \"#utility.yul\":23529:23532   */\n      dup3\n        /* \"#utility.yul\":23440:23533   */\n      tag_392\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":23558:23560   */\n      0x20\n        /* \"#utility.yul\":23553:23556   */\n      dup3\n        /* \"#utility.yul\":23549:23561   */\n      add\n        /* \"#utility.yul\":23542:23561   */\n      swap1\n      pop\n        /* \"#utility.yul\":23201:23567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23573:23992   */\n    tag_247:\n        /* \"#utility.yul\":23739:23743   */\n      0x00\n        /* \"#utility.yul\":23777:23779   */\n      0x20\n        /* \"#utility.yul\":23766:23775   */\n      dup3\n        /* \"#utility.yul\":23762:23780   */\n      add\n        /* \"#utility.yul\":23754:23780   */\n      swap1\n      pop\n        /* \"#utility.yul\":23826:23835   */\n      dup2\n        /* \"#utility.yul\":23820:23824   */\n      dup2\n        /* \"#utility.yul\":23816:23836   */\n      sub\n        /* \"#utility.yul\":23812:23813   */\n      0x00\n        /* \"#utility.yul\":23801:23810   */\n      dup4\n        /* \"#utility.yul\":23797:23814   */\n      add\n        /* \"#utility.yul\":23790:23837   */\n      mstore\n        /* \"#utility.yul\":23854:23985   */\n      tag_605\n        /* \"#utility.yul\":23980:23984   */\n      dup2\n        /* \"#utility.yul\":23854:23985   */\n      tag_393\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":23846:23985   */\n      swap1\n      pop\n        /* \"#utility.yul\":23573:23992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23998:24179   */\n    tag_394:\n        /* \"#utility.yul\":24138:24171   */\n      0x4e6f2072656d61696e696e6720746f6b656e7320746f20776974686472617700\n        /* \"#utility.yul\":24134:24135   */\n      0x00\n        /* \"#utility.yul\":24126:24132   */\n      dup3\n        /* \"#utility.yul\":24122:24136   */\n      add\n        /* \"#utility.yul\":24115:24172   */\n      mstore\n        /* \"#utility.yul\":23998:24179   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24185:24551   */\n    tag_395:\n        /* \"#utility.yul\":24327:24330   */\n      0x00\n        /* \"#utility.yul\":24348:24415   */\n      tag_608\n        /* \"#utility.yul\":24412:24414   */\n      0x1f\n        /* \"#utility.yul\":24407:24410   */\n      dup4\n        /* \"#utility.yul\":24348:24415   */\n      tag_337\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":24341:24415   */\n      swap2\n      pop\n        /* \"#utility.yul\":24424:24517   */\n      tag_609\n        /* \"#utility.yul\":24513:24516   */\n      dup3\n        /* \"#utility.yul\":24424:24517   */\n      tag_394\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":24542:24544   */\n      0x20\n        /* \"#utility.yul\":24537:24540   */\n      dup3\n        /* \"#utility.yul\":24533:24545   */\n      add\n        /* \"#utility.yul\":24526:24545   */\n      swap1\n      pop\n        /* \"#utility.yul\":24185:24551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24557:24976   */\n    tag_268:\n        /* \"#utility.yul\":24723:24727   */\n      0x00\n        /* \"#utility.yul\":24761:24763   */\n      0x20\n        /* \"#utility.yul\":24750:24759   */\n      dup3\n        /* \"#utility.yul\":24746:24764   */\n      add\n        /* \"#utility.yul\":24738:24764   */\n      swap1\n      pop\n        /* \"#utility.yul\":24810:24819   */\n      dup2\n        /* \"#utility.yul\":24804:24808   */\n      dup2\n        /* \"#utility.yul\":24800:24820   */\n      sub\n        /* \"#utility.yul\":24796:24797   */\n      0x00\n        /* \"#utility.yul\":24785:24794   */\n      dup4\n        /* \"#utility.yul\":24781:24798   */\n      add\n        /* \"#utility.yul\":24774:24821   */\n      mstore\n        /* \"#utility.yul\":24838:24969   */\n      tag_611\n        /* \"#utility.yul\":24964:24968   */\n      dup2\n        /* \"#utility.yul\":24838:24969   */\n      tag_395\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":24830:24969   */\n      swap1\n      pop\n        /* \"#utility.yul\":24557:24976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24982:25210   */\n    tag_396:\n        /* \"#utility.yul\":25122:25156   */\n      0x50726573616c65206d7573742062652073746f7070656420746f207769746864\n        /* \"#utility.yul\":25118:25119   */\n      0x00\n        /* \"#utility.yul\":25110:25116   */\n      dup3\n        /* \"#utility.yul\":25106:25120   */\n      add\n        /* \"#utility.yul\":25099:25157   */\n      mstore\n        /* \"#utility.yul\":25191:25202   */\n      0x7261772066756e64730000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25186:25188   */\n      0x20\n        /* \"#utility.yul\":25178:25184   */\n      dup3\n        /* \"#utility.yul\":25174:25189   */\n      add\n        /* \"#utility.yul\":25167:25203   */\n      mstore\n        /* \"#utility.yul\":24982:25210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25216:25582   */\n    tag_397:\n        /* \"#utility.yul\":25358:25361   */\n      0x00\n        /* \"#utility.yul\":25379:25446   */\n      tag_614\n        /* \"#utility.yul\":25443:25445   */\n      0x29\n        /* \"#utility.yul\":25438:25441   */\n      dup4\n        /* \"#utility.yul\":25379:25446   */\n      tag_337\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":25372:25446   */\n      swap2\n      pop\n        /* \"#utility.yul\":25455:25548   */\n      tag_615\n        /* \"#utility.yul\":25544:25547   */\n      dup3\n        /* \"#utility.yul\":25455:25548   */\n      tag_396\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":25573:25575   */\n      0x40\n        /* \"#utility.yul\":25568:25571   */\n      dup3\n        /* \"#utility.yul\":25564:25576   */\n      add\n        /* \"#utility.yul\":25557:25576   */\n      swap1\n      pop\n        /* \"#utility.yul\":25216:25582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25588:26007   */\n    tag_284:\n        /* \"#utility.yul\":25754:25758   */\n      0x00\n        /* \"#utility.yul\":25792:25794   */\n      0x20\n        /* \"#utility.yul\":25781:25790   */\n      dup3\n        /* \"#utility.yul\":25777:25795   */\n      add\n        /* \"#utility.yul\":25769:25795   */\n      swap1\n      pop\n        /* \"#utility.yul\":25841:25850   */\n      dup2\n        /* \"#utility.yul\":25835:25839   */\n      dup2\n        /* \"#utility.yul\":25831:25851   */\n      sub\n        /* \"#utility.yul\":25827:25828   */\n      0x00\n        /* \"#utility.yul\":25816:25825   */\n      dup4\n        /* \"#utility.yul\":25812:25829   */\n      add\n        /* \"#utility.yul\":25805:25852   */\n      mstore\n        /* \"#utility.yul\":25869:26000   */\n      tag_617\n        /* \"#utility.yul\":25995:25999   */\n      dup2\n        /* \"#utility.yul\":25869:26000   */\n      tag_397\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":25861:26000   */\n      swap1\n      pop\n        /* \"#utility.yul\":25588:26007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26013:26183   */\n    tag_398:\n        /* \"#utility.yul\":26153:26175   */\n      0x4e6f204d4154494320746f207769746864726177000000000000000000000000\n        /* \"#utility.yul\":26149:26150   */\n      0x00\n        /* \"#utility.yul\":26141:26147   */\n      dup3\n        /* \"#utility.yul\":26137:26151   */\n      add\n        /* \"#utility.yul\":26130:26176   */\n      mstore\n        /* \"#utility.yul\":26013:26183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26189:26555   */\n    tag_399:\n        /* \"#utility.yul\":26331:26334   */\n      0x00\n        /* \"#utility.yul\":26352:26419   */\n      tag_620\n        /* \"#utility.yul\":26416:26418   */\n      0x14\n        /* \"#utility.yul\":26411:26414   */\n      dup4\n        /* \"#utility.yul\":26352:26419   */\n      tag_337\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":26345:26419   */\n      swap2\n      pop\n        /* \"#utility.yul\":26428:26521   */\n      tag_621\n        /* \"#utility.yul\":26517:26520   */\n      dup3\n        /* \"#utility.yul\":26428:26521   */\n      tag_398\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":26546:26548   */\n      0x20\n        /* \"#utility.yul\":26541:26544   */\n      dup3\n        /* \"#utility.yul\":26537:26549   */\n      add\n        /* \"#utility.yul\":26530:26549   */\n      swap1\n      pop\n        /* \"#utility.yul\":26189:26555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26561:26980   */\n    tag_287:\n        /* \"#utility.yul\":26727:26731   */\n      0x00\n        /* \"#utility.yul\":26765:26767   */\n      0x20\n        /* \"#utility.yul\":26754:26763   */\n      dup3\n        /* \"#utility.yul\":26750:26768   */\n      add\n        /* \"#utility.yul\":26742:26768   */\n      swap1\n      pop\n        /* \"#utility.yul\":26814:26823   */\n      dup2\n        /* \"#utility.yul\":26808:26812   */\n      dup2\n        /* \"#utility.yul\":26804:26824   */\n      sub\n        /* \"#utility.yul\":26800:26801   */\n      0x00\n        /* \"#utility.yul\":26789:26798   */\n      dup4\n        /* \"#utility.yul\":26785:26802   */\n      add\n        /* \"#utility.yul\":26778:26825   */\n      mstore\n        /* \"#utility.yul\":26842:26973   */\n      tag_623\n        /* \"#utility.yul\":26968:26972   */\n      dup2\n        /* \"#utility.yul\":26842:26973   */\n      tag_399\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":26834:26973   */\n      swap1\n      pop\n        /* \"#utility.yul\":26561:26980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26986:27133   */\n    tag_400:\n        /* \"#utility.yul\":27087:27098   */\n      0x00\n        /* \"#utility.yul\":27124:27127   */\n      dup2\n        /* \"#utility.yul\":27109:27127   */\n      swap1\n      pop\n        /* \"#utility.yul\":26986:27133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27139:27253   */\n    tag_401:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27259:27657   */\n    tag_402:\n        /* \"#utility.yul\":27418:27421   */\n      0x00\n        /* \"#utility.yul\":27439:27522   */\n      tag_627\n        /* \"#utility.yul\":27520:27521   */\n      0x00\n        /* \"#utility.yul\":27515:27518   */\n      dup4\n        /* \"#utility.yul\":27439:27522   */\n      tag_400\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":27432:27522   */\n      swap2\n      pop\n        /* \"#utility.yul\":27531:27624   */\n      tag_628\n        /* \"#utility.yul\":27620:27623   */\n      dup3\n        /* \"#utility.yul\":27531:27624   */\n      tag_401\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":27649:27650   */\n      0x00\n        /* \"#utility.yul\":27644:27647   */\n      dup3\n        /* \"#utility.yul\":27640:27651   */\n      add\n        /* \"#utility.yul\":27633:27651   */\n      swap1\n      pop\n        /* \"#utility.yul\":27259:27657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27663:28042   */\n    tag_290:\n        /* \"#utility.yul\":27847:27850   */\n      0x00\n        /* \"#utility.yul\":27869:28016   */\n      tag_630\n        /* \"#utility.yul\":28012:28015   */\n      dup3\n        /* \"#utility.yul\":27869:28016   */\n      tag_402\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":27862:28016   */\n      swap2\n      pop\n        /* \"#utility.yul\":28033:28036   */\n      dup2\n        /* \"#utility.yul\":28026:28036   */\n      swap1\n      pop\n        /* \"#utility.yul\":27663:28042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28048:28222   */\n    tag_403:\n        /* \"#utility.yul\":28188:28214   */\n      0x4661696c656420746f207769746864726177204d415449430000000000000000\n        /* \"#utility.yul\":28184:28185   */\n      0x00\n        /* \"#utility.yul\":28176:28182   */\n      dup3\n        /* \"#utility.yul\":28172:28186   */\n      add\n        /* \"#utility.yul\":28165:28215   */\n      mstore\n        /* \"#utility.yul\":28048:28222   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28228:28594   */\n    tag_404:\n        /* \"#utility.yul\":28370:28373   */\n      0x00\n        /* \"#utility.yul\":28391:28458   */\n      tag_633\n        /* \"#utility.yul\":28455:28457   */\n      0x18\n        /* \"#utility.yul\":28450:28453   */\n      dup4\n        /* \"#utility.yul\":28391:28458   */\n      tag_337\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":28384:28458   */\n      swap2\n      pop\n        /* \"#utility.yul\":28467:28560   */\n      tag_634\n        /* \"#utility.yul\":28556:28559   */\n      dup3\n        /* \"#utility.yul\":28467:28560   */\n      tag_403\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":28585:28587   */\n      0x20\n        /* \"#utility.yul\":28580:28583   */\n      dup3\n        /* \"#utility.yul\":28576:28588   */\n      add\n        /* \"#utility.yul\":28569:28588   */\n      swap1\n      pop\n        /* \"#utility.yul\":28228:28594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28600:29019   */\n    tag_296:\n        /* \"#utility.yul\":28766:28770   */\n      0x00\n        /* \"#utility.yul\":28804:28806   */\n      0x20\n        /* \"#utility.yul\":28793:28802   */\n      dup3\n        /* \"#utility.yul\":28789:28807   */\n      add\n        /* \"#utility.yul\":28781:28807   */\n      swap1\n      pop\n        /* \"#utility.yul\":28853:28862   */\n      dup2\n        /* \"#utility.yul\":28847:28851   */\n      dup2\n        /* \"#utility.yul\":28843:28863   */\n      sub\n        /* \"#utility.yul\":28839:28840   */\n      0x00\n        /* \"#utility.yul\":28828:28837   */\n      dup4\n        /* \"#utility.yul\":28824:28841   */\n      add\n        /* \"#utility.yul\":28817:28864   */\n      mstore\n        /* \"#utility.yul\":28881:29012   */\n      tag_636\n        /* \"#utility.yul\":29007:29011   */\n      dup2\n        /* \"#utility.yul\":28881:29012   */\n      tag_404\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":28873:29012   */\n      swap1\n      pop\n        /* \"#utility.yul\":28600:29019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29025:29206   */\n    tag_405:\n        /* \"#utility.yul\":29165:29198   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":29161:29162   */\n      0x00\n        /* \"#utility.yul\":29153:29159   */\n      dup3\n        /* \"#utility.yul\":29149:29163   */\n      add\n        /* \"#utility.yul\":29142:29199   */\n      mstore\n        /* \"#utility.yul\":29025:29206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29212:29578   */\n    tag_406:\n        /* \"#utility.yul\":29354:29357   */\n      0x00\n        /* \"#utility.yul\":29375:29442   */\n      tag_639\n        /* \"#utility.yul\":29439:29441   */\n      0x1f\n        /* \"#utility.yul\":29434:29437   */\n      dup4\n        /* \"#utility.yul\":29375:29442   */\n      tag_337\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":29368:29442   */\n      swap2\n      pop\n        /* \"#utility.yul\":29451:29544   */\n      tag_640\n        /* \"#utility.yul\":29540:29543   */\n      dup3\n        /* \"#utility.yul\":29451:29544   */\n      tag_405\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":29569:29571   */\n      0x20\n        /* \"#utility.yul\":29564:29567   */\n      dup3\n        /* \"#utility.yul\":29560:29572   */\n      add\n        /* \"#utility.yul\":29553:29572   */\n      swap1\n      pop\n        /* \"#utility.yul\":29212:29578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29584:30003   */\n    tag_318:\n        /* \"#utility.yul\":29750:29754   */\n      0x00\n        /* \"#utility.yul\":29788:29790   */\n      0x20\n        /* \"#utility.yul\":29777:29786   */\n      dup3\n        /* \"#utility.yul\":29773:29791   */\n      add\n        /* \"#utility.yul\":29765:29791   */\n      swap1\n      pop\n        /* \"#utility.yul\":29837:29846   */\n      dup2\n        /* \"#utility.yul\":29831:29835   */\n      dup2\n        /* \"#utility.yul\":29827:29847   */\n      sub\n        /* \"#utility.yul\":29823:29824   */\n      0x00\n        /* \"#utility.yul\":29812:29821   */\n      dup4\n        /* \"#utility.yul\":29808:29825   */\n      add\n        /* \"#utility.yul\":29801:29848   */\n      mstore\n        /* \"#utility.yul\":29865:29996   */\n      tag_642\n        /* \"#utility.yul\":29991:29995   */\n      dup2\n        /* \"#utility.yul\":29865:29996   */\n      tag_406\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":29857:29996   */\n      swap1\n      pop\n        /* \"#utility.yul\":29584:30003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30009:30341   */\n    tag_322:\n        /* \"#utility.yul\":30130:30134   */\n      0x00\n        /* \"#utility.yul\":30168:30170   */\n      0x40\n        /* \"#utility.yul\":30157:30166   */\n      dup3\n        /* \"#utility.yul\":30153:30171   */\n      add\n        /* \"#utility.yul\":30145:30171   */\n      swap1\n      pop\n        /* \"#utility.yul\":30181:30252   */\n      tag_644\n        /* \"#utility.yul\":30249:30250   */\n      0x00\n        /* \"#utility.yul\":30238:30247   */\n      dup4\n        /* \"#utility.yul\":30234:30251   */\n      add\n        /* \"#utility.yul\":30225:30231   */\n      dup6\n        /* \"#utility.yul\":30181:30252   */\n      tag_355\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":30262:30334   */\n      tag_645\n        /* \"#utility.yul\":30330:30332   */\n      0x20\n        /* \"#utility.yul\":30319:30328   */\n      dup4\n        /* \"#utility.yul\":30315:30333   */\n      add\n        /* \"#utility.yul\":30306:30312   */\n      dup5\n        /* \"#utility.yul\":30262:30334   */\n      tag_341\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":30009:30341   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30347:30789   */\n    tag_329:\n        /* \"#utility.yul\":30496:30500   */\n      0x00\n        /* \"#utility.yul\":30534:30536   */\n      0x60\n        /* \"#utility.yul\":30523:30532   */\n      dup3\n        /* \"#utility.yul\":30519:30537   */\n      add\n        /* \"#utility.yul\":30511:30537   */\n      swap1\n      pop\n        /* \"#utility.yul\":30547:30618   */\n      tag_647\n        /* \"#utility.yul\":30615:30616   */\n      0x00\n        /* \"#utility.yul\":30604:30613   */\n      dup4\n        /* \"#utility.yul\":30600:30617   */\n      add\n        /* \"#utility.yul\":30591:30597   */\n      dup7\n        /* \"#utility.yul\":30547:30618   */\n      tag_355\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":30628:30700   */\n      tag_648\n        /* \"#utility.yul\":30696:30698   */\n      0x20\n        /* \"#utility.yul\":30685:30694   */\n      dup4\n        /* \"#utility.yul\":30681:30699   */\n      add\n        /* \"#utility.yul\":30672:30678   */\n      dup6\n        /* \"#utility.yul\":30628:30700   */\n      tag_355\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":30710:30782   */\n      tag_649\n        /* \"#utility.yul\":30778:30780   */\n      0x40\n        /* \"#utility.yul\":30767:30776   */\n      dup4\n        /* \"#utility.yul\":30763:30781   */\n      add\n        /* \"#utility.yul\":30754:30760   */\n      dup5\n        /* \"#utility.yul\":30710:30782   */\n      tag_341\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":30347:30789   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bac1b2d9f360a9418279c507b7a3ac0a4231afde6d1bc86c7cd0e906235e5e3964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_999": {
									"entryPoint": null,
									"id": 999,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 419,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2700:10",
										"nodeType": "YulBlock",
										"src": "0:2700:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "922:274:10",
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:10",
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nativeSrc": "970:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nativeSrc": "970:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:10",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:32:10",
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nativeSrc": "932:119:10",
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nativeSrc": "1061:128:10",
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nativeSrc": "1076:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nativeSrc": "1147:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nativeSrc": "1115:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:10",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:10",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											},
											{
												"body": {
													"nativeSrc": "1267:53:10",
													"nodeType": "YulBlock",
													"src": "1267:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:10"
																		},
																		"nativeSrc": "1289:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:10"
																},
																"nativeSrc": "1277:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:10"
															},
															"nativeSrc": "1277:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:10",
														"nodeType": "YulTypedName",
														"src": "1255:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:10",
														"nodeType": "YulTypedName",
														"src": "1262:3:10",
														"type": ""
													}
												],
												"src": "1202:118:10"
											},
											{
												"body": {
													"nativeSrc": "1424:124:10",
													"nodeType": "YulBlock",
													"src": "1424:124:10",
													"statements": [
														{
															"nativeSrc": "1434:26:10",
															"nodeType": "YulAssignment",
															"src": "1434:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:10"
																},
																"nativeSrc": "1442:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:10"
																		},
																		"nativeSrc": "1523:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:10"
																},
																"nativeSrc": "1470:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:10"
															},
															"nativeSrc": "1470:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:10",
														"nodeType": "YulTypedName",
														"src": "1396:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:10",
														"nodeType": "YulTypedName",
														"src": "1408:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:10",
														"nodeType": "YulTypedName",
														"src": "1419:4:10",
														"type": ""
													}
												],
												"src": "1326:222:10"
											},
											{
												"body": {
													"nativeSrc": "1650:73:10",
													"nodeType": "YulBlock",
													"src": "1650:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1672:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1660:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:10"
																},
																"nativeSrc": "1660:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1660:19:10"
															},
															"nativeSrc": "1660:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1660:19:10"
														},
														{
															"nativeSrc": "1688:29:10",
															"nodeType": "YulAssignment",
															"src": "1688:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1707:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1703:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:10"
																},
																"nativeSrc": "1703:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1703:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1688:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1688:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1554:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1622:3:10",
														"nodeType": "YulTypedName",
														"src": "1622:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1627:6:10",
														"nodeType": "YulTypedName",
														"src": "1627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1638:11:10",
														"nodeType": "YulTypedName",
														"src": "1638:11:10",
														"type": ""
													}
												],
												"src": "1554:169:10"
											},
											{
												"body": {
													"nativeSrc": "1835:65:10",
													"nodeType": "YulBlock",
													"src": "1835:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1857:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1865:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:10"
																		},
																		"nativeSrc": "1853:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1869:23:10",
																		"nodeType": "YulLiteral",
																		"src": "1869:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:10"
																},
																"nativeSrc": "1846:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1846:47:10"
															},
															"nativeSrc": "1846:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1846:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "1729:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1827:6:10",
														"nodeType": "YulTypedName",
														"src": "1827:6:10",
														"type": ""
													}
												],
												"src": "1729:171:10"
											},
											{
												"body": {
													"nativeSrc": "2052:220:10",
													"nodeType": "YulBlock",
													"src": "2052:220:10",
													"statements": [
														{
															"nativeSrc": "2062:74:10",
															"nodeType": "YulAssignment",
															"src": "2062:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2128:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2128:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2069:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2069:58:10"
																},
																"nativeSrc": "2069:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2069:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2062:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2234:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2234:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "2145:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2145:88:10"
																},
																"nativeSrc": "2145:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2145:93:10"
															},
															"nativeSrc": "2145:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2145:93:10"
														},
														{
															"nativeSrc": "2247:19:10",
															"nodeType": "YulAssignment",
															"src": "2247:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2258:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2258:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2263:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2263:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:10"
																},
																"nativeSrc": "2254:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2254:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2247:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1906:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2040:3:10",
														"nodeType": "YulTypedName",
														"src": "2040:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2048:3:10",
														"nodeType": "YulTypedName",
														"src": "2048:3:10",
														"type": ""
													}
												],
												"src": "1906:366:10"
											},
											{
												"body": {
													"nativeSrc": "2449:248:10",
													"nodeType": "YulBlock",
													"src": "2449:248:10",
													"statements": [
														{
															"nativeSrc": "2459:26:10",
															"nodeType": "YulAssignment",
															"src": "2459:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2482:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:10"
																},
																"nativeSrc": "2467:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2459:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2506:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2517:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2517:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2502:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:10"
																		},
																		"nativeSrc": "2502:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2502:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2525:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2525:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2531:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2521:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:10"
																		},
																		"nativeSrc": "2521:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2521:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:10"
																},
																"nativeSrc": "2495:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2495:47:10"
															},
															"nativeSrc": "2495:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2495:47:10"
														},
														{
															"nativeSrc": "2551:139:10",
															"nodeType": "YulAssignment",
															"src": "2551:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2685:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2685:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2559:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2559:124:10"
																},
																"nativeSrc": "2559:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2559:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2551:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2551:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2278:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2429:9:10",
														"nodeType": "YulTypedName",
														"src": "2429:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2444:4:10",
														"nodeType": "YulTypedName",
														"src": "2444:4:10",
														"type": ""
													}
												],
												"src": "2278:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051612aab380380612aab833981810160405281019061003191906102c2565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102fc565b60405180910390fd5b6100b1816101a360201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e9061036f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061038d565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029182610268565b9050919050565b6102a181610287565b81146102ab575f5ffd5b50565b5f815190506102bc81610298565b92915050565b5f602082840312156102d7576102d6610264565b5b5f6102e4848285016102ae565b91505092915050565b6102f681610287565b82525050565b5f60208201905061030f5f8301846102ed565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f610359601583610315565b915061036482610325565b602082019050919050565b5f6020820190508181035f8301526103868161034d565b9050919050565b6080516127066103a55f395f61113801526127065ff3fe608060405260043610610184575f3560e01c80638afbf669116100d0578063c8b0812511610089578063d679677a11610063578063d679677a1461050e578063e7829cad14610538578063eb91d37e14610574578063f2fde38b1461059e576101c4565b8063c8b08125146104a4578063c9881d86146104ce578063d2e8ecae146104e4576101c4565b80638afbf669146103aa5780638da5cb5b146103c05780639d76ea58146103ea578063a8c038c714610414578063b8fcf93714610450578063c43a01351461047a576101c4565b8063300eccab1161013d57806353135ca01161011757806353135ca01461031857806363b2011714610342578063715018a61461036c5780638a0a80af14610382576101c4565b8063300eccab146102985780633610724e146102d45780635276837c146102f0576101c4565b806304c98b2b146101c8578063125b8b78146101de5780631ad2ad1a146102085780631b8ebc3c1461021e57806322c6baf614610246578063273f897414610270576101c4565b366101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90611856565b60405180910390fd5b5f5ffd5b3480156101d3575f5ffd5b506101dc6105c6565b005b3480156101e9575f5ffd5b506101f26106b9565b6040516101ff919061188c565b60405180910390f35b348015610213575f5ffd5b5061021c6106bf565b005b348015610229575f5ffd5b50610244600480360381019061023f919061190e565b61075c565b005b348015610251575f5ffd5b5061025a610912565b604051610267919061188c565b60405180910390f35b34801561027b575f5ffd5b50610296600480360381019061029191906119b6565b610918565b005b3480156102a3575f5ffd5b506102be60048036038101906102b991906119f4565b6109f0565b6040516102cb919061188c565b60405180910390f35b6102ee60048036038101906102e991906119f4565b610a05565b005b3480156102fb575f5ffd5b50610316600480360381019061031191906119f4565b610e47565b005b348015610323575f5ffd5b5061032c610eac565b6040516103399190611a39565b60405180910390f35b34801561034d575f5ffd5b50610356610ebe565b604051610363919061188c565b60405180910390f35b348015610377575f5ffd5b50610380610ec4565b005b34801561038d575f5ffd5b506103a860048036038101906103a391906119f4565b610ed7565b005b3480156103b5575f5ffd5b506103be610f7e565b005b3480156103cb575f5ffd5b506103d461110f565b6040516103e19190611a91565b60405180910390f35b3480156103f5575f5ffd5b506103fe611136565b60405161040b9190611a91565b60405180910390f35b34801561041f575f5ffd5b5061043a600480360381019061043591906119f4565b61115a565b604051610447919061188c565b60405180910390f35b34801561045b575f5ffd5b5061046461116f565b6040516104719190611b05565b60405180910390f35b348015610485575f5ffd5b5061048e611194565b60405161049b919061188c565b60405180910390f35b3480156104af575f5ffd5b506104b861119a565b6040516104c5919061188c565b60405180910390f35b3480156104d9575f5ffd5b506104e2611239565b005b3480156104ef575f5ffd5b506104f86113dd565b604051610505919061188c565b60405180910390f35b348015610519575f5ffd5b506105226113e6565b60405161052f919061188c565b60405180910390f35b348015610543575f5ffd5b5061055e600480360381019061055991906119f4565b6113ec565b60405161056b919061188c565b60405180910390f35b34801561057f575f5ffd5b50610588611401565b604051610595919061188c565b60405180910390f35b3480156105a9575f5ffd5b506105c460048036038101906105bf9190611b48565b611435565b005b6105ce6114b9565b60095f9054906101000a900460ff161561061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061490611bbd565b60405180910390fd5b5f60035f600181526020019081526020015f205411610671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066890611c4b565b60405180910390fd5b600160095f6101000a81548160ff0219169083151502179055507f17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c60405160405180910390a1565b60085481565b6106c76114b9565b60095f9054906101000a900460ff16610715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070c90611cb3565b60405180910390fd5b5f60095f6101000a81548160ff0219169083151502179055507fe60f0ccd81d0545e17cd40eaaf8b7c5d36e3a26372928be6a27d2f73f67d759360405160405180910390a1565b6107646114b9565b8181905084849050146107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390611d1b565b60405180910390fd5b5f84849050116107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e890611d83565b60405180910390fd5b5f600190505b5f60035f8381526020019081526020015f2054111561084b5760035f8281526020019081526020015f205f905560045f8281526020019081526020015f205f9055808061084390611dce565b9150506107f7565b5f5f90505b858590508110156108de5785858281811061086e5761086d611e15565b5b9050602002013560035f6001846108859190611e42565b81526020019081526020015f20819055508383828181106108a9576108a8611e15565b5b9050602002013560045f6001846108c09190611e42565b81526020019081526020015f20819055508080600101915050610850565b507f37740b69a1cce7c6b884ff59b1465c52017ffcb23b6e46249f50f3375b71eada60405160405180910390a15050505050565b600a5481565b6109206114b9565b5f8211610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611ee5565b60405180910390fd5b818110156109a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099c90611f73565b60405180910390fd5b81600a8190555080600b819055507f7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b82826040516109e4929190611f91565b60405180910390a15050565b6003602052805f5260405f205f915090505481565b610a0d611540565b60095f9054906101000a900460ff16610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290611cb3565b60405180910390fd5b5f60035f60065481526020019081526020015f205411610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790612028565b60405180910390fd5b600a54341015610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec906120b6565b60405180910390fd5b600b54341115610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190612144565b60405180910390fd5b5f60035f60065481526020019081526020015f2054670de0b6b3a764000034610b639190612162565b610b6d91906121d0565b905081811015610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba99061224a565b60405180910390fd5b60045f60065481526020019081526020015f20548160055f60065481526020019081526020015f2054610be59190611e42565b1115610c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1d906122d8565b60405180910390fd5b8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c819190611a91565b602060405180830381865afa158015610c9c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc0919061230a565b1015610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf89061237f565b60405180910390fd5b8060075f828254610d129190611e42565b925050819055503460085f828254610d2a9190611e42565b925050819055508060055f60065481526020019081526020015f205f828254610d539190611e42565b9250508190555060045f60065481526020019081526020015f205460055f60065481526020019081526020015f205410610d9f5760065f815480929190610d9990611dce565b91905055505b610deb338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661158f9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f333483604051610e33929190611f91565b60405180910390a250610e4461160e565b50565b610e4f6114b9565b5f60035f8381526020019081526020015f205411610ea2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e99906123e7565b60405180910390fd5b8060068190555050565b60095f9054906101000a900460ff1681565b60075481565b610ecc6114b9565b610ed55f611617565b565b610edf6114b9565b610f2d33308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116d8909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e82604051610f73919061188c565b60405180910390a250565b610f866114b9565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fe19190611a91565b602060405180830381865afa158015610ffc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611020919061230a565b90505f8111611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b9061244f565b60405180910390fd5b6110b761106f61110f565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661158f9092919063ffffffff16565b6110bf61110f565b73ffffffffffffffffffffffffffffffffffffffff167f5eacf990d96c07de8e8e6c50faaf28160b2997575250a8aacfbb7f224791ff7682604051611104919061188c565b60405180910390a250565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6005602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111f59190611a91565b602060405180830381865afa158015611210573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611234919061230a565b905090565b6112416114b9565b60095f9054906101000a900460ff1615611290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611287906124dd565b60405180910390fd5b5f4790505f81116112d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cd90612545565b60405180910390fd5b5f6112df61110f565b73ffffffffffffffffffffffffffffffffffffffff168260405161130290612590565b5f6040518083038185875af1925050503d805f811461133c576040519150601f19603f3d011682016040523d82523d5f602084013e611341565b606091505b5050905080611385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137c906125ee565b60405180910390fd5b61138d61110f565b73ffffffffffffffffffffffffffffffffffffffff167ee1ffcaf17d7bfc1113fd8f6bc6f5454d1b5061c11409e4d52ede1f9799889e836040516113d1919061188c565b60405180910390a25050565b5f600854905090565b60065481565b6004602052805f5260405f205f915090505481565b5f60035f60065481526020019081526020015f20546ec097ce7bc90715b34b9f100000000061143091906121d0565b905090565b61143d6114b9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ad575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114a49190611a91565b60405180910390fd5b6114b681611617565b50565b6114c161175a565b73ffffffffffffffffffffffffffffffffffffffff166114df61110f565b73ffffffffffffffffffffffffffffffffffffffff161461153e5761150261175a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115359190611a91565b60405180910390fd5b565b600260015403611585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157c90612656565b60405180910390fd5b6002600181905550565b611609838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016115c2929190612674565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611761565b505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611754848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161170d9392919061269b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611761565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180611780576040513d5f823e3d81fd5b3d92505f519150505f82146117995760018114156117b4565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156117f657836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016117ed9190611a91565b60405180910390fd5b50505050565b5f82825260208201905092915050565b7f55736520627579546f6b656e732066756e6374696f6e000000000000000000005f82015250565b5f6118406016836117fc565b915061184b8261180c565b602082019050919050565b5f6020820190508181035f83015261186d81611834565b9050919050565b5f819050919050565b61188681611874565b82525050565b5f60208201905061189f5f83018461187d565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f8401126118ce576118cd6118ad565b5b8235905067ffffffffffffffff8111156118eb576118ea6118b1565b5b602083019150836020820283011115611907576119066118b5565b5b9250929050565b5f5f5f5f60408587031215611926576119256118a5565b5b5f85013567ffffffffffffffff811115611943576119426118a9565b5b61194f878288016118b9565b9450945050602085013567ffffffffffffffff811115611972576119716118a9565b5b61197e878288016118b9565b925092505092959194509250565b61199581611874565b811461199f575f5ffd5b50565b5f813590506119b08161198c565b92915050565b5f5f604083850312156119cc576119cb6118a5565b5b5f6119d9858286016119a2565b92505060206119ea858286016119a2565b9150509250929050565b5f60208284031215611a0957611a086118a5565b5b5f611a16848285016119a2565b91505092915050565b5f8115159050919050565b611a3381611a1f565b82525050565b5f602082019050611a4c5f830184611a2a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a7b82611a52565b9050919050565b611a8b81611a71565b82525050565b5f602082019050611aa45f830184611a82565b92915050565b5f819050919050565b5f611acd611ac8611ac384611a52565b611aaa565b611a52565b9050919050565b5f611ade82611ab3565b9050919050565b5f611aef82611ad4565b9050919050565b611aff81611ae5565b82525050565b5f602082019050611b185f830184611af6565b92915050565b611b2781611a71565b8114611b31575f5ffd5b50565b5f81359050611b4281611b1e565b92915050565b5f60208284031215611b5d57611b5c6118a5565b5b5f611b6a84828501611b34565b91505092915050565b7f50726573616c6520697320616c726561647920616374697665000000000000005f82015250565b5f611ba76019836117fc565b9150611bb282611b73565b602082019050919050565b5f6020820190508181035f830152611bd481611b9b565b9050919050565b7f5469657273206d75737420626520636f6e66696775726564206265666f7265205f8201527f7374617274696e67207468652070726573616c65000000000000000000000000602082015250565b5f611c356034836117fc565b9150611c4082611bdb565b604082019050919050565b5f6020820190508181035f830152611c6281611c29565b9050919050565b7f50726573616c65206973206e6f742061637469766500000000000000000000005f82015250565b5f611c9d6015836117fc565b9150611ca882611c69565b602082019050919050565b5f6020820190508181035f830152611cca81611c91565b9050919050565b7f417272617973206d7573742068617665207468652073616d65206c656e6774685f82015250565b5f611d056020836117fc565b9150611d1082611cd1565b602082019050919050565b5f6020820190508181035f830152611d3281611cf9565b9050919050565b7f54696572732063616e6e6f7420626520656d70747900000000000000000000005f82015250565b5f611d6d6015836117fc565b9150611d7882611d39565b602082019050919050565b5f6020820190508181035f830152611d9a81611d61565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611dd882611874565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e0a57611e09611da1565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611e4c82611874565b9150611e5783611874565b9250828201905080821115611e6f57611e6e611da1565b5b92915050565b7f4d696e696d756d20627579206d7573742062652067726561746572207468616e5f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f611ecf6025836117fc565b9150611eda82611e75565b604082019050919050565b5f6020820190508181035f830152611efc81611ec3565b9050919050565b7f4d6178696d756d20627579206d7573742062652067726561746572207468616e5f8201527f206f7220657175616c20746f206d696e696d756d206275790000000000000000602082015250565b5f611f5d6038836117fc565b9150611f6882611f03565b604082019050919050565b5f6020820190508181035f830152611f8a81611f51565b9050919050565b5f604082019050611fa45f83018561187d565b611fb1602083018461187d565b9392505050565b7f50726573616c6520697320636f6d706c6574652c206e6f206d6f7265207469655f8201527f727320617661696c61626c650000000000000000000000000000000000000000602082015250565b5f612012602c836117fc565b915061201d82611fb8565b604082019050919050565b5f6020820190508181035f83015261203f81612006565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e206f7220655f8201527f7175616c20746f206d696e696d756d2070757263686173650000000000000000602082015250565b5f6120a06038836117fc565b91506120ab82612046565b604082019050919050565b5f6020820190508181035f8301526120cd81612094565b9050919050565b7f416d6f756e74206d757374206265206c657373207468616e206f7220657175615f8201527f6c20746f206d6178696d756d2070757263686173650000000000000000000000602082015250565b5f61212e6035836117fc565b9150612139826120d4565b604082019050919050565b5f6020820190508181035f83015261215b81612122565b9050919050565b5f61216c82611874565b915061217783611874565b925082820261218581611874565b9150828204841483151761219c5761219b611da1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6121da82611874565b91506121e583611874565b9250826121f5576121f46121a3565b5b828204905092915050565b7f536c6970706167652070726f74656374696f6e207472696767657265640000005f82015250565b5f612234601d836117fc565b915061223f82612200565b602082019050919050565b5f6020820190508181035f83015261226181612228565b9050919050565b7f507572636861736520657863656564732063757272656e7420746965722773205f8201527f6c696d6974000000000000000000000000000000000000000000000000000000602082015250565b5f6122c26025836117fc565b91506122cd82612268565b604082019050919050565b5f6020820190508181035f8301526122ef816122b6565b9050919050565b5f815190506123048161198c565b92915050565b5f6020828403121561231f5761231e6118a5565b5b5f61232c848285016122f6565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320696e20636f6e74726163740000005f82015250565b5f612369601d836117fc565b915061237482612335565b602082019050919050565b5f6020820190508181035f8301526123968161235d565b9050919050565b7f5469657220646f6573206e6f74206578697374000000000000000000000000005f82015250565b5f6123d16013836117fc565b91506123dc8261239d565b602082019050919050565b5f6020820190508181035f8301526123fe816123c5565b9050919050565b7f4e6f2072656d61696e696e6720746f6b656e7320746f207769746864726177005f82015250565b5f612439601f836117fc565b915061244482612405565b602082019050919050565b5f6020820190508181035f8301526124668161242d565b9050919050565b7f50726573616c65206d7573742062652073746f7070656420746f2077697468645f8201527f7261772066756e64730000000000000000000000000000000000000000000000602082015250565b5f6124c76029836117fc565b91506124d28261246d565b604082019050919050565b5f6020820190508181035f8301526124f4816124bb565b9050919050565b7f4e6f204d4154494320746f2077697468647261770000000000000000000000005f82015250565b5f61252f6014836117fc565b915061253a826124fb565b602082019050919050565b5f6020820190508181035f83015261255c81612523565b9050919050565b5f81905092915050565b50565b5f61257b5f83612563565b91506125868261256d565b5f82019050919050565b5f61259a82612570565b9150819050919050565b7f4661696c656420746f207769746864726177204d4154494300000000000000005f82015250565b5f6125d86018836117fc565b91506125e3826125a4565b602082019050919050565b5f6020820190508181035f830152612605816125cc565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612640601f836117fc565b915061264b8261260c565b602082019050919050565b5f6020820190508181035f83015261266d81612634565b9050919050565b5f6040820190506126875f830185611a82565b612694602083018461187d565b9392505050565b5f6060820190506126ae5f830186611a82565b6126bb6020830185611a82565b6126c8604083018461187d565b94935050505056fea2646970667358221220bac1b2d9f360a9418279c507b7a3ac0a4231afde6d1bc86c7cd0e906235e5e3964736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2AAB CODESIZE SUB DUP1 PUSH2 0x2AAB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x1A3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x38D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x291 DUP3 PUSH2 0x268 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A1 DUP2 PUSH2 0x287 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BC DUP2 PUSH2 0x298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D7 JUMPI PUSH2 0x2D6 PUSH2 0x264 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E4 DUP5 DUP3 DUP6 ADD PUSH2 0x2AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x287 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30F PUSH0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x359 PUSH1 0x15 DUP4 PUSH2 0x315 JUMP JUMPDEST SWAP2 POP PUSH2 0x364 DUP3 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x386 DUP2 PUSH2 0x34D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2706 PUSH2 0x3A5 PUSH0 CODECOPY PUSH0 PUSH2 0x1138 ADD MSTORE PUSH2 0x2706 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x184 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AFBF669 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xC8B08125 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD679677A GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD679677A EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xE7829CAD EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59E JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xC8B08125 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xC9881D86 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xD2E8ECAE EQ PUSH2 0x4E4 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8AFBF669 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA8C038C7 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xC43A0135 EQ PUSH2 0x47A JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x300ECCAB GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x53135CA0 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x53135CA0 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x8A0A80AF EQ PUSH2 0x382 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x300ECCAB EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x5276837C EQ PUSH2 0x2F0 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x125B8B78 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1AD2AD1A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x1B8EBC3C EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x22C6BAF6 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x273F8974 EQ PUSH2 0x270 JUMPI PUSH2 0x1C4 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x6BF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25A PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x356 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0xEC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0xED7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3BE PUSH2 0xF7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48E PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B8 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH2 0x1239 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x55E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x588 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CE PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x668 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x17C3338141363AAB2512C08F8A7764328CA95979F7057663EB93F7E250139B4C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6C7 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70C SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xE60F0CCD81D0545E17CD40EAAF8B7C5D36E3A26372928BE6A27D2F73F67D7593 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x764 PUSH2 0x14B9 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP GT PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP1 PUSH2 0x1D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x84B JUMPI PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE DUP1 DUP1 PUSH2 0x843 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F7 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x8DE JUMPI DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x86E JUMPI PUSH2 0x86D PUSH2 0x1E15 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x3 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x1E15 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x850 JUMP JUMPDEST POP PUSH32 0x37740B69A1CCE7C6B884FF59B1465C52017FFCB23B6E46249F50F3375B71EADA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x920 PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x7C821B4DCC7C9BFB2D37C50FB125278CF9699532C206A3699CAB994AB149519B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9E4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD CALLVALUE LT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEC SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLVALUE GT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xB63 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 PUSH1 0x5 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST GT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC81 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST LT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF8 SWAP1 PUSH2 0x237F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x5 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0xD9F JUMPI PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD99 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH2 0xDEB CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x158F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xE33 SWAP3 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xE44 PUSH2 0x160E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE4F PUSH2 0x14B9 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xEA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xECC PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xED5 PUSH0 PUSH2 0x1617 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEDF PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xF2D CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16D8 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59062170A285EB80E8C6B8CED60428442A51910635005233FC4CE084A475845E DUP3 PUSH1 0x40 MLOAD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xF86 PUSH2 0x14B9 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105B SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B7 PUSH2 0x106F PUSH2 0x110F JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x158F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10BF PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5EACF990D96C07DE8E8E6C50FAAF28160B2997575250A8AACFBB7F224791FF76 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1210 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1241 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1287 SWAP1 PUSH2 0x24DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CD SWAP1 PUSH2 0x2545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x12DF PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1302 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1385 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137C SWAP1 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138D PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0xE1FFCAF17D7BFC1113FD8F6BC6F5454D1B5061C11409E4D52EDE1F9799889E DUP4 PUSH1 0x40 MLOAD PUSH2 0x13D1 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0x1430 SWAP2 SWAP1 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x143D PUSH2 0x14B9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B6 DUP2 PUSH2 0x1617 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14C1 PUSH2 0x175A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DF PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH2 0x1502 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157C SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1609 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1761 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1754 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x170D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1761 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1780 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1799 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x17B4 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x17F6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17ED SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736520627579546F6B656E732066756E6374696F6E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 PUSH1 0x16 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186D DUP2 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1886 DUP2 PUSH2 0x1874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189F PUSH0 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18CE JUMPI PUSH2 0x18CD PUSH2 0x18AD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x18B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x18B5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1942 PUSH2 0x18A9 JUMP JUMPDEST JUMPDEST PUSH2 0x194F DUP8 DUP3 DUP9 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x18A9 JUMP JUMPDEST JUMPDEST PUSH2 0x197E DUP8 DUP3 DUP9 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1874 JUMP JUMPDEST DUP2 EQ PUSH2 0x199F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CC JUMPI PUSH2 0x19CB PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D9 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19EA DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A16 DUP5 DUP3 DUP6 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A33 DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B DUP3 PUSH2 0x1A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8B DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACD PUSH2 0x1AC8 PUSH2 0x1AC3 DUP5 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADE DUP3 PUSH2 0x1AB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEF DUP3 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFF DUP2 PUSH2 0x1AE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B27 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B31 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B42 DUP2 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5D JUMPI PUSH2 0x1B5C PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B6A DUP5 DUP3 DUP6 ADD PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520697320616C72656164792061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA7 PUSH1 0x19 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB2 DUP3 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BD4 DUP2 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469657273206D75737420626520636F6E66696775726564206265666F726520 PUSH0 DUP3 ADD MSTORE PUSH32 0x7374617274696E67207468652070726573616C65000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C35 PUSH1 0x34 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C40 DUP3 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C62 DUP2 PUSH2 0x1C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206973206E6F74206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9D PUSH1 0x15 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA8 DUP3 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCA DUP2 PUSH2 0x1C91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x417272617973206D7573742068617665207468652073616D65206C656E677468 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D05 PUSH1 0x20 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D10 DUP3 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D32 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696572732063616E6E6F7420626520656D7074790000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6D PUSH1 0x15 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D78 DUP3 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DD8 DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E0A JUMPI PUSH2 0x1E09 PUSH2 0x1DA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E4C DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E57 DUP4 PUSH2 0x1874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1DA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20627579206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ECF PUSH1 0x25 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDA DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6178696D756D20627579206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x206F7220657175616C20746F206D696E696D756D206275790000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5D PUSH1 0x38 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F68 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FA4 PUSH0 DUP4 ADD DUP6 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x1FB1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520697320636F6D706C6574652C206E6F206D6F726520746965 PUSH0 DUP3 ADD MSTORE PUSH32 0x727320617661696C61626C650000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2012 PUSH1 0x2C DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x201D DUP3 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203F DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E206F722065 PUSH0 DUP3 ADD MSTORE PUSH32 0x7175616C20746F206D696E696D756D2070757263686173650000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH1 0x38 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP3 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20CD DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C20746F206D6178696D756D2070757263686173650000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x212E PUSH1 0x35 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2139 DUP3 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x215B DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x216C DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH2 0x2177 DUP4 PUSH2 0x1874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2185 DUP2 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x219C JUMPI PUSH2 0x219B PUSH2 0x1DA1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21DA DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E5 DUP4 PUSH2 0x1874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21F5 JUMPI PUSH2 0x21F4 PUSH2 0x21A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C6970706167652070726F74656374696F6E20747269676765726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2234 PUSH1 0x1D DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x223F DUP3 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2261 DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520657863656564732063757272656E742074696572277320 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C696D6974000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C2 PUSH1 0x25 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x22CD DUP3 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EF DUP2 PUSH2 0x22B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2304 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231F JUMPI PUSH2 0x231E PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x232C DUP5 DUP3 DUP6 ADD PUSH2 0x22F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2369 PUSH1 0x1D DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2374 DUP3 PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2396 DUP2 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469657220646F6573206E6F7420657869737400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH1 0x13 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x23DC DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FE DUP2 PUSH2 0x23C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072656D61696E696E6720746F6B656E7320746F20776974686472617700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2439 PUSH1 0x1F DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP3 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2466 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206D7573742062652073746F7070656420746F207769746864 PUSH0 DUP3 ADD MSTORE PUSH32 0x7261772066756E64730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24C7 PUSH1 0x29 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x24D2 DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24F4 DUP2 PUSH2 0x24BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204D4154494320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x252F PUSH1 0x14 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x253A DUP3 PUSH2 0x24FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x255C DUP2 PUSH2 0x2523 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x257B PUSH0 DUP4 PUSH2 0x2563 JUMP JUMPDEST SWAP2 POP PUSH2 0x2586 DUP3 PUSH2 0x256D JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x259A DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207769746864726177204D415449430000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D8 PUSH1 0x18 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x25E3 DUP3 PUSH2 0x25A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2605 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2640 PUSH1 0x1F DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x264B DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x266D DUP2 PUSH2 0x2634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2687 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x2694 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26AE PUSH0 DUP4 ADD DUP7 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x26BB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x26C8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC1 0xB2 0xD9 RETURN PUSH1 0xA9 COINBASE DUP3 PUSH26 0xC507B7A3AC0A4231AFDE6D1BC86C7CD0E906235E5E3964736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "576:9653:9:-:0;;;2393:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2436:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;2492:1:9::1;2467:27;;:13;:27;;::::0;2459:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2546:13;2531:28;;;;;;;;::::0;::::1;2587:12;;2570:7;;:30;;;;;;;;;;;;;;;;;;2393:215:::0;576:9653;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:171::-;1869:23;1865:1;1857:6;1853:14;1846:47;1729:171;:::o;1906:366::-;2048:3;2069:67;2133:2;2128:3;2069:67;:::i;:::-;2062:74;;2145:93;2234:3;2145:93;:::i;:::-;2263:2;2258:3;2254:12;2247:19;;1906:366;;;:::o;2278:419::-;2444:4;2482:2;2471:9;2467:18;2459:26;;2531:9;2525:4;2521:20;2517:1;2506:9;2502:17;2495:47;2559:131;2685:4;2559:131;:::i;:::-;2551:139;;2278:419;;;:::o;576:9653:9:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1488": {
									"entryPoint": null,
									"id": 1488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_802": {
									"entryPoint": 5985,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5305,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 5978,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 5646,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 5440,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5655,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokens_1441": {
									"entryPoint": 2565,
									"id": 1441,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentTier_918": {
									"entryPoint": 5094,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositTokensForSale_1224": {
									"entryPoint": 3799,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getCurrentPrice_1479": {
									"entryPoint": 5121,
									"id": 1479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maticRaised_1450": {
									"entryPoint": 5085,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxMaticBuy_930": {
									"entryPoint": 4500,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minMaticBuy_928": {
									"entryPoint": 2322,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@myToken_904": {
									"entryPoint": 4463,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 4367,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleActive_924": {
									"entryPoint": 3756,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3780,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 5848,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 5519,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setCurrentTier_1111": {
									"entryPoint": 3655,
									"id": 1111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinMaxMaticBuy_1197": {
									"entryPoint": 2328,
									"id": 1197,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTiers_1089": {
									"entryPoint": 1884,
									"id": 1089,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@startPresale_1140": {
									"entryPoint": 1478,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopPresale_1159": {
									"entryPoint": 1727,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tierPrices_908": {
									"entryPoint": 2544,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tierTokenLimits_912": {
									"entryPoint": 5100,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tierTokensSold_916": {
									"entryPoint": 4442,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAddress_926": {
									"entryPoint": 4406,
									"id": 926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensRemaining_1465": {
									"entryPoint": 4506,
									"id": 1465,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalMaticRaised_922": {
									"entryPoint": 1721,
									"id": 922,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensSold_920": {
									"entryPoint": 3774,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5173,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawRaisedMatic_1276": {
									"entryPoint": 4665,
									"id": 1276,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawRemainingTokens_1314": {
									"entryPoint": 3966,
									"id": 1314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9883,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8081,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35": {
									"entryPoint": 8262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8": {
									"entryPoint": 7797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991": {
									"entryPoint": 7481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82": {
									"entryPoint": 9467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 9581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7": {
									"entryPoint": 7273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299": {
									"entryPoint": 8808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8": {
									"entryPoint": 8704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8": {
									"entryPoint": 9636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:30792:10",
										"nodeType": "YulBlock",
										"src": "0:30792:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:10",
													"nodeType": "YulBlock",
													"src": "103:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:10"
																},
																"nativeSrc": "113:19:10",
																"nodeType": "YulFunctionCall",
																"src": "113:19:10"
															},
															"nativeSrc": "113:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:10"
														},
														{
															"nativeSrc": "141:29:10",
															"nodeType": "YulAssignment",
															"src": "141:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:10",
																		"nodeType": "YulLiteral",
																		"src": "165:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:10"
																},
																"nativeSrc": "156:14:10",
																"nodeType": "YulFunctionCall",
																"src": "156:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:10",
														"nodeType": "YulTypedName",
														"src": "75:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:10",
														"nodeType": "YulTypedName",
														"src": "80:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:10",
														"nodeType": "YulTypedName",
														"src": "91:11:10",
														"type": ""
													}
												],
												"src": "7:169:10"
											},
											{
												"body": {
													"nativeSrc": "288:66:10",
													"nodeType": "YulBlock",
													"src": "288:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:10",
																				"nodeType": "YulLiteral",
																				"src": "318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:10"
																		},
																		"nativeSrc": "306:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:10"
																	},
																	{
																		"hexValue": "55736520627579546f6b656e732066756e6374696f6e",
																		"kind": "string",
																		"nativeSrc": "322:24:10",
																		"nodeType": "YulLiteral",
																		"src": "322:24:10",
																		"type": "",
																		"value": "Use buyTokens function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																},
																"nativeSrc": "299:48:10",
																"nodeType": "YulFunctionCall",
																"src": "299:48:10"
															},
															"nativeSrc": "299:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "299:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c",
												"nativeSrc": "182:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:10",
														"nodeType": "YulTypedName",
														"src": "280:6:10",
														"type": ""
													}
												],
												"src": "182:172:10"
											},
											{
												"body": {
													"nativeSrc": "506:220:10",
													"nodeType": "YulBlock",
													"src": "506:220:10",
													"statements": [
														{
															"nativeSrc": "516:74:10",
															"nodeType": "YulAssignment",
															"src": "516:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "582:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "582:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:2:10",
																		"nodeType": "YulLiteral",
																		"src": "587:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "523:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "523:58:10"
																},
																"nativeSrc": "523:67:10",
																"nodeType": "YulFunctionCall",
																"src": "523:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "688:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "688:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c",
																	"nativeSrc": "599:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "599:88:10"
																},
																"nativeSrc": "599:93:10",
																"nodeType": "YulFunctionCall",
																"src": "599:93:10"
															},
															"nativeSrc": "599:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "599:93:10"
														},
														{
															"nativeSrc": "701:19:10",
															"nodeType": "YulAssignment",
															"src": "701:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "712:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "712:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "717:2:10",
																		"nodeType": "YulLiteral",
																		"src": "717:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:10"
																},
																"nativeSrc": "708:12:10",
																"nodeType": "YulFunctionCall",
																"src": "708:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "701:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "360:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "494:3:10",
														"nodeType": "YulTypedName",
														"src": "494:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "502:3:10",
														"nodeType": "YulTypedName",
														"src": "502:3:10",
														"type": ""
													}
												],
												"src": "360:366:10"
											},
											{
												"body": {
													"nativeSrc": "903:248:10",
													"nodeType": "YulBlock",
													"src": "903:248:10",
													"statements": [
														{
															"nativeSrc": "913:26:10",
															"nodeType": "YulAssignment",
															"src": "913:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "925:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "925:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:2:10",
																		"nodeType": "YulLiteral",
																		"src": "936:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "921:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "921:3:10"
																},
																"nativeSrc": "921:18:10",
																"nodeType": "YulFunctionCall",
																"src": "921:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "913:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "913:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "960:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "971:1:10",
																				"nodeType": "YulLiteral",
																				"src": "971:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nativeSrc": "956:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "956:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "985:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "975:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:10"
																		},
																		"nativeSrc": "975:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "975:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:10"
																},
																"nativeSrc": "949:47:10",
																"nodeType": "YulFunctionCall",
																"src": "949:47:10"
															},
															"nativeSrc": "949:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "949:47:10"
														},
														{
															"nativeSrc": "1005:139:10",
															"nodeType": "YulAssignment",
															"src": "1005:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1139:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1139:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1013:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "1013:124:10"
																},
																"nativeSrc": "1013:131:10",
																"nodeType": "YulFunctionCall",
																"src": "1013:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1005:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1005:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "732:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "883:9:10",
														"nodeType": "YulTypedName",
														"src": "883:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "898:4:10",
														"nodeType": "YulTypedName",
														"src": "898:4:10",
														"type": ""
													}
												],
												"src": "732:419:10"
											},
											{
												"body": {
													"nativeSrc": "1202:32:10",
													"nodeType": "YulBlock",
													"src": "1202:32:10",
													"statements": [
														{
															"nativeSrc": "1212:16:10",
															"nodeType": "YulAssignment",
															"src": "1212:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1223:5:10",
																"nodeType": "YulIdentifier",
																"src": "1223:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1157:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:10",
														"nodeType": "YulTypedName",
														"src": "1184:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:10",
														"nodeType": "YulTypedName",
														"src": "1194:7:10",
														"type": ""
													}
												],
												"src": "1157:77:10"
											},
											{
												"body": {
													"nativeSrc": "1305:53:10",
													"nodeType": "YulBlock",
													"src": "1305:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1322:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1322:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1345:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1345:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1327:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1327:17:10"
																		},
																		"nativeSrc": "1327:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1327:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1315:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:10"
																},
																"nativeSrc": "1315:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1315:37:10"
															},
															"nativeSrc": "1315:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1315:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1240:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1293:5:10",
														"nodeType": "YulTypedName",
														"src": "1293:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1300:3:10",
														"nodeType": "YulTypedName",
														"src": "1300:3:10",
														"type": ""
													}
												],
												"src": "1240:118:10"
											},
											{
												"body": {
													"nativeSrc": "1462:124:10",
													"nodeType": "YulBlock",
													"src": "1462:124:10",
													"statements": [
														{
															"nativeSrc": "1472:26:10",
															"nodeType": "YulAssignment",
															"src": "1472:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1484:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1484:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1495:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1495:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1480:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1480:3:10"
																},
																"nativeSrc": "1480:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1480:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1472:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1472:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1552:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1565:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1565:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1576:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1576:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1561:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1561:3:10"
																		},
																		"nativeSrc": "1561:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1561:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1508:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:43:10"
																},
																"nativeSrc": "1508:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:71:10"
															},
															"nativeSrc": "1508:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1508:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1364:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1434:9:10",
														"nodeType": "YulTypedName",
														"src": "1434:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1446:6:10",
														"nodeType": "YulTypedName",
														"src": "1446:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1457:4:10",
														"nodeType": "YulTypedName",
														"src": "1457:4:10",
														"type": ""
													}
												],
												"src": "1364:222:10"
											},
											{
												"body": {
													"nativeSrc": "1632:35:10",
													"nodeType": "YulBlock",
													"src": "1632:35:10",
													"statements": [
														{
															"nativeSrc": "1642:19:10",
															"nodeType": "YulAssignment",
															"src": "1642:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1658:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1658:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1652:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:10"
																},
																"nativeSrc": "1652:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1652:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1642:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1642:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1592:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1625:6:10",
														"nodeType": "YulTypedName",
														"src": "1625:6:10",
														"type": ""
													}
												],
												"src": "1592:75:10"
											},
											{
												"body": {
													"nativeSrc": "1762:28:10",
													"nodeType": "YulBlock",
													"src": "1762:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1779:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1779:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1782:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1772:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1772:6:10"
																},
																"nativeSrc": "1772:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1772:12:10"
															},
															"nativeSrc": "1772:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1772:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1673:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1673:117:10"
											},
											{
												"body": {
													"nativeSrc": "1885:28:10",
													"nodeType": "YulBlock",
													"src": "1885:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1905:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:10"
																},
																"nativeSrc": "1895:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1895:12:10"
															},
															"nativeSrc": "1895:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1895:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1796:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1796:117:10"
											},
											{
												"body": {
													"nativeSrc": "2008:28:10",
													"nodeType": "YulBlock",
													"src": "2008:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2025:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2025:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2028:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2028:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2018:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:10"
																},
																"nativeSrc": "2018:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2018:12:10"
															},
															"nativeSrc": "2018:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2018:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1919:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1919:117:10"
											},
											{
												"body": {
													"nativeSrc": "2131:28:10",
													"nodeType": "YulBlock",
													"src": "2131:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2148:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2148:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2141:6:10"
																},
																"nativeSrc": "2141:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2141:12:10"
															},
															"nativeSrc": "2141:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2141:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2042:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2042:117:10"
											},
											{
												"body": {
													"nativeSrc": "2254:28:10",
													"nodeType": "YulBlock",
													"src": "2254:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2271:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2271:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2274:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2274:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2264:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:10"
																},
																"nativeSrc": "2264:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2264:12:10"
															},
															"nativeSrc": "2264:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2264:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2165:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2165:117:10"
											},
											{
												"body": {
													"nativeSrc": "2395:478:10",
													"nodeType": "YulBlock",
													"src": "2395:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2444:83:10",
																"nodeType": "YulBlock",
																"src": "2444:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2446:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2446:77:10"
																			},
																			"nativeSrc": "2446:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2446:79:10"
																		},
																		"nativeSrc": "2446:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2446:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2423:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2423:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2431:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2431:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2419:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2419:3:10"
																				},
																				"nativeSrc": "2419:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2419:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2438:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2438:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2415:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:10"
																		},
																		"nativeSrc": "2415:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2408:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:10"
																},
																"nativeSrc": "2408:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2408:35:10"
															},
															"nativeSrc": "2405:122:10",
															"nodeType": "YulIf",
															"src": "2405:122:10"
														},
														{
															"nativeSrc": "2536:30:10",
															"nodeType": "YulAssignment",
															"src": "2536:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2559:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2559:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2546:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:10"
																},
																"nativeSrc": "2546:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2546:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2536:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2536:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2609:83:10",
																"nodeType": "YulBlock",
																"src": "2609:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2611:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2611:77:10"
																			},
																			"nativeSrc": "2611:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2611:79:10"
																		},
																		"nativeSrc": "2611:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2581:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2581:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2589:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2589:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2578:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2578:2:10"
																},
																"nativeSrc": "2578:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2578:30:10"
															},
															"nativeSrc": "2575:117:10",
															"nodeType": "YulIf",
															"src": "2575:117:10"
														},
														{
															"nativeSrc": "2701:29:10",
															"nodeType": "YulAssignment",
															"src": "2701:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2717:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2717:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2725:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2725:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2713:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:10"
																},
																"nativeSrc": "2713:17:10",
																"nodeType": "YulFunctionCall",
																"src": "2713:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2701:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2701:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2784:83:10",
																"nodeType": "YulBlock",
																"src": "2784:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2786:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2786:77:10"
																			},
																			"nativeSrc": "2786:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2786:79:10"
																		},
																		"nativeSrc": "2786:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2786:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2749:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2749:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2763:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2763:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2771:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2771:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2759:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:10"
																				},
																				"nativeSrc": "2759:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2745:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:10"
																		},
																		"nativeSrc": "2745:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2745:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2779:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2779:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2742:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:10"
																},
																"nativeSrc": "2742:41:10",
																"nodeType": "YulFunctionCall",
																"src": "2742:41:10"
															},
															"nativeSrc": "2739:128:10",
															"nodeType": "YulIf",
															"src": "2739:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2305:568:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2362:6:10",
														"nodeType": "YulTypedName",
														"src": "2362:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2370:3:10",
														"nodeType": "YulTypedName",
														"src": "2370:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2378:8:10",
														"nodeType": "YulTypedName",
														"src": "2378:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2388:6:10",
														"nodeType": "YulTypedName",
														"src": "2388:6:10",
														"type": ""
													}
												],
												"src": "2305:568:10"
											},
											{
												"body": {
													"nativeSrc": "3032:781:10",
													"nodeType": "YulBlock",
													"src": "3032:781:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3078:83:10",
																"nodeType": "YulBlock",
																"src": "3078:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3080:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3080:77:10"
																			},
																			"nativeSrc": "3080:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3080:79:10"
																		},
																		"nativeSrc": "3080:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3080:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3053:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3053:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3062:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3062:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3049:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3049:3:10"
																		},
																		"nativeSrc": "3049:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3049:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3045:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:10"
																},
																"nativeSrc": "3045:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3045:32:10"
															},
															"nativeSrc": "3042:119:10",
															"nodeType": "YulIf",
															"src": "3042:119:10"
														},
														{
															"nativeSrc": "3171:312:10",
															"nodeType": "YulBlock",
															"src": "3171:312:10",
															"statements": [
																{
																	"nativeSrc": "3186:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3186:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3217:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3217:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3228:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3228:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3213:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3213:3:10"
																				},
																				"nativeSrc": "3213:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3213:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3200:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "3200:12:10"
																		},
																		"nativeSrc": "3200:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3200:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3190:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3190:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3278:83:10",
																		"nodeType": "YulBlock",
																		"src": "3278:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3280:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3280:77:10"
																					},
																					"nativeSrc": "3280:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3280:79:10"
																				},
																				"nativeSrc": "3280:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3280:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3250:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3250:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3258:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3258:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3247:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3247:2:10"
																		},
																		"nativeSrc": "3247:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:30:10"
																	},
																	"nativeSrc": "3244:117:10",
																	"nodeType": "YulIf",
																	"src": "3244:117:10"
																},
																{
																	"nativeSrc": "3375:98:10",
																	"nodeType": "YulAssignment",
																	"src": "3375:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3445:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3445:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3456:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3456:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3441:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3441:3:10"
																				},
																				"nativeSrc": "3441:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3441:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3465:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3465:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "3393:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "3393:47:10"
																		},
																		"nativeSrc": "3393:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3393:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3375:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3375:6:10"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "3383:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3493:313:10",
															"nodeType": "YulBlock",
															"src": "3493:313:10",
															"statements": [
																{
																	"nativeSrc": "3508:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3508:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3539:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3539:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3550:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3550:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3535:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3535:3:10"
																				},
																				"nativeSrc": "3535:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3535:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3522:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "3522:12:10"
																		},
																		"nativeSrc": "3522:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3522:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3512:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3512:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3601:83:10",
																		"nodeType": "YulBlock",
																		"src": "3601:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3603:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3603:77:10"
																					},
																					"nativeSrc": "3603:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3603:79:10"
																				},
																				"nativeSrc": "3603:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3603:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3573:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3573:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3581:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3581:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3570:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3570:2:10"
																		},
																		"nativeSrc": "3570:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:30:10"
																	},
																	"nativeSrc": "3567:117:10",
																	"nodeType": "YulIf",
																	"src": "3567:117:10"
																},
																{
																	"nativeSrc": "3698:98:10",
																	"nodeType": "YulAssignment",
																	"src": "3698:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3768:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3768:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3779:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3779:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3764:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3764:3:10"
																				},
																				"nativeSrc": "3764:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3764:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3788:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3788:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "3716:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "3716:47:10"
																		},
																		"nativeSrc": "3716:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3698:6:10"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "3706:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3706:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2879:934:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2978:9:10",
														"nodeType": "YulTypedName",
														"src": "2978:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2989:7:10",
														"nodeType": "YulTypedName",
														"src": "2989:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3001:6:10",
														"nodeType": "YulTypedName",
														"src": "3001:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3009:6:10",
														"nodeType": "YulTypedName",
														"src": "3009:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3017:6:10",
														"nodeType": "YulTypedName",
														"src": "3017:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3025:6:10",
														"nodeType": "YulTypedName",
														"src": "3025:6:10",
														"type": ""
													}
												],
												"src": "2879:934:10"
											},
											{
												"body": {
													"nativeSrc": "3862:79:10",
													"nodeType": "YulBlock",
													"src": "3862:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3919:16:10",
																"nodeType": "YulBlock",
																"src": "3919:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3928:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3928:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3931:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3931:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3921:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3921:6:10"
																			},
																			"nativeSrc": "3921:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3921:12:10"
																		},
																		"nativeSrc": "3921:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3921:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3885:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3885:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3910:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3910:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3892:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3892:17:10"
																				},
																				"nativeSrc": "3892:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3892:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3882:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3882:2:10"
																		},
																		"nativeSrc": "3882:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3882:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3875:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3875:6:10"
																},
																"nativeSrc": "3875:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3875:43:10"
															},
															"nativeSrc": "3872:63:10",
															"nodeType": "YulIf",
															"src": "3872:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3819:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3855:5:10",
														"nodeType": "YulTypedName",
														"src": "3855:5:10",
														"type": ""
													}
												],
												"src": "3819:122:10"
											},
											{
												"body": {
													"nativeSrc": "3999:87:10",
													"nodeType": "YulBlock",
													"src": "3999:87:10",
													"statements": [
														{
															"nativeSrc": "4009:29:10",
															"nodeType": "YulAssignment",
															"src": "4009:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4031:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4031:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4018:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4018:12:10"
																},
																"nativeSrc": "4018:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4018:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4009:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4009:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4074:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4074:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4047:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4047:26:10"
																},
																"nativeSrc": "4047:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4047:33:10"
															},
															"nativeSrc": "4047:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4047:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3947:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3977:6:10",
														"nodeType": "YulTypedName",
														"src": "3977:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3985:3:10",
														"nodeType": "YulTypedName",
														"src": "3985:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3993:5:10",
														"nodeType": "YulTypedName",
														"src": "3993:5:10",
														"type": ""
													}
												],
												"src": "3947:139:10"
											},
											{
												"body": {
													"nativeSrc": "4175:391:10",
													"nodeType": "YulBlock",
													"src": "4175:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4221:83:10",
																"nodeType": "YulBlock",
																"src": "4221:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4223:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4223:77:10"
																			},
																			"nativeSrc": "4223:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4223:79:10"
																		},
																		"nativeSrc": "4223:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4223:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4196:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4196:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4205:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4192:3:10"
																		},
																		"nativeSrc": "4192:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4192:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4217:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4217:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4188:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4188:3:10"
																},
																"nativeSrc": "4188:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4188:32:10"
															},
															"nativeSrc": "4185:119:10",
															"nodeType": "YulIf",
															"src": "4185:119:10"
														},
														{
															"nativeSrc": "4314:117:10",
															"nodeType": "YulBlock",
															"src": "4314:117:10",
															"statements": [
																{
																	"nativeSrc": "4329:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4329:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4333:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4333:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4358:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4358:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4393:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4393:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4404:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4404:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4389:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4389:3:10"
																				},
																				"nativeSrc": "4389:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4389:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4413:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4413:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4368:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4368:20:10"
																		},
																		"nativeSrc": "4368:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4358:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4358:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4441:118:10",
															"nodeType": "YulBlock",
															"src": "4441:118:10",
															"statements": [
																{
																	"nativeSrc": "4456:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4456:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4470:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4470:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4460:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4460:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4486:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4486:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4521:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4521:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4532:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4517:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4517:3:10"
																				},
																				"nativeSrc": "4517:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4517:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4541:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4541:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4496:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4496:20:10"
																		},
																		"nativeSrc": "4496:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4496:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4486:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4486:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4092:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4137:9:10",
														"nodeType": "YulTypedName",
														"src": "4137:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4148:7:10",
														"nodeType": "YulTypedName",
														"src": "4148:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4160:6:10",
														"nodeType": "YulTypedName",
														"src": "4160:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4168:6:10",
														"nodeType": "YulTypedName",
														"src": "4168:6:10",
														"type": ""
													}
												],
												"src": "4092:474:10"
											},
											{
												"body": {
													"nativeSrc": "4638:263:10",
													"nodeType": "YulBlock",
													"src": "4638:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4684:83:10",
																"nodeType": "YulBlock",
																"src": "4684:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4686:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4686:77:10"
																			},
																			"nativeSrc": "4686:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4686:79:10"
																		},
																		"nativeSrc": "4686:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4686:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4659:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4659:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4668:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4668:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4655:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4655:3:10"
																		},
																		"nativeSrc": "4655:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4680:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4680:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4651:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:10"
																},
																"nativeSrc": "4651:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4651:32:10"
															},
															"nativeSrc": "4648:119:10",
															"nodeType": "YulIf",
															"src": "4648:119:10"
														},
														{
															"nativeSrc": "4777:117:10",
															"nodeType": "YulBlock",
															"src": "4777:117:10",
															"statements": [
																{
																	"nativeSrc": "4792:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4792:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4806:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4806:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4796:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4796:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4821:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4821:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4856:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4856:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4867:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4867:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4852:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4852:3:10"
																				},
																				"nativeSrc": "4852:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4852:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4876:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4876:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4831:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4831:20:10"
																		},
																		"nativeSrc": "4831:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4831:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4821:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4821:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4572:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4608:9:10",
														"nodeType": "YulTypedName",
														"src": "4608:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4619:7:10",
														"nodeType": "YulTypedName",
														"src": "4619:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4631:6:10",
														"nodeType": "YulTypedName",
														"src": "4631:6:10",
														"type": ""
													}
												],
												"src": "4572:329:10"
											},
											{
												"body": {
													"nativeSrc": "4949:48:10",
													"nodeType": "YulBlock",
													"src": "4949:48:10",
													"statements": [
														{
															"nativeSrc": "4959:32:10",
															"nodeType": "YulAssignment",
															"src": "4959:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4984:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4984:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4977:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4977:6:10"
																		},
																		"nativeSrc": "4977:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4977:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:10"
																},
																"nativeSrc": "4970:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4970:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4959:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4959:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4907:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4931:5:10",
														"nodeType": "YulTypedName",
														"src": "4931:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4941:7:10",
														"nodeType": "YulTypedName",
														"src": "4941:7:10",
														"type": ""
													}
												],
												"src": "4907:90:10"
											},
											{
												"body": {
													"nativeSrc": "5062:50:10",
													"nodeType": "YulBlock",
													"src": "5062:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5079:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5079:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5099:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5099:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5084:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "5084:14:10"
																		},
																		"nativeSrc": "5084:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5072:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5072:6:10"
																},
																"nativeSrc": "5072:34:10",
																"nodeType": "YulFunctionCall",
																"src": "5072:34:10"
															},
															"nativeSrc": "5072:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "5072:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5003:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5050:5:10",
														"nodeType": "YulTypedName",
														"src": "5050:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5057:3:10",
														"nodeType": "YulTypedName",
														"src": "5057:3:10",
														"type": ""
													}
												],
												"src": "5003:109:10"
											},
											{
												"body": {
													"nativeSrc": "5210:118:10",
													"nodeType": "YulBlock",
													"src": "5210:118:10",
													"statements": [
														{
															"nativeSrc": "5220:26:10",
															"nodeType": "YulAssignment",
															"src": "5220:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5232:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5232:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5243:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5243:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5228:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5228:3:10"
																},
																"nativeSrc": "5228:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5228:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5220:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5220:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5294:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5294:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5307:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5307:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5318:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5303:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5303:3:10"
																		},
																		"nativeSrc": "5303:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5303:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5256:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "5256:37:10"
																},
																"nativeSrc": "5256:65:10",
																"nodeType": "YulFunctionCall",
																"src": "5256:65:10"
															},
															"nativeSrc": "5256:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "5256:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5118:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5182:9:10",
														"nodeType": "YulTypedName",
														"src": "5182:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5194:6:10",
														"nodeType": "YulTypedName",
														"src": "5194:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5205:4:10",
														"nodeType": "YulTypedName",
														"src": "5205:4:10",
														"type": ""
													}
												],
												"src": "5118:210:10"
											},
											{
												"body": {
													"nativeSrc": "5379:81:10",
													"nodeType": "YulBlock",
													"src": "5379:81:10",
													"statements": [
														{
															"nativeSrc": "5389:65:10",
															"nodeType": "YulAssignment",
															"src": "5389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "5411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5400:3:10"
																},
																"nativeSrc": "5400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5361:5:10",
														"nodeType": "YulTypedName",
														"src": "5361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5371:7:10",
														"nodeType": "YulTypedName",
														"src": "5371:7:10",
														"type": ""
													}
												],
												"src": "5334:126:10"
											},
											{
												"body": {
													"nativeSrc": "5511:51:10",
													"nodeType": "YulBlock",
													"src": "5511:51:10",
													"statements": [
														{
															"nativeSrc": "5521:35:10",
															"nodeType": "YulAssignment",
															"src": "5521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5532:17:10"
																},
																"nativeSrc": "5532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5493:5:10",
														"nodeType": "YulTypedName",
														"src": "5493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5503:7:10",
														"nodeType": "YulTypedName",
														"src": "5503:7:10",
														"type": ""
													}
												],
												"src": "5466:96:10"
											},
											{
												"body": {
													"nativeSrc": "5633:53:10",
													"nodeType": "YulBlock",
													"src": "5633:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5650:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5650:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5673:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5673:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5655:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5655:17:10"
																		},
																		"nativeSrc": "5655:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5655:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5643:6:10"
																},
																"nativeSrc": "5643:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5643:37:10"
															},
															"nativeSrc": "5643:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5643:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5568:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5621:5:10",
														"nodeType": "YulTypedName",
														"src": "5621:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5628:3:10",
														"nodeType": "YulTypedName",
														"src": "5628:3:10",
														"type": ""
													}
												],
												"src": "5568:118:10"
											},
											{
												"body": {
													"nativeSrc": "5790:124:10",
													"nodeType": "YulBlock",
													"src": "5790:124:10",
													"statements": [
														{
															"nativeSrc": "5800:26:10",
															"nodeType": "YulAssignment",
															"src": "5800:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5812:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5812:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5823:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5808:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5808:3:10"
																},
																"nativeSrc": "5808:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5808:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5800:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5800:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5880:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5880:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5893:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5893:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5904:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5904:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5889:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:10"
																		},
																		"nativeSrc": "5889:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5836:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5836:43:10"
																},
																"nativeSrc": "5836:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5836:71:10"
															},
															"nativeSrc": "5836:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5836:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5692:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5762:9:10",
														"nodeType": "YulTypedName",
														"src": "5762:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5774:6:10",
														"nodeType": "YulTypedName",
														"src": "5774:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5785:4:10",
														"nodeType": "YulTypedName",
														"src": "5785:4:10",
														"type": ""
													}
												],
												"src": "5692:222:10"
											},
											{
												"body": {
													"nativeSrc": "5952:28:10",
													"nodeType": "YulBlock",
													"src": "5952:28:10",
													"statements": [
														{
															"nativeSrc": "5962:12:10",
															"nodeType": "YulAssignment",
															"src": "5962:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5969:5:10",
																"nodeType": "YulIdentifier",
																"src": "5969:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5962:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5962:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5920:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5938:5:10",
														"nodeType": "YulTypedName",
														"src": "5938:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5948:3:10",
														"nodeType": "YulTypedName",
														"src": "5948:3:10",
														"type": ""
													}
												],
												"src": "5920:60:10"
											},
											{
												"body": {
													"nativeSrc": "6046:82:10",
													"nodeType": "YulBlock",
													"src": "6046:82:10",
													"statements": [
														{
															"nativeSrc": "6056:66:10",
															"nodeType": "YulAssignment",
															"src": "6056:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6114:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6114:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6096:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "6096:17:10"
																				},
																				"nativeSrc": "6096:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6096:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6087:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "6087:8:10"
																		},
																		"nativeSrc": "6087:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6087:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6069:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6069:17:10"
																},
																"nativeSrc": "6069:53:10",
																"nodeType": "YulFunctionCall",
																"src": "6069:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6056:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6056:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5986:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6026:5:10",
														"nodeType": "YulTypedName",
														"src": "6026:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6036:9:10",
														"nodeType": "YulTypedName",
														"src": "6036:9:10",
														"type": ""
													}
												],
												"src": "5986:142:10"
											},
											{
												"body": {
													"nativeSrc": "6194:66:10",
													"nodeType": "YulBlock",
													"src": "6194:66:10",
													"statements": [
														{
															"nativeSrc": "6204:50:10",
															"nodeType": "YulAssignment",
															"src": "6204:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6248:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6248:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6217:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6217:30:10"
																},
																"nativeSrc": "6217:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6217:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6204:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6204:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6134:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6174:5:10",
														"nodeType": "YulTypedName",
														"src": "6174:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6184:9:10",
														"nodeType": "YulTypedName",
														"src": "6184:9:10",
														"type": ""
													}
												],
												"src": "6134:126:10"
											},
											{
												"body": {
													"nativeSrc": "6340:66:10",
													"nodeType": "YulBlock",
													"src": "6340:66:10",
													"statements": [
														{
															"nativeSrc": "6350:50:10",
															"nodeType": "YulAssignment",
															"src": "6350:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6394:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6394:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6363:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6363:30:10"
																},
																"nativeSrc": "6363:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6363:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6350:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6350:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "6266:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6320:5:10",
														"nodeType": "YulTypedName",
														"src": "6320:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6330:9:10",
														"nodeType": "YulTypedName",
														"src": "6330:9:10",
														"type": ""
													}
												],
												"src": "6266:140:10"
											},
											{
												"body": {
													"nativeSrc": "6491:80:10",
													"nodeType": "YulBlock",
													"src": "6491:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6508:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6508:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6558:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6558:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "6513:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "6513:44:10"
																		},
																		"nativeSrc": "6513:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6513:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6501:6:10"
																},
																"nativeSrc": "6501:64:10",
																"nodeType": "YulFunctionCall",
																"src": "6501:64:10"
															},
															"nativeSrc": "6501:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "6501:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "6412:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6479:5:10",
														"nodeType": "YulTypedName",
														"src": "6479:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6486:3:10",
														"nodeType": "YulTypedName",
														"src": "6486:3:10",
														"type": ""
													}
												],
												"src": "6412:159:10"
											},
											{
												"body": {
													"nativeSrc": "6689:138:10",
													"nodeType": "YulBlock",
													"src": "6689:138:10",
													"statements": [
														{
															"nativeSrc": "6699:26:10",
															"nodeType": "YulAssignment",
															"src": "6699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6711:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6711:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6722:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6722:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6707:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6707:3:10"
																},
																"nativeSrc": "6707:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6699:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6793:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6793:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6806:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6806:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6817:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6817:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6802:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6802:3:10"
																		},
																		"nativeSrc": "6802:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6802:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "6735:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "6735:57:10"
																},
																"nativeSrc": "6735:85:10",
																"nodeType": "YulFunctionCall",
																"src": "6735:85:10"
															},
															"nativeSrc": "6735:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "6735:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "6577:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6661:9:10",
														"nodeType": "YulTypedName",
														"src": "6661:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6673:6:10",
														"nodeType": "YulTypedName",
														"src": "6673:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6684:4:10",
														"nodeType": "YulTypedName",
														"src": "6684:4:10",
														"type": ""
													}
												],
												"src": "6577:250:10"
											},
											{
												"body": {
													"nativeSrc": "6876:79:10",
													"nodeType": "YulBlock",
													"src": "6876:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6933:16:10",
																"nodeType": "YulBlock",
																"src": "6933:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6942:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6942:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6945:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6945:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6935:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6935:6:10"
																			},
																			"nativeSrc": "6935:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6935:12:10"
																		},
																		"nativeSrc": "6935:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6935:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6899:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6899:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6924:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6924:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6906:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "6906:17:10"
																				},
																				"nativeSrc": "6906:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6906:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6896:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6896:2:10"
																		},
																		"nativeSrc": "6896:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6896:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6889:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6889:6:10"
																},
																"nativeSrc": "6889:43:10",
																"nodeType": "YulFunctionCall",
																"src": "6889:43:10"
															},
															"nativeSrc": "6886:63:10",
															"nodeType": "YulIf",
															"src": "6886:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6833:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6869:5:10",
														"nodeType": "YulTypedName",
														"src": "6869:5:10",
														"type": ""
													}
												],
												"src": "6833:122:10"
											},
											{
												"body": {
													"nativeSrc": "7013:87:10",
													"nodeType": "YulBlock",
													"src": "7013:87:10",
													"statements": [
														{
															"nativeSrc": "7023:29:10",
															"nodeType": "YulAssignment",
															"src": "7023:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7045:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7045:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7032:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "7032:12:10"
																},
																"nativeSrc": "7032:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7032:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7023:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7023:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7088:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7088:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7061:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "7061:26:10"
																},
																"nativeSrc": "7061:33:10",
																"nodeType": "YulFunctionCall",
																"src": "7061:33:10"
															},
															"nativeSrc": "7061:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "7061:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6961:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6991:6:10",
														"nodeType": "YulTypedName",
														"src": "6991:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6999:3:10",
														"nodeType": "YulTypedName",
														"src": "6999:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7007:5:10",
														"nodeType": "YulTypedName",
														"src": "7007:5:10",
														"type": ""
													}
												],
												"src": "6961:139:10"
											},
											{
												"body": {
													"nativeSrc": "7172:263:10",
													"nodeType": "YulBlock",
													"src": "7172:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7218:83:10",
																"nodeType": "YulBlock",
																"src": "7218:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7220:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7220:77:10"
																			},
																			"nativeSrc": "7220:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7220:79:10"
																		},
																		"nativeSrc": "7220:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7220:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7193:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7193:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7202:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7202:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7189:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:10"
																		},
																		"nativeSrc": "7189:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7214:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7185:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:10"
																},
																"nativeSrc": "7185:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7185:32:10"
															},
															"nativeSrc": "7182:119:10",
															"nodeType": "YulIf",
															"src": "7182:119:10"
														},
														{
															"nativeSrc": "7311:117:10",
															"nodeType": "YulBlock",
															"src": "7311:117:10",
															"statements": [
																{
																	"nativeSrc": "7326:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7326:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7340:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7340:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7330:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7330:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7355:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7355:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7390:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7390:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7401:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7401:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7386:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7386:3:10"
																				},
																				"nativeSrc": "7386:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7386:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7410:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7410:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7365:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7365:20:10"
																		},
																		"nativeSrc": "7365:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7365:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7355:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7355:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7106:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7142:9:10",
														"nodeType": "YulTypedName",
														"src": "7142:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7153:7:10",
														"nodeType": "YulTypedName",
														"src": "7153:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7165:6:10",
														"nodeType": "YulTypedName",
														"src": "7165:6:10",
														"type": ""
													}
												],
												"src": "7106:329:10"
											},
											{
												"body": {
													"nativeSrc": "7547:69:10",
													"nodeType": "YulBlock",
													"src": "7547:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7569:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7569:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7565:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7565:3:10"
																		},
																		"nativeSrc": "7565:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7565:14:10"
																	},
																	{
																		"hexValue": "50726573616c6520697320616c726561647920616374697665",
																		"kind": "string",
																		"nativeSrc": "7581:27:10",
																		"nodeType": "YulLiteral",
																		"src": "7581:27:10",
																		"type": "",
																		"value": "Presale is already active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7558:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7558:6:10"
																},
																"nativeSrc": "7558:51:10",
																"nodeType": "YulFunctionCall",
																"src": "7558:51:10"
															},
															"nativeSrc": "7558:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "7558:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
												"nativeSrc": "7441:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7539:6:10",
														"nodeType": "YulTypedName",
														"src": "7539:6:10",
														"type": ""
													}
												],
												"src": "7441:175:10"
											},
											{
												"body": {
													"nativeSrc": "7768:220:10",
													"nodeType": "YulBlock",
													"src": "7768:220:10",
													"statements": [
														{
															"nativeSrc": "7778:74:10",
															"nodeType": "YulAssignment",
															"src": "7778:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7844:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7849:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7849:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7785:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7785:58:10"
																},
																"nativeSrc": "7785:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7785:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7778:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7778:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7950:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7950:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
																	"nativeSrc": "7861:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7861:88:10"
																},
																"nativeSrc": "7861:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7861:93:10"
															},
															"nativeSrc": "7861:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7861:93:10"
														},
														{
															"nativeSrc": "7963:19:10",
															"nodeType": "YulAssignment",
															"src": "7963:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7974:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7974:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7979:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7970:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7970:3:10"
																},
																"nativeSrc": "7970:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7970:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7963:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7622:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7756:3:10",
														"nodeType": "YulTypedName",
														"src": "7756:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7764:3:10",
														"nodeType": "YulTypedName",
														"src": "7764:3:10",
														"type": ""
													}
												],
												"src": "7622:366:10"
											},
											{
												"body": {
													"nativeSrc": "8165:248:10",
													"nodeType": "YulBlock",
													"src": "8165:248:10",
													"statements": [
														{
															"nativeSrc": "8175:26:10",
															"nodeType": "YulAssignment",
															"src": "8175:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8187:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8187:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8198:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8198:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8183:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8183:3:10"
																},
																"nativeSrc": "8183:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8183:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8175:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8175:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8222:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8222:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8233:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8233:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8218:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8218:3:10"
																		},
																		"nativeSrc": "8218:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8218:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8241:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8241:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8247:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8247:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8237:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8237:3:10"
																		},
																		"nativeSrc": "8237:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8237:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8211:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8211:6:10"
																},
																"nativeSrc": "8211:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8211:47:10"
															},
															"nativeSrc": "8211:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8211:47:10"
														},
														{
															"nativeSrc": "8267:139:10",
															"nodeType": "YulAssignment",
															"src": "8267:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8401:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8401:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8275:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8275:124:10"
																},
																"nativeSrc": "8275:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8275:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8267:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8267:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7994:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8145:9:10",
														"nodeType": "YulTypedName",
														"src": "8145:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8160:4:10",
														"nodeType": "YulTypedName",
														"src": "8160:4:10",
														"type": ""
													}
												],
												"src": "7994:419:10"
											},
											{
												"body": {
													"nativeSrc": "8525:133:10",
													"nodeType": "YulBlock",
													"src": "8525:133:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8547:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8547:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8555:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8555:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8543:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8543:3:10"
																		},
																		"nativeSrc": "8543:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:14:10"
																	},
																	{
																		"hexValue": "5469657273206d75737420626520636f6e66696775726564206265666f726520",
																		"kind": "string",
																		"nativeSrc": "8559:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8559:34:10",
																		"type": "",
																		"value": "Tiers must be configured before "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8536:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8536:6:10"
																},
																"nativeSrc": "8536:58:10",
																"nodeType": "YulFunctionCall",
																"src": "8536:58:10"
															},
															"nativeSrc": "8536:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "8536:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8615:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8615:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8623:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8623:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8611:3:10"
																		},
																		"nativeSrc": "8611:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8611:15:10"
																	},
																	{
																		"hexValue": "7374617274696e67207468652070726573616c65",
																		"kind": "string",
																		"nativeSrc": "8628:22:10",
																		"nodeType": "YulLiteral",
																		"src": "8628:22:10",
																		"type": "",
																		"value": "starting the presale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8604:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8604:6:10"
																},
																"nativeSrc": "8604:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8604:47:10"
															},
															"nativeSrc": "8604:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8604:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549",
												"nativeSrc": "8419:239:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8517:6:10",
														"nodeType": "YulTypedName",
														"src": "8517:6:10",
														"type": ""
													}
												],
												"src": "8419:239:10"
											},
											{
												"body": {
													"nativeSrc": "8810:220:10",
													"nodeType": "YulBlock",
													"src": "8810:220:10",
													"statements": [
														{
															"nativeSrc": "8820:74:10",
															"nodeType": "YulAssignment",
															"src": "8820:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8886:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8886:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8891:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8891:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8827:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8827:58:10"
																},
																"nativeSrc": "8827:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8827:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8820:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8820:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8992:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8992:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549",
																	"nativeSrc": "8903:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8903:88:10"
																},
																"nativeSrc": "8903:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8903:93:10"
															},
															"nativeSrc": "8903:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8903:93:10"
														},
														{
															"nativeSrc": "9005:19:10",
															"nodeType": "YulAssignment",
															"src": "9005:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9016:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9016:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9021:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9021:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9012:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9012:3:10"
																},
																"nativeSrc": "9012:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9012:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9005:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9005:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8664:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8798:3:10",
														"nodeType": "YulTypedName",
														"src": "8798:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8806:3:10",
														"nodeType": "YulTypedName",
														"src": "8806:3:10",
														"type": ""
													}
												],
												"src": "8664:366:10"
											},
											{
												"body": {
													"nativeSrc": "9207:248:10",
													"nodeType": "YulBlock",
													"src": "9207:248:10",
													"statements": [
														{
															"nativeSrc": "9217:26:10",
															"nodeType": "YulAssignment",
															"src": "9217:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9229:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9240:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9225:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:10"
																},
																"nativeSrc": "9225:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9225:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9217:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9264:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9264:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9275:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9275:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9260:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9260:3:10"
																		},
																		"nativeSrc": "9260:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9260:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9283:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9283:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9289:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9289:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9279:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9279:3:10"
																		},
																		"nativeSrc": "9279:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9279:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9253:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9253:6:10"
																},
																"nativeSrc": "9253:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9253:47:10"
															},
															"nativeSrc": "9253:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9253:47:10"
														},
														{
															"nativeSrc": "9309:139:10",
															"nodeType": "YulAssignment",
															"src": "9309:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9443:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9443:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9317:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9317:124:10"
																},
																"nativeSrc": "9317:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9317:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9309:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9309:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9036:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9187:9:10",
														"nodeType": "YulTypedName",
														"src": "9187:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9202:4:10",
														"nodeType": "YulTypedName",
														"src": "9202:4:10",
														"type": ""
													}
												],
												"src": "9036:419:10"
											},
											{
												"body": {
													"nativeSrc": "9567:65:10",
													"nodeType": "YulBlock",
													"src": "9567:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9589:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9589:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9597:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9597:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9585:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9585:3:10"
																		},
																		"nativeSrc": "9585:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9585:14:10"
																	},
																	{
																		"hexValue": "50726573616c65206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "9601:23:10",
																		"nodeType": "YulLiteral",
																		"src": "9601:23:10",
																		"type": "",
																		"value": "Presale is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9578:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9578:6:10"
																},
																"nativeSrc": "9578:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9578:47:10"
															},
															"nativeSrc": "9578:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9578:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
												"nativeSrc": "9461:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9559:6:10",
														"nodeType": "YulTypedName",
														"src": "9559:6:10",
														"type": ""
													}
												],
												"src": "9461:171:10"
											},
											{
												"body": {
													"nativeSrc": "9784:220:10",
													"nodeType": "YulBlock",
													"src": "9784:220:10",
													"statements": [
														{
															"nativeSrc": "9794:74:10",
															"nodeType": "YulAssignment",
															"src": "9794:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9860:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9860:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9865:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9865:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9801:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9801:58:10"
																},
																"nativeSrc": "9801:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9801:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9794:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9794:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9966:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9966:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																	"nativeSrc": "9877:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9877:88:10"
																},
																"nativeSrc": "9877:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9877:93:10"
															},
															"nativeSrc": "9877:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9877:93:10"
														},
														{
															"nativeSrc": "9979:19:10",
															"nodeType": "YulAssignment",
															"src": "9979:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9990:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9990:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9995:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9995:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9986:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9986:3:10"
																},
																"nativeSrc": "9986:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9986:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9979:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9979:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9638:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9772:3:10",
														"nodeType": "YulTypedName",
														"src": "9772:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9780:3:10",
														"nodeType": "YulTypedName",
														"src": "9780:3:10",
														"type": ""
													}
												],
												"src": "9638:366:10"
											},
											{
												"body": {
													"nativeSrc": "10181:248:10",
													"nodeType": "YulBlock",
													"src": "10181:248:10",
													"statements": [
														{
															"nativeSrc": "10191:26:10",
															"nodeType": "YulAssignment",
															"src": "10191:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10203:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10203:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10199:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10199:3:10"
																},
																"nativeSrc": "10199:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10199:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10191:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10191:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10238:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10238:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10249:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10249:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10234:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10234:3:10"
																		},
																		"nativeSrc": "10234:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10234:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10257:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10257:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10263:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10263:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10253:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10253:3:10"
																		},
																		"nativeSrc": "10253:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10253:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10227:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:10"
																},
																"nativeSrc": "10227:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10227:47:10"
															},
															"nativeSrc": "10227:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10227:47:10"
														},
														{
															"nativeSrc": "10283:139:10",
															"nodeType": "YulAssignment",
															"src": "10283:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10417:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10417:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10291:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10291:124:10"
																},
																"nativeSrc": "10291:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10291:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10283:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10283:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10010:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10161:9:10",
														"nodeType": "YulTypedName",
														"src": "10161:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10176:4:10",
														"nodeType": "YulTypedName",
														"src": "10176:4:10",
														"type": ""
													}
												],
												"src": "10010:419:10"
											},
											{
												"body": {
													"nativeSrc": "10541:76:10",
													"nodeType": "YulBlock",
													"src": "10541:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10563:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10563:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10571:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10571:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10559:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10559:3:10"
																		},
																		"nativeSrc": "10559:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10559:14:10"
																	},
																	{
																		"hexValue": "417272617973206d7573742068617665207468652073616d65206c656e677468",
																		"kind": "string",
																		"nativeSrc": "10575:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10575:34:10",
																		"type": "",
																		"value": "Arrays must have the same length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:10"
																},
																"nativeSrc": "10552:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10552:58:10"
															},
															"nativeSrc": "10552:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10552:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19",
												"nativeSrc": "10435:182:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10533:6:10",
														"nodeType": "YulTypedName",
														"src": "10533:6:10",
														"type": ""
													}
												],
												"src": "10435:182:10"
											},
											{
												"body": {
													"nativeSrc": "10769:220:10",
													"nodeType": "YulBlock",
													"src": "10769:220:10",
													"statements": [
														{
															"nativeSrc": "10779:74:10",
															"nodeType": "YulAssignment",
															"src": "10779:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10845:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10845:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10850:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10850:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10786:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10786:58:10"
																},
																"nativeSrc": "10786:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10786:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10779:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10779:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10951:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19",
																	"nativeSrc": "10862:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10862:88:10"
																},
																"nativeSrc": "10862:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10862:93:10"
															},
															"nativeSrc": "10862:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10862:93:10"
														},
														{
															"nativeSrc": "10964:19:10",
															"nodeType": "YulAssignment",
															"src": "10964:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10975:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10975:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10980:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10980:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10971:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10971:3:10"
																},
																"nativeSrc": "10971:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10971:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10964:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10964:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10623:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10757:3:10",
														"nodeType": "YulTypedName",
														"src": "10757:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10765:3:10",
														"nodeType": "YulTypedName",
														"src": "10765:3:10",
														"type": ""
													}
												],
												"src": "10623:366:10"
											},
											{
												"body": {
													"nativeSrc": "11166:248:10",
													"nodeType": "YulBlock",
													"src": "11166:248:10",
													"statements": [
														{
															"nativeSrc": "11176:26:10",
															"nodeType": "YulAssignment",
															"src": "11176:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11188:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11188:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11199:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11199:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11184:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11184:3:10"
																},
																"nativeSrc": "11184:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11184:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11176:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11176:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11223:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11223:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11234:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11234:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11219:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11219:3:10"
																		},
																		"nativeSrc": "11219:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11219:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11242:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11242:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11248:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11248:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11238:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11238:3:10"
																		},
																		"nativeSrc": "11238:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11212:6:10"
																},
																"nativeSrc": "11212:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11212:47:10"
															},
															"nativeSrc": "11212:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11212:47:10"
														},
														{
															"nativeSrc": "11268:139:10",
															"nodeType": "YulAssignment",
															"src": "11268:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11402:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11402:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11276:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11276:124:10"
																},
																"nativeSrc": "11276:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11276:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11268:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11268:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10995:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11146:9:10",
														"nodeType": "YulTypedName",
														"src": "11146:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11161:4:10",
														"nodeType": "YulTypedName",
														"src": "11161:4:10",
														"type": ""
													}
												],
												"src": "10995:419:10"
											},
											{
												"body": {
													"nativeSrc": "11526:65:10",
													"nodeType": "YulBlock",
													"src": "11526:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11548:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11548:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11556:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11556:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11544:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11544:3:10"
																		},
																		"nativeSrc": "11544:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11544:14:10"
																	},
																	{
																		"hexValue": "54696572732063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "11560:23:10",
																		"nodeType": "YulLiteral",
																		"src": "11560:23:10",
																		"type": "",
																		"value": "Tiers cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11537:6:10"
																},
																"nativeSrc": "11537:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11537:47:10"
															},
															"nativeSrc": "11537:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11537:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991",
												"nativeSrc": "11420:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11518:6:10",
														"nodeType": "YulTypedName",
														"src": "11518:6:10",
														"type": ""
													}
												],
												"src": "11420:171:10"
											},
											{
												"body": {
													"nativeSrc": "11743:220:10",
													"nodeType": "YulBlock",
													"src": "11743:220:10",
													"statements": [
														{
															"nativeSrc": "11753:74:10",
															"nodeType": "YulAssignment",
															"src": "11753:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11819:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11819:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11824:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11824:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11760:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11760:58:10"
																},
																"nativeSrc": "11760:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11760:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11753:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11753:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11925:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11925:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991",
																	"nativeSrc": "11836:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11836:88:10"
																},
																"nativeSrc": "11836:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11836:93:10"
															},
															"nativeSrc": "11836:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11836:93:10"
														},
														{
															"nativeSrc": "11938:19:10",
															"nodeType": "YulAssignment",
															"src": "11938:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11949:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11949:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11954:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11954:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11945:3:10"
																},
																"nativeSrc": "11945:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11945:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11938:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11938:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11597:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11731:3:10",
														"nodeType": "YulTypedName",
														"src": "11731:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11739:3:10",
														"nodeType": "YulTypedName",
														"src": "11739:3:10",
														"type": ""
													}
												],
												"src": "11597:366:10"
											},
											{
												"body": {
													"nativeSrc": "12140:248:10",
													"nodeType": "YulBlock",
													"src": "12140:248:10",
													"statements": [
														{
															"nativeSrc": "12150:26:10",
															"nodeType": "YulAssignment",
															"src": "12150:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12162:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12162:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12173:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12173:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12158:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12158:3:10"
																},
																"nativeSrc": "12158:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12158:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12150:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12150:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12197:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12197:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12208:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12208:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12193:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12193:3:10"
																		},
																		"nativeSrc": "12193:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12193:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12216:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12216:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12222:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12222:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12212:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12212:3:10"
																		},
																		"nativeSrc": "12212:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12212:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12186:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:10"
																},
																"nativeSrc": "12186:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12186:47:10"
															},
															"nativeSrc": "12186:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12186:47:10"
														},
														{
															"nativeSrc": "12242:139:10",
															"nodeType": "YulAssignment",
															"src": "12242:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12376:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12376:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12250:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12250:124:10"
																},
																"nativeSrc": "12250:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12250:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12242:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12242:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11969:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12120:9:10",
														"nodeType": "YulTypedName",
														"src": "12120:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12135:4:10",
														"nodeType": "YulTypedName",
														"src": "12135:4:10",
														"type": ""
													}
												],
												"src": "11969:419:10"
											},
											{
												"body": {
													"nativeSrc": "12422:152:10",
													"nodeType": "YulBlock",
													"src": "12422:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12439:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12439:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12442:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12442:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12432:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12432:6:10"
																},
																"nativeSrc": "12432:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12432:88:10"
															},
															"nativeSrc": "12432:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12432:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12536:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12536:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12539:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12539:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12529:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12529:6:10"
																},
																"nativeSrc": "12529:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12529:15:10"
															},
															"nativeSrc": "12529:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12529:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12560:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12560:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12563:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12563:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12553:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12553:6:10"
																},
																"nativeSrc": "12553:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12553:15:10"
															},
															"nativeSrc": "12553:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12553:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12394:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12394:180:10"
											},
											{
												"body": {
													"nativeSrc": "12623:190:10",
													"nodeType": "YulBlock",
													"src": "12623:190:10",
													"statements": [
														{
															"nativeSrc": "12633:33:10",
															"nodeType": "YulAssignment",
															"src": "12633:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12660:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12660:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12642:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12642:17:10"
																},
																"nativeSrc": "12642:24:10",
																"nodeType": "YulFunctionCall",
																"src": "12642:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12633:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12633:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12756:22:10",
																"nodeType": "YulBlock",
																"src": "12756:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12758:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12758:16:10"
																			},
																			"nativeSrc": "12758:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12758:18:10"
																		},
																		"nativeSrc": "12758:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12758:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12681:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12681:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12688:66:10",
																		"nodeType": "YulLiteral",
																		"src": "12688:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12678:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12678:2:10"
																},
																"nativeSrc": "12678:77:10",
																"nodeType": "YulFunctionCall",
																"src": "12678:77:10"
															},
															"nativeSrc": "12675:103:10",
															"nodeType": "YulIf",
															"src": "12675:103:10"
														},
														{
															"nativeSrc": "12787:20:10",
															"nodeType": "YulAssignment",
															"src": "12787:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12798:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12798:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12805:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12805:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12794:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12794:3:10"
																},
																"nativeSrc": "12794:13:10",
																"nodeType": "YulFunctionCall",
																"src": "12794:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12787:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12787:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "12580:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12609:5:10",
														"nodeType": "YulTypedName",
														"src": "12609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12619:3:10",
														"nodeType": "YulTypedName",
														"src": "12619:3:10",
														"type": ""
													}
												],
												"src": "12580:233:10"
											},
											{
												"body": {
													"nativeSrc": "12847:152:10",
													"nodeType": "YulBlock",
													"src": "12847:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12864:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12864:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12867:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12867:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12857:6:10"
																},
																"nativeSrc": "12857:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12857:88:10"
															},
															"nativeSrc": "12857:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12857:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12961:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12961:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12964:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12964:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12954:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12954:6:10"
																},
																"nativeSrc": "12954:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12954:15:10"
															},
															"nativeSrc": "12954:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12954:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12985:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12985:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12988:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12988:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12978:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12978:6:10"
																},
																"nativeSrc": "12978:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12978:15:10"
															},
															"nativeSrc": "12978:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12978:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12819:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12819:180:10"
											},
											{
												"body": {
													"nativeSrc": "13049:147:10",
													"nodeType": "YulBlock",
													"src": "13049:147:10",
													"statements": [
														{
															"nativeSrc": "13059:25:10",
															"nodeType": "YulAssignment",
															"src": "13059:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13082:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13082:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13064:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13064:17:10"
																},
																"nativeSrc": "13064:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13064:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13059:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13059:1:10"
																}
															]
														},
														{
															"nativeSrc": "13093:25:10",
															"nodeType": "YulAssignment",
															"src": "13093:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13116:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13116:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13098:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13098:17:10"
																},
																"nativeSrc": "13098:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13098:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13093:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13093:1:10"
																}
															]
														},
														{
															"nativeSrc": "13127:16:10",
															"nodeType": "YulAssignment",
															"src": "13127:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13138:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13138:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13141:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13141:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13134:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13134:3:10"
																},
																"nativeSrc": "13134:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13134:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13127:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13167:22:10",
																"nodeType": "YulBlock",
																"src": "13167:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13169:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13169:16:10"
																			},
																			"nativeSrc": "13169:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13169:18:10"
																		},
																		"nativeSrc": "13169:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13169:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13159:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13159:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13162:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13162:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13156:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13156:2:10"
																},
																"nativeSrc": "13156:10:10",
																"nodeType": "YulFunctionCall",
																"src": "13156:10:10"
															},
															"nativeSrc": "13153:36:10",
															"nodeType": "YulIf",
															"src": "13153:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13005:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13036:1:10",
														"nodeType": "YulTypedName",
														"src": "13036:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13039:1:10",
														"nodeType": "YulTypedName",
														"src": "13039:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13045:3:10",
														"nodeType": "YulTypedName",
														"src": "13045:3:10",
														"type": ""
													}
												],
												"src": "13005:191:10"
											},
											{
												"body": {
													"nativeSrc": "13308:118:10",
													"nodeType": "YulBlock",
													"src": "13308:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13330:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13330:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13338:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13338:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13326:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13326:3:10"
																		},
																		"nativeSrc": "13326:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13326:14:10"
																	},
																	{
																		"hexValue": "4d696e696d756d20627579206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "13342:34:10",
																		"nodeType": "YulLiteral",
																		"src": "13342:34:10",
																		"type": "",
																		"value": "Minimum buy must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13319:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13319:6:10"
																},
																"nativeSrc": "13319:58:10",
																"nodeType": "YulFunctionCall",
																"src": "13319:58:10"
															},
															"nativeSrc": "13319:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "13319:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13398:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13398:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13406:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13406:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13394:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13394:3:10"
																		},
																		"nativeSrc": "13394:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13394:15:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "13411:7:10",
																		"nodeType": "YulLiteral",
																		"src": "13411:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13387:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13387:6:10"
																},
																"nativeSrc": "13387:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13387:32:10"
															},
															"nativeSrc": "13387:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "13387:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8",
												"nativeSrc": "13202:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13300:6:10",
														"nodeType": "YulTypedName",
														"src": "13300:6:10",
														"type": ""
													}
												],
												"src": "13202:224:10"
											},
											{
												"body": {
													"nativeSrc": "13578:220:10",
													"nodeType": "YulBlock",
													"src": "13578:220:10",
													"statements": [
														{
															"nativeSrc": "13588:74:10",
															"nodeType": "YulAssignment",
															"src": "13588:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13654:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13654:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13659:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13659:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13595:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13595:58:10"
																},
																"nativeSrc": "13595:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13595:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13760:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13760:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8",
																	"nativeSrc": "13671:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13671:88:10"
																},
																"nativeSrc": "13671:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13671:93:10"
															},
															"nativeSrc": "13671:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13671:93:10"
														},
														{
															"nativeSrc": "13773:19:10",
															"nodeType": "YulAssignment",
															"src": "13773:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13784:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13784:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13789:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13789:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13780:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13780:3:10"
																},
																"nativeSrc": "13780:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13780:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13773:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13432:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13566:3:10",
														"nodeType": "YulTypedName",
														"src": "13566:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13574:3:10",
														"nodeType": "YulTypedName",
														"src": "13574:3:10",
														"type": ""
													}
												],
												"src": "13432:366:10"
											},
											{
												"body": {
													"nativeSrc": "13975:248:10",
													"nodeType": "YulBlock",
													"src": "13975:248:10",
													"statements": [
														{
															"nativeSrc": "13985:26:10",
															"nodeType": "YulAssignment",
															"src": "13985:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13997:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13997:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14008:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14008:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13993:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13993:3:10"
																},
																"nativeSrc": "13993:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13993:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13985:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13985:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14032:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14032:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14043:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14043:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14028:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14028:3:10"
																		},
																		"nativeSrc": "14028:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14028:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14051:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14051:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14057:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14057:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14047:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14047:3:10"
																		},
																		"nativeSrc": "14047:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14047:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14021:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14021:6:10"
																},
																"nativeSrc": "14021:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14021:47:10"
															},
															"nativeSrc": "14021:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14021:47:10"
														},
														{
															"nativeSrc": "14077:139:10",
															"nodeType": "YulAssignment",
															"src": "14077:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14211:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14211:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14085:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14085:124:10"
																},
																"nativeSrc": "14085:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14085:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14077:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14077:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13804:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13955:9:10",
														"nodeType": "YulTypedName",
														"src": "13955:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13970:4:10",
														"nodeType": "YulTypedName",
														"src": "13970:4:10",
														"type": ""
													}
												],
												"src": "13804:419:10"
											},
											{
												"body": {
													"nativeSrc": "14335:137:10",
													"nodeType": "YulBlock",
													"src": "14335:137:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14357:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14357:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14365:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14365:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14353:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:10"
																		},
																		"nativeSrc": "14353:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14353:14:10"
																	},
																	{
																		"hexValue": "4d6178696d756d20627579206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "14369:34:10",
																		"nodeType": "YulLiteral",
																		"src": "14369:34:10",
																		"type": "",
																		"value": "Maximum buy must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14346:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:10"
																},
																"nativeSrc": "14346:58:10",
																"nodeType": "YulFunctionCall",
																"src": "14346:58:10"
															},
															"nativeSrc": "14346:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "14346:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14425:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14425:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14433:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14433:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14421:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14421:3:10"
																		},
																		"nativeSrc": "14421:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14421:15:10"
																	},
																	{
																		"hexValue": "206f7220657175616c20746f206d696e696d756d20627579",
																		"kind": "string",
																		"nativeSrc": "14438:26:10",
																		"nodeType": "YulLiteral",
																		"src": "14438:26:10",
																		"type": "",
																		"value": " or equal to minimum buy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14414:6:10"
																},
																"nativeSrc": "14414:51:10",
																"nodeType": "YulFunctionCall",
																"src": "14414:51:10"
															},
															"nativeSrc": "14414:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "14414:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740",
												"nativeSrc": "14229:243:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14327:6:10",
														"nodeType": "YulTypedName",
														"src": "14327:6:10",
														"type": ""
													}
												],
												"src": "14229:243:10"
											},
											{
												"body": {
													"nativeSrc": "14624:220:10",
													"nodeType": "YulBlock",
													"src": "14624:220:10",
													"statements": [
														{
															"nativeSrc": "14634:74:10",
															"nodeType": "YulAssignment",
															"src": "14634:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14700:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14700:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14705:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14705:2:10",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14641:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14641:58:10"
																},
																"nativeSrc": "14641:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14641:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14634:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14634:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14806:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14806:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740",
																	"nativeSrc": "14717:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14717:88:10"
																},
																"nativeSrc": "14717:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14717:93:10"
															},
															"nativeSrc": "14717:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14717:93:10"
														},
														{
															"nativeSrc": "14819:19:10",
															"nodeType": "YulAssignment",
															"src": "14819:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14830:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14830:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14835:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14835:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14826:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14826:3:10"
																},
																"nativeSrc": "14826:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14826:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14819:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14819:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14478:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14612:3:10",
														"nodeType": "YulTypedName",
														"src": "14612:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14620:3:10",
														"nodeType": "YulTypedName",
														"src": "14620:3:10",
														"type": ""
													}
												],
												"src": "14478:366:10"
											},
											{
												"body": {
													"nativeSrc": "15021:248:10",
													"nodeType": "YulBlock",
													"src": "15021:248:10",
													"statements": [
														{
															"nativeSrc": "15031:26:10",
															"nodeType": "YulAssignment",
															"src": "15031:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15043:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15043:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15054:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15054:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15039:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15039:3:10"
																},
																"nativeSrc": "15039:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15039:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15031:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15031:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15078:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15078:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15089:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15089:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15074:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15074:3:10"
																		},
																		"nativeSrc": "15074:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15074:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15097:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15097:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15103:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15103:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15093:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15093:3:10"
																		},
																		"nativeSrc": "15093:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15093:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15067:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15067:6:10"
																},
																"nativeSrc": "15067:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15067:47:10"
															},
															"nativeSrc": "15067:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15067:47:10"
														},
														{
															"nativeSrc": "15123:139:10",
															"nodeType": "YulAssignment",
															"src": "15123:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15257:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15257:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15131:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15131:124:10"
																},
																"nativeSrc": "15131:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15131:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15123:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15123:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14850:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15001:9:10",
														"nodeType": "YulTypedName",
														"src": "15001:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15016:4:10",
														"nodeType": "YulTypedName",
														"src": "15016:4:10",
														"type": ""
													}
												],
												"src": "14850:419:10"
											},
											{
												"body": {
													"nativeSrc": "15401:206:10",
													"nodeType": "YulBlock",
													"src": "15401:206:10",
													"statements": [
														{
															"nativeSrc": "15411:26:10",
															"nodeType": "YulAssignment",
															"src": "15411:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15423:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15423:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15434:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15434:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15419:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15419:3:10"
																},
																"nativeSrc": "15419:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15419:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15411:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15411:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15491:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15491:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15504:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15504:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15515:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15515:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15500:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15500:3:10"
																		},
																		"nativeSrc": "15500:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15500:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15447:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15447:43:10"
																},
																"nativeSrc": "15447:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15447:71:10"
															},
															"nativeSrc": "15447:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15447:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15572:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15572:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15585:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15585:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15596:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15596:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15581:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15581:3:10"
																		},
																		"nativeSrc": "15581:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15581:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15528:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15528:43:10"
																},
																"nativeSrc": "15528:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15528:72:10"
															},
															"nativeSrc": "15528:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15528:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15275:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15365:9:10",
														"nodeType": "YulTypedName",
														"src": "15365:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15377:6:10",
														"nodeType": "YulTypedName",
														"src": "15377:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15385:6:10",
														"nodeType": "YulTypedName",
														"src": "15385:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15396:4:10",
														"nodeType": "YulTypedName",
														"src": "15396:4:10",
														"type": ""
													}
												],
												"src": "15275:332:10"
											},
											{
												"body": {
													"nativeSrc": "15719:125:10",
													"nodeType": "YulBlock",
													"src": "15719:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15741:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15741:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15749:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15749:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15737:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15737:3:10"
																		},
																		"nativeSrc": "15737:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15737:14:10"
																	},
																	{
																		"hexValue": "50726573616c6520697320636f6d706c6574652c206e6f206d6f726520746965",
																		"kind": "string",
																		"nativeSrc": "15753:34:10",
																		"nodeType": "YulLiteral",
																		"src": "15753:34:10",
																		"type": "",
																		"value": "Presale is complete, no more tie"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15730:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15730:6:10"
																},
																"nativeSrc": "15730:58:10",
																"nodeType": "YulFunctionCall",
																"src": "15730:58:10"
															},
															"nativeSrc": "15730:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "15730:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15809:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15809:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15817:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15817:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15805:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15805:3:10"
																		},
																		"nativeSrc": "15805:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15805:15:10"
																	},
																	{
																		"hexValue": "727320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "15822:14:10",
																		"nodeType": "YulLiteral",
																		"src": "15822:14:10",
																		"type": "",
																		"value": "rs available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15798:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15798:6:10"
																},
																"nativeSrc": "15798:39:10",
																"nodeType": "YulFunctionCall",
																"src": "15798:39:10"
															},
															"nativeSrc": "15798:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "15798:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706",
												"nativeSrc": "15613:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15711:6:10",
														"nodeType": "YulTypedName",
														"src": "15711:6:10",
														"type": ""
													}
												],
												"src": "15613:231:10"
											},
											{
												"body": {
													"nativeSrc": "15996:220:10",
													"nodeType": "YulBlock",
													"src": "15996:220:10",
													"statements": [
														{
															"nativeSrc": "16006:74:10",
															"nodeType": "YulAssignment",
															"src": "16006:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16072:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16072:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16077:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16077:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16013:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16013:58:10"
																},
																"nativeSrc": "16013:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16013:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16006:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16178:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706",
																	"nativeSrc": "16089:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16089:88:10"
																},
																"nativeSrc": "16089:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16089:93:10"
															},
															"nativeSrc": "16089:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16089:93:10"
														},
														{
															"nativeSrc": "16191:19:10",
															"nodeType": "YulAssignment",
															"src": "16191:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16202:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16202:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16207:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16207:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16198:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16198:3:10"
																},
																"nativeSrc": "16198:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16198:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16191:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16191:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15850:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15984:3:10",
														"nodeType": "YulTypedName",
														"src": "15984:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15992:3:10",
														"nodeType": "YulTypedName",
														"src": "15992:3:10",
														"type": ""
													}
												],
												"src": "15850:366:10"
											},
											{
												"body": {
													"nativeSrc": "16393:248:10",
													"nodeType": "YulBlock",
													"src": "16393:248:10",
													"statements": [
														{
															"nativeSrc": "16403:26:10",
															"nodeType": "YulAssignment",
															"src": "16403:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16415:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16415:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16426:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16426:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16411:3:10"
																},
																"nativeSrc": "16411:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16411:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16403:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16403:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16450:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16450:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16461:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16461:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16446:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16446:3:10"
																		},
																		"nativeSrc": "16446:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16446:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16469:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16469:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16475:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16475:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16465:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16465:3:10"
																		},
																		"nativeSrc": "16465:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16465:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16439:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16439:6:10"
																},
																"nativeSrc": "16439:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16439:47:10"
															},
															"nativeSrc": "16439:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16439:47:10"
														},
														{
															"nativeSrc": "16495:139:10",
															"nodeType": "YulAssignment",
															"src": "16495:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16629:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16629:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16503:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16503:124:10"
																},
																"nativeSrc": "16503:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16503:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16495:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16495:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16222:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16373:9:10",
														"nodeType": "YulTypedName",
														"src": "16373:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16388:4:10",
														"nodeType": "YulTypedName",
														"src": "16388:4:10",
														"type": ""
													}
												],
												"src": "16222:419:10"
											},
											{
												"body": {
													"nativeSrc": "16753:137:10",
													"nodeType": "YulBlock",
													"src": "16753:137:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16775:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16775:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16783:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16783:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16771:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16771:3:10"
																		},
																		"nativeSrc": "16771:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16771:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e206f722065",
																		"kind": "string",
																		"nativeSrc": "16787:34:10",
																		"nodeType": "YulLiteral",
																		"src": "16787:34:10",
																		"type": "",
																		"value": "Amount must be greater than or e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16764:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16764:6:10"
																},
																"nativeSrc": "16764:58:10",
																"nodeType": "YulFunctionCall",
																"src": "16764:58:10"
															},
															"nativeSrc": "16764:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "16764:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16843:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16843:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16851:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16851:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16839:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16839:3:10"
																		},
																		"nativeSrc": "16839:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16839:15:10"
																	},
																	{
																		"hexValue": "7175616c20746f206d696e696d756d207075726368617365",
																		"kind": "string",
																		"nativeSrc": "16856:26:10",
																		"nodeType": "YulLiteral",
																		"src": "16856:26:10",
																		"type": "",
																		"value": "qual to minimum purchase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16832:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16832:6:10"
																},
																"nativeSrc": "16832:51:10",
																"nodeType": "YulFunctionCall",
																"src": "16832:51:10"
															},
															"nativeSrc": "16832:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "16832:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35",
												"nativeSrc": "16647:243:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16745:6:10",
														"nodeType": "YulTypedName",
														"src": "16745:6:10",
														"type": ""
													}
												],
												"src": "16647:243:10"
											},
											{
												"body": {
													"nativeSrc": "17042:220:10",
													"nodeType": "YulBlock",
													"src": "17042:220:10",
													"statements": [
														{
															"nativeSrc": "17052:74:10",
															"nodeType": "YulAssignment",
															"src": "17052:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17118:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17118:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17123:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17123:2:10",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17059:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17059:58:10"
																},
																"nativeSrc": "17059:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17059:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17052:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17224:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17224:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35",
																	"nativeSrc": "17135:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17135:88:10"
																},
																"nativeSrc": "17135:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17135:93:10"
															},
															"nativeSrc": "17135:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17135:93:10"
														},
														{
															"nativeSrc": "17237:19:10",
															"nodeType": "YulAssignment",
															"src": "17237:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17248:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17248:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17253:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17253:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17244:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17244:3:10"
																},
																"nativeSrc": "17244:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17244:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17237:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17237:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16896:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17030:3:10",
														"nodeType": "YulTypedName",
														"src": "17030:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17038:3:10",
														"nodeType": "YulTypedName",
														"src": "17038:3:10",
														"type": ""
													}
												],
												"src": "16896:366:10"
											},
											{
												"body": {
													"nativeSrc": "17439:248:10",
													"nodeType": "YulBlock",
													"src": "17439:248:10",
													"statements": [
														{
															"nativeSrc": "17449:26:10",
															"nodeType": "YulAssignment",
															"src": "17449:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17461:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17461:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17472:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17472:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17457:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17457:3:10"
																},
																"nativeSrc": "17457:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17457:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17449:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17449:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17496:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17496:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17507:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17507:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17492:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17492:3:10"
																		},
																		"nativeSrc": "17492:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17492:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17515:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17515:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17521:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17521:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17511:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17511:3:10"
																		},
																		"nativeSrc": "17511:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17511:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17485:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17485:6:10"
																},
																"nativeSrc": "17485:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17485:47:10"
															},
															"nativeSrc": "17485:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17485:47:10"
														},
														{
															"nativeSrc": "17541:139:10",
															"nodeType": "YulAssignment",
															"src": "17541:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17675:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17675:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17549:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17549:124:10"
																},
																"nativeSrc": "17549:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17549:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17541:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17541:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17268:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17419:9:10",
														"nodeType": "YulTypedName",
														"src": "17419:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17434:4:10",
														"nodeType": "YulTypedName",
														"src": "17434:4:10",
														"type": ""
													}
												],
												"src": "17268:419:10"
											},
											{
												"body": {
													"nativeSrc": "17799:134:10",
													"nodeType": "YulBlock",
													"src": "17799:134:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17821:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17821:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17829:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17817:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17817:3:10"
																		},
																		"nativeSrc": "17817:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17817:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e206f722065717561",
																		"kind": "string",
																		"nativeSrc": "17833:34:10",
																		"nodeType": "YulLiteral",
																		"src": "17833:34:10",
																		"type": "",
																		"value": "Amount must be less than or equa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17810:6:10"
																},
																"nativeSrc": "17810:58:10",
																"nodeType": "YulFunctionCall",
																"src": "17810:58:10"
															},
															"nativeSrc": "17810:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "17810:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17889:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17889:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17897:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17897:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17885:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17885:3:10"
																		},
																		"nativeSrc": "17885:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17885:15:10"
																	},
																	{
																		"hexValue": "6c20746f206d6178696d756d207075726368617365",
																		"kind": "string",
																		"nativeSrc": "17902:23:10",
																		"nodeType": "YulLiteral",
																		"src": "17902:23:10",
																		"type": "",
																		"value": "l to maximum purchase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17878:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17878:6:10"
																},
																"nativeSrc": "17878:48:10",
																"nodeType": "YulFunctionCall",
																"src": "17878:48:10"
															},
															"nativeSrc": "17878:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "17878:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c",
												"nativeSrc": "17693:240:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17791:6:10",
														"nodeType": "YulTypedName",
														"src": "17791:6:10",
														"type": ""
													}
												],
												"src": "17693:240:10"
											},
											{
												"body": {
													"nativeSrc": "18085:220:10",
													"nodeType": "YulBlock",
													"src": "18085:220:10",
													"statements": [
														{
															"nativeSrc": "18095:74:10",
															"nodeType": "YulAssignment",
															"src": "18095:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18161:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18161:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18166:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18166:2:10",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18102:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18102:58:10"
																},
																"nativeSrc": "18102:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18102:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18095:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18095:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18267:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18267:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c",
																	"nativeSrc": "18178:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18178:88:10"
																},
																"nativeSrc": "18178:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18178:93:10"
															},
															"nativeSrc": "18178:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18178:93:10"
														},
														{
															"nativeSrc": "18280:19:10",
															"nodeType": "YulAssignment",
															"src": "18280:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18291:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18291:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18296:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18296:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18287:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18287:3:10"
																},
																"nativeSrc": "18287:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18287:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18280:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17939:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18073:3:10",
														"nodeType": "YulTypedName",
														"src": "18073:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18081:3:10",
														"nodeType": "YulTypedName",
														"src": "18081:3:10",
														"type": ""
													}
												],
												"src": "17939:366:10"
											},
											{
												"body": {
													"nativeSrc": "18482:248:10",
													"nodeType": "YulBlock",
													"src": "18482:248:10",
													"statements": [
														{
															"nativeSrc": "18492:26:10",
															"nodeType": "YulAssignment",
															"src": "18492:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18504:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18504:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18515:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18515:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18500:3:10"
																},
																"nativeSrc": "18500:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18500:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18492:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18492:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18539:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18539:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18550:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18550:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18535:3:10"
																		},
																		"nativeSrc": "18535:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18535:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18558:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18558:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18564:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18564:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18554:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18554:3:10"
																		},
																		"nativeSrc": "18554:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18554:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18528:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18528:6:10"
																},
																"nativeSrc": "18528:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18528:47:10"
															},
															"nativeSrc": "18528:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18528:47:10"
														},
														{
															"nativeSrc": "18584:139:10",
															"nodeType": "YulAssignment",
															"src": "18584:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18718:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18718:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18592:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18592:124:10"
																},
																"nativeSrc": "18592:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18592:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18584:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18584:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18311:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18462:9:10",
														"nodeType": "YulTypedName",
														"src": "18462:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18477:4:10",
														"nodeType": "YulTypedName",
														"src": "18477:4:10",
														"type": ""
													}
												],
												"src": "18311:419:10"
											},
											{
												"body": {
													"nativeSrc": "18784:362:10",
													"nodeType": "YulBlock",
													"src": "18784:362:10",
													"statements": [
														{
															"nativeSrc": "18794:25:10",
															"nodeType": "YulAssignment",
															"src": "18794:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18817:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18817:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18799:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "18799:17:10"
																},
																"nativeSrc": "18799:20:10",
																"nodeType": "YulFunctionCall",
																"src": "18799:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18794:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "18794:1:10"
																}
															]
														},
														{
															"nativeSrc": "18828:25:10",
															"nodeType": "YulAssignment",
															"src": "18828:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18851:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18851:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18833:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "18833:17:10"
																},
																"nativeSrc": "18833:20:10",
																"nodeType": "YulFunctionCall",
																"src": "18833:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18828:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "18828:1:10"
																}
															]
														},
														{
															"nativeSrc": "18862:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "18862:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18885:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18885:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18888:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18888:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18881:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18881:3:10"
																},
																"nativeSrc": "18881:9:10",
																"nodeType": "YulFunctionCall",
																"src": "18881:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18866:11:10",
																	"nodeType": "YulTypedName",
																	"src": "18866:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18899:41:10",
															"nodeType": "YulAssignment",
															"src": "18899:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "18928:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "18928:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18910:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "18910:17:10"
																},
																"nativeSrc": "18910:30:10",
																"nodeType": "YulFunctionCall",
																"src": "18910:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18899:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "18899:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19117:22:10",
																"nodeType": "YulBlock",
																"src": "19117:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19119:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "19119:16:10"
																			},
																			"nativeSrc": "19119:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19119:18:10"
																		},
																		"nativeSrc": "19119:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19119:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "19050:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "19050:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "19043:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "19043:6:10"
																				},
																				"nativeSrc": "19043:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19043:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "19073:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "19073:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "19080:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "19080:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "19089:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "19089:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "19076:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "19076:3:10"
																						},
																						"nativeSrc": "19076:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "19076:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "19070:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "19070:2:10"
																				},
																				"nativeSrc": "19070:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19070:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "19023:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "19023:2:10"
																		},
																		"nativeSrc": "19023:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19023:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19003:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19003:6:10"
																},
																"nativeSrc": "19003:113:10",
																"nodeType": "YulFunctionCall",
																"src": "19003:113:10"
															},
															"nativeSrc": "19000:139:10",
															"nodeType": "YulIf",
															"src": "19000:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18736:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18767:1:10",
														"nodeType": "YulTypedName",
														"src": "18767:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18770:1:10",
														"nodeType": "YulTypedName",
														"src": "18770:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18776:7:10",
														"nodeType": "YulTypedName",
														"src": "18776:7:10",
														"type": ""
													}
												],
												"src": "18736:410:10"
											},
											{
												"body": {
													"nativeSrc": "19180:152:10",
													"nodeType": "YulBlock",
													"src": "19180:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19197:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19200:77:10",
																		"nodeType": "YulLiteral",
																		"src": "19200:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19190:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19190:6:10"
																},
																"nativeSrc": "19190:88:10",
																"nodeType": "YulFunctionCall",
																"src": "19190:88:10"
															},
															"nativeSrc": "19190:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "19190:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19294:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19294:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19297:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19297:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19287:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19287:6:10"
																},
																"nativeSrc": "19287:15:10",
																"nodeType": "YulFunctionCall",
																"src": "19287:15:10"
															},
															"nativeSrc": "19287:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "19287:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19318:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19318:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19321:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19321:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19311:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19311:6:10"
																},
																"nativeSrc": "19311:15:10",
																"nodeType": "YulFunctionCall",
																"src": "19311:15:10"
															},
															"nativeSrc": "19311:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "19311:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "19152:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "19152:180:10"
											},
											{
												"body": {
													"nativeSrc": "19380:143:10",
													"nodeType": "YulBlock",
													"src": "19380:143:10",
													"statements": [
														{
															"nativeSrc": "19390:25:10",
															"nodeType": "YulAssignment",
															"src": "19390:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19413:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19413:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19395:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "19395:17:10"
																},
																"nativeSrc": "19395:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19395:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19390:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19390:1:10"
																}
															]
														},
														{
															"nativeSrc": "19424:25:10",
															"nodeType": "YulAssignment",
															"src": "19424:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19447:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19447:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19429:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "19429:17:10"
																},
																"nativeSrc": "19429:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19429:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19424:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19424:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19471:22:10",
																"nodeType": "YulBlock",
																"src": "19471:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "19473:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "19473:16:10"
																			},
																			"nativeSrc": "19473:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19473:18:10"
																		},
																		"nativeSrc": "19473:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19473:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19468:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19468:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19461:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19461:6:10"
																},
																"nativeSrc": "19461:9:10",
																"nodeType": "YulFunctionCall",
																"src": "19461:9:10"
															},
															"nativeSrc": "19458:35:10",
															"nodeType": "YulIf",
															"src": "19458:35:10"
														},
														{
															"nativeSrc": "19503:14:10",
															"nodeType": "YulAssignment",
															"src": "19503:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19512:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19512:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19515:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19515:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19508:3:10"
																},
																"nativeSrc": "19508:9:10",
																"nodeType": "YulFunctionCall",
																"src": "19508:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "19503:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19503:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "19338:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19369:1:10",
														"nodeType": "YulTypedName",
														"src": "19369:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19372:1:10",
														"nodeType": "YulTypedName",
														"src": "19372:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "19378:1:10",
														"nodeType": "YulTypedName",
														"src": "19378:1:10",
														"type": ""
													}
												],
												"src": "19338:185:10"
											},
											{
												"body": {
													"nativeSrc": "19635:73:10",
													"nodeType": "YulBlock",
													"src": "19635:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19657:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19657:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19665:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19665:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19653:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19653:3:10"
																		},
																		"nativeSrc": "19653:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19653:14:10"
																	},
																	{
																		"hexValue": "536c6970706167652070726f74656374696f6e20747269676765726564",
																		"kind": "string",
																		"nativeSrc": "19669:31:10",
																		"nodeType": "YulLiteral",
																		"src": "19669:31:10",
																		"type": "",
																		"value": "Slippage protection triggered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19646:6:10"
																},
																"nativeSrc": "19646:55:10",
																"nodeType": "YulFunctionCall",
																"src": "19646:55:10"
															},
															"nativeSrc": "19646:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "19646:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8",
												"nativeSrc": "19529:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19627:6:10",
														"nodeType": "YulTypedName",
														"src": "19627:6:10",
														"type": ""
													}
												],
												"src": "19529:179:10"
											},
											{
												"body": {
													"nativeSrc": "19860:220:10",
													"nodeType": "YulBlock",
													"src": "19860:220:10",
													"statements": [
														{
															"nativeSrc": "19870:74:10",
															"nodeType": "YulAssignment",
															"src": "19870:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19936:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19936:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19941:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19941:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19877:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19877:58:10"
																},
																"nativeSrc": "19877:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19877:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19870:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19870:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20042:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20042:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8",
																	"nativeSrc": "19953:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19953:88:10"
																},
																"nativeSrc": "19953:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19953:93:10"
															},
															"nativeSrc": "19953:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19953:93:10"
														},
														{
															"nativeSrc": "20055:19:10",
															"nodeType": "YulAssignment",
															"src": "20055:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20066:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20066:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20071:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20071:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20062:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20062:3:10"
																},
																"nativeSrc": "20062:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20062:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20055:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20055:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19714:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19848:3:10",
														"nodeType": "YulTypedName",
														"src": "19848:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19856:3:10",
														"nodeType": "YulTypedName",
														"src": "19856:3:10",
														"type": ""
													}
												],
												"src": "19714:366:10"
											},
											{
												"body": {
													"nativeSrc": "20257:248:10",
													"nodeType": "YulBlock",
													"src": "20257:248:10",
													"statements": [
														{
															"nativeSrc": "20267:26:10",
															"nodeType": "YulAssignment",
															"src": "20267:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20279:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20279:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20290:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20290:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20275:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20275:3:10"
																},
																"nativeSrc": "20275:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20275:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20267:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20267:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20314:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20314:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20325:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20325:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20310:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20310:3:10"
																		},
																		"nativeSrc": "20310:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20310:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20333:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20333:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20339:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20339:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20329:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20329:3:10"
																		},
																		"nativeSrc": "20329:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20329:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20303:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20303:6:10"
																},
																"nativeSrc": "20303:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20303:47:10"
															},
															"nativeSrc": "20303:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20303:47:10"
														},
														{
															"nativeSrc": "20359:139:10",
															"nodeType": "YulAssignment",
															"src": "20359:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20493:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20493:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20367:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20367:124:10"
																},
																"nativeSrc": "20367:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20367:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20359:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20359:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20086:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20237:9:10",
														"nodeType": "YulTypedName",
														"src": "20237:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20252:4:10",
														"nodeType": "YulTypedName",
														"src": "20252:4:10",
														"type": ""
													}
												],
												"src": "20086:419:10"
											},
											{
												"body": {
													"nativeSrc": "20617:118:10",
													"nodeType": "YulBlock",
													"src": "20617:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20639:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20639:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20647:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20647:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20635:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20635:3:10"
																		},
																		"nativeSrc": "20635:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20635:14:10"
																	},
																	{
																		"hexValue": "507572636861736520657863656564732063757272656e742074696572277320",
																		"kind": "string",
																		"nativeSrc": "20651:34:10",
																		"nodeType": "YulLiteral",
																		"src": "20651:34:10",
																		"type": "",
																		"value": "Purchase exceeds current tier's "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20628:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20628:6:10"
																},
																"nativeSrc": "20628:58:10",
																"nodeType": "YulFunctionCall",
																"src": "20628:58:10"
															},
															"nativeSrc": "20628:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "20628:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20707:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20707:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20715:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20715:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20703:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20703:3:10"
																		},
																		"nativeSrc": "20703:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20703:15:10"
																	},
																	{
																		"hexValue": "6c696d6974",
																		"kind": "string",
																		"nativeSrc": "20720:7:10",
																		"nodeType": "YulLiteral",
																		"src": "20720:7:10",
																		"type": "",
																		"value": "limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20696:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20696:6:10"
																},
																"nativeSrc": "20696:32:10",
																"nodeType": "YulFunctionCall",
																"src": "20696:32:10"
															},
															"nativeSrc": "20696:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "20696:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299",
												"nativeSrc": "20511:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20609:6:10",
														"nodeType": "YulTypedName",
														"src": "20609:6:10",
														"type": ""
													}
												],
												"src": "20511:224:10"
											},
											{
												"body": {
													"nativeSrc": "20887:220:10",
													"nodeType": "YulBlock",
													"src": "20887:220:10",
													"statements": [
														{
															"nativeSrc": "20897:74:10",
															"nodeType": "YulAssignment",
															"src": "20897:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20963:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20963:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20968:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20968:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20904:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20904:58:10"
																},
																"nativeSrc": "20904:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20904:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20897:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21069:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21069:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299",
																	"nativeSrc": "20980:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20980:88:10"
																},
																"nativeSrc": "20980:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20980:93:10"
															},
															"nativeSrc": "20980:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20980:93:10"
														},
														{
															"nativeSrc": "21082:19:10",
															"nodeType": "YulAssignment",
															"src": "21082:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21093:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21093:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21098:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21098:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21089:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21089:3:10"
																},
																"nativeSrc": "21089:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21089:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21082:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21082:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20741:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20875:3:10",
														"nodeType": "YulTypedName",
														"src": "20875:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20883:3:10",
														"nodeType": "YulTypedName",
														"src": "20883:3:10",
														"type": ""
													}
												],
												"src": "20741:366:10"
											},
											{
												"body": {
													"nativeSrc": "21284:248:10",
													"nodeType": "YulBlock",
													"src": "21284:248:10",
													"statements": [
														{
															"nativeSrc": "21294:26:10",
															"nodeType": "YulAssignment",
															"src": "21294:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21306:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21306:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21317:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21317:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21302:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21302:3:10"
																},
																"nativeSrc": "21302:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21302:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21294:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21294:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21341:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21341:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21352:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21352:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21337:3:10"
																		},
																		"nativeSrc": "21337:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21337:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21360:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21360:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21366:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21366:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21356:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21356:3:10"
																		},
																		"nativeSrc": "21356:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21356:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21330:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21330:6:10"
																},
																"nativeSrc": "21330:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21330:47:10"
															},
															"nativeSrc": "21330:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21330:47:10"
														},
														{
															"nativeSrc": "21386:139:10",
															"nodeType": "YulAssignment",
															"src": "21386:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21520:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21520:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21394:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21394:124:10"
																},
																"nativeSrc": "21394:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21394:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21386:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21386:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21113:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21264:9:10",
														"nodeType": "YulTypedName",
														"src": "21264:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21279:4:10",
														"nodeType": "YulTypedName",
														"src": "21279:4:10",
														"type": ""
													}
												],
												"src": "21113:419:10"
											},
											{
												"body": {
													"nativeSrc": "21601:80:10",
													"nodeType": "YulBlock",
													"src": "21601:80:10",
													"statements": [
														{
															"nativeSrc": "21611:22:10",
															"nodeType": "YulAssignment",
															"src": "21611:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21626:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21626:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21620:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21620:5:10"
																},
																"nativeSrc": "21620:13:10",
																"nodeType": "YulFunctionCall",
																"src": "21620:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21611:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21611:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21669:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21669:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "21642:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "21642:26:10"
																},
																"nativeSrc": "21642:33:10",
																"nodeType": "YulFunctionCall",
																"src": "21642:33:10"
															},
															"nativeSrc": "21642:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "21642:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "21538:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21579:6:10",
														"nodeType": "YulTypedName",
														"src": "21579:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21587:3:10",
														"nodeType": "YulTypedName",
														"src": "21587:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21595:5:10",
														"nodeType": "YulTypedName",
														"src": "21595:5:10",
														"type": ""
													}
												],
												"src": "21538:143:10"
											},
											{
												"body": {
													"nativeSrc": "21764:274:10",
													"nodeType": "YulBlock",
													"src": "21764:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "21810:83:10",
																"nodeType": "YulBlock",
																"src": "21810:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21812:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "21812:77:10"
																			},
																			"nativeSrc": "21812:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21812:79:10"
																		},
																		"nativeSrc": "21812:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21812:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21785:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "21785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21794:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21781:3:10"
																		},
																		"nativeSrc": "21781:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21781:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21806:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21806:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21777:3:10"
																},
																"nativeSrc": "21777:32:10",
																"nodeType": "YulFunctionCall",
																"src": "21777:32:10"
															},
															"nativeSrc": "21774:119:10",
															"nodeType": "YulIf",
															"src": "21774:119:10"
														},
														{
															"nativeSrc": "21903:128:10",
															"nodeType": "YulBlock",
															"src": "21903:128:10",
															"statements": [
																{
																	"nativeSrc": "21918:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21918:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21932:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21932:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21922:6:10",
																			"nodeType": "YulTypedName",
																			"src": "21922:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21947:74:10",
																	"nodeType": "YulAssignment",
																	"src": "21947:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21993:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "21993:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22004:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "22004:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21989:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21989:3:10"
																				},
																				"nativeSrc": "21989:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "21989:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22013:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "22013:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "21957:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "21957:31:10"
																		},
																		"nativeSrc": "21957:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21957:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21947:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "21947:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "21687:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21734:9:10",
														"nodeType": "YulTypedName",
														"src": "21734:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21745:7:10",
														"nodeType": "YulTypedName",
														"src": "21745:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21757:6:10",
														"nodeType": "YulTypedName",
														"src": "21757:6:10",
														"type": ""
													}
												],
												"src": "21687:351:10"
											},
											{
												"body": {
													"nativeSrc": "22150:73:10",
													"nodeType": "YulBlock",
													"src": "22150:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22172:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22172:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22180:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22180:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22168:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22168:3:10"
																		},
																		"nativeSrc": "22168:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22168:14:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "22184:31:10",
																		"nodeType": "YulLiteral",
																		"src": "22184:31:10",
																		"type": "",
																		"value": "Not enough tokens in contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22161:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22161:6:10"
																},
																"nativeSrc": "22161:55:10",
																"nodeType": "YulFunctionCall",
																"src": "22161:55:10"
															},
															"nativeSrc": "22161:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "22161:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
												"nativeSrc": "22044:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22142:6:10",
														"nodeType": "YulTypedName",
														"src": "22142:6:10",
														"type": ""
													}
												],
												"src": "22044:179:10"
											},
											{
												"body": {
													"nativeSrc": "22375:220:10",
													"nodeType": "YulBlock",
													"src": "22375:220:10",
													"statements": [
														{
															"nativeSrc": "22385:74:10",
															"nodeType": "YulAssignment",
															"src": "22385:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22451:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22451:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22456:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22456:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22392:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "22392:58:10"
																},
																"nativeSrc": "22392:67:10",
																"nodeType": "YulFunctionCall",
																"src": "22392:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22385:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22385:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22557:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22557:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
																	"nativeSrc": "22468:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "22468:88:10"
																},
																"nativeSrc": "22468:93:10",
																"nodeType": "YulFunctionCall",
																"src": "22468:93:10"
															},
															"nativeSrc": "22468:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "22468:93:10"
														},
														{
															"nativeSrc": "22570:19:10",
															"nodeType": "YulAssignment",
															"src": "22570:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22581:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22581:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22586:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22586:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22577:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22577:3:10"
																},
																"nativeSrc": "22577:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22577:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22570:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22570:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22229:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22363:3:10",
														"nodeType": "YulTypedName",
														"src": "22363:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22371:3:10",
														"nodeType": "YulTypedName",
														"src": "22371:3:10",
														"type": ""
													}
												],
												"src": "22229:366:10"
											},
											{
												"body": {
													"nativeSrc": "22772:248:10",
													"nodeType": "YulBlock",
													"src": "22772:248:10",
													"statements": [
														{
															"nativeSrc": "22782:26:10",
															"nodeType": "YulAssignment",
															"src": "22782:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22794:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22794:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22805:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22805:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22790:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22790:3:10"
																},
																"nativeSrc": "22790:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22790:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22782:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22782:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22829:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22829:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22840:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22840:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22825:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22825:3:10"
																		},
																		"nativeSrc": "22825:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22825:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22848:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22848:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22854:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22854:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22844:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22844:3:10"
																		},
																		"nativeSrc": "22844:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22844:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22818:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22818:6:10"
																},
																"nativeSrc": "22818:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22818:47:10"
															},
															"nativeSrc": "22818:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22818:47:10"
														},
														{
															"nativeSrc": "22874:139:10",
															"nodeType": "YulAssignment",
															"src": "22874:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23008:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23008:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22882:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22882:124:10"
																},
																"nativeSrc": "22882:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22882:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22874:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22601:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22752:9:10",
														"nodeType": "YulTypedName",
														"src": "22752:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22767:4:10",
														"nodeType": "YulTypedName",
														"src": "22767:4:10",
														"type": ""
													}
												],
												"src": "22601:419:10"
											},
											{
												"body": {
													"nativeSrc": "23132:63:10",
													"nodeType": "YulBlock",
													"src": "23132:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23154:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23154:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23162:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23162:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23150:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23150:3:10"
																		},
																		"nativeSrc": "23150:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23150:14:10"
																	},
																	{
																		"hexValue": "5469657220646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "23166:21:10",
																		"nodeType": "YulLiteral",
																		"src": "23166:21:10",
																		"type": "",
																		"value": "Tier does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23143:6:10"
																},
																"nativeSrc": "23143:45:10",
																"nodeType": "YulFunctionCall",
																"src": "23143:45:10"
															},
															"nativeSrc": "23143:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "23143:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047",
												"nativeSrc": "23026:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23124:6:10",
														"nodeType": "YulTypedName",
														"src": "23124:6:10",
														"type": ""
													}
												],
												"src": "23026:169:10"
											},
											{
												"body": {
													"nativeSrc": "23347:220:10",
													"nodeType": "YulBlock",
													"src": "23347:220:10",
													"statements": [
														{
															"nativeSrc": "23357:74:10",
															"nodeType": "YulAssignment",
															"src": "23357:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23423:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23423:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23428:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23364:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "23364:58:10"
																},
																"nativeSrc": "23364:67:10",
																"nodeType": "YulFunctionCall",
																"src": "23364:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23357:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23357:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23529:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23529:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047",
																	"nativeSrc": "23440:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "23440:88:10"
																},
																"nativeSrc": "23440:93:10",
																"nodeType": "YulFunctionCall",
																"src": "23440:93:10"
															},
															"nativeSrc": "23440:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "23440:93:10"
														},
														{
															"nativeSrc": "23542:19:10",
															"nodeType": "YulAssignment",
															"src": "23542:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23553:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23553:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23558:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23558:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23549:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23549:3:10"
																},
																"nativeSrc": "23549:12:10",
																"nodeType": "YulFunctionCall",
																"src": "23549:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23542:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23201:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23335:3:10",
														"nodeType": "YulTypedName",
														"src": "23335:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23343:3:10",
														"nodeType": "YulTypedName",
														"src": "23343:3:10",
														"type": ""
													}
												],
												"src": "23201:366:10"
											},
											{
												"body": {
													"nativeSrc": "23744:248:10",
													"nodeType": "YulBlock",
													"src": "23744:248:10",
													"statements": [
														{
															"nativeSrc": "23754:26:10",
															"nodeType": "YulAssignment",
															"src": "23754:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23766:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23766:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23777:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23777:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23762:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23762:3:10"
																},
																"nativeSrc": "23762:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23762:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23754:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23754:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23801:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23801:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23812:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23812:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23797:3:10"
																		},
																		"nativeSrc": "23797:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23797:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23820:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23820:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23826:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23816:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23816:3:10"
																		},
																		"nativeSrc": "23816:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23816:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23790:6:10"
																},
																"nativeSrc": "23790:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23790:47:10"
															},
															"nativeSrc": "23790:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23790:47:10"
														},
														{
															"nativeSrc": "23846:139:10",
															"nodeType": "YulAssignment",
															"src": "23846:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23980:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23980:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23854:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23854:124:10"
																},
																"nativeSrc": "23854:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23854:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23846:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23846:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23573:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23724:9:10",
														"nodeType": "YulTypedName",
														"src": "23724:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23739:4:10",
														"nodeType": "YulTypedName",
														"src": "23739:4:10",
														"type": ""
													}
												],
												"src": "23573:419:10"
											},
											{
												"body": {
													"nativeSrc": "24104:75:10",
													"nodeType": "YulBlock",
													"src": "24104:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24126:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24126:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24134:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24134:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24122:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24122:3:10"
																		},
																		"nativeSrc": "24122:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24122:14:10"
																	},
																	{
																		"hexValue": "4e6f2072656d61696e696e6720746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "24138:33:10",
																		"nodeType": "YulLiteral",
																		"src": "24138:33:10",
																		"type": "",
																		"value": "No remaining tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24115:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24115:6:10"
																},
																"nativeSrc": "24115:57:10",
																"nodeType": "YulFunctionCall",
																"src": "24115:57:10"
															},
															"nativeSrc": "24115:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "24115:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c",
												"nativeSrc": "23998:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24096:6:10",
														"nodeType": "YulTypedName",
														"src": "24096:6:10",
														"type": ""
													}
												],
												"src": "23998:181:10"
											},
											{
												"body": {
													"nativeSrc": "24331:220:10",
													"nodeType": "YulBlock",
													"src": "24331:220:10",
													"statements": [
														{
															"nativeSrc": "24341:74:10",
															"nodeType": "YulAssignment",
															"src": "24341:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24407:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24407:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24412:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24412:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24348:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "24348:58:10"
																},
																"nativeSrc": "24348:67:10",
																"nodeType": "YulFunctionCall",
																"src": "24348:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24341:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24513:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24513:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c",
																	"nativeSrc": "24424:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "24424:88:10"
																},
																"nativeSrc": "24424:93:10",
																"nodeType": "YulFunctionCall",
																"src": "24424:93:10"
															},
															"nativeSrc": "24424:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "24424:93:10"
														},
														{
															"nativeSrc": "24526:19:10",
															"nodeType": "YulAssignment",
															"src": "24526:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24537:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24537:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24542:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24542:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24533:3:10"
																},
																"nativeSrc": "24533:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24533:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24526:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24526:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24185:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24319:3:10",
														"nodeType": "YulTypedName",
														"src": "24319:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24327:3:10",
														"nodeType": "YulTypedName",
														"src": "24327:3:10",
														"type": ""
													}
												],
												"src": "24185:366:10"
											},
											{
												"body": {
													"nativeSrc": "24728:248:10",
													"nodeType": "YulBlock",
													"src": "24728:248:10",
													"statements": [
														{
															"nativeSrc": "24738:26:10",
															"nodeType": "YulAssignment",
															"src": "24738:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24750:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24750:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24761:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24761:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24746:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24746:3:10"
																},
																"nativeSrc": "24746:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24746:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24738:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24738:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24785:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24785:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24796:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24796:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24781:3:10"
																		},
																		"nativeSrc": "24781:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24781:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24804:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "24804:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24810:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24810:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24800:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24800:3:10"
																		},
																		"nativeSrc": "24800:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24800:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24774:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24774:6:10"
																},
																"nativeSrc": "24774:47:10",
																"nodeType": "YulFunctionCall",
																"src": "24774:47:10"
															},
															"nativeSrc": "24774:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "24774:47:10"
														},
														{
															"nativeSrc": "24830:139:10",
															"nodeType": "YulAssignment",
															"src": "24830:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24964:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "24964:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24838:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "24838:124:10"
																},
																"nativeSrc": "24838:131:10",
																"nodeType": "YulFunctionCall",
																"src": "24838:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24830:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24830:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24557:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24708:9:10",
														"nodeType": "YulTypedName",
														"src": "24708:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24723:4:10",
														"nodeType": "YulTypedName",
														"src": "24723:4:10",
														"type": ""
													}
												],
												"src": "24557:419:10"
											},
											{
												"body": {
													"nativeSrc": "25088:122:10",
													"nodeType": "YulBlock",
													"src": "25088:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25110:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "25110:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25118:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25118:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25106:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25106:3:10"
																		},
																		"nativeSrc": "25106:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25106:14:10"
																	},
																	{
																		"hexValue": "50726573616c65206d7573742062652073746f7070656420746f207769746864",
																		"kind": "string",
																		"nativeSrc": "25122:34:10",
																		"nodeType": "YulLiteral",
																		"src": "25122:34:10",
																		"type": "",
																		"value": "Presale must be stopped to withd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25099:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25099:6:10"
																},
																"nativeSrc": "25099:58:10",
																"nodeType": "YulFunctionCall",
																"src": "25099:58:10"
															},
															"nativeSrc": "25099:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "25099:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25178:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "25178:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25186:2:10",
																				"nodeType": "YulLiteral",
																				"src": "25186:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25174:3:10"
																		},
																		"nativeSrc": "25174:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25174:15:10"
																	},
																	{
																		"hexValue": "7261772066756e6473",
																		"kind": "string",
																		"nativeSrc": "25191:11:10",
																		"nodeType": "YulLiteral",
																		"src": "25191:11:10",
																		"type": "",
																		"value": "raw funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25167:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25167:6:10"
																},
																"nativeSrc": "25167:36:10",
																"nodeType": "YulFunctionCall",
																"src": "25167:36:10"
															},
															"nativeSrc": "25167:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "25167:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453",
												"nativeSrc": "24982:228:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25080:6:10",
														"nodeType": "YulTypedName",
														"src": "25080:6:10",
														"type": ""
													}
												],
												"src": "24982:228:10"
											},
											{
												"body": {
													"nativeSrc": "25362:220:10",
													"nodeType": "YulBlock",
													"src": "25362:220:10",
													"statements": [
														{
															"nativeSrc": "25372:74:10",
															"nodeType": "YulAssignment",
															"src": "25372:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25438:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25438:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25443:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25443:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25379:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "25379:58:10"
																},
																"nativeSrc": "25379:67:10",
																"nodeType": "YulFunctionCall",
																"src": "25379:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25372:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25544:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25544:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453",
																	"nativeSrc": "25455:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "25455:88:10"
																},
																"nativeSrc": "25455:93:10",
																"nodeType": "YulFunctionCall",
																"src": "25455:93:10"
															},
															"nativeSrc": "25455:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "25455:93:10"
														},
														{
															"nativeSrc": "25557:19:10",
															"nodeType": "YulAssignment",
															"src": "25557:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25568:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25568:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25573:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25573:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25564:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25564:3:10"
																},
																"nativeSrc": "25564:12:10",
																"nodeType": "YulFunctionCall",
																"src": "25564:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25557:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25216:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25350:3:10",
														"nodeType": "YulTypedName",
														"src": "25350:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25358:3:10",
														"nodeType": "YulTypedName",
														"src": "25358:3:10",
														"type": ""
													}
												],
												"src": "25216:366:10"
											},
											{
												"body": {
													"nativeSrc": "25759:248:10",
													"nodeType": "YulBlock",
													"src": "25759:248:10",
													"statements": [
														{
															"nativeSrc": "25769:26:10",
															"nodeType": "YulAssignment",
															"src": "25769:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25781:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25781:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25792:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25792:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25777:3:10"
																},
																"nativeSrc": "25777:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25777:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25769:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25769:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25816:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25816:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25827:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25827:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25812:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25812:3:10"
																		},
																		"nativeSrc": "25812:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25812:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25835:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "25835:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25841:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25841:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25831:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25831:3:10"
																		},
																		"nativeSrc": "25831:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25831:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25805:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25805:6:10"
																},
																"nativeSrc": "25805:47:10",
																"nodeType": "YulFunctionCall",
																"src": "25805:47:10"
															},
															"nativeSrc": "25805:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "25805:47:10"
														},
														{
															"nativeSrc": "25861:139:10",
															"nodeType": "YulAssignment",
															"src": "25861:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25995:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "25995:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25869:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "25869:124:10"
																},
																"nativeSrc": "25869:131:10",
																"nodeType": "YulFunctionCall",
																"src": "25869:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25861:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25861:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25588:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25739:9:10",
														"nodeType": "YulTypedName",
														"src": "25739:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25754:4:10",
														"nodeType": "YulTypedName",
														"src": "25754:4:10",
														"type": ""
													}
												],
												"src": "25588:419:10"
											},
											{
												"body": {
													"nativeSrc": "26119:64:10",
													"nodeType": "YulBlock",
													"src": "26119:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26141:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "26141:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26149:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26149:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26137:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26137:3:10"
																		},
																		"nativeSrc": "26137:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26137:14:10"
																	},
																	{
																		"hexValue": "4e6f204d4154494320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "26153:22:10",
																		"nodeType": "YulLiteral",
																		"src": "26153:22:10",
																		"type": "",
																		"value": "No MATIC to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26130:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26130:6:10"
																},
																"nativeSrc": "26130:46:10",
																"nodeType": "YulFunctionCall",
																"src": "26130:46:10"
															},
															"nativeSrc": "26130:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "26130:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
												"nativeSrc": "26013:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26111:6:10",
														"nodeType": "YulTypedName",
														"src": "26111:6:10",
														"type": ""
													}
												],
												"src": "26013:170:10"
											},
											{
												"body": {
													"nativeSrc": "26335:220:10",
													"nodeType": "YulBlock",
													"src": "26335:220:10",
													"statements": [
														{
															"nativeSrc": "26345:74:10",
															"nodeType": "YulAssignment",
															"src": "26345:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26411:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26416:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26416:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26352:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "26352:58:10"
																},
																"nativeSrc": "26352:67:10",
																"nodeType": "YulFunctionCall",
																"src": "26352:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26345:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26345:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26517:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26517:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
																	"nativeSrc": "26428:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "26428:88:10"
																},
																"nativeSrc": "26428:93:10",
																"nodeType": "YulFunctionCall",
																"src": "26428:93:10"
															},
															"nativeSrc": "26428:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "26428:93:10"
														},
														{
															"nativeSrc": "26530:19:10",
															"nodeType": "YulAssignment",
															"src": "26530:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26541:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26541:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26546:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26546:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26537:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26537:3:10"
																},
																"nativeSrc": "26537:12:10",
																"nodeType": "YulFunctionCall",
																"src": "26537:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26530:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26530:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26189:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26323:3:10",
														"nodeType": "YulTypedName",
														"src": "26323:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26331:3:10",
														"nodeType": "YulTypedName",
														"src": "26331:3:10",
														"type": ""
													}
												],
												"src": "26189:366:10"
											},
											{
												"body": {
													"nativeSrc": "26732:248:10",
													"nodeType": "YulBlock",
													"src": "26732:248:10",
													"statements": [
														{
															"nativeSrc": "26742:26:10",
															"nodeType": "YulAssignment",
															"src": "26742:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26754:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "26754:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26765:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26765:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26750:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26750:3:10"
																},
																"nativeSrc": "26750:18:10",
																"nodeType": "YulFunctionCall",
																"src": "26750:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26742:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26742:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26789:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26789:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26800:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26800:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26785:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26785:3:10"
																		},
																		"nativeSrc": "26785:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26785:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26808:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "26808:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26814:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26814:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26804:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26804:3:10"
																		},
																		"nativeSrc": "26804:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26804:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26778:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26778:6:10"
																},
																"nativeSrc": "26778:47:10",
																"nodeType": "YulFunctionCall",
																"src": "26778:47:10"
															},
															"nativeSrc": "26778:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "26778:47:10"
														},
														{
															"nativeSrc": "26834:139:10",
															"nodeType": "YulAssignment",
															"src": "26834:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26968:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "26968:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26842:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "26842:124:10"
																},
																"nativeSrc": "26842:131:10",
																"nodeType": "YulFunctionCall",
																"src": "26842:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26834:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26834:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26561:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26712:9:10",
														"nodeType": "YulTypedName",
														"src": "26712:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26727:4:10",
														"nodeType": "YulTypedName",
														"src": "26727:4:10",
														"type": ""
													}
												],
												"src": "26561:419:10"
											},
											{
												"body": {
													"nativeSrc": "27099:34:10",
													"nodeType": "YulBlock",
													"src": "27099:34:10",
													"statements": [
														{
															"nativeSrc": "27109:18:10",
															"nodeType": "YulAssignment",
															"src": "27109:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "27124:3:10",
																"nodeType": "YulIdentifier",
																"src": "27124:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "27109:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "27109:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "26986:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27071:3:10",
														"nodeType": "YulTypedName",
														"src": "27071:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "27076:6:10",
														"nodeType": "YulTypedName",
														"src": "27076:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "27087:11:10",
														"nodeType": "YulTypedName",
														"src": "27087:11:10",
														"type": ""
													}
												],
												"src": "26986:147:10"
											},
											{
												"body": {
													"nativeSrc": "27245:8:10",
													"nodeType": "YulBlock",
													"src": "27245:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "27139:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27237:6:10",
														"nodeType": "YulTypedName",
														"src": "27237:6:10",
														"type": ""
													}
												],
												"src": "27139:114:10"
											},
											{
												"body": {
													"nativeSrc": "27422:235:10",
													"nodeType": "YulBlock",
													"src": "27422:235:10",
													"statements": [
														{
															"nativeSrc": "27432:90:10",
															"nodeType": "YulAssignment",
															"src": "27432:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27515:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27515:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27520:1:10",
																		"nodeType": "YulLiteral",
																		"src": "27520:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "27439:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "27439:75:10"
																},
																"nativeSrc": "27439:83:10",
																"nodeType": "YulFunctionCall",
																"src": "27439:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27432:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27620:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27620:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "27531:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "27531:88:10"
																},
																"nativeSrc": "27531:93:10",
																"nodeType": "YulFunctionCall",
																"src": "27531:93:10"
															},
															"nativeSrc": "27531:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "27531:93:10"
														},
														{
															"nativeSrc": "27633:18:10",
															"nodeType": "YulAssignment",
															"src": "27633:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27644:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27644:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27649:1:10",
																		"nodeType": "YulLiteral",
																		"src": "27649:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27640:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27640:3:10"
																},
																"nativeSrc": "27640:11:10",
																"nodeType": "YulFunctionCall",
																"src": "27640:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27633:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27633:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "27259:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27410:3:10",
														"nodeType": "YulTypedName",
														"src": "27410:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27418:3:10",
														"nodeType": "YulTypedName",
														"src": "27418:3:10",
														"type": ""
													}
												],
												"src": "27259:398:10"
											},
											{
												"body": {
													"nativeSrc": "27851:191:10",
													"nodeType": "YulBlock",
													"src": "27851:191:10",
													"statements": [
														{
															"nativeSrc": "27862:154:10",
															"nodeType": "YulAssignment",
															"src": "27862:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28012:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28012:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "27869:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "27869:141:10"
																},
																"nativeSrc": "27869:147:10",
																"nodeType": "YulFunctionCall",
																"src": "27869:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27862:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27862:3:10"
																}
															]
														},
														{
															"nativeSrc": "28026:10:10",
															"nodeType": "YulAssignment",
															"src": "28026:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "28033:3:10",
																"nodeType": "YulIdentifier",
																"src": "28033:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28026:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28026:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "27663:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27838:3:10",
														"nodeType": "YulTypedName",
														"src": "27838:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27847:3:10",
														"nodeType": "YulTypedName",
														"src": "27847:3:10",
														"type": ""
													}
												],
												"src": "27663:379:10"
											},
											{
												"body": {
													"nativeSrc": "28154:68:10",
													"nodeType": "YulBlock",
													"src": "28154:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28176:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "28176:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28184:1:10",
																				"nodeType": "YulLiteral",
																				"src": "28184:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28172:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28172:3:10"
																		},
																		"nativeSrc": "28172:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28172:14:10"
																	},
																	{
																		"hexValue": "4661696c656420746f207769746864726177204d41544943",
																		"kind": "string",
																		"nativeSrc": "28188:26:10",
																		"nodeType": "YulLiteral",
																		"src": "28188:26:10",
																		"type": "",
																		"value": "Failed to withdraw MATIC"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "28165:6:10"
																},
																"nativeSrc": "28165:50:10",
																"nodeType": "YulFunctionCall",
																"src": "28165:50:10"
															},
															"nativeSrc": "28165:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "28165:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
												"nativeSrc": "28048:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28146:6:10",
														"nodeType": "YulTypedName",
														"src": "28146:6:10",
														"type": ""
													}
												],
												"src": "28048:174:10"
											},
											{
												"body": {
													"nativeSrc": "28374:220:10",
													"nodeType": "YulBlock",
													"src": "28374:220:10",
													"statements": [
														{
															"nativeSrc": "28384:74:10",
															"nodeType": "YulAssignment",
															"src": "28384:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28450:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28450:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28455:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28455:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28391:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "28391:58:10"
																},
																"nativeSrc": "28391:67:10",
																"nodeType": "YulFunctionCall",
																"src": "28391:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28384:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28384:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28556:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28556:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
																	"nativeSrc": "28467:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "28467:88:10"
																},
																"nativeSrc": "28467:93:10",
																"nodeType": "YulFunctionCall",
																"src": "28467:93:10"
															},
															"nativeSrc": "28467:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "28467:93:10"
														},
														{
															"nativeSrc": "28569:19:10",
															"nodeType": "YulAssignment",
															"src": "28569:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28580:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28580:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28576:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28576:3:10"
																},
																"nativeSrc": "28576:12:10",
																"nodeType": "YulFunctionCall",
																"src": "28576:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28569:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28569:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28228:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28362:3:10",
														"nodeType": "YulTypedName",
														"src": "28362:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28370:3:10",
														"nodeType": "YulTypedName",
														"src": "28370:3:10",
														"type": ""
													}
												],
												"src": "28228:366:10"
											},
											{
												"body": {
													"nativeSrc": "28771:248:10",
													"nodeType": "YulBlock",
													"src": "28771:248:10",
													"statements": [
														{
															"nativeSrc": "28781:26:10",
															"nodeType": "YulAssignment",
															"src": "28781:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28793:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "28793:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28789:3:10"
																},
																"nativeSrc": "28789:18:10",
																"nodeType": "YulFunctionCall",
																"src": "28789:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "28781:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28828:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28828:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28839:1:10",
																				"nodeType": "YulLiteral",
																				"src": "28839:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28824:3:10"
																		},
																		"nativeSrc": "28824:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28824:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28847:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "28847:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28843:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28843:3:10"
																		},
																		"nativeSrc": "28843:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28843:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28817:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "28817:6:10"
																},
																"nativeSrc": "28817:47:10",
																"nodeType": "YulFunctionCall",
																"src": "28817:47:10"
															},
															"nativeSrc": "28817:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "28817:47:10"
														},
														{
															"nativeSrc": "28873:139:10",
															"nodeType": "YulAssignment",
															"src": "28873:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29007:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "29007:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28881:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "28881:124:10"
																},
																"nativeSrc": "28881:131:10",
																"nodeType": "YulFunctionCall",
																"src": "28881:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28873:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "28873:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28600:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28751:9:10",
														"nodeType": "YulTypedName",
														"src": "28751:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28766:4:10",
														"nodeType": "YulTypedName",
														"src": "28766:4:10",
														"type": ""
													}
												],
												"src": "28600:419:10"
											},
											{
												"body": {
													"nativeSrc": "29131:75:10",
													"nodeType": "YulBlock",
													"src": "29131:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29153:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "29153:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29161:1:10",
																				"nodeType": "YulLiteral",
																				"src": "29161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29149:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "29149:3:10"
																		},
																		"nativeSrc": "29149:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29149:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "29165:33:10",
																		"nodeType": "YulLiteral",
																		"src": "29165:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "29142:6:10"
																},
																"nativeSrc": "29142:57:10",
																"nodeType": "YulFunctionCall",
																"src": "29142:57:10"
															},
															"nativeSrc": "29142:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "29142:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "29025:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29123:6:10",
														"nodeType": "YulTypedName",
														"src": "29123:6:10",
														"type": ""
													}
												],
												"src": "29025:181:10"
											},
											{
												"body": {
													"nativeSrc": "29358:220:10",
													"nodeType": "YulBlock",
													"src": "29358:220:10",
													"statements": [
														{
															"nativeSrc": "29368:74:10",
															"nodeType": "YulAssignment",
															"src": "29368:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29434:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29434:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29439:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29439:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29375:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "29375:58:10"
																},
																"nativeSrc": "29375:67:10",
																"nodeType": "YulFunctionCall",
																"src": "29375:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29368:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29368:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29540:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29540:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "29451:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "29451:88:10"
																},
																"nativeSrc": "29451:93:10",
																"nodeType": "YulFunctionCall",
																"src": "29451:93:10"
															},
															"nativeSrc": "29451:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "29451:93:10"
														},
														{
															"nativeSrc": "29553:19:10",
															"nodeType": "YulAssignment",
															"src": "29553:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29564:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29564:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29569:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29569:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29560:3:10"
																},
																"nativeSrc": "29560:12:10",
																"nodeType": "YulFunctionCall",
																"src": "29560:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29553:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29553:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29212:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29346:3:10",
														"nodeType": "YulTypedName",
														"src": "29346:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29354:3:10",
														"nodeType": "YulTypedName",
														"src": "29354:3:10",
														"type": ""
													}
												],
												"src": "29212:366:10"
											},
											{
												"body": {
													"nativeSrc": "29755:248:10",
													"nodeType": "YulBlock",
													"src": "29755:248:10",
													"statements": [
														{
															"nativeSrc": "29765:26:10",
															"nodeType": "YulAssignment",
															"src": "29765:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29777:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "29777:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29788:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29773:3:10"
																},
																"nativeSrc": "29773:18:10",
																"nodeType": "YulFunctionCall",
																"src": "29773:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29765:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "29765:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29812:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "29812:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29823:1:10",
																				"nodeType": "YulLiteral",
																				"src": "29823:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "29808:3:10"
																		},
																		"nativeSrc": "29808:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29808:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29831:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "29831:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29837:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "29837:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29827:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "29827:3:10"
																		},
																		"nativeSrc": "29827:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29827:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "29801:6:10"
																},
																"nativeSrc": "29801:47:10",
																"nodeType": "YulFunctionCall",
																"src": "29801:47:10"
															},
															"nativeSrc": "29801:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "29801:47:10"
														},
														{
															"nativeSrc": "29857:139:10",
															"nodeType": "YulAssignment",
															"src": "29857:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29991:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "29991:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29865:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "29865:124:10"
																},
																"nativeSrc": "29865:131:10",
																"nodeType": "YulFunctionCall",
																"src": "29865:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29857:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "29857:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29584:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29735:9:10",
														"nodeType": "YulTypedName",
														"src": "29735:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29750:4:10",
														"nodeType": "YulTypedName",
														"src": "29750:4:10",
														"type": ""
													}
												],
												"src": "29584:419:10"
											},
											{
												"body": {
													"nativeSrc": "30135:206:10",
													"nodeType": "YulBlock",
													"src": "30135:206:10",
													"statements": [
														{
															"nativeSrc": "30145:26:10",
															"nodeType": "YulAssignment",
															"src": "30145:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30157:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "30157:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30168:2:10",
																		"nodeType": "YulLiteral",
																		"src": "30168:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30153:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30153:3:10"
																},
																"nativeSrc": "30153:18:10",
																"nodeType": "YulFunctionCall",
																"src": "30153:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30145:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "30145:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30225:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30225:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30238:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30238:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30249:1:10",
																				"nodeType": "YulLiteral",
																				"src": "30249:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30234:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30234:3:10"
																		},
																		"nativeSrc": "30234:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30234:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30181:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30181:43:10"
																},
																"nativeSrc": "30181:71:10",
																"nodeType": "YulFunctionCall",
																"src": "30181:71:10"
															},
															"nativeSrc": "30181:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "30181:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30306:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30306:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30319:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30319:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30330:2:10",
																				"nodeType": "YulLiteral",
																				"src": "30330:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30315:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30315:3:10"
																		},
																		"nativeSrc": "30315:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30315:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30262:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30262:43:10"
																},
																"nativeSrc": "30262:72:10",
																"nodeType": "YulFunctionCall",
																"src": "30262:72:10"
															},
															"nativeSrc": "30262:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "30262:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "30009:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30099:9:10",
														"nodeType": "YulTypedName",
														"src": "30099:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30111:6:10",
														"nodeType": "YulTypedName",
														"src": "30111:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30119:6:10",
														"nodeType": "YulTypedName",
														"src": "30119:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30130:4:10",
														"nodeType": "YulTypedName",
														"src": "30130:4:10",
														"type": ""
													}
												],
												"src": "30009:332:10"
											},
											{
												"body": {
													"nativeSrc": "30501:288:10",
													"nodeType": "YulBlock",
													"src": "30501:288:10",
													"statements": [
														{
															"nativeSrc": "30511:26:10",
															"nodeType": "YulAssignment",
															"src": "30511:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30523:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "30523:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30534:2:10",
																		"nodeType": "YulLiteral",
																		"src": "30534:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30519:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30519:3:10"
																},
																"nativeSrc": "30519:18:10",
																"nodeType": "YulFunctionCall",
																"src": "30519:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30511:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "30511:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30591:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30591:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30604:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30604:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30615:1:10",
																				"nodeType": "YulLiteral",
																				"src": "30615:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30600:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30600:3:10"
																		},
																		"nativeSrc": "30600:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30600:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30547:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30547:43:10"
																},
																"nativeSrc": "30547:71:10",
																"nodeType": "YulFunctionCall",
																"src": "30547:71:10"
															},
															"nativeSrc": "30547:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "30547:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30672:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30672:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30685:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30685:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30696:2:10",
																				"nodeType": "YulLiteral",
																				"src": "30696:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30681:3:10"
																		},
																		"nativeSrc": "30681:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30681:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30628:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30628:43:10"
																},
																"nativeSrc": "30628:72:10",
																"nodeType": "YulFunctionCall",
																"src": "30628:72:10"
															},
															"nativeSrc": "30628:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "30628:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30754:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30754:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30767:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30767:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30778:2:10",
																				"nodeType": "YulLiteral",
																				"src": "30778:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30763:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30763:3:10"
																		},
																		"nativeSrc": "30763:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30763:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30710:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30710:43:10"
																},
																"nativeSrc": "30710:72:10",
																"nodeType": "YulFunctionCall",
																"src": "30710:72:10"
															},
															"nativeSrc": "30710:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "30710:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "30347:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30457:9:10",
														"nodeType": "YulTypedName",
														"src": "30457:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30469:6:10",
														"nodeType": "YulTypedName",
														"src": "30469:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30477:6:10",
														"nodeType": "YulTypedName",
														"src": "30477:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30485:6:10",
														"nodeType": "YulTypedName",
														"src": "30485:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30496:4:10",
														"nodeType": "YulTypedName",
														"src": "30496:4:10",
														"type": ""
													}
												],
												"src": "30347:442:10"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Use buyTokens function\")\n\n    }\n\n    function abi_encode_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale is already active\")\n\n    }\n\n    function abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tiers must be configured before \")\n\n        mstore(add(memPtr, 32), \"starting the presale\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19(memPtr) {\n\n        mstore(add(memPtr, 0), \"Arrays must have the same length\")\n\n    }\n\n    function abi_encode_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tiers cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum buy must be greater than\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maximum buy must be greater than\")\n\n        mstore(add(memPtr, 32), \" or equal to minimum buy\")\n\n    }\n\n    function abi_encode_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale is complete, no more tie\")\n\n        mstore(add(memPtr, 32), \"rs available\")\n\n    }\n\n    function abi_encode_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than or e\")\n\n        mstore(add(memPtr, 32), \"qual to minimum purchase\")\n\n    }\n\n    function abi_encode_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be less than or equa\")\n\n        mstore(add(memPtr, 32), \"l to maximum purchase\")\n\n    }\n\n    function abi_encode_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slippage protection triggered\")\n\n    }\n\n    function abi_encode_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299(memPtr) {\n\n        mstore(add(memPtr, 0), \"Purchase exceeds current tier's \")\n\n        mstore(add(memPtr, 32), \"limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens in contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tier does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No remaining tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale must be stopped to withd\")\n\n        mstore(add(memPtr, 32), \"raw funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82(memPtr) {\n\n        mstore(add(memPtr, 0), \"No MATIC to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to withdraw MATIC\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"926": [
									{
										"length": 32,
										"start": 4408
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610184575f3560e01c80638afbf669116100d0578063c8b0812511610089578063d679677a11610063578063d679677a1461050e578063e7829cad14610538578063eb91d37e14610574578063f2fde38b1461059e576101c4565b8063c8b08125146104a4578063c9881d86146104ce578063d2e8ecae146104e4576101c4565b80638afbf669146103aa5780638da5cb5b146103c05780639d76ea58146103ea578063a8c038c714610414578063b8fcf93714610450578063c43a01351461047a576101c4565b8063300eccab1161013d57806353135ca01161011757806353135ca01461031857806363b2011714610342578063715018a61461036c5780638a0a80af14610382576101c4565b8063300eccab146102985780633610724e146102d45780635276837c146102f0576101c4565b806304c98b2b146101c8578063125b8b78146101de5780631ad2ad1a146102085780631b8ebc3c1461021e57806322c6baf614610246578063273f897414610270576101c4565b366101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90611856565b60405180910390fd5b5f5ffd5b3480156101d3575f5ffd5b506101dc6105c6565b005b3480156101e9575f5ffd5b506101f26106b9565b6040516101ff919061188c565b60405180910390f35b348015610213575f5ffd5b5061021c6106bf565b005b348015610229575f5ffd5b50610244600480360381019061023f919061190e565b61075c565b005b348015610251575f5ffd5b5061025a610912565b604051610267919061188c565b60405180910390f35b34801561027b575f5ffd5b50610296600480360381019061029191906119b6565b610918565b005b3480156102a3575f5ffd5b506102be60048036038101906102b991906119f4565b6109f0565b6040516102cb919061188c565b60405180910390f35b6102ee60048036038101906102e991906119f4565b610a05565b005b3480156102fb575f5ffd5b50610316600480360381019061031191906119f4565b610e47565b005b348015610323575f5ffd5b5061032c610eac565b6040516103399190611a39565b60405180910390f35b34801561034d575f5ffd5b50610356610ebe565b604051610363919061188c565b60405180910390f35b348015610377575f5ffd5b50610380610ec4565b005b34801561038d575f5ffd5b506103a860048036038101906103a391906119f4565b610ed7565b005b3480156103b5575f5ffd5b506103be610f7e565b005b3480156103cb575f5ffd5b506103d461110f565b6040516103e19190611a91565b60405180910390f35b3480156103f5575f5ffd5b506103fe611136565b60405161040b9190611a91565b60405180910390f35b34801561041f575f5ffd5b5061043a600480360381019061043591906119f4565b61115a565b604051610447919061188c565b60405180910390f35b34801561045b575f5ffd5b5061046461116f565b6040516104719190611b05565b60405180910390f35b348015610485575f5ffd5b5061048e611194565b60405161049b919061188c565b60405180910390f35b3480156104af575f5ffd5b506104b861119a565b6040516104c5919061188c565b60405180910390f35b3480156104d9575f5ffd5b506104e2611239565b005b3480156104ef575f5ffd5b506104f86113dd565b604051610505919061188c565b60405180910390f35b348015610519575f5ffd5b506105226113e6565b60405161052f919061188c565b60405180910390f35b348015610543575f5ffd5b5061055e600480360381019061055991906119f4565b6113ec565b60405161056b919061188c565b60405180910390f35b34801561057f575f5ffd5b50610588611401565b604051610595919061188c565b60405180910390f35b3480156105a9575f5ffd5b506105c460048036038101906105bf9190611b48565b611435565b005b6105ce6114b9565b60095f9054906101000a900460ff161561061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061490611bbd565b60405180910390fd5b5f60035f600181526020019081526020015f205411610671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066890611c4b565b60405180910390fd5b600160095f6101000a81548160ff0219169083151502179055507f17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c60405160405180910390a1565b60085481565b6106c76114b9565b60095f9054906101000a900460ff16610715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070c90611cb3565b60405180910390fd5b5f60095f6101000a81548160ff0219169083151502179055507fe60f0ccd81d0545e17cd40eaaf8b7c5d36e3a26372928be6a27d2f73f67d759360405160405180910390a1565b6107646114b9565b8181905084849050146107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390611d1b565b60405180910390fd5b5f84849050116107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e890611d83565b60405180910390fd5b5f600190505b5f60035f8381526020019081526020015f2054111561084b5760035f8281526020019081526020015f205f905560045f8281526020019081526020015f205f9055808061084390611dce565b9150506107f7565b5f5f90505b858590508110156108de5785858281811061086e5761086d611e15565b5b9050602002013560035f6001846108859190611e42565b81526020019081526020015f20819055508383828181106108a9576108a8611e15565b5b9050602002013560045f6001846108c09190611e42565b81526020019081526020015f20819055508080600101915050610850565b507f37740b69a1cce7c6b884ff59b1465c52017ffcb23b6e46249f50f3375b71eada60405160405180910390a15050505050565b600a5481565b6109206114b9565b5f8211610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611ee5565b60405180910390fd5b818110156109a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099c90611f73565b60405180910390fd5b81600a8190555080600b819055507f7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b82826040516109e4929190611f91565b60405180910390a15050565b6003602052805f5260405f205f915090505481565b610a0d611540565b60095f9054906101000a900460ff16610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290611cb3565b60405180910390fd5b5f60035f60065481526020019081526020015f205411610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790612028565b60405180910390fd5b600a54341015610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec906120b6565b60405180910390fd5b600b54341115610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190612144565b60405180910390fd5b5f60035f60065481526020019081526020015f2054670de0b6b3a764000034610b639190612162565b610b6d91906121d0565b905081811015610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba99061224a565b60405180910390fd5b60045f60065481526020019081526020015f20548160055f60065481526020019081526020015f2054610be59190611e42565b1115610c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1d906122d8565b60405180910390fd5b8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c819190611a91565b602060405180830381865afa158015610c9c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc0919061230a565b1015610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf89061237f565b60405180910390fd5b8060075f828254610d129190611e42565b925050819055503460085f828254610d2a9190611e42565b925050819055508060055f60065481526020019081526020015f205f828254610d539190611e42565b9250508190555060045f60065481526020019081526020015f205460055f60065481526020019081526020015f205410610d9f5760065f815480929190610d9990611dce565b91905055505b610deb338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661158f9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f333483604051610e33929190611f91565b60405180910390a250610e4461160e565b50565b610e4f6114b9565b5f60035f8381526020019081526020015f205411610ea2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e99906123e7565b60405180910390fd5b8060068190555050565b60095f9054906101000a900460ff1681565b60075481565b610ecc6114b9565b610ed55f611617565b565b610edf6114b9565b610f2d33308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116d8909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e82604051610f73919061188c565b60405180910390a250565b610f866114b9565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fe19190611a91565b602060405180830381865afa158015610ffc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611020919061230a565b90505f8111611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b9061244f565b60405180910390fd5b6110b761106f61110f565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661158f9092919063ffffffff16565b6110bf61110f565b73ffffffffffffffffffffffffffffffffffffffff167f5eacf990d96c07de8e8e6c50faaf28160b2997575250a8aacfbb7f224791ff7682604051611104919061188c565b60405180910390a250565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6005602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111f59190611a91565b602060405180830381865afa158015611210573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611234919061230a565b905090565b6112416114b9565b60095f9054906101000a900460ff1615611290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611287906124dd565b60405180910390fd5b5f4790505f81116112d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cd90612545565b60405180910390fd5b5f6112df61110f565b73ffffffffffffffffffffffffffffffffffffffff168260405161130290612590565b5f6040518083038185875af1925050503d805f811461133c576040519150601f19603f3d011682016040523d82523d5f602084013e611341565b606091505b5050905080611385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137c906125ee565b60405180910390fd5b61138d61110f565b73ffffffffffffffffffffffffffffffffffffffff167ee1ffcaf17d7bfc1113fd8f6bc6f5454d1b5061c11409e4d52ede1f9799889e836040516113d1919061188c565b60405180910390a25050565b5f600854905090565b60065481565b6004602052805f5260405f205f915090505481565b5f60035f60065481526020019081526020015f20546ec097ce7bc90715b34b9f100000000061143091906121d0565b905090565b61143d6114b9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ad575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114a49190611a91565b60405180910390fd5b6114b681611617565b50565b6114c161175a565b73ffffffffffffffffffffffffffffffffffffffff166114df61110f565b73ffffffffffffffffffffffffffffffffffffffff161461153e5761150261175a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115359190611a91565b60405180910390fd5b565b600260015403611585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157c90612656565b60405180910390fd5b6002600181905550565b611609838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016115c2929190612674565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611761565b505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611754848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161170d9392919061269b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611761565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180611780576040513d5f823e3d81fd5b3d92505f519150505f82146117995760018114156117b4565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156117f657836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016117ed9190611a91565b60405180910390fd5b50505050565b5f82825260208201905092915050565b7f55736520627579546f6b656e732066756e6374696f6e000000000000000000005f82015250565b5f6118406016836117fc565b915061184b8261180c565b602082019050919050565b5f6020820190508181035f83015261186d81611834565b9050919050565b5f819050919050565b61188681611874565b82525050565b5f60208201905061189f5f83018461187d565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f8401126118ce576118cd6118ad565b5b8235905067ffffffffffffffff8111156118eb576118ea6118b1565b5b602083019150836020820283011115611907576119066118b5565b5b9250929050565b5f5f5f5f60408587031215611926576119256118a5565b5b5f85013567ffffffffffffffff811115611943576119426118a9565b5b61194f878288016118b9565b9450945050602085013567ffffffffffffffff811115611972576119716118a9565b5b61197e878288016118b9565b925092505092959194509250565b61199581611874565b811461199f575f5ffd5b50565b5f813590506119b08161198c565b92915050565b5f5f604083850312156119cc576119cb6118a5565b5b5f6119d9858286016119a2565b92505060206119ea858286016119a2565b9150509250929050565b5f60208284031215611a0957611a086118a5565b5b5f611a16848285016119a2565b91505092915050565b5f8115159050919050565b611a3381611a1f565b82525050565b5f602082019050611a4c5f830184611a2a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a7b82611a52565b9050919050565b611a8b81611a71565b82525050565b5f602082019050611aa45f830184611a82565b92915050565b5f819050919050565b5f611acd611ac8611ac384611a52565b611aaa565b611a52565b9050919050565b5f611ade82611ab3565b9050919050565b5f611aef82611ad4565b9050919050565b611aff81611ae5565b82525050565b5f602082019050611b185f830184611af6565b92915050565b611b2781611a71565b8114611b31575f5ffd5b50565b5f81359050611b4281611b1e565b92915050565b5f60208284031215611b5d57611b5c6118a5565b5b5f611b6a84828501611b34565b91505092915050565b7f50726573616c6520697320616c726561647920616374697665000000000000005f82015250565b5f611ba76019836117fc565b9150611bb282611b73565b602082019050919050565b5f6020820190508181035f830152611bd481611b9b565b9050919050565b7f5469657273206d75737420626520636f6e66696775726564206265666f7265205f8201527f7374617274696e67207468652070726573616c65000000000000000000000000602082015250565b5f611c356034836117fc565b9150611c4082611bdb565b604082019050919050565b5f6020820190508181035f830152611c6281611c29565b9050919050565b7f50726573616c65206973206e6f742061637469766500000000000000000000005f82015250565b5f611c9d6015836117fc565b9150611ca882611c69565b602082019050919050565b5f6020820190508181035f830152611cca81611c91565b9050919050565b7f417272617973206d7573742068617665207468652073616d65206c656e6774685f82015250565b5f611d056020836117fc565b9150611d1082611cd1565b602082019050919050565b5f6020820190508181035f830152611d3281611cf9565b9050919050565b7f54696572732063616e6e6f7420626520656d70747900000000000000000000005f82015250565b5f611d6d6015836117fc565b9150611d7882611d39565b602082019050919050565b5f6020820190508181035f830152611d9a81611d61565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611dd882611874565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e0a57611e09611da1565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611e4c82611874565b9150611e5783611874565b9250828201905080821115611e6f57611e6e611da1565b5b92915050565b7f4d696e696d756d20627579206d7573742062652067726561746572207468616e5f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f611ecf6025836117fc565b9150611eda82611e75565b604082019050919050565b5f6020820190508181035f830152611efc81611ec3565b9050919050565b7f4d6178696d756d20627579206d7573742062652067726561746572207468616e5f8201527f206f7220657175616c20746f206d696e696d756d206275790000000000000000602082015250565b5f611f5d6038836117fc565b9150611f6882611f03565b604082019050919050565b5f6020820190508181035f830152611f8a81611f51565b9050919050565b5f604082019050611fa45f83018561187d565b611fb1602083018461187d565b9392505050565b7f50726573616c6520697320636f6d706c6574652c206e6f206d6f7265207469655f8201527f727320617661696c61626c650000000000000000000000000000000000000000602082015250565b5f612012602c836117fc565b915061201d82611fb8565b604082019050919050565b5f6020820190508181035f83015261203f81612006565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e206f7220655f8201527f7175616c20746f206d696e696d756d2070757263686173650000000000000000602082015250565b5f6120a06038836117fc565b91506120ab82612046565b604082019050919050565b5f6020820190508181035f8301526120cd81612094565b9050919050565b7f416d6f756e74206d757374206265206c657373207468616e206f7220657175615f8201527f6c20746f206d6178696d756d2070757263686173650000000000000000000000602082015250565b5f61212e6035836117fc565b9150612139826120d4565b604082019050919050565b5f6020820190508181035f83015261215b81612122565b9050919050565b5f61216c82611874565b915061217783611874565b925082820261218581611874565b9150828204841483151761219c5761219b611da1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6121da82611874565b91506121e583611874565b9250826121f5576121f46121a3565b5b828204905092915050565b7f536c6970706167652070726f74656374696f6e207472696767657265640000005f82015250565b5f612234601d836117fc565b915061223f82612200565b602082019050919050565b5f6020820190508181035f83015261226181612228565b9050919050565b7f507572636861736520657863656564732063757272656e7420746965722773205f8201527f6c696d6974000000000000000000000000000000000000000000000000000000602082015250565b5f6122c26025836117fc565b91506122cd82612268565b604082019050919050565b5f6020820190508181035f8301526122ef816122b6565b9050919050565b5f815190506123048161198c565b92915050565b5f6020828403121561231f5761231e6118a5565b5b5f61232c848285016122f6565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320696e20636f6e74726163740000005f82015250565b5f612369601d836117fc565b915061237482612335565b602082019050919050565b5f6020820190508181035f8301526123968161235d565b9050919050565b7f5469657220646f6573206e6f74206578697374000000000000000000000000005f82015250565b5f6123d16013836117fc565b91506123dc8261239d565b602082019050919050565b5f6020820190508181035f8301526123fe816123c5565b9050919050565b7f4e6f2072656d61696e696e6720746f6b656e7320746f207769746864726177005f82015250565b5f612439601f836117fc565b915061244482612405565b602082019050919050565b5f6020820190508181035f8301526124668161242d565b9050919050565b7f50726573616c65206d7573742062652073746f7070656420746f2077697468645f8201527f7261772066756e64730000000000000000000000000000000000000000000000602082015250565b5f6124c76029836117fc565b91506124d28261246d565b604082019050919050565b5f6020820190508181035f8301526124f4816124bb565b9050919050565b7f4e6f204d4154494320746f2077697468647261770000000000000000000000005f82015250565b5f61252f6014836117fc565b915061253a826124fb565b602082019050919050565b5f6020820190508181035f83015261255c81612523565b9050919050565b5f81905092915050565b50565b5f61257b5f83612563565b91506125868261256d565b5f82019050919050565b5f61259a82612570565b9150819050919050565b7f4661696c656420746f207769746864726177204d4154494300000000000000005f82015250565b5f6125d86018836117fc565b91506125e3826125a4565b602082019050919050565b5f6020820190508181035f830152612605816125cc565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612640601f836117fc565b915061264b8261260c565b602082019050919050565b5f6020820190508181035f83015261266d81612634565b9050919050565b5f6040820190506126875f830185611a82565b612694602083018461187d565b9392505050565b5f6060820190506126ae5f830186611a82565b6126bb6020830185611a82565b6126c8604083018461187d565b94935050505056fea2646970667358221220bac1b2d9f360a9418279c507b7a3ac0a4231afde6d1bc86c7cd0e906235e5e3964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x184 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AFBF669 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xC8B08125 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD679677A GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD679677A EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xE7829CAD EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59E JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xC8B08125 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xC9881D86 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xD2E8ECAE EQ PUSH2 0x4E4 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8AFBF669 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA8C038C7 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xC43A0135 EQ PUSH2 0x47A JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x300ECCAB GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x53135CA0 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x53135CA0 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x8A0A80AF EQ PUSH2 0x382 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x300ECCAB EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x5276837C EQ PUSH2 0x2F0 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x125B8B78 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1AD2AD1A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x1B8EBC3C EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x22C6BAF6 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x273F8974 EQ PUSH2 0x270 JUMPI PUSH2 0x1C4 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x6BF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25A PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x356 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0xEC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0xED7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3BE PUSH2 0xF7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48E PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B8 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH2 0x1239 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x55E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x588 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CE PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x668 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x17C3338141363AAB2512C08F8A7764328CA95979F7057663EB93F7E250139B4C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6C7 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70C SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xE60F0CCD81D0545E17CD40EAAF8B7C5D36E3A26372928BE6A27D2F73F67D7593 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x764 PUSH2 0x14B9 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP GT PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP1 PUSH2 0x1D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x84B JUMPI PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE DUP1 DUP1 PUSH2 0x843 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F7 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x8DE JUMPI DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x86E JUMPI PUSH2 0x86D PUSH2 0x1E15 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x3 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x1E15 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x850 JUMP JUMPDEST POP PUSH32 0x37740B69A1CCE7C6B884FF59B1465C52017FFCB23B6E46249F50F3375B71EADA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x920 PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x7C821B4DCC7C9BFB2D37C50FB125278CF9699532C206A3699CAB994AB149519B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9E4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD CALLVALUE LT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEC SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD CALLVALUE GT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0xB63 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 PUSH1 0x5 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST GT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC81 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST LT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF8 SWAP1 PUSH2 0x237F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x5 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0xD9F JUMPI PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD99 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH2 0xDEB CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x158F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xE33 SWAP3 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xE44 PUSH2 0x160E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE4F PUSH2 0x14B9 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xEA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xECC PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xED5 PUSH0 PUSH2 0x1617 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEDF PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xF2D CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16D8 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59062170A285EB80E8C6B8CED60428442A51910635005233FC4CE084A475845E DUP3 PUSH1 0x40 MLOAD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xF86 PUSH2 0x14B9 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105B SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B7 PUSH2 0x106F PUSH2 0x110F JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x158F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10BF PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5EACF990D96C07DE8E8E6C50FAAF28160B2997575250A8AACFBB7F224791FF76 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1210 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1241 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1287 SWAP1 PUSH2 0x24DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CD SWAP1 PUSH2 0x2545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x12DF PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1302 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1385 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137C SWAP1 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138D PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0xE1FFCAF17D7BFC1113FD8F6BC6F5454D1B5061C11409E4D52EDE1F9799889E DUP4 PUSH1 0x40 MLOAD PUSH2 0x13D1 SWAP2 SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0x1430 SWAP2 SWAP1 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x143D PUSH2 0x14B9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B6 DUP2 PUSH2 0x1617 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14C1 PUSH2 0x175A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DF PUSH2 0x110F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH2 0x1502 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157C SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1609 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1761 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1754 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x170D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1761 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1780 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1799 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x17B4 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x17F6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17ED SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736520627579546F6B656E732066756E6374696F6E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 PUSH1 0x16 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186D DUP2 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1886 DUP2 PUSH2 0x1874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189F PUSH0 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18CE JUMPI PUSH2 0x18CD PUSH2 0x18AD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x18B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x18B5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1942 PUSH2 0x18A9 JUMP JUMPDEST JUMPDEST PUSH2 0x194F DUP8 DUP3 DUP9 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x18A9 JUMP JUMPDEST JUMPDEST PUSH2 0x197E DUP8 DUP3 DUP9 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1874 JUMP JUMPDEST DUP2 EQ PUSH2 0x199F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CC JUMPI PUSH2 0x19CB PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D9 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19EA DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A16 DUP5 DUP3 DUP6 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A33 DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B DUP3 PUSH2 0x1A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8B DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACD PUSH2 0x1AC8 PUSH2 0x1AC3 DUP5 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADE DUP3 PUSH2 0x1AB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEF DUP3 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFF DUP2 PUSH2 0x1AE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B27 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B31 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B42 DUP2 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5D JUMPI PUSH2 0x1B5C PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B6A DUP5 DUP3 DUP6 ADD PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520697320616C72656164792061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA7 PUSH1 0x19 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB2 DUP3 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BD4 DUP2 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469657273206D75737420626520636F6E66696775726564206265666F726520 PUSH0 DUP3 ADD MSTORE PUSH32 0x7374617274696E67207468652070726573616C65000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C35 PUSH1 0x34 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C40 DUP3 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C62 DUP2 PUSH2 0x1C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206973206E6F74206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9D PUSH1 0x15 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA8 DUP3 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCA DUP2 PUSH2 0x1C91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x417272617973206D7573742068617665207468652073616D65206C656E677468 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D05 PUSH1 0x20 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D10 DUP3 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D32 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696572732063616E6E6F7420626520656D7074790000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6D PUSH1 0x15 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D78 DUP3 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DD8 DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E0A JUMPI PUSH2 0x1E09 PUSH2 0x1DA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E4C DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E57 DUP4 PUSH2 0x1874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1DA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20627579206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ECF PUSH1 0x25 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDA DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6178696D756D20627579206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x206F7220657175616C20746F206D696E696D756D206275790000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5D PUSH1 0x38 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F68 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FA4 PUSH0 DUP4 ADD DUP6 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x1FB1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520697320636F6D706C6574652C206E6F206D6F726520746965 PUSH0 DUP3 ADD MSTORE PUSH32 0x727320617661696C61626C650000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2012 PUSH1 0x2C DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x201D DUP3 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203F DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E206F722065 PUSH0 DUP3 ADD MSTORE PUSH32 0x7175616C20746F206D696E696D756D2070757263686173650000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH1 0x38 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP3 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20CD DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C20746F206D6178696D756D2070757263686173650000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x212E PUSH1 0x35 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2139 DUP3 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x215B DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x216C DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH2 0x2177 DUP4 PUSH2 0x1874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2185 DUP2 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x219C JUMPI PUSH2 0x219B PUSH2 0x1DA1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21DA DUP3 PUSH2 0x1874 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E5 DUP4 PUSH2 0x1874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21F5 JUMPI PUSH2 0x21F4 PUSH2 0x21A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C6970706167652070726F74656374696F6E20747269676765726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2234 PUSH1 0x1D DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x223F DUP3 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2261 DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520657863656564732063757272656E742074696572277320 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C696D6974000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C2 PUSH1 0x25 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x22CD DUP3 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EF DUP2 PUSH2 0x22B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2304 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231F JUMPI PUSH2 0x231E PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x232C DUP5 DUP3 DUP6 ADD PUSH2 0x22F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2369 PUSH1 0x1D DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2374 DUP3 PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2396 DUP2 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469657220646F6573206E6F7420657869737400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH1 0x13 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x23DC DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FE DUP2 PUSH2 0x23C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072656D61696E696E6720746F6B656E7320746F20776974686472617700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2439 PUSH1 0x1F DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP3 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2466 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206D7573742062652073746F7070656420746F207769746864 PUSH0 DUP3 ADD MSTORE PUSH32 0x7261772066756E64730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24C7 PUSH1 0x29 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x24D2 DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24F4 DUP2 PUSH2 0x24BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204D4154494320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x252F PUSH1 0x14 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x253A DUP3 PUSH2 0x24FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x255C DUP2 PUSH2 0x2523 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x257B PUSH0 DUP4 PUSH2 0x2563 JUMP JUMPDEST SWAP2 POP PUSH2 0x2586 DUP3 PUSH2 0x256D JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x259A DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207769746864726177204D415449430000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D8 PUSH1 0x18 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x25E3 DUP3 PUSH2 0x25A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2605 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2640 PUSH1 0x1F DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x264B DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x266D DUP2 PUSH2 0x2634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2687 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x2694 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26AE PUSH0 DUP4 ADD DUP7 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x26BB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x26C8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC1 0xB2 0xD9 RETURN PUSH1 0xA9 COINBASE DUP3 PUSH26 0xC507B7A3AC0A4231AFDE6D1BC86C7CD0E906235E5E3964736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "576:9653:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10186:32;;;;;;;;;;:::i;:::-;;;;;;;;576:9653;;;;4109:270;;;;;;;;;;;;;:::i;:::-;;1348:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4508:172;;;;;;;;;;;;;:::i;:::-;;2986:687;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1654:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4922:417;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;842:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7491:1917;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3824:160;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1456:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1265:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;5781:268:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6807:400;;;;;;;;;;;;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1530:37:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1073:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;722:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1687:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9707:117;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6196:476;;;;;;;;;;;;;:::i;:::-;;9508:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1175:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;949:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9913:117;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4109:270:9;1531:13:0;:11;:13::i;:::-;4172::9::1;;;;;;;;;;;4171:14;4163:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4250:1;4234:10;:13;4245:1;4234:13;;;;;;;;;;;;:17;4226:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;4335:4;4319:13;;:20;;;;;;;;;;;;;;;;;;4355:16;;;;;;;;;;4109:270::o:0;1348:31::-;;;;:::o;4508:172::-;1531:13:0;:11;:13::i;:::-;4569::9::1;;;;;;;;;;;4561:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;4635:5;4619:13;;:21;;;;;;;;;;;;;;;;;;4656:16;;;;;;;;;;4508:172::o:0;2986:687::-;1531:13:0;:11;:13::i;:::-;3116:7:9::1;;:14;;3098:7;;:14;;:32;3090:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3203:1;3186:7;;:14;;:18;3178:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3284:9;3296:1;3284:13;;3308:131;3331:1;3315:10;:13;3326:1;3315:13;;;;;;;;;;;;:17;3308:131;;;3356:10;:13;3367:1;3356:13;;;;;;;;;;;3349:20;;;3391:15;:18;3407:1;3391:18;;;;;;;;;;;3384:25;;;3424:3;;;;;:::i;:::-;;;;3308:131;;;3482:6;3491:1;3482:10;;3477:149;3498:7;;:14;;3494:1;:18;3477:149;;;3554:7;;3562:1;3554:10;;;;;;;:::i;:::-;;;;;;;;3534;:17;3549:1;3545;:5;;;;:::i;:::-;3534:17;;;;;;;;;;;:30;;;;3604:7;;3612:1;3604:10;;;;;;;:::i;:::-;;;;;;;;3579:15;:22;3599:1;3595;:5;;;;:::i;:::-;3579:22;;;;;;;;;;;:35;;;;3514:3;;;;;;;3477:149;;;;3651:14;;;;;;;;;;3079:594;2986:687:::0;;;;:::o;1654:26::-;;;;:::o;4922:417::-;1531:13:0;:11;:13::i;:::-;5046:1:9::1;5031:12;:16;5023:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5124:12;5108;:28;;5100:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5222:12;5208:11;:26;;;;5259:12;5245:11;:26;;;;5287:44;5304:12;5318;5287:44;;;;;;;:::i;:::-;;;;;;;;4922:417:::0;;:::o;842:45::-;;;;;;;;;;;;;;;;;:::o;7491:1917::-;2261:21:4;:19;:21::i;:::-;7595:13:9::1;;;;;;;;;;;7587:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;7679:1;7653:10;:23;7664:11;;7653:23;;;;;;;;;;;;:27;7645:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;7761:11;;7748:9;:24;;7740:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;7865:11;;7852:9;:24;;7844:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;8118:19;8161:10;:23;8172:11;;8161:23;;;;;;;;;;;;8153:4;8141:9;:16;;;;:::i;:::-;8140:44;;;;:::i;:::-;8118:66;;8304:9;8289:11;:24;;8281:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;8492:15;:28;8508:11;;8492:28;;;;;;;;;;;;8477:11;8447:14;:27;8462:11;;8447:27;;;;;;;;;;;;:41;;;;:::i;:::-;:73;;8439:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;8677:11;8641:7;;;;;;;;;;;:17;;;8667:4;8641:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;8633:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;8836:11;8817:15;;:30;;;;;;;:::i;:::-;;;;;;;;8878:9;8858:16;;:29;;;;;;;:::i;:::-;;;;;;;;8929:11;8898:14;:27;8913:11;;8898:27;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;9067:15;:28;9083:11;;9067:28;;;;;;;;;;;;9036:14;:27;9051:11;;9036:27;;;;;;;;;;;;:59;9032:105;;9112:11;;:13;;;;;;;;;:::i;:::-;;;;;;9032:105;9239:45;9260:10;9272:11;9239:7;;;;;;;;;;;:20;;;;:45;;;;;:::i;:::-;9365:10;9349:51;;;9377:9;9388:11;9349:51;;;;;;;:::i;:::-;;;;;;;;7557:1851;2303:20:4::0;:18;:20::i;:::-;7491:1917:9;:::o;3824:160::-;1531:13:0;:11;:13::i;:::-;3921:1:9::1;3901:10;:17;3912:5;3901:17;;;;;;;;;;;;:21;3893:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3971:5;3957:11;:19;;;;3824:160:::0;:::o;1456:25::-;;;;;;;;;;;;;:::o;1265:30::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5781:268:9:-;1531:13:0;:11;:13::i;:::-;5931:59:9::1;5956:10;5976:4;5983:6;5931:7;;;;;;;;;;;:24;;;;:59;;;;;;:::i;:::-;6022:10;6006:35;;;6034:6;6006:35;;;;;;:::i;:::-;;;;;;;;5781:268:::0;:::o;6807:400::-;1531:13:0;:11;:13::i;:::-;6872:23:9::1;6898:7;;;;;;;;;;;:17;;;6924:4;6898:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6872:58;;6967:1;6949:15;:19;6941:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;7087:46;7108:7;:5;:7::i;:::-;7117:15;7087:7;;;;;;;;;;;:20;;;;:46;;;;;:::i;:::-;7174:7;:5;:7::i;:::-;7149:50;;;7183:15;7149:50;;;;;;:::i;:::-;;;;;;;;6861:346;6807:400::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1530:37:9:-;;;:::o;1073:49::-;;;;;;;;;;;;;;;;;:::o;722:21::-;;;;;;;;;;;;;:::o;1687:26::-;;;;:::o;9707:117::-;9757:7;9784;;;;;;;;;;;:17;;;9810:4;9784:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9777:39;;9707:117;:::o;6196:476::-;1531:13:0;:11;:13::i;:::-;6266::9::1;;;;;;;;;;;6265:14;6257:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6336:15;6354:21;6336:39;;6404:1;6394:7;:11;6386:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6494:12;6520:7;:5;:7::i;:::-;6512:21;;6541:7;6512:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6493:60;;;6572:7;6564:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6647:7;:5;:7::i;:::-;6626:38;;;6656:7;6626:38;;;;;;:::i;:::-;;;;;;;;6246:426;;6196:476::o:0;9508:97::-;9554:7;9581:16;;9574:23;;9508:97;:::o;1175:26::-;;;;:::o;949:50::-;;;;;;;;;;;;;;;;;:::o;9913:117::-;9963:7;9999:10;:23;10010:11;;9999:23;;;;;;;;;;;;9991:4;9990:32;;;;:::i;:::-;9983:39;;9913:117;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:169:10:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:172::-;322:24;318:1;310:6;306:14;299:48;182:172;:::o;360:366::-;502:3;523:67;587:2;582:3;523:67;:::i;:::-;516:74;;599:93;688:3;599:93;:::i;:::-;717:2;712:3;708:12;701:19;;360:366;;;:::o;732:419::-;898:4;936:2;925:9;921:18;913:26;;985:9;979:4;975:20;971:1;960:9;956:17;949:47;1013:131;1139:4;1013:131;:::i;:::-;1005:139;;732:419;;;:::o;1157:77::-;1194:7;1223:5;1212:16;;1157:77;;;:::o;1240:118::-;1327:24;1345:5;1327:24;:::i;:::-;1322:3;1315:37;1240:118;;:::o;1364:222::-;1457:4;1495:2;1484:9;1480:18;1472:26;;1508:71;1576:1;1565:9;1561:17;1552:6;1508:71;:::i;:::-;1364:222;;;;:::o;1673:117::-;1782:1;1779;1772:12;1796:117;1905:1;1902;1895:12;1919:117;2028:1;2025;2018:12;2042:117;2151:1;2148;2141:12;2165:117;2274:1;2271;2264:12;2305:568;2378:8;2388:6;2438:3;2431:4;2423:6;2419:17;2415:27;2405:122;;2446:79;;:::i;:::-;2405:122;2559:6;2546:20;2536:30;;2589:18;2581:6;2578:30;2575:117;;;2611:79;;:::i;:::-;2575:117;2725:4;2717:6;2713:17;2701:29;;2779:3;2771:4;2763:6;2759:17;2749:8;2745:32;2742:41;2739:128;;;2786:79;;:::i;:::-;2739:128;2305:568;;;;;:::o;2879:934::-;3001:6;3009;3017;3025;3074:2;3062:9;3053:7;3049:23;3045:32;3042:119;;;3080:79;;:::i;:::-;3042:119;3228:1;3217:9;3213:17;3200:31;3258:18;3250:6;3247:30;3244:117;;;3280:79;;:::i;:::-;3244:117;3393:80;3465:7;3456:6;3445:9;3441:22;3393:80;:::i;:::-;3375:98;;;;3171:312;3550:2;3539:9;3535:18;3522:32;3581:18;3573:6;3570:30;3567:117;;;3603:79;;:::i;:::-;3567:117;3716:80;3788:7;3779:6;3768:9;3764:22;3716:80;:::i;:::-;3698:98;;;;3493:313;2879:934;;;;;;;:::o;3819:122::-;3892:24;3910:5;3892:24;:::i;:::-;3885:5;3882:35;3872:63;;3931:1;3928;3921:12;3872:63;3819:122;:::o;3947:139::-;3993:5;4031:6;4018:20;4009:29;;4047:33;4074:5;4047:33;:::i;:::-;3947:139;;;;:::o;4092:474::-;4160:6;4168;4217:2;4205:9;4196:7;4192:23;4188:32;4185:119;;;4223:79;;:::i;:::-;4185:119;4343:1;4368:53;4413:7;4404:6;4393:9;4389:22;4368:53;:::i;:::-;4358:63;;4314:117;4470:2;4496:53;4541:7;4532:6;4521:9;4517:22;4496:53;:::i;:::-;4486:63;;4441:118;4092:474;;;;;:::o;4572:329::-;4631:6;4680:2;4668:9;4659:7;4655:23;4651:32;4648:119;;;4686:79;;:::i;:::-;4648:119;4806:1;4831:53;4876:7;4867:6;4856:9;4852:22;4831:53;:::i;:::-;4821:63;;4777:117;4572:329;;;;:::o;4907:90::-;4941:7;4984:5;4977:13;4970:21;4959:32;;4907:90;;;:::o;5003:109::-;5084:21;5099:5;5084:21;:::i;:::-;5079:3;5072:34;5003:109;;:::o;5118:210::-;5205:4;5243:2;5232:9;5228:18;5220:26;;5256:65;5318:1;5307:9;5303:17;5294:6;5256:65;:::i;:::-;5118:210;;;;:::o;5334:126::-;5371:7;5411:42;5404:5;5400:54;5389:65;;5334:126;;;:::o;5466:96::-;5503:7;5532:24;5550:5;5532:24;:::i;:::-;5521:35;;5466:96;;;:::o;5568:118::-;5655:24;5673:5;5655:24;:::i;:::-;5650:3;5643:37;5568:118;;:::o;5692:222::-;5785:4;5823:2;5812:9;5808:18;5800:26;;5836:71;5904:1;5893:9;5889:17;5880:6;5836:71;:::i;:::-;5692:222;;;;:::o;5920:60::-;5948:3;5969:5;5962:12;;5920:60;;;:::o;5986:142::-;6036:9;6069:53;6087:34;6096:24;6114:5;6096:24;:::i;:::-;6087:34;:::i;:::-;6069:53;:::i;:::-;6056:66;;5986:142;;;:::o;6134:126::-;6184:9;6217:37;6248:5;6217:37;:::i;:::-;6204:50;;6134:126;;;:::o;6266:140::-;6330:9;6363:37;6394:5;6363:37;:::i;:::-;6350:50;;6266:140;;;:::o;6412:159::-;6513:51;6558:5;6513:51;:::i;:::-;6508:3;6501:64;6412:159;;:::o;6577:250::-;6684:4;6722:2;6711:9;6707:18;6699:26;;6735:85;6817:1;6806:9;6802:17;6793:6;6735:85;:::i;:::-;6577:250;;;;:::o;6833:122::-;6906:24;6924:5;6906:24;:::i;:::-;6899:5;6896:35;6886:63;;6945:1;6942;6935:12;6886:63;6833:122;:::o;6961:139::-;7007:5;7045:6;7032:20;7023:29;;7061:33;7088:5;7061:33;:::i;:::-;6961:139;;;;:::o;7106:329::-;7165:6;7214:2;7202:9;7193:7;7189:23;7185:32;7182:119;;;7220:79;;:::i;:::-;7182:119;7340:1;7365:53;7410:7;7401:6;7390:9;7386:22;7365:53;:::i;:::-;7355:63;;7311:117;7106:329;;;;:::o;7441:175::-;7581:27;7577:1;7569:6;7565:14;7558:51;7441:175;:::o;7622:366::-;7764:3;7785:67;7849:2;7844:3;7785:67;:::i;:::-;7778:74;;7861:93;7950:3;7861:93;:::i;:::-;7979:2;7974:3;7970:12;7963:19;;7622:366;;;:::o;7994:419::-;8160:4;8198:2;8187:9;8183:18;8175:26;;8247:9;8241:4;8237:20;8233:1;8222:9;8218:17;8211:47;8275:131;8401:4;8275:131;:::i;:::-;8267:139;;7994:419;;;:::o;8419:239::-;8559:34;8555:1;8547:6;8543:14;8536:58;8628:22;8623:2;8615:6;8611:15;8604:47;8419:239;:::o;8664:366::-;8806:3;8827:67;8891:2;8886:3;8827:67;:::i;:::-;8820:74;;8903:93;8992:3;8903:93;:::i;:::-;9021:2;9016:3;9012:12;9005:19;;8664:366;;;:::o;9036:419::-;9202:4;9240:2;9229:9;9225:18;9217:26;;9289:9;9283:4;9279:20;9275:1;9264:9;9260:17;9253:47;9317:131;9443:4;9317:131;:::i;:::-;9309:139;;9036:419;;;:::o;9461:171::-;9601:23;9597:1;9589:6;9585:14;9578:47;9461:171;:::o;9638:366::-;9780:3;9801:67;9865:2;9860:3;9801:67;:::i;:::-;9794:74;;9877:93;9966:3;9877:93;:::i;:::-;9995:2;9990:3;9986:12;9979:19;;9638:366;;;:::o;10010:419::-;10176:4;10214:2;10203:9;10199:18;10191:26;;10263:9;10257:4;10253:20;10249:1;10238:9;10234:17;10227:47;10291:131;10417:4;10291:131;:::i;:::-;10283:139;;10010:419;;;:::o;10435:182::-;10575:34;10571:1;10563:6;10559:14;10552:58;10435:182;:::o;10623:366::-;10765:3;10786:67;10850:2;10845:3;10786:67;:::i;:::-;10779:74;;10862:93;10951:3;10862:93;:::i;:::-;10980:2;10975:3;10971:12;10964:19;;10623:366;;;:::o;10995:419::-;11161:4;11199:2;11188:9;11184:18;11176:26;;11248:9;11242:4;11238:20;11234:1;11223:9;11219:17;11212:47;11276:131;11402:4;11276:131;:::i;:::-;11268:139;;10995:419;;;:::o;11420:171::-;11560:23;11556:1;11548:6;11544:14;11537:47;11420:171;:::o;11597:366::-;11739:3;11760:67;11824:2;11819:3;11760:67;:::i;:::-;11753:74;;11836:93;11925:3;11836:93;:::i;:::-;11954:2;11949:3;11945:12;11938:19;;11597:366;;;:::o;11969:419::-;12135:4;12173:2;12162:9;12158:18;12150:26;;12222:9;12216:4;12212:20;12208:1;12197:9;12193:17;12186:47;12250:131;12376:4;12250:131;:::i;:::-;12242:139;;11969:419;;;:::o;12394:180::-;12442:77;12439:1;12432:88;12539:4;12536:1;12529:15;12563:4;12560:1;12553:15;12580:233;12619:3;12642:24;12660:5;12642:24;:::i;:::-;12633:33;;12688:66;12681:5;12678:77;12675:103;;12758:18;;:::i;:::-;12675:103;12805:1;12798:5;12794:13;12787:20;;12580:233;;;:::o;12819:180::-;12867:77;12864:1;12857:88;12964:4;12961:1;12954:15;12988:4;12985:1;12978:15;13005:191;13045:3;13064:20;13082:1;13064:20;:::i;:::-;13059:25;;13098:20;13116:1;13098:20;:::i;:::-;13093:25;;13141:1;13138;13134:9;13127:16;;13162:3;13159:1;13156:10;13153:36;;;13169:18;;:::i;:::-;13153:36;13005:191;;;;:::o;13202:224::-;13342:34;13338:1;13330:6;13326:14;13319:58;13411:7;13406:2;13398:6;13394:15;13387:32;13202:224;:::o;13432:366::-;13574:3;13595:67;13659:2;13654:3;13595:67;:::i;:::-;13588:74;;13671:93;13760:3;13671:93;:::i;:::-;13789:2;13784:3;13780:12;13773:19;;13432:366;;;:::o;13804:419::-;13970:4;14008:2;13997:9;13993:18;13985:26;;14057:9;14051:4;14047:20;14043:1;14032:9;14028:17;14021:47;14085:131;14211:4;14085:131;:::i;:::-;14077:139;;13804:419;;;:::o;14229:243::-;14369:34;14365:1;14357:6;14353:14;14346:58;14438:26;14433:2;14425:6;14421:15;14414:51;14229:243;:::o;14478:366::-;14620:3;14641:67;14705:2;14700:3;14641:67;:::i;:::-;14634:74;;14717:93;14806:3;14717:93;:::i;:::-;14835:2;14830:3;14826:12;14819:19;;14478:366;;;:::o;14850:419::-;15016:4;15054:2;15043:9;15039:18;15031:26;;15103:9;15097:4;15093:20;15089:1;15078:9;15074:17;15067:47;15131:131;15257:4;15131:131;:::i;:::-;15123:139;;14850:419;;;:::o;15275:332::-;15396:4;15434:2;15423:9;15419:18;15411:26;;15447:71;15515:1;15504:9;15500:17;15491:6;15447:71;:::i;:::-;15528:72;15596:2;15585:9;15581:18;15572:6;15528:72;:::i;:::-;15275:332;;;;;:::o;15613:231::-;15753:34;15749:1;15741:6;15737:14;15730:58;15822:14;15817:2;15809:6;15805:15;15798:39;15613:231;:::o;15850:366::-;15992:3;16013:67;16077:2;16072:3;16013:67;:::i;:::-;16006:74;;16089:93;16178:3;16089:93;:::i;:::-;16207:2;16202:3;16198:12;16191:19;;15850:366;;;:::o;16222:419::-;16388:4;16426:2;16415:9;16411:18;16403:26;;16475:9;16469:4;16465:20;16461:1;16450:9;16446:17;16439:47;16503:131;16629:4;16503:131;:::i;:::-;16495:139;;16222:419;;;:::o;16647:243::-;16787:34;16783:1;16775:6;16771:14;16764:58;16856:26;16851:2;16843:6;16839:15;16832:51;16647:243;:::o;16896:366::-;17038:3;17059:67;17123:2;17118:3;17059:67;:::i;:::-;17052:74;;17135:93;17224:3;17135:93;:::i;:::-;17253:2;17248:3;17244:12;17237:19;;16896:366;;;:::o;17268:419::-;17434:4;17472:2;17461:9;17457:18;17449:26;;17521:9;17515:4;17511:20;17507:1;17496:9;17492:17;17485:47;17549:131;17675:4;17549:131;:::i;:::-;17541:139;;17268:419;;;:::o;17693:240::-;17833:34;17829:1;17821:6;17817:14;17810:58;17902:23;17897:2;17889:6;17885:15;17878:48;17693:240;:::o;17939:366::-;18081:3;18102:67;18166:2;18161:3;18102:67;:::i;:::-;18095:74;;18178:93;18267:3;18178:93;:::i;:::-;18296:2;18291:3;18287:12;18280:19;;17939:366;;;:::o;18311:419::-;18477:4;18515:2;18504:9;18500:18;18492:26;;18564:9;18558:4;18554:20;18550:1;18539:9;18535:17;18528:47;18592:131;18718:4;18592:131;:::i;:::-;18584:139;;18311:419;;;:::o;18736:410::-;18776:7;18799:20;18817:1;18799:20;:::i;:::-;18794:25;;18833:20;18851:1;18833:20;:::i;:::-;18828:25;;18888:1;18885;18881:9;18910:30;18928:11;18910:30;:::i;:::-;18899:41;;19089:1;19080:7;19076:15;19073:1;19070:22;19050:1;19043:9;19023:83;19000:139;;19119:18;;:::i;:::-;19000:139;18784:362;18736:410;;;;:::o;19152:180::-;19200:77;19197:1;19190:88;19297:4;19294:1;19287:15;19321:4;19318:1;19311:15;19338:185;19378:1;19395:20;19413:1;19395:20;:::i;:::-;19390:25;;19429:20;19447:1;19429:20;:::i;:::-;19424:25;;19468:1;19458:35;;19473:18;;:::i;:::-;19458:35;19515:1;19512;19508:9;19503:14;;19338:185;;;;:::o;19529:179::-;19669:31;19665:1;19657:6;19653:14;19646:55;19529:179;:::o;19714:366::-;19856:3;19877:67;19941:2;19936:3;19877:67;:::i;:::-;19870:74;;19953:93;20042:3;19953:93;:::i;:::-;20071:2;20066:3;20062:12;20055:19;;19714:366;;;:::o;20086:419::-;20252:4;20290:2;20279:9;20275:18;20267:26;;20339:9;20333:4;20329:20;20325:1;20314:9;20310:17;20303:47;20367:131;20493:4;20367:131;:::i;:::-;20359:139;;20086:419;;;:::o;20511:224::-;20651:34;20647:1;20639:6;20635:14;20628:58;20720:7;20715:2;20707:6;20703:15;20696:32;20511:224;:::o;20741:366::-;20883:3;20904:67;20968:2;20963:3;20904:67;:::i;:::-;20897:74;;20980:93;21069:3;20980:93;:::i;:::-;21098:2;21093:3;21089:12;21082:19;;20741:366;;;:::o;21113:419::-;21279:4;21317:2;21306:9;21302:18;21294:26;;21366:9;21360:4;21356:20;21352:1;21341:9;21337:17;21330:47;21394:131;21520:4;21394:131;:::i;:::-;21386:139;;21113:419;;;:::o;21538:143::-;21595:5;21626:6;21620:13;21611:22;;21642:33;21669:5;21642:33;:::i;:::-;21538:143;;;;:::o;21687:351::-;21757:6;21806:2;21794:9;21785:7;21781:23;21777:32;21774:119;;;21812:79;;:::i;:::-;21774:119;21932:1;21957:64;22013:7;22004:6;21993:9;21989:22;21957:64;:::i;:::-;21947:74;;21903:128;21687:351;;;;:::o;22044:179::-;22184:31;22180:1;22172:6;22168:14;22161:55;22044:179;:::o;22229:366::-;22371:3;22392:67;22456:2;22451:3;22392:67;:::i;:::-;22385:74;;22468:93;22557:3;22468:93;:::i;:::-;22586:2;22581:3;22577:12;22570:19;;22229:366;;;:::o;22601:419::-;22767:4;22805:2;22794:9;22790:18;22782:26;;22854:9;22848:4;22844:20;22840:1;22829:9;22825:17;22818:47;22882:131;23008:4;22882:131;:::i;:::-;22874:139;;22601:419;;;:::o;23026:169::-;23166:21;23162:1;23154:6;23150:14;23143:45;23026:169;:::o;23201:366::-;23343:3;23364:67;23428:2;23423:3;23364:67;:::i;:::-;23357:74;;23440:93;23529:3;23440:93;:::i;:::-;23558:2;23553:3;23549:12;23542:19;;23201:366;;;:::o;23573:419::-;23739:4;23777:2;23766:9;23762:18;23754:26;;23826:9;23820:4;23816:20;23812:1;23801:9;23797:17;23790:47;23854:131;23980:4;23854:131;:::i;:::-;23846:139;;23573:419;;;:::o;23998:181::-;24138:33;24134:1;24126:6;24122:14;24115:57;23998:181;:::o;24185:366::-;24327:3;24348:67;24412:2;24407:3;24348:67;:::i;:::-;24341:74;;24424:93;24513:3;24424:93;:::i;:::-;24542:2;24537:3;24533:12;24526:19;;24185:366;;;:::o;24557:419::-;24723:4;24761:2;24750:9;24746:18;24738:26;;24810:9;24804:4;24800:20;24796:1;24785:9;24781:17;24774:47;24838:131;24964:4;24838:131;:::i;:::-;24830:139;;24557:419;;;:::o;24982:228::-;25122:34;25118:1;25110:6;25106:14;25099:58;25191:11;25186:2;25178:6;25174:15;25167:36;24982:228;:::o;25216:366::-;25358:3;25379:67;25443:2;25438:3;25379:67;:::i;:::-;25372:74;;25455:93;25544:3;25455:93;:::i;:::-;25573:2;25568:3;25564:12;25557:19;;25216:366;;;:::o;25588:419::-;25754:4;25792:2;25781:9;25777:18;25769:26;;25841:9;25835:4;25831:20;25827:1;25816:9;25812:17;25805:47;25869:131;25995:4;25869:131;:::i;:::-;25861:139;;25588:419;;;:::o;26013:170::-;26153:22;26149:1;26141:6;26137:14;26130:46;26013:170;:::o;26189:366::-;26331:3;26352:67;26416:2;26411:3;26352:67;:::i;:::-;26345:74;;26428:93;26517:3;26428:93;:::i;:::-;26546:2;26541:3;26537:12;26530:19;;26189:366;;;:::o;26561:419::-;26727:4;26765:2;26754:9;26750:18;26742:26;;26814:9;26808:4;26804:20;26800:1;26789:9;26785:17;26778:47;26842:131;26968:4;26842:131;:::i;:::-;26834:139;;26561:419;;;:::o;26986:147::-;27087:11;27124:3;27109:18;;26986:147;;;;:::o;27139:114::-;;:::o;27259:398::-;27418:3;27439:83;27520:1;27515:3;27439:83;:::i;:::-;27432:90;;27531:93;27620:3;27531:93;:::i;:::-;27649:1;27644:3;27640:11;27633:18;;27259:398;;;:::o;27663:379::-;27847:3;27869:147;28012:3;27869:147;:::i;:::-;27862:154;;28033:3;28026:10;;27663:379;;;:::o;28048:174::-;28188:26;28184:1;28176:6;28172:14;28165:50;28048:174;:::o;28228:366::-;28370:3;28391:67;28455:2;28450:3;28391:67;:::i;:::-;28384:74;;28467:93;28556:3;28467:93;:::i;:::-;28585:2;28580:3;28576:12;28569:19;;28228:366;;;:::o;28600:419::-;28766:4;28804:2;28793:9;28789:18;28781:26;;28853:9;28847:4;28843:20;28839:1;28828:9;28824:17;28817:47;28881:131;29007:4;28881:131;:::i;:::-;28873:139;;28600:419;;;:::o;29025:181::-;29165:33;29161:1;29153:6;29149:14;29142:57;29025:181;:::o;29212:366::-;29354:3;29375:67;29439:2;29434:3;29375:67;:::i;:::-;29368:74;;29451:93;29540:3;29451:93;:::i;:::-;29569:2;29564:3;29560:12;29553:19;;29212:366;;;:::o;29584:419::-;29750:4;29788:2;29777:9;29773:18;29765:26;;29837:9;29831:4;29827:20;29823:1;29812:9;29808:17;29801:47;29865:131;29991:4;29865:131;:::i;:::-;29857:139;;29584:419;;;:::o;30009:332::-;30130:4;30168:2;30157:9;30153:18;30145:26;;30181:71;30249:1;30238:9;30234:17;30225:6;30181:71;:::i;:::-;30262:72;30330:2;30319:9;30315:18;30306:6;30262:72;:::i;:::-;30009:332;;;;;:::o;30347:442::-;30496:4;30534:2;30523:9;30519:18;30511:26;;30547:71;30615:1;30604:9;30600:17;30591:6;30547:71;:::i;:::-;30628:72;30696:2;30685:9;30681:18;30672:6;30628:72;:::i;:::-;30710;30778:2;30767:9;30763:18;30754:6;30710:72;:::i;:::-;30347:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1998000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyTokens(uint256)": "infinite",
								"currentTier()": "2469",
								"depositTokensForSale(uint256)": "infinite",
								"getCurrentPrice()": "infinite",
								"maticRaised()": "2521",
								"maxMaticBuy()": "2558",
								"minMaticBuy()": "2537",
								"myToken()": "infinite",
								"owner()": "2559",
								"presaleActive()": "2511",
								"renounceOwnership()": "infinite",
								"setCurrentTier(uint256)": "infinite",
								"setMinMaxMaticBuy(uint256,uint256)": "infinite",
								"setTiers(uint256[],uint256[])": "infinite",
								"startPresale()": "infinite",
								"stopPresale()": "infinite",
								"tierPrices(uint256)": "infinite",
								"tierTokenLimits(uint256)": "infinite",
								"tierTokensSold(uint256)": "infinite",
								"tokenAddress()": "infinite",
								"tokensRemaining()": "infinite",
								"totalMaticRaised()": "2471",
								"totalTokensSold()": "2492",
								"transferOwnership(address)": "infinite",
								"withdrawRaisedMatic()": "infinite",
								"withdrawRemainingTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2393,
									"end": 2608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2436,
									"end": 2446,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2492,
									"end": 2493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2467,
									"end": 2494,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2467,
									"end": 2494,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2480,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2494,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2467,
									"end": 2494,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2494,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 2459,
									"end": 2520,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2459,
									"end": 2520,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2559,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2559,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2559,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2587,
									"end": 2599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2587,
									"end": 2599,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2577,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2570,
									"end": 2577,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2600,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2393,
									"end": 2608,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1660,
									"end": 1679,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1703,
									"end": 1717,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1892,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1893,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2048,
									"end": 2051,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2133,
									"end": 2135,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2128,
									"end": 2131,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2069,
									"end": 2136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2136,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2136,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2234,
									"end": 2237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2145,
									"end": 2238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2263,
									"end": 2265,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2258,
									"end": 2261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2254,
									"end": 2266,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2448,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2482,
									"end": 2484,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2471,
									"end": 2480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2540,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2525,
									"end": 2529,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2541,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2519,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2542,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2685,
									"end": 2689,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2559,
									"end": 2690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2551,
									"end": 2690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2551,
									"end": 2690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "926"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 576,
									"end": 10229,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bac1b2d9f360a9418279c507b7a3ac0a4231afde6d1bc86c7cd0e906235e5e3964736f6c634300081e0033",
									".code": [
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "8AFBF669"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "C8B08125"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "D679677A"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "D679677A"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "E7829CAD"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "EB91D37E"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "C8B08125"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "C9881D86"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "D2E8ECAE"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "8AFBF669"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "9D76EA58"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "A8C038C7"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "B8FCF937"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "C43A0135"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "300ECCAB"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "53135CA0"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "53135CA0"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "63B20117"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "8A0A80AF"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "300ECCAB"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "3610724E"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "5276837C"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "4C98B2B"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "125B8B78"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "1AD2AD1A"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "1B8EBC3C"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "22C6BAF6"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "273F8974"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 10186,
											"end": 10218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 10229,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4109,
											"end": 4379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1348,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1348,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4508,
											"end": 4680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2986,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2986,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1654,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1654,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4922,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4922,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 842,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 842,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 842,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 7491,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7491,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3824,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3824,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1456,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1456,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1265,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1265,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5781,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5781,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6807,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1530,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1530,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1073,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1073,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1073,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 722,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 722,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1687,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1687,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 9707,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9707,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6196,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9508,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9508,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1175,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1175,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 949,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 949,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 949,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 9913,
											"end": 10030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9913,
											"end": 10030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4109,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4185,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4163,
											"end": 4215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4163,
											"end": 4215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4250,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4247,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4251,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4226,
											"end": 4308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4226,
											"end": 4308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4335,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4319,
											"end": 4332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4319,
											"end": 4332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4339,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "17C3338141363AAB2512C08F8A7764328CA95979F7057663EB93F7E250139B4C"
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4371,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 4109,
											"end": 4379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4508,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 4561,
											"end": 4608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4561,
											"end": 4608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4619,
											"end": 4632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E60F0CCD81D0545E17CD40EAAF8B7C5D36E3A26372928BE6A27D2F73F67D7593"
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4672,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3130,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3105,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3105,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3112,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3130,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3090,
											"end": 3167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3090,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3193,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3193,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3204,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3178,
											"end": 3230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3178,
											"end": 3230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3284,
											"end": 3297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3297,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3331,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3327,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3328,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3332,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3408,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3409,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3424,
											"end": 3427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3308,
											"end": 3439,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3505,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3505,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3512,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3561,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3561,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3554,
											"end": 3564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3545,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3545,
											"end": 3550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3545,
											"end": 3550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3545,
											"end": 3550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3551,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3564,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3612,
											"end": 3613,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3604,
											"end": 3614,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3614,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3595,
											"end": 3596,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3595,
											"end": 3600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3595,
											"end": 3600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3595,
											"end": 3600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3601,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3614,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3517,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3517,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3514,
											"end": 3517,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3517,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3517,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3626,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "37740B69A1CCE7C6B884FF59B1465C52017FFCB23B6E46249F50F3375B71EADA"
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3079,
											"end": 3673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5031,
											"end": 5043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5047,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 5023,
											"end": 5089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5023,
											"end": 5089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5136,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5100,
											"end": 5197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5100,
											"end": 5197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5222,
											"end": 5234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5208,
											"end": 5234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5234,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5259,
											"end": 5271,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 5245,
											"end": 5271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5271,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7C821B4DCC7C9BFB2D37C50FB125278CF9699532C206A3699CAB994AB149519B"
										},
										{
											"begin": 5304,
											"end": 5316,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5330,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5287,
											"end": 5331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5331,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7595,
											"end": 7608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 7587,
											"end": 7634,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 7587,
											"end": 7634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7664,
											"end": 7675,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7676,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7680,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7645,
											"end": 7729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 7645,
											"end": 7729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7761,
											"end": 7772,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7748,
											"end": 7757,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7748,
											"end": 7772,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7748,
											"end": 7772,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7740,
											"end": 7833,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 7740,
											"end": 7833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7865,
											"end": 7876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 7865,
											"end": 7876,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7852,
											"end": 7861,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7852,
											"end": 7876,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7852,
											"end": 7876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7844,
											"end": 7934,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7844,
											"end": 7934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8118,
											"end": 8137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8172,
											"end": 8183,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8184,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8153,
											"end": 8157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8141,
											"end": 8150,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8141,
											"end": 8157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 8141,
											"end": 8157,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8141,
											"end": 8157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8141,
											"end": 8157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8141,
											"end": 8157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8141,
											"end": 8157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 8141,
											"end": 8157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8140,
											"end": 8184,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 8140,
											"end": 8184,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8140,
											"end": 8184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8118,
											"end": 8184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8118,
											"end": 8184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8313,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8281,
											"end": 8347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 8281,
											"end": 8347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8508,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8508,
											"end": 8519,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8520,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8462,
											"end": 8473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8462,
											"end": 8473,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8474,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8447,
											"end": 8488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 8447,
											"end": 8488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8447,
											"end": 8488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8520,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8520,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8439,
											"end": 8562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8439,
											"end": 8562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8677,
											"end": 8688,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8641,
											"end": 8648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 8667,
											"end": 8671,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8641,
											"end": 8673,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 8641,
											"end": 8673,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8641,
											"end": 8673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8688,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8688,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 8633,
											"end": 8722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8633,
											"end": 8722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8836,
											"end": 8847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8817,
											"end": 8832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 8817,
											"end": 8847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8887,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8858,
											"end": 8874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 8858,
											"end": 8887,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 8887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8940,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8913,
											"end": 8924,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 8898,
											"end": 8940,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 8940,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9083,
											"end": 9094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9083,
											"end": 9094,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9095,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9051,
											"end": 9062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9051,
											"end": 9062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9063,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9095,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 9032,
											"end": 9137,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9112,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 9112,
											"end": 9125,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 9032,
											"end": 9137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 9260,
											"end": 9270,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9283,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9239,
											"end": 9246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9239,
											"end": 9259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 9239,
											"end": 9259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 9239,
											"end": 9284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9365,
											"end": 9375,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33"
										},
										{
											"begin": 9377,
											"end": 9386,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9399,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9349,
											"end": 9400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9400,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9408,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7491,
											"end": 9408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 9408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3917,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3922,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3893,
											"end": 3946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3893,
											"end": 3946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3976,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3957,
											"end": 3976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3976,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5956,
											"end": 5966,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 5980,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5931,
											"end": 5938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5931,
											"end": 5955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5931,
											"end": 5955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5990,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5931,
											"end": 5990,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6032,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "59062170A285EB80E8C6B8CED60428442A51910635005233FC4CE084A475845E"
										},
										{
											"begin": 6034,
											"end": 6040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 6006,
											"end": 6041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6041,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 6049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6807,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6898,
											"end": 6905,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6898,
											"end": 6915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 6924,
											"end": 6928,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 6898,
											"end": 6930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6898,
											"end": 6930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6898,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6941,
											"end": 7004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 6941,
											"end": 7004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 7108,
											"end": 7115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 7108,
											"end": 7113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 7108,
											"end": 7115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7108,
											"end": 7115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 7108,
											"end": 7115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7117,
											"end": 7132,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7087,
											"end": 7107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7133,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 7087,
											"end": 7133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7174,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 7174,
											"end": 7181,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7174,
											"end": 7181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5EACF990D96C07DE8E8E6C50FAAF28160B2997575250A8AACFBB7F224791FF76"
										},
										{
											"begin": 7183,
											"end": 7198,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 7149,
											"end": 7199,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7199,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6861,
											"end": 7207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "926"
										},
										{
											"begin": 1530,
											"end": 1567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 743,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 722,
											"end": 743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9791,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9801,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9801,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9801,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 9810,
											"end": 9814,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 9784,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 9784,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9777,
											"end": 9816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9777,
											"end": 9816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6196,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6266,
											"end": 6279,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6279,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6257,
											"end": 6325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6257,
											"end": 6325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6375,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6405,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6386,
											"end": 6430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6386,
											"end": 6430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6520,
											"end": 6527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6520,
											"end": 6525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6520,
											"end": 6527,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6520,
											"end": 6527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6520,
											"end": 6527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6541,
											"end": 6548,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6512,
											"end": 6553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6579,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6564,
											"end": 6608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6564,
											"end": 6608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6647,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6647,
											"end": 6654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6647,
											"end": 6654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E1FFCAF17D7BFC1113FD8F6BC6F5454D1B5061C11409E4D52EDE1F9799889E"
										},
										{
											"begin": 6656,
											"end": 6663,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 6626,
											"end": 6664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6664,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9561,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9597,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9581,
											"end": 9597,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9574,
											"end": 9597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9574,
											"end": 9597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 949,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9963,
											"end": 9970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10009,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10021,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 10010,
											"end": 10021,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10022,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 9995,
											"name": "PUSH",
											"source": 9,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 9990,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 9990,
											"end": 10022,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9990,
											"end": 10022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9990,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 9990,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9990,
											"end": 10022,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 9990,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9983,
											"end": 10022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9983,
											"end": 10022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 10030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 354,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 182,
											"end": 354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 322,
											"end": 346,
											"name": "PUSH",
											"source": 10,
											"value": "55736520627579546F6B656E732066756E6374696F6E00000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 299,
											"end": 347,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 182,
											"end": 354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 726,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 360,
											"end": 726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 502,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 587,
											"end": 589,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 582,
											"end": 585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 523,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 523,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 590,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 523,
											"end": 590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 516,
											"end": 590,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 516,
											"end": 590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 688,
											"end": 691,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 599,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 599,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 599,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 708,
											"end": 720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 701,
											"end": 720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 701,
											"end": 720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 726,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 360,
											"end": 726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 360,
											"end": 726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 898,
											"end": 902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 921,
											"end": 939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 913,
											"end": 939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 913,
											"end": 939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 975,
											"end": 995,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 969,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 956,
											"end": 973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 949,
											"end": 996,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 1139,
											"end": 1143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 1013,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1234,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 1157,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1228,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1234,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1358,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 1240,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 1327,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1364,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 1508,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1579,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1508,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1586,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1673,
											"end": 1790,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 1673,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1784,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1913,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 1796,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1907,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 2036,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 1919,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2159,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2042,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2153,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2282,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2165,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2873,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 2305,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2435,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2442,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 2405,
											"end": 2527,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 2446,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 2405,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2566,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2692,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2575,
											"end": 2692,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2611,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2611,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2690,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2611,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2692,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2575,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2776,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2757,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2742,
											"end": 2783,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2867,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2739,
											"end": 2867,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2786,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2786,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2865,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2786,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2739,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3071,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3072,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3077,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3161,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 3042,
											"end": 3161,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 3080,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3080,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3159,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 3080,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3161,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 3042,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3226,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3231,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3247,
											"end": 3277,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3244,
											"end": 3361,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3244,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3244,
											"end": 3361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 3280,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3244,
											"end": 3361,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3244,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3393,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 3465,
											"end": 3472,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3456,
											"end": 3462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3454,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3393,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3393,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3393,
											"end": 3473,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 3393,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3375,
											"end": 3473,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3375,
											"end": 3473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3375,
											"end": 3473,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3375,
											"end": 3473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3552,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3548,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3554,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3600,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3684,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3567,
											"end": 3684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 3603,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 3603,
											"end": 3682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3682,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 3603,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3684,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3567,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3788,
											"end": 3795,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3716,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3796,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3716,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3796,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3796,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3941,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3819,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3910,
											"end": 3915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3892,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3916,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3892,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3933,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 4086,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3947,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4038,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 4047,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4080,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 4047,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 4086,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 4086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 4086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4566,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4092,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4219,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4203,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4215,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4220,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4304,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4185,
											"end": 4304,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4223,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4223,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4302,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4223,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4304,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4185,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4413,
											"end": 4420,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4404,
											"end": 4410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4402,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4368,
											"end": 4421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4368,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4421,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4314,
											"end": 4431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4541,
											"end": 4548,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4530,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4496,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4566,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4566,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4901,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4572,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4668,
											"end": 4677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4659,
											"end": 4666,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 4678,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4683,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4767,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 4648,
											"end": 4767,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 4686,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4686,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4765,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 4686,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 4648,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4876,
											"end": 4883,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4831,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4901,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4901,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4997,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4907,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4970,
											"end": 4991,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5112,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5003,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 5099,
											"end": 5104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5084,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5105,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 5084,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5328,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5118,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5209,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5256,
											"end": 5321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5321,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5256,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5460,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5334,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5404,
											"end": 5409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5400,
											"end": 5454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5562,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5466,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5550,
											"end": 5555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5532,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5532,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5532,
											"end": 5556,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5532,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5686,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5568,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5673,
											"end": 5678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5655,
											"end": 5679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5679,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5655,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5680,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5914,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5692,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5812,
											"end": 5821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5902,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5889,
											"end": 5906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5886,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5836,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5907,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5836,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5914,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5948,
											"end": 5951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5974,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6128,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5986,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 6096,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 6114,
											"end": 6119,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6096,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6120,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 6096,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6087,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6069,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6122,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6069,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6260,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6134,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 6248,
											"end": 6253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 6217,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6254,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 6217,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6406,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6266,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6339,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6394,
											"end": 6399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6363,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6400,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6363,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6406,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6571,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 6412,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6558,
											"end": 6563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6513,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6564,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6513,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6827,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 6577,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6707,
											"end": 6725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6817,
											"end": 6818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6815,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6802,
											"end": 6819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6799,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 6735,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6820,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6735,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6827,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6955,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6833,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6924,
											"end": 6929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6906,
											"end": 6930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6930,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6906,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 6931,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6886,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6886,
											"end": 6949,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6886,
											"end": 6949,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6886,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7052,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 7088,
											"end": 7093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7061,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7094,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 7061,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 7100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7435,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 7106,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7193,
											"end": 7200,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7189,
											"end": 7212,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7217,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7220,
											"end": 7299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7410,
											"end": 7417,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7390,
											"end": 7399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 7365,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7616,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 7441,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7608,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C6520697320616C72656164792061637469766500000000000000"
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7558,
											"end": 7609,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7988,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 7622,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7764,
											"end": 7767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7849,
											"end": 7851,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 7844,
											"end": 7847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7785,
											"end": 7852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7852,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7785,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7950,
											"end": 7953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 7861,
											"end": 7954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7954,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7861,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 7981,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7974,
											"end": 7977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7970,
											"end": 7982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7988,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8413,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 7994,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8164,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8200,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8187,
											"end": 8196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8218,
											"end": 8235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8211,
											"end": 8258,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 8401,
											"end": 8405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 8275,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8406,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 8275,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8267,
											"end": 8406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8267,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8658,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8419,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8593,
											"name": "PUSH",
											"source": 10,
											"value": "5469657273206D75737420626520636F6E66696775726564206265666F726520"
										},
										{
											"begin": 8555,
											"end": 8556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8628,
											"end": 8650,
											"name": "PUSH",
											"source": 10,
											"value": "7374617274696E67207468652070726573616C65000000000000000000000000"
										},
										{
											"begin": 8623,
											"end": 8625,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8615,
											"end": 8621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9030,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 8664,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8806,
											"end": 8809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 8891,
											"end": 8893,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8886,
											"end": 8889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 8827,
											"end": 8894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8894,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 8827,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8992,
											"end": 8995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8903,
											"end": 8996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8996,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8903,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9023,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9005,
											"end": 9024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9005,
											"end": 9024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9455,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 9036,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9202,
											"end": 9206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9242,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9229,
											"end": 9238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 9276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9273,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 9443,
											"end": 9447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 9317,
											"end": 9448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 9317,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9309,
											"end": 9448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9309,
											"end": 9448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9455,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9455,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9632,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 9461,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C65206973206E6F74206163746976650000000000000000000000"
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9578,
											"end": 9625,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 9865,
											"end": 9867,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 9860,
											"end": 9863,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 9801,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 9801,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 9966,
											"end": 9969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 9877,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 9877,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 9997,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9990,
											"end": 9993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9986,
											"end": 9998,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9979,
											"end": 9998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9979,
											"end": 9998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 10004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 10004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10176,
											"end": 10180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10203,
											"end": 10212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10199,
											"end": 10217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10191,
											"end": 10217,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10191,
											"end": 10217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10249,
											"end": 10250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10227,
											"end": 10274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 10417,
											"end": 10421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 10291,
											"end": 10422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 10291,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10283,
											"end": 10422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10283,
											"end": 10422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10617,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10435,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10575,
											"end": 10609,
											"name": "PUSH",
											"source": 10,
											"value": "417272617973206D7573742068617665207468652073616D65206C656E677468"
										},
										{
											"begin": 10571,
											"end": 10572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10559,
											"end": 10573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10552,
											"end": 10610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10623,
											"end": 10989,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10623,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10786,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 10850,
											"end": 10852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10845,
											"end": 10848,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 10786,
											"end": 10853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10853,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 10786,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10779,
											"end": 10853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10779,
											"end": 10853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 10951,
											"end": 10954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10862,
											"end": 10955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10955,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 10862,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10980,
											"end": 10982,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10975,
											"end": 10978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10971,
											"end": 10983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 10983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 10983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10623,
											"end": 10989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10623,
											"end": 10989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10623,
											"end": 10989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10623,
											"end": 10989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10995,
											"end": 11414,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 10995,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11201,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11188,
											"end": 11197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11176,
											"end": 11202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11232,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11219,
											"end": 11236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 11402,
											"end": 11406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 11276,
											"end": 11407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11407,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 11276,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11268,
											"end": 11407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11268,
											"end": 11407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10995,
											"end": 11414,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10995,
											"end": 11414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10995,
											"end": 11414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10995,
											"end": 11414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11420,
											"end": 11591,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11420,
											"end": 11591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11560,
											"end": 11583,
											"name": "PUSH",
											"source": 10,
											"value": "54696572732063616E6E6F7420626520656D7074790000000000000000000000"
										},
										{
											"begin": 11556,
											"end": 11557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11548,
											"end": 11554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11544,
											"end": 11558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11537,
											"end": 11584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11420,
											"end": 11591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11420,
											"end": 11591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11739,
											"end": 11742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 11824,
											"end": 11826,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 11819,
											"end": 11822,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 11760,
											"end": 11827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 11827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 11827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 11925,
											"end": 11928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11836,
											"end": 11929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 11956,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11949,
											"end": 11952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11945,
											"end": 11957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11938,
											"end": 11957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11938,
											"end": 11957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11597,
											"end": 11963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12150,
											"end": 12176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12150,
											"end": 12176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12222,
											"end": 12231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12212,
											"end": 12232,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12208,
											"end": 12209,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 12206,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12193,
											"end": 12210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12186,
											"end": 12233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 12376,
											"end": 12380,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12250,
											"end": 12381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 12388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12394,
											"end": 12574,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12394,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12442,
											"end": 12519,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12439,
											"end": 12440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12432,
											"end": 12520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12543,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 12536,
											"end": 12537,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12529,
											"end": 12544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12567,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12560,
											"end": 12561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12553,
											"end": 12568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12813,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 12580,
											"end": 12813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12619,
											"end": 12622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12642,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 12660,
											"end": 12665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 12642,
											"end": 12666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12666,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 12642,
											"end": 12666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12633,
											"end": 12666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12633,
											"end": 12666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12754,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12681,
											"end": 12686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12678,
											"end": 12755,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12675,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 12675,
											"end": 12778,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12758,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 12758,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12758,
											"end": 12776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12758,
											"end": 12776,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 12758,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12675,
											"end": 12778,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 12675,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12798,
											"end": 12803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12794,
											"end": 12807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12999,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 12819,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12944,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12864,
											"end": 12865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12857,
											"end": 12945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12964,
											"end": 12968,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12961,
											"end": 12962,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12954,
											"end": 12969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12988,
											"end": 12992,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12985,
											"end": 12986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12978,
											"end": 12993,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13005,
											"end": 13196,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 13005,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13064,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 13116,
											"end": 13117,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13098,
											"end": 13118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13093,
											"end": 13118,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13093,
											"end": 13118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13141,
											"end": 13142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13162,
											"end": 13165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13159,
											"end": 13160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13156,
											"end": 13166,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 13153,
											"end": 13189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 13169,
											"end": 13187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13189,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 13153,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13005,
											"end": 13196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13005,
											"end": 13196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13005,
											"end": 13196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13005,
											"end": 13196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13005,
											"end": 13196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13202,
											"end": 13426,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 13202,
											"end": 13426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13376,
											"name": "PUSH",
											"source": 10,
											"value": "4D696E696D756D20627579206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 13338,
											"end": 13339,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13330,
											"end": 13336,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13319,
											"end": 13377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13411,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13406,
											"end": 13408,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13394,
											"end": 13409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13387,
											"end": 13419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13202,
											"end": 13426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13202,
											"end": 13426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13574,
											"end": 13577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 13659,
											"end": 13661,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 13654,
											"end": 13657,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13595,
											"end": 13662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 13595,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13662,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 13760,
											"end": 13763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 13671,
											"end": 13764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 13671,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 13791,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13780,
											"end": 13792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 13974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14008,
											"end": 14010,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13997,
											"end": 14006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13985,
											"end": 14011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13985,
											"end": 14011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14057,
											"end": 14066,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14051,
											"end": 14055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14047,
											"end": 14067,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14043,
											"end": 14044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14032,
											"end": 14041,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14021,
											"end": 14068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 14211,
											"end": 14215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 14085,
											"end": 14216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 14085,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14077,
											"end": 14216,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14077,
											"end": 14216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 14223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 14223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14229,
											"end": 14472,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 14229,
											"end": 14472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "PUSH",
											"source": 10,
											"value": "4D6178696D756D20627579206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 14365,
											"end": 14366,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14357,
											"end": 14363,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14346,
											"end": 14404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14464,
											"name": "PUSH",
											"source": 10,
											"value": "206F7220657175616C20746F206D696E696D756D206275790000000000000000"
										},
										{
											"begin": 14433,
											"end": 14435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14425,
											"end": 14431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14421,
											"end": 14436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14229,
											"end": 14472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14229,
											"end": 14472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14478,
											"end": 14844,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 14478,
											"end": 14844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 14705,
											"end": 14707,
											"name": "PUSH",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 14700,
											"end": 14703,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14641,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 14641,
											"end": 14708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14641,
											"end": 14708,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 14641,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14717,
											"end": 14810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 14806,
											"end": 14809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14717,
											"end": 14810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 14717,
											"end": 14810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14717,
											"end": 14810,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 14717,
											"end": 14810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14835,
											"end": 14837,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14830,
											"end": 14833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14819,
											"end": 14838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14819,
											"end": 14838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14478,
											"end": 14844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14478,
											"end": 14844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14478,
											"end": 14844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14478,
											"end": 14844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14850,
											"end": 15269,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 14850,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15016,
											"end": 15020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15054,
											"end": 15056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15043,
											"end": 15052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15103,
											"end": 15112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15097,
											"end": 15101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15093,
											"end": 15113,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15089,
											"end": 15090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15074,
											"end": 15091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15067,
											"end": 15114,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15131,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 15257,
											"end": 15261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15131,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 15131,
											"end": 15262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15131,
											"end": 15262,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 15131,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14850,
											"end": 15269,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14850,
											"end": 15269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14850,
											"end": 15269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14850,
											"end": 15269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15607,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 15275,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 15400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15434,
											"end": 15436,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15423,
											"end": 15432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15411,
											"end": 15437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15411,
											"end": 15437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15447,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 15515,
											"end": 15516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15504,
											"end": 15513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15500,
											"end": 15517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15491,
											"end": 15497,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15447,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 15447,
											"end": 15518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15447,
											"end": 15518,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 15447,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 15596,
											"end": 15598,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15585,
											"end": 15594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15578,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 15528,
											"end": 15600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 15528,
											"end": 15600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15607,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15607,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15613,
											"end": 15844,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 15613,
											"end": 15844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15753,
											"end": 15787,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C6520697320636F6D706C6574652C206E6F206D6F726520746965"
										},
										{
											"begin": 15749,
											"end": 15750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15741,
											"end": 15747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15737,
											"end": 15751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15730,
											"end": 15788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15822,
											"end": 15836,
											"name": "PUSH",
											"source": 10,
											"value": "727320617661696C61626C650000000000000000000000000000000000000000"
										},
										{
											"begin": 15817,
											"end": 15819,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15809,
											"end": 15815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15805,
											"end": 15820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15798,
											"end": 15837,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15613,
											"end": 15844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15613,
											"end": 15844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15850,
											"end": 16216,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 15850,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15992,
											"end": 15995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16013,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 16077,
											"end": 16079,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 16072,
											"end": 16075,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16013,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 16013,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16013,
											"end": 16080,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 16013,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16006,
											"end": 16080,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16006,
											"end": 16080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 16178,
											"end": 16181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 16089,
											"end": 16182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16182,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 16089,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16209,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16202,
											"end": 16205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16191,
											"end": 16210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16191,
											"end": 16210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15850,
											"end": 16216,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15850,
											"end": 16216,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15850,
											"end": 16216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15850,
											"end": 16216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16641,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 16222,
											"end": 16641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16388,
											"end": 16392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16426,
											"end": 16428,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16415,
											"end": 16424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16411,
											"end": 16429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16403,
											"end": 16429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16403,
											"end": 16429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16475,
											"end": 16484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16469,
											"end": 16473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16465,
											"end": 16485,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16461,
											"end": 16462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16450,
											"end": 16459,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16439,
											"end": 16486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 16629,
											"end": 16633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 16503,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16634,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 16503,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16495,
											"end": 16634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16495,
											"end": 16634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16890,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 16647,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16787,
											"end": 16821,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E206F722065"
										},
										{
											"begin": 16783,
											"end": 16784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16775,
											"end": 16781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16771,
											"end": 16785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16764,
											"end": 16822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16856,
											"end": 16882,
											"name": "PUSH",
											"source": 10,
											"value": "7175616C20746F206D696E696D756D2070757263686173650000000000000000"
										},
										{
											"begin": 16851,
											"end": 16853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16843,
											"end": 16849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16839,
											"end": 16854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16832,
											"end": 16883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17262,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 16896,
											"end": 17262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17038,
											"end": 17041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17059,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 17123,
											"end": 17125,
											"name": "PUSH",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 17118,
											"end": 17121,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17059,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 17059,
											"end": 17126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17059,
											"end": 17126,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 17059,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17052,
											"end": 17126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17052,
											"end": 17126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17135,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 17224,
											"end": 17227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17135,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 17135,
											"end": 17228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17135,
											"end": 17228,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 17135,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17253,
											"end": 17255,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17248,
											"end": 17251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17244,
											"end": 17256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17687,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 17268,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17434,
											"end": 17438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17474,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17461,
											"end": 17470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17449,
											"end": 17475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17449,
											"end": 17475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17521,
											"end": 17530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17515,
											"end": 17519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17511,
											"end": 17531,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17507,
											"end": 17508,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17505,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17492,
											"end": 17509,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17485,
											"end": 17532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 17675,
											"end": 17679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 17549,
											"end": 17680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17680,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 17549,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17541,
											"end": 17680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17541,
											"end": 17680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 17933,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 17693,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17833,
											"end": 17867,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D757374206265206C657373207468616E206F722065717561"
										},
										{
											"begin": 17829,
											"end": 17830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17821,
											"end": 17827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17817,
											"end": 17831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17810,
											"end": 17868,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17902,
											"end": 17925,
											"name": "PUSH",
											"source": 10,
											"value": "6C20746F206D6178696D756D2070757263686173650000000000000000000000"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17889,
											"end": 17895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17885,
											"end": 17900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17878,
											"end": 17926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 17933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 17933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17939,
											"end": 18305,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 17939,
											"end": 18305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18081,
											"end": 18084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18102,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 18166,
											"end": 18168,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 18161,
											"end": 18164,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18102,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 18102,
											"end": 18169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18102,
											"end": 18169,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 18102,
											"end": 18169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18095,
											"end": 18169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18095,
											"end": 18169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18178,
											"end": 18271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 18267,
											"end": 18270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18178,
											"end": 18271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 18178,
											"end": 18271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18178,
											"end": 18271,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 18178,
											"end": 18271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18296,
											"end": 18298,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18291,
											"end": 18294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18287,
											"end": 18299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18280,
											"end": 18299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18280,
											"end": 18299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17939,
											"end": 18305,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17939,
											"end": 18305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17939,
											"end": 18305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17939,
											"end": 18305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18730,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 18311,
											"end": 18730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18477,
											"end": 18481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18515,
											"end": 18517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18504,
											"end": 18513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18500,
											"end": 18518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18492,
											"end": 18518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18492,
											"end": 18518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18564,
											"end": 18573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18558,
											"end": 18562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18554,
											"end": 18574,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18550,
											"end": 18551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18539,
											"end": 18548,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18535,
											"end": 18552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18528,
											"end": 18575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18592,
											"end": 18723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 18718,
											"end": 18722,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18592,
											"end": 18723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 18592,
											"end": 18723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18592,
											"end": 18723,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 18592,
											"end": 18723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18584,
											"end": 18723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18584,
											"end": 18723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 19146,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 18736,
											"end": 19146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18776,
											"end": 18783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18799,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 18817,
											"end": 18818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18799,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 18799,
											"end": 18819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18799,
											"end": 18819,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 18799,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18794,
											"end": 18819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18794,
											"end": 18819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 18851,
											"end": 18852,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 18833,
											"end": 18853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18853,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 18833,
											"end": 18853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18828,
											"end": 18853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18828,
											"end": 18853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18888,
											"end": 18889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18885,
											"end": 18886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 18890,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 18928,
											"end": 18939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 18910,
											"end": 18940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 18940,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 18910,
											"end": 18940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18899,
											"end": 18940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18899,
											"end": 18940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19089,
											"end": 19090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19080,
											"end": 19087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19076,
											"end": 19091,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19073,
											"end": 19074,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19070,
											"end": 19092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19050,
											"end": 19051,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19043,
											"end": 19052,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19023,
											"end": 19106,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 19000,
											"end": 19139,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19119,
											"end": 19137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 19119,
											"end": 19137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 19119,
											"end": 19137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19119,
											"end": 19137,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 19119,
											"end": 19137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19139,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 19000,
											"end": 19139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18784,
											"end": 19146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 19146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 19146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 19146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 19146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 19146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19152,
											"end": 19332,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 19152,
											"end": 19332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19200,
											"end": 19277,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19197,
											"end": 19198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19190,
											"end": 19278,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19297,
											"end": 19301,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 19294,
											"end": 19295,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19287,
											"end": 19302,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19321,
											"end": 19325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19318,
											"end": 19319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19311,
											"end": 19326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19523,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 19338,
											"end": 19523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19378,
											"end": 19379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19395,
											"end": 19415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 19413,
											"end": 19414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19395,
											"end": 19415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 19395,
											"end": 19415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19395,
											"end": 19415,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 19395,
											"end": 19415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19390,
											"end": 19415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19390,
											"end": 19415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19429,
											"end": 19449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 19447,
											"end": 19448,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19429,
											"end": 19449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 19429,
											"end": 19449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19429,
											"end": 19449,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 19429,
											"end": 19449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19424,
											"end": 19449,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19424,
											"end": 19449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19468,
											"end": 19469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19458,
											"end": 19493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 19458,
											"end": 19493,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19473,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 19473,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 19473,
											"end": 19491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19473,
											"end": 19491,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 19473,
											"end": 19491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19458,
											"end": 19493,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 19458,
											"end": 19493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19515,
											"end": 19516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19508,
											"end": 19517,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19503,
											"end": 19517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19503,
											"end": 19517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19523,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19529,
											"end": 19708,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 19529,
											"end": 19708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19669,
											"end": 19700,
											"name": "PUSH",
											"source": 10,
											"value": "536C6970706167652070726F74656374696F6E20747269676765726564000000"
										},
										{
											"begin": 19665,
											"end": 19666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19657,
											"end": 19663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19653,
											"end": 19667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19646,
											"end": 19701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19529,
											"end": 19708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19529,
											"end": 19708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19714,
											"end": 20080,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 19714,
											"end": 20080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19856,
											"end": 19859,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19877,
											"end": 19944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 19941,
											"end": 19943,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 19936,
											"end": 19939,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19877,
											"end": 19944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 19877,
											"end": 19944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19877,
											"end": 19944,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 19877,
											"end": 19944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19870,
											"end": 19944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19870,
											"end": 19944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19953,
											"end": 20046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 20042,
											"end": 20045,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19953,
											"end": 20046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 19953,
											"end": 20046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19953,
											"end": 20046,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 19953,
											"end": 20046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20071,
											"end": 20073,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20066,
											"end": 20069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20062,
											"end": 20074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20074,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19714,
											"end": 20080,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19714,
											"end": 20080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19714,
											"end": 20080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19714,
											"end": 20080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20086,
											"end": 20505,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 20086,
											"end": 20505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20252,
											"end": 20256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20290,
											"end": 20292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20279,
											"end": 20288,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20275,
											"end": 20293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20267,
											"end": 20293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20267,
											"end": 20293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20339,
											"end": 20348,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20333,
											"end": 20337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20329,
											"end": 20349,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20325,
											"end": 20326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20314,
											"end": 20323,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20310,
											"end": 20327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20303,
											"end": 20350,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20367,
											"end": 20498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 20493,
											"end": 20497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20367,
											"end": 20498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 20367,
											"end": 20498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20367,
											"end": 20498,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 20367,
											"end": 20498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20359,
											"end": 20498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20359,
											"end": 20498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20086,
											"end": 20505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20086,
											"end": 20505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20086,
											"end": 20505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20086,
											"end": 20505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20511,
											"end": 20735,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 20511,
											"end": 20735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20651,
											"end": 20685,
											"name": "PUSH",
											"source": 10,
											"value": "507572636861736520657863656564732063757272656E742074696572277320"
										},
										{
											"begin": 20647,
											"end": 20648,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20639,
											"end": 20645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20635,
											"end": 20649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20628,
											"end": 20686,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20720,
											"end": 20727,
											"name": "PUSH",
											"source": 10,
											"value": "6C696D6974000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20715,
											"end": 20717,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20707,
											"end": 20713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20703,
											"end": 20718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20696,
											"end": 20728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20511,
											"end": 20735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20511,
											"end": 20735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 21107,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 20741,
											"end": 21107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20883,
											"end": 20886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20904,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 20968,
											"end": 20970,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 20963,
											"end": 20966,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20904,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 20904,
											"end": 20971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20904,
											"end": 20971,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 20904,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20897,
											"end": 20971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20897,
											"end": 20971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20980,
											"end": 21073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 21069,
											"end": 21072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20980,
											"end": 21073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 20980,
											"end": 21073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20980,
											"end": 21073,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 20980,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21098,
											"end": 21100,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21093,
											"end": 21096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21089,
											"end": 21101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21082,
											"end": 21101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21082,
											"end": 21101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 21107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 21107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 21107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21532,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 21113,
											"end": 21532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21279,
											"end": 21283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21317,
											"end": 21319,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21306,
											"end": 21315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21302,
											"end": 21320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21294,
											"end": 21320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21294,
											"end": 21320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21366,
											"end": 21375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21360,
											"end": 21364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21356,
											"end": 21376,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21352,
											"end": 21353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21341,
											"end": 21350,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21337,
											"end": 21354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21330,
											"end": 21377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21394,
											"end": 21525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 21520,
											"end": 21524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21394,
											"end": 21525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 21394,
											"end": 21525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21394,
											"end": 21525,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 21394,
											"end": 21525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21386,
											"end": 21525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21386,
											"end": 21525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21681,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 21538,
											"end": 21681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21595,
											"end": 21600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21626,
											"end": 21632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21620,
											"end": 21633,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21611,
											"end": 21633,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21611,
											"end": 21633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21642,
											"end": 21675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 21669,
											"end": 21674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21642,
											"end": 21675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 21642,
											"end": 21675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21642,
											"end": 21675,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 21642,
											"end": 21675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21681,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21681,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21687,
											"end": 22038,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 21687,
											"end": 22038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21757,
											"end": 21763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21806,
											"end": 21808,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21794,
											"end": 21803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21785,
											"end": 21792,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21781,
											"end": 21804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21777,
											"end": 21809,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 21774,
											"end": 21893,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21774,
											"end": 21893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 21774,
											"end": 21893,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21812,
											"end": 21891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 21812,
											"end": 21891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 21812,
											"end": 21891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21812,
											"end": 21891,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 21812,
											"end": 21891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21774,
											"end": 21893,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 21774,
											"end": 21893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21932,
											"end": 21933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21957,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 22013,
											"end": 22020,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22004,
											"end": 22010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21993,
											"end": 22002,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21989,
											"end": 22011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21957,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 21957,
											"end": 22021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21957,
											"end": 22021,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 21957,
											"end": 22021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 22021,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 22021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21903,
											"end": 22031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21687,
											"end": 22038,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21687,
											"end": 22038,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21687,
											"end": 22038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21687,
											"end": 22038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21687,
											"end": 22038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22044,
											"end": 22223,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 22044,
											"end": 22223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22184,
											"end": 22215,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000"
										},
										{
											"begin": 22180,
											"end": 22181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22172,
											"end": 22178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22168,
											"end": 22182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22161,
											"end": 22216,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22044,
											"end": 22223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22044,
											"end": 22223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22229,
											"end": 22595,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 22229,
											"end": 22595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22371,
											"end": 22374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22392,
											"end": 22459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 22456,
											"end": 22458,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 22451,
											"end": 22454,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22392,
											"end": 22459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 22392,
											"end": 22459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22392,
											"end": 22459,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 22392,
											"end": 22459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22385,
											"end": 22459,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22385,
											"end": 22459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22468,
											"end": 22561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 22557,
											"end": 22560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22468,
											"end": 22561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 22468,
											"end": 22561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22468,
											"end": 22561,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 22468,
											"end": 22561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22586,
											"end": 22588,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22581,
											"end": 22584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 22589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22570,
											"end": 22589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22570,
											"end": 22589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22229,
											"end": 22595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22229,
											"end": 22595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22229,
											"end": 22595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22229,
											"end": 22595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 23020,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 22601,
											"end": 23020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22767,
											"end": 22771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22805,
											"end": 22807,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22794,
											"end": 22803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22790,
											"end": 22808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22782,
											"end": 22808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22782,
											"end": 22808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22854,
											"end": 22863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22848,
											"end": 22852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22844,
											"end": 22864,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22840,
											"end": 22841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22829,
											"end": 22838,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22825,
											"end": 22842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22818,
											"end": 22865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22882,
											"end": 23013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 23008,
											"end": 23012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22882,
											"end": 23013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 22882,
											"end": 23013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22882,
											"end": 23013,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 22882,
											"end": 23013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22874,
											"end": 23013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22874,
											"end": 23013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 23020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 23020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 23020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 23020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23026,
											"end": 23195,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 23026,
											"end": 23195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23166,
											"end": 23187,
											"name": "PUSH",
											"source": 10,
											"value": "5469657220646F6573206E6F7420657869737400000000000000000000000000"
										},
										{
											"begin": 23162,
											"end": 23163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23154,
											"end": 23160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23150,
											"end": 23164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23143,
											"end": 23188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23026,
											"end": 23195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23026,
											"end": 23195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23201,
											"end": 23567,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 23201,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23343,
											"end": 23346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23364,
											"end": 23431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 23428,
											"end": 23430,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 23423,
											"end": 23426,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23364,
											"end": 23431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 23364,
											"end": 23431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23364,
											"end": 23431,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 23364,
											"end": 23431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23357,
											"end": 23431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23357,
											"end": 23431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23440,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 23529,
											"end": 23532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23440,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 23440,
											"end": 23533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23440,
											"end": 23533,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 23440,
											"end": 23533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23558,
											"end": 23560,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23553,
											"end": 23556,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23549,
											"end": 23561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23542,
											"end": 23561,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23542,
											"end": 23561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23201,
											"end": 23567,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23201,
											"end": 23567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23201,
											"end": 23567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23201,
											"end": 23567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23573,
											"end": 23992,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 23573,
											"end": 23992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23739,
											"end": 23743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23777,
											"end": 23779,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23766,
											"end": 23775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23762,
											"end": 23780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23754,
											"end": 23780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23754,
											"end": 23780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23826,
											"end": 23835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23820,
											"end": 23824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23816,
											"end": 23836,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23812,
											"end": 23813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23810,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23797,
											"end": 23814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23790,
											"end": 23837,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23854,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 23980,
											"end": 23984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23854,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 23854,
											"end": 23985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23854,
											"end": 23985,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 23854,
											"end": 23985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23846,
											"end": 23985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23846,
											"end": 23985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23573,
											"end": 23992,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23573,
											"end": 23992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23573,
											"end": 23992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23573,
											"end": 23992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23998,
											"end": 24179,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 23998,
											"end": 24179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24171,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F2072656D61696E696E6720746F6B656E7320746F20776974686472617700"
										},
										{
											"begin": 24134,
											"end": 24135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24126,
											"end": 24132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24122,
											"end": 24136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24115,
											"end": 24172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23998,
											"end": 24179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23998,
											"end": 24179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24185,
											"end": 24551,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 24185,
											"end": 24551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24327,
											"end": 24330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24348,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 24412,
											"end": 24414,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 24407,
											"end": 24410,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24348,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 24348,
											"end": 24415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24348,
											"end": 24415,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 24348,
											"end": 24415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24341,
											"end": 24415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24341,
											"end": 24415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24424,
											"end": 24517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 24513,
											"end": 24516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24424,
											"end": 24517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 24424,
											"end": 24517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24424,
											"end": 24517,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 24424,
											"end": 24517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24542,
											"end": 24544,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24537,
											"end": 24540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24533,
											"end": 24545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24526,
											"end": 24545,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24526,
											"end": 24545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24185,
											"end": 24551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24185,
											"end": 24551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24185,
											"end": 24551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24185,
											"end": 24551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24557,
											"end": 24976,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 24557,
											"end": 24976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24723,
											"end": 24727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24761,
											"end": 24763,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24750,
											"end": 24759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24746,
											"end": 24764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24738,
											"end": 24764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24738,
											"end": 24764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24810,
											"end": 24819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24804,
											"end": 24808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24800,
											"end": 24820,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24796,
											"end": 24797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24785,
											"end": 24794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24781,
											"end": 24798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24774,
											"end": 24821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24838,
											"end": 24969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 24964,
											"end": 24968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24838,
											"end": 24969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 24838,
											"end": 24969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24838,
											"end": 24969,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 24838,
											"end": 24969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24830,
											"end": 24969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24830,
											"end": 24969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24557,
											"end": 24976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24557,
											"end": 24976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24557,
											"end": 24976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24557,
											"end": 24976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24982,
											"end": 25210,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 24982,
											"end": 25210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25122,
											"end": 25156,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C65206D7573742062652073746F7070656420746F207769746864"
										},
										{
											"begin": 25118,
											"end": 25119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25110,
											"end": 25116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25106,
											"end": 25120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25099,
											"end": 25157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25191,
											"end": 25202,
											"name": "PUSH",
											"source": 10,
											"value": "7261772066756E64730000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25186,
											"end": 25188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25178,
											"end": 25184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25174,
											"end": 25189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25167,
											"end": 25203,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24982,
											"end": 25210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24982,
											"end": 25210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25216,
											"end": 25582,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 25216,
											"end": 25582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25358,
											"end": 25361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25379,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 25443,
											"end": 25445,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 25438,
											"end": 25441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25379,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 25379,
											"end": 25446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25379,
											"end": 25446,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 25379,
											"end": 25446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25372,
											"end": 25446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25372,
											"end": 25446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25455,
											"end": 25548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 25544,
											"end": 25547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25455,
											"end": 25548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 25455,
											"end": 25548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25455,
											"end": 25548,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 25455,
											"end": 25548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25573,
											"end": 25575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25568,
											"end": 25571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25564,
											"end": 25576,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25557,
											"end": 25576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25557,
											"end": 25576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25216,
											"end": 25582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25216,
											"end": 25582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25216,
											"end": 25582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25216,
											"end": 25582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25588,
											"end": 26007,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 25588,
											"end": 26007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25754,
											"end": 25758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25792,
											"end": 25794,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25781,
											"end": 25790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25777,
											"end": 25795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25769,
											"end": 25795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25769,
											"end": 25795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25841,
											"end": 25850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25835,
											"end": 25839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25831,
											"end": 25851,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25827,
											"end": 25828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25816,
											"end": 25825,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25812,
											"end": 25829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25805,
											"end": 25852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25869,
											"end": 26000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 25995,
											"end": 25999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25869,
											"end": 26000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 25869,
											"end": 26000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25869,
											"end": 26000,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 25869,
											"end": 26000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25861,
											"end": 26000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25861,
											"end": 26000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25588,
											"end": 26007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25588,
											"end": 26007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25588,
											"end": 26007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25588,
											"end": 26007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26013,
											"end": 26183,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 26013,
											"end": 26183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26153,
											"end": 26175,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F204D4154494320746F207769746864726177000000000000000000000000"
										},
										{
											"begin": 26149,
											"end": 26150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26141,
											"end": 26147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26137,
											"end": 26151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26130,
											"end": 26176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26013,
											"end": 26183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26013,
											"end": 26183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26189,
											"end": 26555,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 26189,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26331,
											"end": 26334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26352,
											"end": 26419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 26416,
											"end": 26418,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 26411,
											"end": 26414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26352,
											"end": 26419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 26352,
											"end": 26419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26352,
											"end": 26419,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 26352,
											"end": 26419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26345,
											"end": 26419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26345,
											"end": 26419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26428,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 26517,
											"end": 26520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26428,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 26428,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26428,
											"end": 26521,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 26428,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26546,
											"end": 26548,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26541,
											"end": 26544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26537,
											"end": 26549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26530,
											"end": 26549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26530,
											"end": 26549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26189,
											"end": 26555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26189,
											"end": 26555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26189,
											"end": 26555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26189,
											"end": 26555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26561,
											"end": 26980,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 26561,
											"end": 26980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26727,
											"end": 26731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26765,
											"end": 26767,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26754,
											"end": 26763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26750,
											"end": 26768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26742,
											"end": 26768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26742,
											"end": 26768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26814,
											"end": 26823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26804,
											"end": 26824,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26800,
											"end": 26801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26789,
											"end": 26798,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26785,
											"end": 26802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26778,
											"end": 26825,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26842,
											"end": 26973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 26968,
											"end": 26972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26842,
											"end": 26973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 26842,
											"end": 26973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26842,
											"end": 26973,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 26842,
											"end": 26973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26834,
											"end": 26973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26834,
											"end": 26973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26561,
											"end": 26980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26561,
											"end": 26980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26561,
											"end": 26980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26561,
											"end": 26980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26986,
											"end": 27133,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 26986,
											"end": 27133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27087,
											"end": 27098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27124,
											"end": 27127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27109,
											"end": 27127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27109,
											"end": 27127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26986,
											"end": 27133,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26986,
											"end": 27133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26986,
											"end": 27133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26986,
											"end": 27133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26986,
											"end": 27133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27139,
											"end": 27253,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 27139,
											"end": 27253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27139,
											"end": 27253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27139,
											"end": 27253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27259,
											"end": 27657,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 27259,
											"end": 27657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27418,
											"end": 27421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27439,
											"end": 27522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 27520,
											"end": 27521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27515,
											"end": 27518,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27439,
											"end": 27522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 27439,
											"end": 27522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27439,
											"end": 27522,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 27439,
											"end": 27522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27432,
											"end": 27522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27432,
											"end": 27522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27531,
											"end": 27624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 27620,
											"end": 27623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27531,
											"end": 27624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 27531,
											"end": 27624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27531,
											"end": 27624,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 27531,
											"end": 27624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27649,
											"end": 27650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27644,
											"end": 27647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27640,
											"end": 27651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27633,
											"end": 27651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27633,
											"end": 27651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27259,
											"end": 27657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27259,
											"end": 27657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27259,
											"end": 27657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27259,
											"end": 27657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27663,
											"end": 28042,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 27663,
											"end": 28042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27847,
											"end": 27850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27869,
											"end": 28016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 28012,
											"end": 28015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27869,
											"end": 28016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 27869,
											"end": 28016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27869,
											"end": 28016,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 27869,
											"end": 28016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27862,
											"end": 28016,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27862,
											"end": 28016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28033,
											"end": 28036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28026,
											"end": 28036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28026,
											"end": 28036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27663,
											"end": 28042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27663,
											"end": 28042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27663,
											"end": 28042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27663,
											"end": 28042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28048,
											"end": 28222,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 28048,
											"end": 28222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28188,
											"end": 28214,
											"name": "PUSH",
											"source": 10,
											"value": "4661696C656420746F207769746864726177204D415449430000000000000000"
										},
										{
											"begin": 28184,
											"end": 28185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28176,
											"end": 28182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28172,
											"end": 28186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28165,
											"end": 28215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28048,
											"end": 28222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28048,
											"end": 28222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28228,
											"end": 28594,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 28228,
											"end": 28594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28370,
											"end": 28373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28391,
											"end": 28458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 28455,
											"end": 28457,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 28450,
											"end": 28453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28391,
											"end": 28458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 28391,
											"end": 28458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28391,
											"end": 28458,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 28391,
											"end": 28458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28384,
											"end": 28458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28384,
											"end": 28458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28467,
											"end": 28560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 28556,
											"end": 28559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28467,
											"end": 28560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 28467,
											"end": 28560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28467,
											"end": 28560,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 28467,
											"end": 28560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28585,
											"end": 28587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28580,
											"end": 28583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28576,
											"end": 28588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28569,
											"end": 28588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28569,
											"end": 28588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28228,
											"end": 28594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28228,
											"end": 28594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28228,
											"end": 28594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28228,
											"end": 28594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28600,
											"end": 29019,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 28600,
											"end": 29019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28766,
											"end": 28770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28804,
											"end": 28806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28793,
											"end": 28802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28789,
											"end": 28807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28781,
											"end": 28807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28781,
											"end": 28807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28853,
											"end": 28862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28847,
											"end": 28851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28843,
											"end": 28863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28839,
											"end": 28840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28828,
											"end": 28837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28824,
											"end": 28841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28817,
											"end": 28864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28881,
											"end": 29012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 29007,
											"end": 29011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28881,
											"end": 29012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 28881,
											"end": 29012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28881,
											"end": 29012,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 28881,
											"end": 29012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28873,
											"end": 29012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28873,
											"end": 29012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28600,
											"end": 29019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28600,
											"end": 29019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28600,
											"end": 29019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28600,
											"end": 29019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29025,
											"end": 29206,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 29025,
											"end": 29206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29165,
											"end": 29198,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 29161,
											"end": 29162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29153,
											"end": 29159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29149,
											"end": 29163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29142,
											"end": 29199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29025,
											"end": 29206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29025,
											"end": 29206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29212,
											"end": 29578,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 29212,
											"end": 29578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29354,
											"end": 29357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29375,
											"end": 29442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 29439,
											"end": 29441,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 29434,
											"end": 29437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29375,
											"end": 29442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 29375,
											"end": 29442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29375,
											"end": 29442,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 29375,
											"end": 29442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29368,
											"end": 29442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29368,
											"end": 29442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29451,
											"end": 29544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 29540,
											"end": 29543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29451,
											"end": 29544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 29451,
											"end": 29544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29451,
											"end": 29544,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 29451,
											"end": 29544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29569,
											"end": 29571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29564,
											"end": 29567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29560,
											"end": 29572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29553,
											"end": 29572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29553,
											"end": 29572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29212,
											"end": 29578,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29212,
											"end": 29578,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29212,
											"end": 29578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29212,
											"end": 29578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29584,
											"end": 30003,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 29584,
											"end": 30003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29750,
											"end": 29754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29788,
											"end": 29790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29777,
											"end": 29786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29773,
											"end": 29791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29765,
											"end": 29791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29765,
											"end": 29791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29837,
											"end": 29846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29831,
											"end": 29835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29827,
											"end": 29847,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 29823,
											"end": 29824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29812,
											"end": 29821,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29808,
											"end": 29825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29801,
											"end": 29848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29865,
											"end": 29996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 29991,
											"end": 29995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29865,
											"end": 29996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 29865,
											"end": 29996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29865,
											"end": 29996,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 29865,
											"end": 29996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29857,
											"end": 29996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29857,
											"end": 29996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29584,
											"end": 30003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29584,
											"end": 30003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29584,
											"end": 30003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29584,
											"end": 30003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30009,
											"end": 30341,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 30009,
											"end": 30341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30130,
											"end": 30134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30168,
											"end": 30170,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 30157,
											"end": 30166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30153,
											"end": 30171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30145,
											"end": 30171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30145,
											"end": 30171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 30249,
											"end": 30250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30238,
											"end": 30247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30234,
											"end": 30251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30225,
											"end": 30231,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 30181,
											"end": 30252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 30330,
											"end": 30332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30319,
											"end": 30328,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30315,
											"end": 30333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30306,
											"end": 30312,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 30262,
											"end": 30334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30009,
											"end": 30341,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 30009,
											"end": 30341,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30009,
											"end": 30341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30009,
											"end": 30341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30009,
											"end": 30341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30009,
											"end": 30341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30496,
											"end": 30500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30534,
											"end": 30536,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 30523,
											"end": 30532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30519,
											"end": 30537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30511,
											"end": 30537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30511,
											"end": 30537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30547,
											"end": 30618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 30615,
											"end": 30616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30604,
											"end": 30613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30600,
											"end": 30617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30591,
											"end": 30597,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 30547,
											"end": 30618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 30547,
											"end": 30618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30547,
											"end": 30618,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 30547,
											"end": 30618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30628,
											"end": 30700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 30696,
											"end": 30698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30685,
											"end": 30694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30681,
											"end": 30699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30672,
											"end": 30678,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 30628,
											"end": 30700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 30628,
											"end": 30700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30628,
											"end": 30700,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 30628,
											"end": 30700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30710,
											"end": 30782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 30778,
											"end": 30780,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 30767,
											"end": 30776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30763,
											"end": 30781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30754,
											"end": 30760,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30710,
											"end": 30782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 30710,
											"end": 30782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30710,
											"end": 30782,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 30710,
											"end": 30782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30347,
											"end": 30789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"danpresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(uint256)": "3610724e",
							"currentTier()": "d679677a",
							"depositTokensForSale(uint256)": "8a0a80af",
							"getCurrentPrice()": "eb91d37e",
							"maticRaised()": "d2e8ecae",
							"maxMaticBuy()": "c43a0135",
							"minMaticBuy()": "22c6baf6",
							"myToken()": "b8fcf937",
							"owner()": "8da5cb5b",
							"presaleActive()": "53135ca0",
							"renounceOwnership()": "715018a6",
							"setCurrentTier(uint256)": "5276837c",
							"setMinMaxMaticBuy(uint256,uint256)": "273f8974",
							"setTiers(uint256[],uint256[])": "1b8ebc3c",
							"startPresale()": "04c98b2b",
							"stopPresale()": "1ad2ad1a",
							"tierPrices(uint256)": "300eccab",
							"tierTokenLimits(uint256)": "e7829cad",
							"tierTokensSold(uint256)": "a8c038c7",
							"tokenAddress()": "9d76ea58",
							"tokensRemaining()": "c8b08125",
							"totalMaticRaised()": "125b8b78",
							"totalTokensSold()": "63b20117",
							"transferOwnership(address)": "f2fde38b",
							"withdrawRaisedMatic()": "c9881d86",
							"withdrawRemainingTokens()": "8afbf669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMax\",\"type\":\"uint256\"}],\"name\":\"BuyLimitsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresaleStopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaisedMaticWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RemainingTokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TiersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maticAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokens\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositTokensForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maticRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMaticBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMaticBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tier\",\"type\":\"uint256\"}],\"name\":\"setCurrentTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minMaticBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMaticBuy\",\"type\":\"uint256\"}],\"name\":\"setMinMaxMaticBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_limits\",\"type\":\"uint256[]\"}],\"name\":\"setTiers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tierPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tierTokenLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tierTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMaticRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRaisedMatic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRemainingTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A smart contract for conducting a token presale on the Polygon network using MATIC. The contract owner can manage the presale, including starting/stopping it, updating the price, and withdrawing funds and unsold tokens.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"buyTokens(uint256)\":{\"details\":\"Allows a user to buy tokens with MATIC. This function is payable and can receive MATIC.\",\"params\":{\"minTokens\":\"The minimum number of tokens the buyer is willing to receive (slippage protection).\"}},\"constructor\":{\"details\":\"The constructor initializes the contract with the address of the token to be sold.\",\"params\":{\"_tokenAddress\":\"The address of the ERC20 token.\"}},\"depositTokensForSale(uint256)\":{\"details\":\"Allows the owner to deposit tokens into the presale contract. The owner must have already approved this contract to spend their tokens. NOTE: Before calling this function, you MUST call the `approve` function on your ERC20 token contract to allow THIS contract to transfer the specified `amount` of tokens from your wallet.\",\"params\":{\"amount\":\"The number of tokens to deposit.\"}},\"getCurrentPrice()\":{\"details\":\"Returns the current number of tokens per 1 MATIC.\"},\"maticRaised()\":{\"details\":\"Returns the total amount of MATIC raised during the presale.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setCurrentTier(uint256)\":{\"details\":\"Allows the owner to manually set the current active presale tier.\",\"params\":{\"_tier\":\"The new tier number.\"}},\"setMinMaxMaticBuy(uint256,uint256)\":{\"details\":\"Allows the owner to update the minimum and maximum MATIC a user can spend.\",\"params\":{\"_maxMaticBuy\":\"The new maximum MATIC buy amount.\",\"_minMaticBuy\":\"The new minimum MATIC buy amount.\"}},\"setTiers(uint256[],uint256[])\":{\"details\":\"Allows the owner to set new prices and token limits for each tier instantly. This function replaces the two-step propose/commit process to allow for immediate changes.\",\"params\":{\"_limits\":\"An array of token limits for each tier.\",\"_prices\":\"An array of prices for each tier.\"}},\"startPresale()\":{\"details\":\"Allows the owner to start the presale. Requires the presale to not be active.\"},\"stopPresale()\":{\"details\":\"Allows the owner to stop the presale manually. Requires the presale to be active.\"},\"tokensRemaining()\":{\"details\":\"Returns the number of unsold tokens remaining in the contract.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawRaisedMatic()\":{\"details\":\"Allows the owner to withdraw the MATIC raised from the presale. Requires the presale to be stopped.\"},\"withdrawRemainingTokens()\":{\"details\":\"Allows the owner to withdraw any remaining unsold tokens. This can be done at any time.\"}},\"title\":\"TokenPresale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"danpresale.sol\":\"TokenPresale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"danpresale.sol\":{\"keccak256\":\"0xc5f88e786f1bd766860769ecbad0c5731c2667ec0b6c5f9ed3abc114f0e586e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://688bf96cc19db2e1eb6e6488eb3e266e30e11fe05f9ff99a7b44539f0ae5151d\",\"dweb:/ipfs/QmZ2VxcY66JncrH2Yr5X2f9FMYDr8T1UhAAZJKmonRZpxP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "danpresale.sol:TokenPresale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "danpresale.sol:TokenPresale",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 904,
								"contract": "danpresale.sol:TokenPresale",
								"label": "myToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 908,
								"contract": "danpresale.sol:TokenPresale",
								"label": "tierPrices",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 912,
								"contract": "danpresale.sol:TokenPresale",
								"label": "tierTokenLimits",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 916,
								"contract": "danpresale.sol:TokenPresale",
								"label": "tierTokensSold",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 918,
								"contract": "danpresale.sol:TokenPresale",
								"label": "currentTier",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 920,
								"contract": "danpresale.sol:TokenPresale",
								"label": "totalTokensSold",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 922,
								"contract": "danpresale.sol:TokenPresale",
								"label": "totalMaticRaised",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 924,
								"contract": "danpresale.sol:TokenPresale",
								"label": "presaleActive",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 928,
								"contract": "danpresale.sol:TokenPresale",
								"label": "minMaticBuy",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 930,
								"contract": "danpresale.sol:TokenPresale",
								"label": "maxMaticBuy",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 886,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"danpresale.sol": {
				"ast": {
					"absolutePath": "danpresale.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						],
						"TokenPresale": [
							1489
						]
					},
					"id": 1490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 381,
							"src": "60:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 148,
							"src": "118:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 303,
							"src": "172:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 845,
							"src": "236:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 894,
										"name": "Ownable",
										"nameLocations": [
											"601:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "601:7:9"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "601:7:9"
								},
								{
									"baseName": {
										"id": 896,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"610:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "610:15:9"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "610:15:9"
								}
							],
							"canonicalName": "TokenPresale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "305:269:9",
								"text": " @title TokenPresale\n @dev A smart contract for conducting a token presale on the Polygon network using MATIC.\n The contract owner can manage the presale, including starting/stopping it, updating the price,\n and withdrawing funds and unsold tokens."
							},
							"fullyImplemented": true,
							"id": 1489,
							"linearizedBaseContracts": [
								1489,
								302,
								147,
								874
							],
							"name": "TokenPresale",
							"nameLocation": "585:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 901,
									"libraryName": {
										"id": 898,
										"name": "SafeERC20",
										"nameLocations": [
											"639:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "639:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "633:27:9",
									"typeName": {
										"id": 900,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 899,
											"name": "IERC20",
											"nameLocations": [
												"653:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "653:6:9"
										},
										"referencedDeclaration": 380,
										"src": "653:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b8fcf937",
									"id": 904,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "736:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "722:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 903,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 902,
											"name": "IERC20",
											"nameLocations": [
												"722:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "722:6:9"
										},
										"referencedDeclaration": 380,
										"src": "722:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "300eccab",
									"id": 908,
									"mutability": "mutable",
									"name": "tierPrices",
									"nameLocation": "877:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "842:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 907,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 905,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "842:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 906,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "861:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7829cad",
									"id": 912,
									"mutability": "mutable",
									"name": "tierTokenLimits",
									"nameLocation": "984:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "949:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 911,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 909,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "957:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "949:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 910,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "968:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8c038c7",
									"id": 916,
									"mutability": "mutable",
									"name": "tierTokensSold",
									"nameLocation": "1108:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1073:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 915,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 913,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1081:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1073:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 914,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1092:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d679677a",
									"id": 918,
									"mutability": "mutable",
									"name": "currentTier",
									"nameLocation": "1190:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1175:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 917,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1175:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b20117",
									"id": 920,
									"mutability": "mutable",
									"name": "totalTokensSold",
									"nameLocation": "1280:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1265:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1265:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "125b8b78",
									"id": 922,
									"mutability": "mutable",
									"name": "totalMaticRaised",
									"nameLocation": "1363:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1348:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 921,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1348:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53135ca0",
									"id": 924,
									"mutability": "mutable",
									"name": "presaleActive",
									"nameLocation": "1468:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1456:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 923,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1456:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 926,
									"mutability": "immutable",
									"name": "tokenAddress",
									"nameLocation": "1555:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1530:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 925,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1530:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "22c6baf6",
									"id": 928,
									"mutability": "mutable",
									"name": "minMaticBuy",
									"nameLocation": "1669:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1654:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 927,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1654:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c43a0135",
									"id": 930,
									"mutability": "mutable",
									"name": "maxMaticBuy",
									"nameLocation": "1702:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "1687:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 929,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1687:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "17c3338141363aab2512c08f8a7764328ca95979f7057663eb93f7e250139b4c",
									"id": 932,
									"name": "PresaleStarted",
									"nameLocation": "1768:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1782:2:9"
									},
									"src": "1762:23:9"
								},
								{
									"anonymous": false,
									"eventSelector": "e60f0ccd81d0545e17cd40eaaf8b7c5d36e3a26372928be6a27d2f73f67d7593",
									"id": 934,
									"name": "PresaleStopped",
									"nameLocation": "1797:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:2:9"
									},
									"src": "1791:23:9"
								},
								{
									"anonymous": false,
									"eventSelector": "37740b69a1cce7c6b884ff59b1465c52017ffcb23b6e46249f50f3375b71eada",
									"id": 936,
									"name": "TiersUpdated",
									"nameLocation": "1826:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1838:2:9"
									},
									"src": "1820:21:9"
								},
								{
									"anonymous": false,
									"eventSelector": "7c821b4dcc7c9bfb2d37c50fb125278cf9699532c206a3699cab994ab149519b",
									"id": 942,
									"name": "BuyLimitsUpdated",
									"nameLocation": "1853:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMin",
												"nameLocation": "1878:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1870:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMax",
												"nameLocation": "1894:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1886:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:32:9"
									},
									"src": "1847:55:9"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 950,
									"name": "TokensPurchased",
									"nameLocation": "1914:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1946:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1930:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "maticAmount",
												"nameLocation": "1961:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1953:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1982:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1974:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:65:9"
									},
									"src": "1908:87:9"
								},
								{
									"anonymous": false,
									"eventSelector": "59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e",
									"id": 956,
									"name": "TokensDeposited",
									"nameLocation": "2007:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2039:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "2023:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2054:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "2046:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:39:9"
									},
									"src": "2001:61:9"
								},
								{
									"anonymous": false,
									"eventSelector": "00e1ffcaf17d7bfc1113fd8f6bc6f5454d1b5061c11409e4d52ede1f9799889e",
									"id": 962,
									"name": "RaisedMaticWithdrawn",
									"nameLocation": "2074:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2111:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2095:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2126:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2118:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:39:9"
									},
									"src": "2068:66:9"
								},
								{
									"anonymous": false,
									"eventSelector": "5eacf990d96c07de8e8e6c50faaf28160b2997575250a8aacfbb7f224791ff76",
									"id": 968,
									"name": "RemainingTokensWithdrawn",
									"nameLocation": "2146:24:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2187:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2171:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2202:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2194:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:39:9"
									},
									"src": "2140:70:9"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "2448:160:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "2467:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2492:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2484:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 980,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2484:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2484:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2467:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2496:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2459:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2459:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "2459:61:9"
											},
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2531:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 989,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2546:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2531:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "2531:28:9"
											},
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 992,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "2570:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 994,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2587:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 993,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2580:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2580:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2570:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "2570:30:9"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "2218:169:9",
										"text": " @dev The constructor initializes the contract with the address of the token to be sold.\n @param _tokenAddress The address of the ERC20 token."
									},
									"id": 999,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 974,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2436:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2440:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2436:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 976,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 973,
												"name": "Ownable",
												"nameLocations": [
													"2428:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2428:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2428:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "2413:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2405:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:23:9"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:0:9"
									},
									"scope": 1489,
									"src": "2393:215:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "3079:594:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1012,
																	"name": "_prices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "3098:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3106:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3098:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1014,
																	"name": "_limits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "3116:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3124:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3116:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3098:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "417272617973206d7573742068617665207468652073616d65206c656e677468",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3132:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19",
																"typeString": "literal_string \"Arrays must have the same length\""
															},
															"value": "Arrays must have the same length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23c363817f9879f3888017ece213d7d3388c222537fa7decb7e0d1ac65953f19",
																"typeString": "literal_string \"Arrays must have the same length\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3090:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "3090:77:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1021,
																	"name": "_prices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "3186:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3194:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3186:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3203:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3186:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696572732063616e6e6f7420626520656d707479",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3206:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991",
																"typeString": "literal_string \"Tiers cannot be empty\""
															},
															"value": "Tiers cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34a81743eec28ca6b0f3b60e08ce5d5093bc6ac05133a1ce9712b69bc4b93991",
																"typeString": "literal_string \"Tiers cannot be empty\""
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3178:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3178:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "3178:52:9"
											},
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "3292:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "3284:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1028,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3284:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"hexValue": "31",
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3296:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3284:13:9"
											},
											{
												"body": {
													"id": 1050,
													"nodeType": "Block",
													"src": "3334:105:9",
													"statements": [
														{
															"expression": {
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3349:20:9",
																"subExpression": {
																	"baseExpression": {
																		"id": 1037,
																		"name": "tierPrices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "3356:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1039,
																	"indexExpression": {
																		"id": 1038,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "3367:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3356:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "3349:20:9"
														},
														{
															"expression": {
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3384:25:9",
																"subExpression": {
																	"baseExpression": {
																		"id": 1042,
																		"name": "tierTokenLimits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "3391:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1044,
																	"indexExpression": {
																		"id": 1043,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "3407:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3391:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1046,
															"nodeType": "ExpressionStatement",
															"src": "3384:25:9"
														},
														{
															"expression": {
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3424:3:9",
																"subExpression": {
																	"id": 1047,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "3424:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1049,
															"nodeType": "ExpressionStatement",
															"src": "3424:3:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1032,
															"name": "tierPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3315:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"id": 1033,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3326:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3315:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3331:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3315:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"nodeType": "WhileStatement",
												"src": "3308:131:9"
											},
											{
												"body": {
													"id": 1083,
													"nodeType": "Block",
													"src": "3519:107:9",
													"statements": [
														{
															"expression": {
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1063,
																		"name": "tierPrices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "3534:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1067,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1064,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "3545:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3549:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3545:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3534:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1068,
																		"name": "_prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "3554:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1070,
																	"indexExpression": {
																		"id": 1069,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "3562:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3554:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3534:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1072,
															"nodeType": "ExpressionStatement",
															"src": "3534:30:9"
														},
														{
															"expression": {
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1073,
																		"name": "tierTokenLimits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "3579:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1077,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1074,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "3595:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3599:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3595:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3579:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1078,
																		"name": "_limits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1006,
																		"src": "3604:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1080,
																	"indexExpression": {
																		"id": 1079,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "3612:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3604:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3579:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ExpressionStatement",
															"src": "3579:35:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3494:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1057,
															"name": "_prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "3498:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3506:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3498:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3494:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1084,
												"initializationExpression": {
													"assignments": [
														1053
													],
													"declarations": [
														{
															"constant": false,
															"id": 1053,
															"mutability": "mutable",
															"name": "j",
															"nameLocation": "3487:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1084,
															"src": "3482:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1052,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3482:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1055,
													"initialValue": {
														"hexValue": "30",
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3491:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3482:10:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3514:3:9",
														"subExpression": {
															"id": 1060,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "3514:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1062,
													"nodeType": "ExpressionStatement",
													"src": "3514:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3477:149:9"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1085,
														"name": "TiersUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "3651:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3651:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "EmitStatement",
												"src": "3646:19:9"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "2659:321:9",
										"text": " @dev Allows the owner to set new prices and token limits for each tier instantly.\n This function replaces the two-step propose/commit process to allow for immediate changes.\n @param _prices An array of prices for each tier.\n @param _limits An array of token limits for each tier."
									},
									"functionSelector": "1b8ebc3c",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1009,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1008,
												"name": "onlyOwner",
												"nameLocations": [
													"3069:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3069:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3069:9:9"
										}
									],
									"name": "setTiers",
									"nameLocation": "2995:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "_prices",
												"nameLocation": "3023:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "3004:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1001,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3004:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1002,
													"nodeType": "ArrayTypeName",
													"src": "3004:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "_limits",
												"nameLocation": "3051:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "3032:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1004,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3032:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1005,
													"nodeType": "ArrayTypeName",
													"src": "3032:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:56:9"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3079:0:9"
									},
									"scope": 1489,
									"src": "2986:687:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "3882:102:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1098,
																	"name": "tierPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "3901:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1100,
																"indexExpression": {
																	"id": 1099,
																	"name": "_tier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "3912:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3901:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3921:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3901:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5469657220646f6573206e6f74206578697374",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3924:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047",
																"typeString": "literal_string \"Tier does not exist\""
															},
															"value": "Tier does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55c4248568541c7b78261f5867ecff4dd121c54572e501bed1eecc84e2609047",
																"typeString": "literal_string \"Tier does not exist\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3893:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3893:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "3893:53:9"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "currentTier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3957:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1107,
														"name": "_tier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "3971:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3957:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "3957:19:9"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "3685:133:9",
										"text": " @dev Allows the owner to manually set the current active presale tier.\n @param _tier The new tier number."
									},
									"functionSelector": "5276837c",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "onlyOwner",
												"nameLocations": [
													"3872:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3872:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3872:9:9"
										}
									],
									"name": "setCurrentTier",
									"nameLocation": "3833:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_tier",
												"nameLocation": "3856:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "3848:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:15:9"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3882:0:9"
									},
									"scope": 1489,
									"src": "3824:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "4152:227:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4171:14:9",
															"subExpression": {
																"id": 1118,
																"name": "presaleActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "4172:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c6520697320616c726561647920616374697665",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4187:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
																"typeString": "literal_string \"Presale is already active\""
															},
															"value": "Presale is already active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b04a989878eac263a140cf49274e7ef7ce19de66ca6a05a28e25e3b01cb6e25c",
																"typeString": "literal_string \"Presale is already active\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4163:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4163:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "4163:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1124,
																	"name": "tierPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "4234:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1126,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4245:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4234:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4250:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4234:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5469657273206d75737420626520636f6e66696775726564206265666f7265207374617274696e67207468652070726573616c65",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4253:54:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549",
																"typeString": "literal_string \"Tiers must be configured before starting the presale\""
															},
															"value": "Tiers must be configured before starting the presale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f5ab5463f6181d7f2111be9a3e668cf8684e484f667cfc014505e5c134f9549",
																"typeString": "literal_string \"Tiers must be configured before starting the presale\""
															}
														],
														"id": 1123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4226:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4226:82:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "4226:82:9"
											},
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1132,
														"name": "presaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "4319:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4335:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4319:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "4319:20:9"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1136,
														"name": "PresaleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "4355:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4355:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "EmitStatement",
												"src": "4350:21:9"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "3992:111:9",
										"text": " @dev Allows the owner to start the presale.\n Requires the presale to not be active."
									},
									"functionSelector": "04c98b2b",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "onlyOwner",
												"nameLocations": [
													"4142:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4142:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4142:9:9"
										}
									],
									"name": "startPresale",
									"nameLocation": "4118:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4130:2:9"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4152:0:9"
									},
									"scope": 1489,
									"src": "4109:270:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "4550:130:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1147,
															"name": "presaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "4569:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206973206e6f7420616374697665",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4584:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															},
															"value": "Presale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4561:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "4561:47:9"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1151,
														"name": "presaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "4619:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4635:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4619:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "4619:21:9"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1155,
														"name": "PresaleStopped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "4656:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4656:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "EmitStatement",
												"src": "4651:21:9"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "4387:115:9",
										"text": " @dev Allows the owner to stop the presale manually.\n Requires the presale to be active."
									},
									"functionSelector": "1ad2ad1a",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1143,
												"name": "onlyOwner",
												"nameLocations": [
													"4540:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4540:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4540:9:9"
										}
									],
									"name": "stopPresale",
									"nameLocation": "4517:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4528:2:9"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4550:0:9"
									},
									"scope": 1489,
									"src": "4508:172:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "5012:327:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "_minMaticBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "5031:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5046:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5031:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20627579206d7573742062652067726561746572207468616e207a65726f",
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5049:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8",
																"typeString": "literal_string \"Minimum buy must be greater than zero\""
															},
															"value": "Minimum buy must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1241ad1c5851f2f7054c03972c4f8c29b744be7eb755ced9444f32cb13239da8",
																"typeString": "literal_string \"Minimum buy must be greater than zero\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5023:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "5023:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1177,
																"name": "_maxMaticBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "5108:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1178,
																"name": "_minMaticBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "5124:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5108:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d20627579206d7573742062652067726561746572207468616e206f7220657175616c20746f206d696e696d756d20627579",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5138:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740",
																"typeString": "literal_string \"Maximum buy must be greater than or equal to minimum buy\""
															},
															"value": "Maximum buy must be greater than or equal to minimum buy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da51b5b2b12d4e8486cd131c00b29cb9645788578aade595facc367a23b24740",
																"typeString": "literal_string \"Maximum buy must be greater than or equal to minimum buy\""
															}
														],
														"id": 1176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5100:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5100:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "5100:97:9"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "minMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "5208:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "_minMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "5222:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5208:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "5208:26:9"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "maxMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "5245:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_maxMaticBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "5259:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5245:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "5245:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1192,
															"name": "_minMaticBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "5304:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1193,
															"name": "_maxMaticBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "5318:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1191,
														"name": "BuyLimitsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "5287:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5287:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "EmitStatement",
												"src": "5282:49:9"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "4692:224:9",
										"text": " @dev Allows the owner to update the minimum and maximum MATIC a user can spend.\n @param _minMaticBuy The new minimum MATIC buy amount.\n @param _maxMaticBuy The new maximum MATIC buy amount."
									},
									"functionSelector": "273f8974",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1166,
												"name": "onlyOwner",
												"nameLocations": [
													"5002:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5002:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5002:9:9"
										}
									],
									"name": "setMinMaxMaticBuy",
									"nameLocation": "4931:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_minMaticBuy",
												"nameLocation": "4957:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4949:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4949:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_maxMaticBuy",
												"nameLocation": "4979:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4971:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4948:44:9"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5012:0:9"
									},
									"scope": 1489,
									"src": "4922:417:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "5846:203:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5956:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5960:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5956:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1212,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5976:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPresale_$1489",
																		"typeString": "contract TokenPresale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPresale_$1489",
																		"typeString": "contract TokenPresale"
																	}
																],
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5968:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5968:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5968:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "5983:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1205,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "5931:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5939:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "5931:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5931:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "5931:59:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1218,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6022:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6026:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6022:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "6034:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "TokensDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "6006:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "EmitStatement",
												"src": "6001:40:9"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "5347:428:9",
										"text": " @dev Allows the owner to deposit tokens into the presale contract.\n The owner must have already approved this contract to spend their tokens.\n NOTE: Before calling this function, you MUST call the `approve` function on your ERC20 token contract\n to allow THIS contract to transfer the specified `amount` of tokens from your wallet.\n @param amount The number of tokens to deposit."
									},
									"functionSelector": "8a0a80af",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "onlyOwner",
												"nameLocations": [
													"5836:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5836:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5836:9:9"
										}
									],
									"name": "depositTokensForSale",
									"nameLocation": "5790:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5819:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "5811:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5811:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5810:16:9"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5846:0:9"
									},
									"scope": 1489,
									"src": "5781:268:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "6246:426:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6265:14:9",
															"subExpression": {
																"id": 1231,
																"name": "presaleActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "6266:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206d7573742062652073746f7070656420746f2077697468647261772066756e6473",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6281:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453",
																"typeString": "literal_string \"Presale must be stopped to withdraw funds\""
															},
															"value": "Presale must be stopped to withdraw funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_258a8dbcf9bd5dd3cf746571305dcec9c912d0b66edddb77238b8d4f64ca8453",
																"typeString": "literal_string \"Presale must be stopped to withdraw funds\""
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6257:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6257:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "6257:68:9"
											},
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "6344:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "6336:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6336:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1240,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6362:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TokenPresale_$1489",
																	"typeString": "contract TokenPresale"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TokenPresale_$1489",
																	"typeString": "contract TokenPresale"
																}
															],
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6354:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6354:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6354:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6368:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6354:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6336:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1245,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "6394:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6404:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6394:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204d4154494320746f207769746864726177",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6407:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
																"typeString": "literal_string \"No MATIC to withdraw\""
															},
															"value": "No MATIC to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61ac40ee56c80d8c75b6498df7eab6183d3f2d19336db5503eb488e75b42ba82",
																"typeString": "literal_string \"No MATIC to withdraw\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6386:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6386:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "6386:44:9"
											},
											{
												"assignments": [
													1252,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6499:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "6494:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1251,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6494:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1263,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6550:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1255,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "6520:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6520:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6512:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1253,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6512:8:9",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6512:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6529:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6512:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1259,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "6541:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6512:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6512:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6493:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "6572:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207769746864726177204d41544943",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6581:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
																"typeString": "literal_string \"Failed to withdraw MATIC\""
															},
															"value": "Failed to withdraw MATIC"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea59b64d41575f58496e2147fb160bba1dee19295bc8c4397bf5c27e6285ecf8",
																"typeString": "literal_string \"Failed to withdraw MATIC\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6564:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6564:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "6564:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1270,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "6647:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6647:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "6656:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1269,
														"name": "RaisedMaticWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "6626:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6626:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "EmitStatement",
												"src": "6621:43:9"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "6057:133:9",
										"text": " @dev Allows the owner to withdraw the MATIC raised from the presale.\n Requires the presale to be stopped."
									},
									"functionSelector": "c9881d86",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1227,
												"name": "onlyOwner",
												"nameLocations": [
													"6236:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6236:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6236:9:9"
										}
									],
									"name": "withdrawRaisedMatic",
									"nameLocation": "6205:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6224:2:9"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6246:0:9"
									},
									"scope": 1489,
									"src": "6196:476:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "6861:346:9",
										"statements": [
											{
												"assignments": [
													1283
												],
												"declarations": [
													{
														"constant": false,
														"id": 1283,
														"mutability": "mutable",
														"name": "remainingTokens",
														"nameLocation": "6880:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "6872:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6872:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1291,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1288,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6924:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPresale_$1489",
																		"typeString": "contract TokenPresale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPresale_$1489",
																		"typeString": "contract TokenPresale"
																	}
																],
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6916:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6916:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6916:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1284,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "6898:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6906:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "6898:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6872:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1293,
																"name": "remainingTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "6949:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6967:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6949:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072656d61696e696e6720746f6b656e7320746f207769746864726177",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6970:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c",
																"typeString": "literal_string \"No remaining tokens to withdraw\""
															},
															"value": "No remaining tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fcfd1c878b92e24a50fc182909c19c57eceda21b5c087e5c29d7f8a35bbe890c",
																"typeString": "literal_string \"No remaining tokens to withdraw\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6941:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6941:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "6941:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1302,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "7108:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7108:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "remainingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "7117:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1299,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "7087:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7095:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "7087:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "7087:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "7174:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7174:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "remainingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "7183:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "RemainingTokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "7149:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7149:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "7144:55:9"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "6680:121:9",
										"text": " @dev Allows the owner to withdraw any remaining unsold tokens.\n This can be done at any time."
									},
									"functionSelector": "8afbf669",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1279,
												"name": "onlyOwner",
												"nameLocations": [
													"6851:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6851:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6851:9:9"
										}
									],
									"name": "withdrawRemainingTokens",
									"nameLocation": "6816:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6839:2:9"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6861:0:9"
									},
									"scope": 1489,
									"src": "6807:400:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "7557:1851:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "presaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "7595:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206973206e6f7420616374697665",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7610:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															},
															"value": "Presale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5fa43f594076d21947ed5bf3b6f178b81f342413e1069b41d4551e71b4bedc7",
																"typeString": "literal_string \"Presale is not active\""
															}
														],
														"id": 1322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7587:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7587:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "7587:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1328,
																	"name": "tierPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "7653:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1330,
																"indexExpression": {
																	"id": 1329,
																	"name": "currentTier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "7664:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7653:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7679:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7653:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c6520697320636f6d706c6574652c206e6f206d6f726520746965727320617661696c61626c65",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7682:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706",
																"typeString": "literal_string \"Presale is complete, no more tiers available\""
															},
															"value": "Presale is complete, no more tiers available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_043b072e797314690a7865b7a4d4b77c71465565e59a678515ec09ce8cfd2706",
																"typeString": "literal_string \"Presale is complete, no more tiers available\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7645:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7645:84:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "7645:84:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1337,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7748:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7752:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7748:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1339,
																"name": "minMaticBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "7761:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7748:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e206f7220657175616c20746f206d696e696d756d207075726368617365",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7774:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35",
																"typeString": "literal_string \"Amount must be greater than or equal to minimum purchase\""
															},
															"value": "Amount must be greater than or equal to minimum purchase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03f2ffc3ae6817036fea49ed1b527711d0968b66f63f26dec4b023bb61f42f35",
																"typeString": "literal_string \"Amount must be greater than or equal to minimum purchase\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7740:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7740:93:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "7740:93:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1345,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7852:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7856:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7852:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1347,
																"name": "maxMaticBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "7865:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7852:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f206d6178696d756d207075726368617365",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7878:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c",
																"typeString": "literal_string \"Amount must be less than or equal to maximum purchase\""
															},
															"value": "Amount must be less than or equal to maximum purchase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbc560c48bcbb2ba3dab96fb2509971668f3e8d4bc673cfd34a2e985b31f086c",
																"typeString": "literal_string \"Amount must be less than or equal to maximum purchase\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7844:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7844:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "7844:90:9"
											},
											{
												"assignments": [
													1353
												],
												"declarations": [
													{
														"constant": false,
														"id": 1353,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "8126:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1440,
														"src": "8118:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8118:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1354,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8141:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8145:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8141:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8153:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "8141:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1358,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8140:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"baseExpression": {
															"id": 1359,
															"name": "tierPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "8161:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1361,
														"indexExpression": {
															"id": 1360,
															"name": "currentTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "8172:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8161:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8140:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8118:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "tokensToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "8289:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1366,
																"name": "minTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "8304:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8289:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c6970706167652070726f74656374696f6e20747269676765726564",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8315:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8",
																"typeString": "literal_string \"Slippage protection triggered\""
															},
															"value": "Slippage protection triggered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5f089ef8f27c91d00acaa286ed5a4d0641e07322e348d7d63abc761450960c8",
																"typeString": "literal_string \"Slippage protection triggered\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8281:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8281:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "8281:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1372,
																		"name": "tierTokensSold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "8447:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1374,
																	"indexExpression": {
																		"id": 1373,
																		"name": "currentTier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "8462:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8447:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1375,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "8477:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8447:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1377,
																	"name": "tierTokenLimits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "8492:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1379,
																"indexExpression": {
																	"id": 1378,
																	"name": "currentTier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "8508:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8492:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8447:73:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507572636861736520657863656564732063757272656e7420746965722773206c696d6974",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8522:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299",
																"typeString": "literal_string \"Purchase exceeds current tier's limit\""
															},
															"value": "Purchase exceeds current tier's limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9a894e954aace08d3a1e86a8c142801d5f51ad6ae51675f03f49d90f0280299",
																"typeString": "literal_string \"Purchase exceeds current tier's limit\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8439:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8439:123:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "8439:123:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1389,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8667:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenPresale_$1489",
																					"typeString": "contract TokenPresale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenPresale_$1489",
																					"typeString": "contract TokenPresale"
																				}
																			],
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8659:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1387,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8659:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8659:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1385,
																		"name": "myToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "8641:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8649:9:9",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 337,
																	"src": "8641:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8641:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1392,
																"name": "tokensToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "8677:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8641:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8690:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
																"typeString": "literal_string \"Not enough tokens in contract\""
															},
															"value": "Not enough tokens in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
																"typeString": "literal_string \"Not enough tokens in contract\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8633:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8633:89:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "8633:89:9"
											},
											{
												"expression": {
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1397,
														"name": "totalTokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "8817:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1398,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "8836:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8817:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "8817:30:9"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1401,
														"name": "totalMaticRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "8858:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1402,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8878:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8882:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "8878:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8858:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "8858:29:9"
											},
											{
												"expression": {
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1406,
															"name": "tierTokensSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "8898:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1408,
														"indexExpression": {
															"id": 1407,
															"name": "currentTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "8913:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8898:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1409,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "8929:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8898:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "8898:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1412,
															"name": "tierTokensSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "9036:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1414,
														"indexExpression": {
															"id": 1413,
															"name": "currentTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "9051:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9036:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"baseExpression": {
															"id": 1415,
															"name": "tierTokenLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "9067:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1417,
														"indexExpression": {
															"id": 1416,
															"name": "currentTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "9083:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9067:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9036:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "9032:105:9",
												"trueBody": {
													"id": 1422,
													"nodeType": "Block",
													"src": "9097:40:9",
													"statements": [
														{
															"expression": {
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "9112:13:9",
																"subExpression": {
																	"id": 1419,
																	"name": "currentTier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "9112:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1421,
															"nodeType": "ExpressionStatement",
															"src": "9112:13:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1427,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9260:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9264:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9260:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "9272:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1424,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "9239:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9247:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "9239:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9239:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "9239:45:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9365:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9369:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9365:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1435,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9377:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9381:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "9377:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1437,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "9388:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "9349:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9349:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "EmitStatement",
												"src": "9344:56:9"
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "7255:230:9",
										"text": " @dev Allows a user to buy tokens with MATIC.\n This function is payable and can receive MATIC.\n @param minTokens The minimum number of tokens the buyer is willing to receive (slippage protection)."
									},
									"functionSelector": "3610724e",
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1319,
												"name": "nonReentrant",
												"nameLocations": [
													"7544:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "7544:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7544:12:9"
										}
									],
									"name": "buyTokens",
									"nameLocation": "7500:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "minTokens",
												"nameLocation": "7518:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "7510:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7510:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7509:19:9"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7557:0:9"
									},
									"scope": 1489,
									"src": "7491:1917:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "9563:42:9",
										"statements": [
											{
												"expression": {
													"id": 1447,
													"name": "totalMaticRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 922,
													"src": "9581:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1448,
												"nodeType": "Return",
												"src": "9574:23:9"
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "9416:86:9",
										"text": " @dev Returns the total amount of MATIC raised during the presale."
									},
									"functionSelector": "d2e8ecae",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maticRaised",
									"nameLocation": "9517:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9528:2:9"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "9554:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9554:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9553:9:9"
									},
									"scope": 1489,
									"src": "9508:97:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "9766:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1460,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9810:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPresale_$1489",
																		"typeString": "contract TokenPresale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPresale_$1489",
																		"typeString": "contract TokenPresale"
																	}
																],
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9802:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9802:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9802:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1456,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "9784:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9792:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "9784:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9784:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1455,
												"id": 1463,
												"nodeType": "Return",
												"src": "9777:39:9"
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "9613:88:9",
										"text": " @dev Returns the number of unsold tokens remaining in the contract."
									},
									"functionSelector": "c8b08125",
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensRemaining",
									"nameLocation": "9716:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9731:2:9"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "9757:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9757:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9756:9:9"
									},
									"scope": 1489,
									"src": "9707:117:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "9972:58:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"hexValue": "31653336",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9991:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(29 digits omitted)...0000"
																},
																"value": "1e36"
															}
														],
														"id": 1472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9990:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(29 digits omitted)...0000"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"baseExpression": {
															"id": 1473,
															"name": "tierPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9999:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1475,
														"indexExpression": {
															"id": 1474,
															"name": "currentTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "10010:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9999:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9990:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1477,
												"nodeType": "Return",
												"src": "9983:39:9"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "9832:75:9",
										"text": " @dev Returns the current number of tokens per 1 MATIC."
									},
									"functionSelector": "eb91d37e",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "9922:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9937:2:9"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "9963:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9963:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9962:9:9"
									},
									"scope": 1489,
									"src": "9913:117:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "10175:51:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "55736520627579546f6b656e732066756e6374696f6e",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10193:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c",
																"typeString": "literal_string \"Use buyTokens function\""
															},
															"value": "Use buyTokens function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f06a579e0e902d4202014e23e3060ba7f57b2ed141dd0397c0d6cb0303cb305c",
																"typeString": "literal_string \"Use buyTokens function\""
															}
														],
														"id": 1483,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "10186:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10186:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "10186:32:9"
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "10038:104:9",
										"text": " @dev Fallback function that reverts, forcing users to use the `buyTokens` function."
									},
									"id": 1488,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10155:2:9"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10175:0:9"
									},
									"scope": 1489,
									"src": "10148:78:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1490,
							"src": "576:9653:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								932,
								934,
								936,
								942,
								950,
								956,
								962,
								968
							]
						}
					],
					"src": "33:10198:9"
				},
				"id": 9
			}
		}
	}
}